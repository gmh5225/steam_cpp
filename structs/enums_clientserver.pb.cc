// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums_clientserver.proto

#include "enums_clientserver.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_enums_5fclientserver_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_enums_5fclientserver_2eproto = nullptr;
const uint32_t TableStruct_enums_5fclientserver_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_enums_5fclientserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030enums_clientserver.proto*\326\235\003\n\004EMsg\022\021\n\r"
  "k_EMsgInvalid\020\000\022\017\n\013k_EMsgMulti\020\001\022\031\n\025k_EM"
  "sgProtobufWrapped\020\002\022\025\n\021k_EMsgBaseGeneral"
  "\020d\022\026\n\022k_EMsgGenericReply\020d\022\027\n\023k_EMsgDest"
  "JobFailed\020q\022\017\n\013k_EMsgAlert\020s\022\025\n\021k_EMsgSC"
  "IDRequest\020x\022\026\n\022k_EMsgSCIDResponse\020y\022\026\n\022k"
  "_EMsgJobHeartbeat\020{\022\024\n\020k_EMsgHubConnect\020"
  "|\022\023\n\017k_EMsgSubscribe\020~\022\024\n\020k_EMRouteMessa"
  "ge\020\177\022\024\n\017k_EMsgWGRequest\020\202\001\022\025\n\020k_EMsgWGRe"
  "sponse\020\203\001\022\024\n\017k_EMsgKeepAlive\020\204\001\022\033\n\026k_EMs"
  "gWebAPIJobRequest\020\205\001\022\034\n\027k_EMsgWebAPIJobR"
  "esponse\020\206\001\022\035\n\030k_EMsgClientSessionStart\020\207"
  "\001\022\033\n\026k_EMsgClientSessionEnd\020\210\001\022\036\n\031k_EMsg"
  "ClientSessionUpdate\020\211\001\022\032\n\025k_EMsgStatsDep"
  "recated\020\212\001\022\017\n\nk_EMsgPing\020\213\001\022\027\n\022k_EMsgPin"
  "gResponse\020\214\001\022\020\n\013k_EMsgStats\020\215\001\022 \n\033k_EMsg"
  "RequestFullStatsBlock\020\216\001\022\033\n\026k_EMsgLoadDB"
  "OCacheItem\020\217\001\022#\n\036k_EMsgLoadDBOCacheItemR"
  "esponse\020\220\001\022\"\n\035k_EMsgInvalidateDBOCacheIt"
  "ems\020\221\001\022\030\n\023k_EMsgServiceMethod\020\222\001\022 \n\033k_EM"
  "sgServiceMethodResponse\020\223\001\022 \n\033k_EMsgClie"
  "ntPackageVersions\020\224\001\022\033\n\026k_EMsgTimestampR"
  "equest\020\225\001\022\034\n\027k_EMsgTimestampResponse\020\226\001\022"
  "&\n!k_EMsgServiceMethodCallFromClient\020\227\001\022"
  "$\n\037k_EMsgServiceMethodSendToClient\020\230\001\022\024\n"
  "\017k_EMsgBaseShell\020\310\001\022\026\n\021k_EMsgAssignSysID"
  "\020\310\001\022\017\n\nk_EMsgExit\020\311\001\022\025\n\020k_EMsgDirRequest"
  "\020\312\001\022\026\n\021k_EMsgDirResponse\020\313\001\022\025\n\020k_EMsgZip"
  "Request\020\314\001\022\026\n\021k_EMsgZipResponse\020\315\001\022\037\n\032k_"
  "EMsgUpdateRecordResponse\020\327\001\022\"\n\035k_EMsgUpd"
  "ateCreditCardRequest\020\335\001\022 \n\033k_EMsgUpdateU"
  "serBanResponse\020\341\001\022\030\n\023k_EMsgPrepareToExit"
  "\020\342\001\022#\n\036k_EMsgContentDescriptionUpdate\020\343\001"
  "\022\032\n\025k_EMsgTestResetServer\020\344\001\022\032\n\025k_EMsgUn"
  "iverseChanged\020\345\001\022 \n\033k_EMsgShellConfigInf"
  "oUpdate\020\346\001\022(\n#k_EMsgRequestWindowsEventL"
  "ogEntries\020\351\001\022(\n#k_EMsgProvideWindowsEven"
  "tLogEntries\020\352\001\022\032\n\025k_EMsgShellSearchLogs\020"
  "\353\001\022\"\n\035k_EMsgShellSearchLogsResponse\020\354\001\022#"
  "\n\036k_EMsgShellCheckWindowsUpdates\020\355\001\022+\n&k"
  "_EMsgShellCheckWindowsUpdatesResponse\020\356\001"
  "\022\036\n\031k_EMsgTestFlushDelayedSQL\020\360\001\022&\n!k_EM"
  "sgTestFlushDelayedSQLResponse\020\361\001\022*\n%k_EM"
  "sgEnsureExecuteScheduledTask_TEST\020\362\001\0222\n-"
  "k_EMsgEnsureExecuteScheduledTaskResponse"
  "_TEST\020\363\001\022.\n)k_EMsgUpdateScheduledTaskEna"
  "bleState_TEST\020\364\001\0226\n1k_EMsgUpdateSchedule"
  "dTaskEnableStateResponse_TEST\020\365\001\022(\n#k_EM"
  "sgContentDescriptionDeltaUpdate\020\366\001\022)\n$k_"
  "EMsgGMShellAndServerAddressUpdates\020\367\001\022\021\n"
  "\014k_EMsgBaseGM\020\254\002\022\024\n\017k_EMsgHeartbeat\020\254\002\022\026"
  "\n\021k_EMsgShellFailed\020\255\002\022\025\n\020k_EMsgExitShel"
  "ls\020\263\002\022\024\n\017k_EMsgExitShell\020\264\002\022\034\n\027k_EMsgGra"
  "cefulExitShell\020\265\002\022$\n\037k_EMsgLicenseProces"
  "singComplete\020\274\002\022\026\n\021k_EMsgSetTestFlag\020\275\002\022"
  "\037\n\032k_EMsgQueuedEmailsComplete\020\276\002\022\024\n\017k_EM"
  "sgGMDRMSync\020\300\002\022\037\n\032k_EMsgPhysicalBoxInven"
  "tory\020\301\002\022\033\n\026k_EMsgUpdateConfigFile\020\302\002\022\025\n\020"
  "k_EMsgTestInitDB\020\303\002\022\035\n\030k_EMsgGMWriteConf"
  "igToSQL\020\304\002\022 \n\033k_EMsgGMLoadActivationCode"
  "s\020\305\002\022\030\n\023k_EMsgGMQueueForFBS\020\306\002\022$\n\037k_EMsg"
  "GMSchemaConversionResults\020\307\002\022#\n\036k_EMsgGM"
  "WriteShellFailureToSQL\020\311\002\022\034\n\027k_EMsgGMWri"
  "teStatsToSOS\020\312\002\022$\n\037k_EMsgGMGetServiceMet"
  "hodRouting\020\313\002\022,\n\'k_EMsgGMGetServiceMetho"
  "dRoutingResponse\020\314\002\022*\n%k_EMsgGMTestNextB"
  "uildSchemaConversion\020\316\002\0222\n-k_EMsgGMTestN"
  "extBuildSchemaConversionResponse\020\317\002\022\035\n\030k"
  "_EMsgExpectShellRestart\020\320\002\022\031\n\024k_EMsgHotF"
  "ixProgress\020\321\002\022+\n&k_EMsgGMStatsForwardToA"
  "dminConnections\020\322\002\022\037\n\032k_EMsgGMGetModifie"
  "dConVars\020\323\002\022\'\n\"k_EMsgGMGetModifiedConVar"
  "sResponse\020\324\002\022\022\n\rk_EMsgBaseAIS\020\220\003\022\'\n\"k_EM"
  "sgAISRequestContentDescription\020\222\003\022\033\n\026k_E"
  "MsgAISUpdateAppInfo\020\223\003\022$\n\037k_EMsgAISGetPa"
  "ckageChangeNumber\020\225\003\022,\n\'k_EMsgAISGetPack"
  "ageChangeNumberResponse\020\226\003\022\032\n\025k_EMsgAIGe"
  "tAppGCFlags\020\247\003\022\"\n\035k_EMsgAIGetAppGCFlagsR"
  "esponse\020\250\003\022\027\n\022k_EMsgAIGetAppList\020\251\003\022\037\n\032k"
  "_EMsgAIGetAppListResponse\020\252\003\022!\n\034k_EMsgAI"
  "SGetCouponDefinition\020\255\003\022)\n$k_EMsgAISGetC"
  "ouponDefinitionResponse\020\256\003\0221\n,k_EMsgAISU"
  "pdateSubordinateContentDescription\020\257\003\0229\n"
  "4k_EMsgAISUpdateSubordinateContentDescri"
  "ptionResponse\020\260\003\022\032\n\025k_EMsgAISTestEnableG"
  "C\020\261\003\022\021\n\014k_EMsgBaseAM\020\364\003\022!\n\034k_EMsgAMUpdat"
  "eUserBanRequest\020\370\003\022\027\n\022k_EMsgAMAddLicense"
  "\020\371\003\022\037\n\032k_EMsgAMSendSystemIMToUser\020\374\003\022\032\n\025"
  "k_EMsgAMExtendLicense\020\375\003\022 \n\033k_EMsgAMAddM"
  "inutesToLicense\020\376\003\022\032\n\025k_EMsgAMCancelLice"
  "nse\020\377\003\022\031\n\024k_EMsgAMInitPurchase\020\200\004\022\035\n\030k_E"
  "MsgAMPurchaseResponse\020\201\004\022\032\n\025k_EMsgAMGetF"
  "inalPrice\020\202\004\022\"\n\035k_EMsgAMGetFinalPriceRes"
  "ponse\020\203\004\022\035\n\030k_EMsgAMGetLegacyGameKey\020\204\004\022"
  "%\n k_EMsgAMGetLegacyGameKeyResponse\020\205\004\022!"
  "\n\034k_EMsgAMFindHungTransactions\020\206\004\022%\n k_E"
  "MsgAMSetAccountTrustedRequest\020\207\004\022\033\n\026k_EM"
  "sgAMCancelPurchase\020\212\004\022\031\n\024k_EMsgAMNewChal"
  "lenge\020\213\004\022\033\n\026k_EMsgAMLoadOEMTickets\020\214\004\022\037\n"
  "\032k_EMsgAMFixPendingPurchase\020\215\004\022\'\n\"k_EMsg"
  "AMFixPendingPurchaseResponse\020\216\004\022\031\n\024k_EMs"
  "gAMIsUserBanned\020\217\004\022\030\n\023k_EMsgAMRegisterKe"
  "y\020\220\004\022 \n\033k_EMsgAMLoadActivationCodes\020\221\004\022("
  "\n#k_EMsgAMLoadActivationCodesResponse\020\222\004"
  "\022\036\n\031k_EMsgAMLookupKeyResponse\020\223\004\022\026\n\021k_EM"
  "sgAMLookupKey\020\224\004\022\030\n\023k_EMsgAMChatCleanup\020"
  "\225\004\022\030\n\023k_EMsgAMClanCleanup\020\226\004\022\035\n\030k_EMsgAM"
  "FixPendingRefund\020\227\004\022\036\n\031k_EMsgAMReverseCh"
  "argeback\020\230\004\022&\n!k_EMsgAMReverseChargeback"
  "Response\020\231\004\022\034\n\027k_EMsgAMClanCleanupList\020\232"
  "\004\022\037\n\032k_EMsgAMSendCartRepurchase\020\235\004\022\'\n\"k_"
  "EMsgAMSendCartRepurchaseResponse\020\236\004\022\037\n\032k"
  "_EMsgAllowUserToPlayQuery\020\246\004\022\"\n\035k_EMsgAl"
  "lowUserToPlayResponse\020\247\004\022\027\n\022k_EMsgAMVerf"
  "iyUser\020\250\004\022\035\n\030k_EMsgAMClientNotPlaying\020\251\004"
  "\022$\n\037k_EMsgAMClientRequestFriendship\020\252\004\022\037"
  "\n\032k_EMsgAMRelayPublishStatus\020\253\004\022!\n\034k_EMs"
  "gAMInitPurchaseResponse\020\260\004\022#\n\036k_EMsgAMRe"
  "vokePurchaseResponse\020\261\004\022\037\n\032k_EMsgAMRefre"
  "shGuestPasses\020\263\004\022\035\n\030k_EMsgAMGrantGuestPa"
  "sses\020\266\004\022\034\n\027k_EMsgAMClanDataUpdated\020\267\004\022\032\n"
  "\025k_EMsgAMReloadAccount\020\270\004\022\037\n\032k_EMsgAMCli"
  "entChatMsgRelay\020\271\004\022\026\n\021k_EMsgAMChatMulti\020"
  "\272\004\022\"\n\035k_EMsgAMClientChatInviteRelay\020\273\004\022\027"
  "\n\022k_EMsgAMChatInvite\020\274\004\022 \n\033k_EMsgAMClien"
  "tJoinChatRelay\020\275\004\022&\n!k_EMsgAMClientChatM"
  "emberInfoRelay\020\276\004\022\"\n\035k_EMsgAMPublishChat"
  "MemberInfo\020\277\004\022%\n k_EMsgAMClientAcceptFri"
  "endInvite\020\300\004\022\026\n\021k_EMsgAMChatEnter\020\301\004\022+\n&"
  "k_EMsgAMClientPublishRemovalFromSource\020\302"
  "\004\022\035\n\030k_EMsgAMChatActionResult\020\303\004\022\031\n\024k_EM"
  "sgAMFindAccounts\020\304\004\022!\n\034k_EMsgAMFindAccou"
  "ntsResponse\020\305\004\022\037\n\032k_EMsgAMIsAccountNameI"
  "nUse\020\306\004\022\'\n\"k_EMsgAMIsAccountNameInUseRes"
  "ponse\020\307\004\022\034\n\027k_EMsgAMSetAccountFlags\020\310\004\022\027"
  "\n\022k_EMsgAMCreateClan\020\312\004\022\037\n\032k_EMsgAMCreat"
  "eClanResponse\020\313\004\022\033\n\026k_EMsgAMGetClanDetai"
  "ls\020\314\004\022#\n\036k_EMsgAMGetClanDetailsResponse\020"
  "\315\004\022\033\n\026k_EMsgAMSetPersonaName\020\316\004\022\026\n\021k_EMs"
  "gAMSetAvatar\020\317\004\022\035\n\030k_EMsgAMAuthenticateU"
  "ser\020\320\004\022%\n k_EMsgAMAuthenticateUserRespon"
  "se\020\321\004\022!\n\034k_EMsgAMP2PIntroducerMessage\020\324\004"
  "\022\033\n\026k_EMsgClientChatAction\020\325\004\022\"\n\035k_EMsgA"
  "MClientChatActionRelay\020\326\004\022\021\n\014k_EMsgBaseV"
  "S\020\330\004\022\027\n\022k_EMsgReqChallenge\020\330\004\022\026\n\021k_EMsgV"
  "ACResponse\020\331\004\022\033\n\026k_EMsgReqChallengeTest\020"
  "\332\004\022\026\n\021k_EMsgVSMarkCheat\020\334\004\022\025\n\020k_EMsgVSAd"
  "dCheat\020\335\004\022\033\n\026k_EMsgVSPurgeCodeModDB\020\336\004\022 "
  "\n\033k_EMsgVSGetChallengeResults\020\337\004\022 \n\033k_EM"
  "sgVSChallengeResultText\020\340\004\022\033\n\026k_EMsgVSRe"
  "portLingerer\020\341\004\022$\n\037k_EMsgVSRequestManage"
  "dChallenge\020\342\004\022\033\n\026k_EMsgVSLoadDBFinished\020"
  "\343\004\022\023\n\016k_EMsgBaseDRMS\020\361\004\022\036\n\031k_EMsgDRMBuil"
  "dBlobRequest\020\364\004\022\037\n\032k_EMsgDRMBuildBlobRes"
  "ponse\020\365\004\022 \n\033k_EMsgDRMResolveGuidRequest\020"
  "\366\004\022!\n\034k_EMsgDRMResolveGuidResponse\020\367\004\022\037\n"
  "\032k_EMsgDRMVariabilityReport\020\371\004\022\'\n\"k_EMsg"
  "DRMVariabilityReportResponse\020\372\004\022\035\n\030k_EMs"
  "gDRMStabilityReport\020\373\004\022%\n k_EMsgDRMStabi"
  "lityReportResponse\020\374\004\022\"\n\035k_EMsgDRMDetail"
  "sReportRequest\020\375\004\022#\n\036k_EMsgDRMDetailsRep"
  "ortResponse\020\376\004\022\031\n\024k_EMsgDRMProcessFile\020\377"
  "\004\022\031\n\024k_EMsgDRMAdminUpdate\020\200\005\022!\n\034k_EMsgDR"
  "MAdminUpdateResponse\020\201\005\022\022\n\rk_EMsgDRMSync"
  "\020\202\005\022\032\n\025k_EMsgDRMSyncResponse\020\203\005\022!\n\034k_EMs"
  "gDRMProcessFileResponse\020\204\005\022\034\n\027k_EMsgDRME"
  "mptyGuidCache\020\205\005\022$\n\037k_EMsgDRMEmptyGuidCa"
  "cheResponse\020\206\005\022\021\n\014k_EMsgBaseCS\020\212\005\022\025\n\020k_E"
  "MsgBaseClient\020\274\005\022!\n\034k_EMsgClientLogOn_De"
  "precated\020\275\005\022%\n k_EMsgClientAnonLogOn_Dep"
  "recated\020\276\005\022\032\n\025k_EMsgClientHeartBeat\020\277\005\022\034"
  "\n\027k_EMsgClientVACResponse\020\300\005\022%\n k_EMsgCl"
  "ientGamesPlayed_obsolete\020\301\005\022\027\n\022k_EMsgCli"
  "entLogOff\020\302\005\022\"\n\035k_EMsgClientNoUDPConnect"
  "ivity\020\303\005\022 \n\033k_EMsgClientConnectionStats\020"
  "\306\005\022\035\n\030k_EMsgClientPingResponse\020\310\005\022\035\n\030k_E"
  "MsgClientRemoveFriend\020\312\005\022&\n!k_EMsgClient"
  "GamesPlayedNoDataBlob\020\313\005\022\035\n\030k_EMsgClient"
  "ChangeStatus\020\314\005\022\"\n\035k_EMsgClientVacStatus"
  "Response\020\315\005\022\032\n\025k_EMsgClientFriendMsg\020\316\005\022"
  "%\n k_EMsgClientGameConnect_obsolete\020\317\005\022&"
  "\n!k_EMsgClientGamesPlayed2_obsolete\020\320\005\022#"
  "\n\036k_EMsgClientGameEnded_obsolete\020\321\005\022\031\n\024k"
  "_EMsgClientSystemIM\020\326\005\022\034\n\027k_EMsgClientSy"
  "stemIMAck\020\327\005\022\034\n\027k_EMsgClientGetLicenses\020"
  "\330\005\022!\n\034k_EMsgClientGetLegacyGameKey\020\332\005\022.\n"
  ")k_EMsgClientContentServerLogOn_Deprecat"
  "ed\020\333\005\022\033\n\026k_EMsgClientAckVACBan2\020\334\005\022$\n\037k_"
  "EMsgClientGetPurchaseReceipts\020\340\005\022&\n!k_EM"
  "sgClientGamesPlayed3_obsolete\020\342\005\022\035\n\030k_EM"
  "sgClientAckGuestPass\020\344\005\022 \n\033k_EMsgClientR"
  "edeemGuestPass\020\345\005\022\034\n\027k_EMsgClientGamesPl"
  "ayed\020\346\005\022\034\n\027k_EMsgClientRegisterKey\020\347\005\022!\n"
  "\034k_EMsgClientInviteUserToClan\020\350\005\022&\n!k_EM"
  "sgClientAcknowledgeClanInvite\020\351\005\022&\n!k_EM"
  "sgClientPurchaseWithMachineID\020\352\005\022\036\n\031k_EM"
  "sgClientAppUsageEvent\020\353\005\022\036\n\031k_EMsgClient"
  "LogOnResponse\020\357\005\022!\n\034k_EMsgClientSetHeart"
  "beatRate\020\363\005\022&\n!k_EMsgClientNotLoggedOnDe"
  "precated\020\364\005\022\032\n\025k_EMsgClientLoggedOff\020\365\005\022"
  "\024\n\017k_EMsgGSApprove\020\366\005\022\021\n\014k_EMsgGSDeny\020\367\005"
  "\022\021\n\014k_EMsgGSKick\020\370\005\022!\n\034k_EMsgClientPurch"
  "aseResponse\020\373\005\022\025\n\020k_EMsgClientPing\020\374\005\022\024\n"
  "\017k_EMsgClientNOP\020\375\005\022\035\n\030k_EMsgClientPerso"
  "naState\020\376\005\022\034\n\027k_EMsgClientFriendsList\020\377\005"
  "\022\034\n\027k_EMsgClientAccountInfo\020\200\006\022\033\n\026k_EMsg"
  "ClientNewsUpdate\020\203\006\022 \n\033k_EMsgClientGameC"
  "onnectDeny\020\205\006\022\030\n\023k_EMsgGSStatusReply\020\206\006\022"
  "\"\n\035k_EMsgClientGameConnectTokens\020\213\006\022\034\n\027k"
  "_EMsgClientLicenseList\020\214\006\022\035\n\030k_EMsgClien"
  "tVACBanStatus\020\216\006\022\027\n\022k_EMsgClientCMList\020\217"
  "\006\022\033\n\026k_EMsgClientEncryptPct\020\220\006\022)\n$k_EMsg"
  "ClientGetLegacyGameKeyResponse\020\221\006\022\032\n\025k_E"
  "MsgClientAddFriend\020\227\006\022\"\n\035k_EMsgClientAdd"
  "FriendResponse\020\230\006\022%\n k_EMsgClientAckGues"
  "tPassResponse\020\234\006\022(\n#k_EMsgClientRedeemGu"
  "estPassResponse\020\235\006\022&\n!k_EMsgClientUpdate"
  "GuestPassesList\020\236\006\022\030\n\023k_EMsgClientChatMs"
  "g\020\237\006\022\033\n\026k_EMsgClientChatInvite\020\240\006\022\031\n\024k_E"
  "MsgClientJoinChat\020\241\006\022\037\n\032k_EMsgClientChat"
  "MemberInfo\020\242\006\0220\n+k_EMsgClientLogOnWithCr"
  "edentials_Deprecated\020\243\006\022\'\n\"k_EMsgClientP"
  "asswordChangeResponse\020\245\006\022\032\n\025k_EMsgClient"
  "ChatEnter\020\247\006\022(\n#k_EMsgClientFriendRemove"
  "dFromSource\020\250\006\022\033\n\026k_EMsgClientCreateChat"
  "\020\251\006\022#\n\036k_EMsgClientCreateChatResponse\020\252\006"
  "\022%\n k_EMsgClientP2PIntroducerMessage\020\255\006\022"
  "!\n\034k_EMsgClientChatActionResult\020\256\006\022\"\n\035k_"
  "EMsgClientRequestFriendData\020\257\006\022\035\n\030k_EMsg"
  "ClientGetUserStats\020\262\006\022%\n k_EMsgClientGet"
  "UserStatsResponse\020\263\006\022\037\n\032k_EMsgClientStor"
  "eUserStats\020\264\006\022\'\n\"k_EMsgClientStoreUserSt"
  "atsResponse\020\265\006\022\032\n\025k_EMsgClientClanState\020"
  "\266\006\022\036\n\031k_EMsgClientServiceModule\020\276\006\022\034\n\027k_"
  "EMsgClientServiceCall\020\277\006\022$\n\037k_EMsgClient"
  "ServiceCallResponse\020\300\006\022&\n!k_EMsgClientNa"
  "tTraversalStatEvent\020\307\006\022 \n\033k_EMsgClientSt"
  "eamUsageEvent\020\312\006\022\036\n\031k_EMsgClientCheckPas"
  "sword\020\315\006\022\036\n\031k_EMsgClientResetPassword\020\316\006"
  "\022&\n!k_EMsgClientCheckPasswordResponse\020\320\006"
  "\022&\n!k_EMsgClientResetPasswordResponse\020\321\006"
  "\022\035\n\030k_EMsgClientSessionToken\020\322\006\022!\n\034k_EMs"
  "gClientDRMProblemReport\020\323\006\022 \n\033k_EMsgClie"
  "ntSetIgnoreFriend\020\327\006\022(\n#k_EMsgClientSetI"
  "gnoreFriendResponse\020\330\006\022&\n!k_EMsgClientGe"
  "tAppOwnershipTicket\020\331\006\022.\n)k_EMsgClientGe"
  "tAppOwnershipTicketResponse\020\332\006\022%\n k_EMsg"
  "ClientGetLobbyListResponse\020\334\006\022\033\n\026k_EMsgC"
  "lientServerList\020\360\006\022\037\n\032k_EMsgClientDRMBlo"
  "bRequest\020\200\007\022 \n\033k_EMsgClientDRMBlobRespon"
  "se\020\201\007\022\031\n\024k_EMsgBaseGameServer\020\204\007\022\035\n\030k_EM"
  "sgGSDisconnectNotice\020\205\007\022\023\n\016k_EMsgGSStatu"
  "s\020\207\007\022\030\n\023k_EMsgGSUserPlaying\020\211\007\022\024\n\017k_EMsg"
  "GSStatus2\020\212\007\022 \n\033k_EMsgGSStatusUpdate_Unu"
  "sed\020\213\007\022\027\n\022k_EMsgGSServerType\020\214\007\022\027\n\022k_EMs"
  "gGSPlayerList\020\215\007\022%\n k_EMsgGSGetUserAchie"
  "vementStatus\020\216\007\022-\n(k_EMsgGSGetUserAchiev"
  "ementStatusResponse\020\217\007\022\031\n\024k_EMsgGSGetPla"
  "yStats\020\226\007\022!\n\034k_EMsgGSGetPlayStatsRespons"
  "e\020\227\007\022\037\n\032k_EMsgGSGetUserGroupStatus\020\230\007\022\037\n"
  "\032k_EMsgAMGetUserGroupStatus\020\231\007\022\'\n\"k_EMsg"
  "AMGetUserGroupStatusResponse\020\232\007\022\'\n\"k_EMs"
  "gGSGetUserGroupStatusResponse\020\233\007\022\032\n\025k_EM"
  "sgGSGetReputation\020\250\007\022\"\n\035k_EMsgGSGetReput"
  "ationResponse\020\251\007\022\036\n\031k_EMsgGSAssociateWit"
  "hClan\020\252\007\022&\n!k_EMsgGSAssociateWithClanRes"
  "ponse\020\253\007\022*\n%k_EMsgGSComputeNewPlayerComp"
  "atibility\020\254\007\0222\n-k_EMsgGSComputeNewPlayer"
  "CompatibilityResponse\020\255\007\022\024\n\017k_EMsgBaseAd"
  "min\020\350\007\022\023\n\016k_EMsgAdminCmd\020\350\007\022\033\n\026k_EMsgAdm"
  "inCmdResponse\020\354\007\022 \n\033k_EMsgAdminLogListen"
  "Request\020\355\007\022\030\n\023k_EMsgAdminLogEvent\020\356\007\022\027\n\022"
  "k_EMsgUniverseData\020\362\007\022\024\n\017k_EMsgAdminSpew"
  "\020\373\007\022\034\n\027k_EMsgAdminConsoleTitle\020\374\007\022\026\n\021k_E"
  "MsgAdminGCSpew\020\377\007\022\031\n\024k_EMsgAdminGCComman"
  "d\020\200\010\022 \n\033k_EMsgAdminGCGetCommandList\020\201\010\022("
  "\n#k_EMsgAdminGCGetCommandListResponse\020\202\010"
  "\022\034\n\027k_EMsgFBSConnectionData\020\203\010\022\027\n\022k_EMsg"
  "AdminMsgSpew\020\204\010\022\022\n\rk_EMsgBaseFBS\020\314\010\022\030\n\023k"
  "_EMsgFBSReqVersion\020\314\010\022\031\n\024k_EMsgFBSVersio"
  "nInfo\020\315\010\022\032\n\025k_EMsgFBSForceRefresh\020\316\010\022\031\n\024"
  "k_EMsgFBSForceBounce\020\317\010\022\033\n\026k_EMsgFBSDepl"
  "oyPackage\020\320\010\022\034\n\027k_EMsgFBSDeployResponse\020"
  "\321\010\022 \n\033k_EMsgFBSUpdateBootstrapper\020\322\010\022\026\n\021"
  "k_EMsgFBSSetState\020\323\010\022\034\n\027k_EMsgFBSApplyOS"
  "Updates\020\324\010\022\032\n\025k_EMsgFBSRunCMDScript\020\325\010\022\027"
  "\n\022k_EMsgFBSRebootBox\020\326\010\022\037\n\032k_EMsgFBSSetB"
  "igBrotherMode\020\327\010\022\034\n\027k_EMsgFBSMinidumpSer"
  "ver\020\330\010\022!\n\034k_EMsgFBSDeployHotFixPackage\020\332"
  "\010\022\"\n\035k_EMsgFBSDeployHotFixResponse\020\333\010\022\034\n"
  "\027k_EMsgFBSDownloadHotFix\020\334\010\022$\n\037k_EMsgFBS"
  "DownloadHotFixResponse\020\335\010\022$\n\037k_EMsgFBSUp"
  "dateTargetConfigFile\020\336\010\022\036\n\031k_EMsgFBSAppl"
  "yAccountCred\020\337\010\022&\n!k_EMsgFBSApplyAccount"
  "CredResponse\020\340\010\022\033\n\026k_EMsgFBSSetShellCoun"
  "t\020\341\010\022\034\n\027k_EMsgFBSTerminateShell\020\342\010\022\037\n\032k_"
  "EMsgFBSQueryGMForRequest\020\343\010\022\035\n\030k_EMsgFBS"
  "QueryGMResponse\020\344\010\022\036\n\031k_EMsgFBSTerminate"
  "Zombies\020\345\010\022\"\n\035k_EMsgFBSInfoFromBootstrap"
  "per\020\346\010\022\037\n\032k_EMsgFBSRebootBoxResponse\020\347\010\022"
  "(\n#k_EMsgFBSBootstrapperPackageRequest\020\350"
  "\010\022)\n$k_EMsgFBSBootstrapperPackageRespons"
  "e\020\351\010\022)\n$k_EMsgFBSBootstrapperGetPackageC"
  "hunk\020\352\010\0221\n,k_EMsgFBSBootstrapperGetPacka"
  "geChunkResponse\020\353\010\0221\n,k_EMsgFBSBootstrap"
  "perPackageTransferProgress\020\354\010\022!\n\034k_EMsgF"
  "BSRestartBootstrapper\020\355\010\022\036\n\031k_EMsgFBSPau"
  "seFrozenDumps\020\356\010\022\027\n\022k_EMsgBaseFileXfer\020\260"
  "\t\022\032\n\025k_EMsgFileXferRequest\020\260\t\022\033\n\026k_EMsgF"
  "ileXferResponse\020\261\t\022\027\n\022k_EMsgFileXferData"
  "\020\262\t\022\026\n\021k_EMsgFileXferEnd\020\263\t\022\032\n\025k_EMsgFil"
  "eXferDataAck\020\264\t\022\032\n\025k_EMsgBaseChannelAuth"
  "\020\224\n\022\037\n\032k_EMsgChannelAuthChallenge\020\224\n\022\036\n\031"
  "k_EMsgChannelAuthResponse\020\225\n\022\034\n\027k_EMsgCh"
  "annelAuthResult\020\226\n\022 \n\033k_EMsgChannelEncry"
  "ptRequest\020\227\n\022!\n\034k_EMsgChannelEncryptResp"
  "onse\020\230\n\022\037\n\032k_EMsgChannelEncryptResult\020\231\n"
  "\022\021\n\014k_EMsgBaseBS\020\370\n\022\032\n\025k_EMsgBSPurchaseS"
  "tart\020\371\n\022\035\n\030k_EMsgBSPurchaseResponse\020\372\n\022 "
  "\n\033k_EMsgBSAuthenticateCCTrans\020\373\n\022(\n#k_EM"
  "sgBSAuthenticateCCTransResponse\020\374\n\022\033\n\026k_"
  "EMsgBSSettleComplete\020\376\n\022\032\n\025k_EMsgBSInitP"
  "ayPalTxn\020\200\013\022\"\n\035k_EMsgBSInitPayPalTxnResp"
  "onse\020\201\013\022\036\n\031k_EMsgBSGetPayPalUserInfo\020\202\013\022"
  "&\n!k_EMsgBSGetPayPalUserInfoResponse\020\203\013\022"
  "\034\n\027k_EMsgBSPaymentInstrBan\020\211\013\022$\n\037k_EMsgB"
  "SPaymentInstrBanResponse\020\212\013\022\036\n\031k_EMsgBSI"
  "nitGCBankXferTxn\020\215\013\022&\n!k_EMsgBSInitGCBan"
  "kXferTxnResponse\020\216\013\022\030\n\023k_EMsgBSCommitGCT"
  "xn\020\221\013\022#\n\036k_EMsgBSQueryTransactionStatus\020"
  "\222\013\022+\n&k_EMsgBSQueryTransactionStatusResp"
  "onse\020\223\013\022!\n\034k_EMsgBSQueryTxnExtendedInfo\020"
  "\231\013\022)\n$k_EMsgBSQueryTxnExtendedInfoRespon"
  "se\020\232\013\022\"\n\035k_EMsgBSUpdateConversionRates\020\233"
  "\013\022#\n\036k_EMsgBSPurchaseRunFraudChecks\020\235\013\022+"
  "\n&k_EMsgBSPurchaseRunFraudChecksResponse"
  "\020\236\013\022!\n\034k_EMsgBSQueryBankInformation\020\240\013\022)"
  "\n$k_EMsgBSQueryBankInformationResponse\020\241"
  "\013\022$\n\037k_EMsgBSValidateXsollaSignature\020\245\013\022"
  ",\n\'k_EMsgBSValidateXsollaSignatureRespon"
  "se\020\246\013\022\036\n\031k_EMsgBSQiwiWalletInvoice\020\250\013\022&\n"
  "!k_EMsgBSQiwiWalletInvoiceResponse\020\251\013\022\'\n"
  "\"k_EMsgBSUpdateInventoryFromProPack\020\252\013\022/"
  "\n*k_EMsgBSUpdateInventoryFromProPackResp"
  "onse\020\253\013\022 \n\033k_EMsgBSSendShippingRequest\020\254"
  "\013\022(\n#k_EMsgBSSendShippingRequestResponse"
  "\020\255\013\022\"\n\035k_EMsgBSGetProPackOrderStatus\020\256\013\022"
  "*\n%k_EMsgBSGetProPackOrderStatusResponse"
  "\020\257\013\022\034\n\027k_EMsgBSCheckJobRunning\020\260\013\022$\n\037k_E"
  "MsgBSCheckJobRunningResponse\020\261\013\022*\n%k_EMs"
  "gBSResetPackagePurchaseRateLimit\020\262\013\0222\n-k"
  "_EMsgBSResetPackagePurchaseRateLimitResp"
  "onse\020\263\013\022\036\n\031k_EMsgBSUpdatePaymentData\020\264\013\022"
  "&\n!k_EMsgBSUpdatePaymentDataResponse\020\265\013\022"
  "\036\n\031k_EMsgBSGetBillingAddress\020\266\013\022&\n!k_EMs"
  "gBSGetBillingAddressResponse\020\267\013\022\036\n\031k_EMs"
  "gBSGetCreditCardInfo\020\270\013\022&\n!k_EMsgBSGetCr"
  "editCardInfoResponse\020\271\013\022%\n k_EMsgBSRemov"
  "eExpiredPaymentData\020\274\013\022-\n(k_EMsgBSRemove"
  "ExpiredPaymentDataResponse\020\275\013\022!\n\034k_EMsgB"
  "SConvertToCurrentKeys\020\276\013\022)\n$k_EMsgBSConv"
  "ertToCurrentKeysResponse\020\277\013\022\031\n\024k_EMsgBSI"
  "nitPurchase\020\300\013\022!\n\034k_EMsgBSInitPurchaseRe"
  "sponse\020\301\013\022\035\n\030k_EMsgBSCompletePurchase\020\302\013"
  "\022%\n k_EMsgBSCompletePurchaseResponse\020\303\013\022"
  " \n\033k_EMsgBSPruneCardUsageStats\020\304\013\022(\n#k_E"
  "MsgBSPruneCardUsageStatsResponse\020\305\013\022!\n\034k"
  "_EMsgBSStoreBankInformation\020\306\013\022)\n$k_EMsg"
  "BSStoreBankInformationResponse\020\307\013\022\032\n\025k_E"
  "MsgBSVerifyPOSAKey\020\310\013\022\"\n\035k_EMsgBSVerifyP"
  "OSAKeyResponse\020\311\013\022!\n\034k_EMsgBSReverseRede"
  "emPOSAKey\020\312\013\022)\n$k_EMsgBSReverseRedeemPOS"
  "AKeyResponse\020\313\013\022 \n\033k_EMsgBSQueryFindCred"
  "itCard\020\314\013\022(\n#k_EMsgBSQueryFindCreditCard"
  "Response\020\315\013\022!\n\034k_EMsgBSStatusInquiryPOSA"
  "Key\020\316\013\022)\n$k_EMsgBSStatusInquiryPOSAKeyRe"
  "sponse\020\317\013\022,\n\'k_EMsgBSBoaCompraConfirmPro"
  "ductDelivery\020\326\013\0224\n/k_EMsgBSBoaCompraConf"
  "irmProductDeliveryResponse\020\327\013\022!\n\034k_EMsgB"
  "SGenerateBoaCompraMD5\020\330\013\022)\n$k_EMsgBSGene"
  "rateBoaCompraMD5Response\020\331\013\022\030\n\023k_EMsgBSC"
  "ommitWPTxn\020\332\013\022\033\n\026k_EMsgBSCommitAdyenTxn\020"
  "\333\013\022\022\n\rk_EMsgBaseATS\020\334\013\022\035\n\030k_EMsgATSStart"
  "StressTest\020\335\013\022\034\n\027k_EMsgATSStopStressTest"
  "\020\336\013\022\037\n\032k_EMsgATSRunFailServerTest\020\337\013\022\035\n\030"
  "k_EMsgATSUFSPerfTestTask\020\340\013\022!\n\034k_EMsgATS"
  "UFSPerfTestResponse\020\341\013\022\026\n\021k_EMsgATSCycle"
  "TCM\020\342\013\022 \n\033k_EMsgATSInitDRMSStressTest\020\343\013"
  "\022\026\n\021k_EMsgATSCallTest\020\344\013\022\033\n\026k_EMsgATSCal"
  "lTestReply\020\345\013\022!\n\034k_EMsgATSStartExternalS"
  "tress\020\346\013\022$\n\037k_EMsgATSExternalStressJobSt"
  "art\020\347\013\022%\n k_EMsgATSExternalStressJobQueu"
  "ed\020\350\013\022&\n!k_EMsgATSExternalStressJobRunni"
  "ng\020\351\013\022&\n!k_EMsgATSExternalStressJobStopp"
  "ed\020\352\013\022&\n!k_EMsgATSExternalStressJobStopA"
  "ll\020\353\013\022(\n#k_EMsgATSExternalStressActionRe"
  "sult\020\354\013\022\025\n\020k_EMsgATSStarted\020\355\013\022\034\n\027k_EMsg"
  "ATSCSPerfTestTask\020\356\013\022 \n\033k_EMsgATSCSPerfT"
  "estResponse\020\357\013\022\021\n\014k_EMsgBaseDP\020\300\014\022\037\n\032k_E"
  "MsgDPSetPublishingState\020\301\014\022\036\n\031k_EMsgDPUn"
  "iquePlayersStat\020\303\014\022\'\n\"k_EMsgDPStreamingU"
  "niquePlayersStat\020\304\014\022\032\n\025k_EMsgDPBlockingS"
  "tats\020\307\014\022\036\n\031k_EMsgDPNatTraversalStats\020\310\014\022"
  "\027\n\022k_EMsgDPCloudStats\020\314\014\022\033\n\026k_EMsgDPGetP"
  "layerCount\020\317\014\022#\n\036k_EMsgDPGetPlayerCountR"
  "esponse\020\320\014\022$\n\037k_EMsgDPGameServersPlayers"
  "Stats\020\321\014\022%\n k_EMsgClientDPCheckSpecialSu"
  "rvey\020\324\014\022-\n(k_EMsgClientDPCheckSpecialSur"
  "veyResponse\020\325\014\022,\n\'k_EMsgClientDPSendSpec"
  "ialSurveyResponse\020\326\014\0221\n,k_EMsgClientDPSe"
  "ndSpecialSurveyResponseReply\020\327\014\022 \n\033k_EMs"
  "gDPStoreSaleStatistics\020\330\014\022\035\n\030k_EMsgDPPar"
  "tnerMicroTxns\020\334\014\022%\n k_EMsgDPPartnerMicro"
  "TxnsResponse\020\335\014\022 \n\033k_EMsgDPVRUniquePlaye"
  "rsStat\020\337\014\022\021\n\014k_EMsgBaseCM\020\244\r\022\032\n\025k_EMsgCM"
  "SetAllowState\020\245\r\022\033\n\026k_EMsgCMSpewAllowSta"
  "te\020\246\r\022\034\n\027k_EMsgCMSessionRejected\020\247\r\022\027\n\022k"
  "_EMsgCMSetSecrets\020\250\r\022\027\n\022k_EMsgCMGetSecre"
  "ts\020\251\r\022\021\n\014k_EMsgBaseGC\020\230\021\022\026\n\021k_EMsgGCCmdR"
  "evive\020\233\021\022\024\n\017k_EMsgGCCmdDown\020\236\021\022\026\n\021k_EMsg"
  "GCCmdDeploy\020\237\021\022\036\n\031k_EMsgGCCmdDeployRespo"
  "nse\020\240\021\022\026\n\021k_EMsgGCCmdSwitch\020\241\021\022\034\n\027k_EMsg"
  "AMRefreshSessions\020\242\021\022\037\n\032k_EMsgGCAchievem"
  "entAwarded\020\244\021\022\032\n\025k_EMsgGCSystemMessage\020\245"
  "\021\022\026\n\021k_EMsgGCCmdStatus\020\250\021\022-\n(k_EMsgGCReg"
  "isterWebInterfaces_Deprecated\020\251\021\022)\n$k_EM"
  "sgGCGetAccountDetails_DEPRECATED\020\252\021\022\034\n\027k"
  "_EMsgGCInterAppMessage\020\253\021\022\035\n\030k_EMsgGCGet"
  "EmailTemplate\020\254\021\022%\n k_EMsgGCGetEmailTemp"
  "lateResponse\020\255\021\022\023\n\016k_EMsgGCHRelay\020\256\021\022\033\n\026"
  "k_EMsgGCHRelayToClient\020\257\021\022\033\n\026k_EMsgGCHUp"
  "dateSession\020\260\021\022\"\n\035k_EMsgGCHRequestUpdate"
  "Session\020\261\021\022\033\n\026k_EMsgGCHRequestStatus\020\262\021\022"
  "#\n\036k_EMsgGCHRequestStatusResponse\020\263\021\022$\n\037"
  "k_EMsgGCHAccountVacStatusChange\020\264\021\022\025\n\020k_"
  "EMsgGCHSpawnGC\020\265\021\022\035\n\030k_EMsgGCHSpawnGCRes"
  "ponse\020\266\021\022\024\n\017k_EMsgGCHKillGC\020\267\021\022\034\n\027k_EMsg"
  "GCHKillGCResponse\020\270\021\022)\n$k_EMsgGCHAccount"
  "TradeBanStatusChange\020\271\021\022%\n k_EMsgGCHAcco"
  "untLockStatusChange\020\272\021\022#\n\036k_EMsgGCHVacVe"
  "rificationChange\020\273\021\022&\n!k_EMsgGCHAccountP"
  "honeNumberChange\020\274\021\022$\n\037k_EMsgGCHAccountT"
  "woFactorChange\020\275\021\022\037\n\032k_EMsgGCHInviteUser"
  "ToLobby\020\276\021\022$\n\037k_EMsgGCHUpdateMultipleSes"
  "sions\020\277\021\022*\n%k_EMsgGCHMarkAppSessionsAuth"
  "oritative\020\300\021\022/\n*k_EMsgGCHRecurringSubscr"
  "iptionStatusChange\020\301\021\022\037\n\032k_EMsgGCHAppChe"
  "ersReceived\020\302\021\022&\n!k_EMsgGCHAppCheersGetA"
  "llowedTypes\020\303\021\022.\n)k_EMsgGCHAppCheersGetA"
  "llowedTypesResponse\020\304\021\022%\n k_EMsgGCHRouti"
  "ngRulesFromGCHtoGM\020\305\021\022%\n k_EMsgGCHRoutin"
  "gRulesToGCHfromGM\020\306\021\022#\n\036k_EMsgUpdateCMMe"
  "ssageRateRules\020\307\021\022\022\n\rk_EMsgBaseP2P\020\304\023\022\037\n"
  "\032k_EMsgP2PIntroducerMessage\020\306\023\022\021\n\014k_EMsg"
  "BaseSM\020\324\026\022\034\n\027k_EMsgSMExpensiveReport\020\326\026\022"
  "\031\n\024k_EMsgSMHourlyReport\020\327\026\022\035\n\030k_EMsgSMPa"
  "rtitionRenames\020\331\026\022\031\n\024k_EMsgSMMonitorSpac"
  "e\020\332\026\022*\n%k_EMsgSMTestNextBuildSchemaConve"
  "rsion\020\333\026\0222\n-k_EMsgSMTestNextBuildSchemaC"
  "onversionResponse\020\334\026\022\023\n\016k_EMsgBaseTest\020\270"
  "\027\022\025\n\020k_EMsgFailServer\020\270\027\022\033\n\026k_EMsgJobHea"
  "rtbeatTest\020\271\027\022#\n\036k_EMsgJobHeartbeatTestR"
  "esponse\020\272\027\022\027\n\022k_EMsgBaseFTSRange\020\234\030\022\027\n\022k"
  "_EMsgBaseCCSRange\020\316\030\022\'\n\"k_EMsgCCSDeleteA"
  "llCommentsByAuthor\020\331\030\022/\n*k_EMsgCCSDelete"
  "AllCommentsByAuthorResponse\020\332\030\022\027\n\022k_EMsg"
  "BaseLBSRange\020\200\031\022\026\n\021k_EMsgLBSSetScore\020\201\031\022"
  "\036\n\031k_EMsgLBSSetScoreResponse\020\202\031\022\034\n\027k_EMs"
  "gLBSFindOrCreateLB\020\203\031\022$\n\037k_EMsgLBSFindOr"
  "CreateLBResponse\020\204\031\022\032\n\025k_EMsgLBSGetLBEnt"
  "ries\020\205\031\022\"\n\035k_EMsgLBSGetLBEntriesResponse"
  "\020\206\031\022\027\n\022k_EMsgLBSGetLBList\020\207\031\022\037\n\032k_EMsgLB"
  "SGetLBListResponse\020\210\031\022\032\n\025k_EMsgLBSSetLBD"
  "etails\020\211\031\022\026\n\021k_EMsgLBSDeleteLB\020\212\031\022\033\n\026k_E"
  "MsgLBSDeleteLBEntry\020\213\031\022\025\n\020k_EMsgLBSReset"
  "LB\020\214\031\022\035\n\030k_EMsgLBSResetLBResponse\020\215\031\022\036\n\031"
  "k_EMsgLBSDeleteLBResponse\020\216\031\022\022\n\rk_EMsgBa"
  "seOGS\020\310\032\022\032\n\025k_EMsgOGSBeginSession\020\311\032\022\"\n\035"
  "k_EMsgOGSBeginSessionResponse\020\312\032\022\030\n\023k_EM"
  "sgOGSEndSession\020\313\032\022 \n\033k_EMsgOGSEndSessio"
  "nResponse\020\314\032\022 \n\033k_EMsgOGSWriteAppSession"
  "Row\020\316\032\022\022\n\rk_EMsgBaseBRP\020\220\034\022 \n\033k_EMsgBRPP"
  "ostTransactionTax\020\255\034\022(\n#k_EMsgBRPPostTra"
  "nsactionTaxResponse\020\256\034\022\027\n\022k_EMsgBaseAMRa"
  "nge2\020\240\037\022\027\n\022k_EMsgAMCreateChat\020\241\037\022\037\n\032k_EM"
  "sgAMCreateChatResponse\020\242\037\022\032\n\025k_EMsgAMSet"
  "ProfileURL\020\245\037\022#\n\036k_EMsgAMGetAccountEmail"
  "Address\020\246\037\022+\n&k_EMsgAMGetAccountEmailAdd"
  "ressResponse\020\247\037\022\034\n\027k_EMsgAMRequestClanDa"
  "ta\020\250\037\022\033\n\026k_EMsgAMRouteToClients\020\251\037\022\026\n\021k_"
  "EMsgAMLeaveClan\020\252\037\022\034\n\027k_EMsgAMClanPermis"
  "sions\020\253\037\022$\n\037k_EMsgAMClanPermissionsRespo"
  "nse\020\254\037\0220\n+k_EMsgAMCreateClanEventDummyFo"
  "rRateLimiting\020\255\037\0220\n+k_EMsgAMUpdateClanEv"
  "entDummyForRateLimiting\020\257\037\022&\n!k_EMsgAMSe"
  "tClanPermissionSettings\020\265\037\022.\n)k_EMsgAMSe"
  "tClanPermissionSettingsResponse\020\266\037\022&\n!k_"
  "EMsgAMGetClanPermissionSettings\020\267\037\022.\n)k_"
  "EMsgAMGetClanPermissionSettingsResponse\020"
  "\270\037\022 \n\033k_EMsgAMPublishChatRoomInfo\020\271\037\022\035\n\030"
  "k_EMsgClientChatRoomInfo\020\272\037\022\033\n\026k_EMsgAMG"
  "etClanHistory\020\307\037\022#\n\036k_EMsgAMGetClanHisto"
  "ryResponse\020\310\037\022\"\n\035k_EMsgAMGetClanPermissi"
  "onBits\020\311\037\022*\n%k_EMsgAMGetClanPermissionBi"
  "tsResponse\020\312\037\022\"\n\035k_EMsgAMSetClanPermissi"
  "onBits\020\313\037\022*\n%k_EMsgAMSetClanPermissionBi"
  "tsResponse\020\314\037\022\037\n\032k_EMsgAMSessionInfoRequ"
  "est\020\315\037\022 \n\033k_EMsgAMSessionInfoResponse\020\316\037"
  "\022\034\n\027k_EMsgAMValidateWGToken\020\317\037\022\030\n\023k_EMsg"
  "AMGetClanRank\020\322\037\022 \n\033k_EMsgAMGetClanRankR"
  "esponse\020\323\037\022\030\n\023k_EMsgAMSetClanRank\020\324\037\022 \n\033"
  "k_EMsgAMSetClanRankResponse\020\325\037\022\030\n\023k_EMsg"
  "AMGetClanPOTW\020\326\037\022 \n\033k_EMsgAMGetClanPOTWR"
  "esponse\020\327\037\022\030\n\023k_EMsgAMSetClanPOTW\020\330\037\022 \n\033"
  "k_EMsgAMSetClanPOTWResponse\020\331\037\022\025\n\020k_EMsg"
  "AMDumpUser\020\333\037\022\035\n\030k_EMsgAMKickUserFromCla"
  "n\020\334\037\022\035\n\030k_EMsgAMAddFounderToClan\020\335\037\022$\n\037k"
  "_EMsgAMValidateWGTokenResponse\020\336\037\022\036\n\031k_E"
  "MsgAMSetAccountDetails\020\340\037\022\033\n\026k_EMsgAMGet"
  "ChatBanList\020\341\037\022#\n\036k_EMsgAMGetChatBanList"
  "Response\020\342\037\022\032\n\025k_EMsgAMUnBanFromChat\020\343\037\022"
  "\033\n\026k_EMsgAMSetClanDetails\020\344\037\022\036\n\031k_EMsgUG"
  "SGetUserGameStats\020\351\037\022&\n!k_EMsgUGSGetUser"
  "GameStatsResponse\020\352\037\022 \n\033k_EMsgAMCheckCla"
  "nMembership\020\353\037\022\033\n\026k_EMsgAMGetClanMembers"
  "\020\354\037\022#\n\036k_EMsgAMGetClanMembersResponse\020\355\037"
  "\022#\n\036k_EMsgAMNotifyChatOfClanChange\020\357\037\022\035\n"
  "\030k_EMsgAMResubmitPurchase\020\360\037\022\026\n\021k_EMsgAM"
  "AddFriend\020\361\037\022\036\n\031k_EMsgAMAddFriendRespons"
  "e\020\362\037\022\031\n\024k_EMsgAMRemoveFriend\020\363\037\022\025\n\020k_EMs"
  "gAMDumpClan\020\364\037\022\034\n\027k_EMsgAMChangeClanOwne"
  "r\020\365\037\022\036\n\031k_EMsgAMCancelEasyCollect\020\366\037\022&\n!"
  "k_EMsgAMCancelEasyCollectResponse\020\367\037\022\032\n\025"
  "k_EMsgAMClansInCommon\020\372\037\022\"\n\035k_EMsgAMClan"
  "sInCommonResponse\020\373\037\022\035\n\030k_EMsgAMIsValidA"
  "ccountID\020\374\037\022\034\n\027k_EMsgAMWipeFriendsList\020\377"
  "\037\022\027\n\022k_EMsgAMSetIgnored\020\200 \022\'\n\"k_EMsgAMCl"
  "ansInCommonCountResponse\020\201 \022\030\n\023k_EMsgAMF"
  "riendsList\020\202 \022 \n\033k_EMsgAMFriendsListResp"
  "onse\020\203 \022\034\n\027k_EMsgAMFriendsInCommon\020\204 \022$\n"
  "\037k_EMsgAMFriendsInCommonResponse\020\205 \022)\n$k"
  "_EMsgAMFriendsInCommonCountResponse\020\206 \022\037"
  "\n\032k_EMsgAMClansInCommonCount\020\207 \022\035\n\030k_EMs"
  "gAMChallengeVerdict\020\210 \022\"\n\035k_EMsgAMChalle"
  "ngeNotification\020\211 \022\027\n\022k_EMsgAMFindGSByIP"
  "\020\212 \022\030\n\023k_EMsgAMFoundGSByIP\020\213 \022\030\n\023k_EMsgA"
  "MGiftRevoked\020\214 \022\031\n\024k_EMsgAMUserClanList\020"
  "\216 \022!\n\034k_EMsgAMUserClanListResponse\020\217 \022\037\n"
  "\032k_EMsgAMGetAccountDetails2\020\220 \022\'\n\"k_EMsg"
  "AMGetAccountDetailsResponse2\020\221 \022(\n#k_EMs"
  "gAMSetCommunityProfileSettings\020\222 \0220\n+k_E"
  "MsgAMSetCommunityProfileSettingsResponse"
  "\020\223 \022%\n k_EMsgAMGetCommunityPrivacyState\020"
  "\224 \022-\n(k_EMsgAMGetCommunityPrivacyStateRe"
  "sponse\020\225 \022(\n#k_EMsgAMCheckClanInviteRate"
  "Limiting\020\226 \022&\n!k_EMsgUGSGetUserAchieveme"
  "ntStatus\020\227 \022\027\n\022k_EMsgAMGetIgnored\020\230 \022\037\n\032"
  "k_EMsgAMGetIgnoredResponse\020\231 \022\037\n\032k_EMsgA"
  "MSetIgnoredResponse\020\232 \022&\n!k_EMsgAMSetFri"
  "endRelationshipNone\020\233 \022\"\n\035k_EMsgAMGetFri"
  "endRelationship\020\234 \022*\n%k_EMsgAMGetFriendR"
  "elationshipResponse\020\235 \022 \n\033k_EMsgAMServic"
  "eModulesCache\020\236 \022\037\n\032k_EMsgAMServiceModul"
  "esCall\020\237 \022\'\n\"k_EMsgAMServiceModulesCallR"
  "esponse\020\240 \022!\n\034k_EMsgCommunityAddFriendNe"
  "ws\020\254 \022\031\n\024k_EMsgAMFindClanUser\020\257 \022!\n\034k_EM"
  "sgAMFindClanUserResponse\020\260 \022\030\n\023k_EMsgAMB"
  "anFromChat\020\261 \022%\n k_EMsgAMGetUserNewsSubs"
  "criptions\020\263 \022-\n(k_EMsgAMGetUserNewsSubsc"
  "riptionsResponse\020\264 \022%\n k_EMsgAMSetUserNe"
  "wsSubscriptions\020\265 \022\035\n\030k_EMsgAMSendQueued"
  "Emails\020\270 \022\034\n\027k_EMsgAMSetLicenseFlags\020\271 \022"
  "\"\n\035k_EMsgCommunityDeleteUserNews\020\273 \022\035\n\030k"
  "_EMsgAMGetAccountStatus\020\276 \022%\n k_EMsgAMGe"
  "tAccountStatusResponse\020\277 \022\032\n\025k_EMsgAMEdi"
  "tBanReason\020\300 \022(\n#k_EMsgAMCheckClanMember"
  "shipResponse\020\301 \022$\n\037k_EMsgAMProbeClanMemb"
  "ershipList\020\302 \022,\n\'k_EMsgAMProbeClanMember"
  "shipListResponse\020\303 \022.\n)k_EMsgUGSGetUserA"
  "chievementStatusResponse\020\304 \022\036\n\031k_EMsgAMG"
  "etFriendsLobbies\020\305 \022&\n!k_EMsgAMGetFriend"
  "sLobbiesResponse\020\306 \022&\n!k_EMsgAMGetUserFr"
  "iendNewsResponse\020\314 \022%\n k_EMsgCommunityGe"
  "tUserFriendNews\020\315 \022%\n k_EMsgAMGetUserCla"
  "nsNewsResponse\020\316 \022\035\n\030k_EMsgAMGetUserClan"
  "sNews\020\317 \022!\n\034k_EMsgAMGetPreviousCBAccount"
  "\020\330 \022)\n$k_EMsgAMGetPreviousCBAccountRespo"
  "nse\020\331 \022\"\n\035k_EMsgAMGetUserLicenseHistory\020"
  "\336 \022*\n%k_EMsgAMGetUserLicenseHistoryRespo"
  "nse\020\337 \022\"\n\035k_EMsgAMSupportChangePassword\020"
  "\342 \022\037\n\032k_EMsgAMSupportChangeEmail\020\343 \022(\n#k"
  "_EMsgAMResetUserVerificationGSByIP\020\345 \022\036\n"
  "\031k_EMsgAMUpdateGSPlayStats\020\346 \022#\n\036k_EMsgA"
  "MSupportEnableOrDisable\020\347 \022\036\n\031k_EMsgAMGe"
  "tPurchaseStatus\020\356 \022$\n\037k_EMsgAMSupportIsA"
  "ccountEnabled\020\361 \022,\n\'k_EMsgAMSupportIsAcc"
  "ountEnabledResponse\020\362 \022\032\n\025k_EMsgUGSGetUs"
  "erStats\020\363 \022\025\n\020k_EMsgAMGSSearch\020\365 \022#\n\036k_E"
  "MsgChatServerRouteFriendMsg\020\373 \022(\n#k_EMsg"
  "AMTicketAuthRequestOrResponse\020\374 \022\033\n\026k_EM"
  "sgAMAddFreeLicense\020\200!\022\036\n\031k_EMsgAMValidat"
  "eEmailLink\020\207!\022&\n!k_EMsgAMValidateEmailLi"
  "nkResponse\020\210!\022\034\n\027k_EMsgUGSStoreUserStats"
  "\020\214!\022\035\n\030k_EMsgAMDeleteStoredCard\020\221!\022!\n\034k_"
  "EMsgAMRevokeLegacyGameKeys\020\222!\022\035\n\030k_EMsgA"
  "MGetWalletDetails\020\224!\022%\n k_EMsgAMGetWalle"
  "tDetailsResponse\020\225!\022$\n\037k_EMsgAMDeleteSto"
  "redPaymentInfo\020\226!\022$\n\037k_EMsgAMGetStoredPa"
  "ymentSummary\020\227!\022,\n\'k_EMsgAMGetStoredPaym"
  "entSummaryResponse\020\230!\022$\n\037k_EMsgAMGetWall"
  "etConversionRate\020\231!\022,\n\'k_EMsgAMGetWallet"
  "ConversionRateResponse\020\232!\022\032\n\025k_EMsgAMCon"
  "vertWallet\020\233!\022\"\n\035k_EMsgAMConvertWalletRe"
  "sponse\020\234!\022\033\n\026k_EMsgAMSetPreApproval\020\237!\022#"
  "\n\036k_EMsgAMSetPreApprovalResponse\020\240!\022\031\n\024k"
  "_EMsgAMCreateRefund\020\242!\022\035\n\030k_EMsgAMCreate"
  "Chargeback\020\244!\022\032\n\025k_EMsgAMCreateDispute\020\246"
  "!\022\031\n\024k_EMsgAMClearDispute\020\250!\022&\n!k_EMsgAM"
  "CreateFinancialAdjustment\020\251!\022\037\n\032k_EMsgAM"
  "PlayerNicknameList\020\252!\022\'\n\"k_EMsgAMPlayerN"
  "icknameListResponse\020\253!\022#\n\036k_EMsgAMGetUse"
  "rCurrentGameInfo\020\255!\022+\n&k_EMsgAMGetUserCu"
  "rrentGameInfoResponse\020\256!\022\034\n\027k_EMsgAMGetG"
  "SPlayerList\020\257!\022$\n\037k_EMsgAMGetGSPlayerLis"
  "tResponse\020\260!\022\"\n\035k_EMsgAMGetSteamIDForMic"
  "roTxn\020\266!\022*\n%k_EMsgAMGetSteamIDForMicroTx"
  "nResponse\020\267!\022\035\n\030k_EMsgAMSetPartnerMember"
  "\020\270!\022 \n\033k_EMsgAMRemovePublisherUser\020\271!\022\037\n"
  "\032k_EMsgAMGetUserLicenseList\020\272!\022\'\n\"k_EMsg"
  "AMGetUserLicenseListResponse\020\273!\022\"\n\035k_EMs"
  "gAMReloadGameGroupPolicy\020\274!\022#\n\036k_EMsgAMA"
  "ddFreeLicenseResponse\020\275!\022\034\n\027k_EMsgAMVACS"
  "tatusUpdate\020\276!\022\036\n\031k_EMsgAMGetAccountDeta"
  "ils\020\277!\022&\n!k_EMsgAMGetAccountDetailsRespo"
  "nse\020\300!\022!\n\034k_EMsgAMGetPlayerLinkDetails\020\301"
  "!\022)\n$k_EMsgAMGetPlayerLinkDetailsRespons"
  "e\020\302!\022)\n$k_EMsgAMGetAccountFlagsForWGSpoo"
  "fing\020\306!\0221\n,k_EMsgAMGetAccountFlagsForWGS"
  "poofingResponse\020\307!\022\034\n\027k_EMsgAMGetClanOff"
  "icers\020\312!\022$\n\037k_EMsgAMGetClanOfficersRespo"
  "nse\020\313!\022\027\n\022k_EMsgAMNameChange\020\314!\022\033\n\026k_EMs"
  "gAMGetNameHistory\020\315!\022#\n\036k_EMsgAMGetNameH"
  "istoryResponse\020\316!\022!\n\034k_EMsgAMUpdateProvi"
  "derStatus\020\321!\022)\n$k_EMsgAMSupportRemoveAcc"
  "ountSecurity\020\323!\022*\n%k_EMsgAMIsAccountInCa"
  "ptchaGracePeriod\020\324!\0222\n-k_EMsgAMIsAccount"
  "InCaptchaGracePeriodResponse\020\325!\022\035\n\030k_EMs"
  "gAMAccountPS3Unlink\020\326!\022%\n k_EMsgAMAccoun"
  "tPS3UnlinkResponse\020\327!\022$\n\037k_EMsgUGSStoreU"
  "serStatsResponse\020\330!\022\036\n\031k_EMsgAMGetAccoun"
  "tPSNInfo\020\331!\022&\n!k_EMsgAMGetAccountPSNInfo"
  "Response\020\332!\022$\n\037k_EMsgAMAuthenticatedPlay"
  "erList\020\333!\022\031\n\024k_EMsgAMGetUserGifts\020\334!\022!\n\034"
  "k_EMsgAMGetUserGiftsResponse\020\335!\022 \n\033k_EMs"
  "gAMTransferLockedGifts\020\340!\022(\n#k_EMsgAMTra"
  "nsferLockedGiftsResponse\020\341!\022%\n k_EMsgAMP"
  "layerHostedOnGameServer\020\342!\022\036\n\031k_EMsgAMGe"
  "tAccountBanInfo\020\343!\022&\n!k_EMsgAMGetAccount"
  "BanInfoResponse\020\344!\022!\n\034k_EMsgAMRecordBanE"
  "nforcement\020\345!\022!\n\034k_EMsgAMRollbackGiftTra"
  "nsfer\020\346!\022)\n$k_EMsgAMRollbackGiftTransfer"
  "Response\020\347!\022%\n k_EMsgAMHandlePendingTran"
  "saction\020\350!\022\037\n\032k_EMsgAMRequestClanDetails"
  "\020\351!\022(\n#k_EMsgAMDeleteStoredPaypalAgreeme"
  "nt\020\352!\022\035\n\030k_EMsgAMGameServerUpdate\020\353!\022\035\n\030"
  "k_EMsgAMGameServerRemove\020\354!\022 \n\033k_EMsgAMG"
  "etPaypalAgreements\020\355!\022(\n#k_EMsgAMGetPayp"
  "alAgreementsResponse\020\356!\022/\n*k_EMsgAMGameS"
  "erverPlayerCompatibilityCheck\020\357!\0227\n2k_EM"
  "sgAMGameServerPlayerCompatibilityCheckRe"
  "sponse\020\360!\022\031\n\024k_EMsgAMRenewLicense\020\361!\022\'\n\""
  "k_EMsgAMGetAccountCommunityBanInfo\020\362!\022/\n"
  "*k_EMsgAMGetAccountCommunityBanInfoRespo"
  "nse\020\363!\022,\n\'k_EMsgAMGameServerAccountChang"
  "ePassword\020\364!\022+\n&k_EMsgAMGameServerAccoun"
  "tDeleteAccount\020\365!\022\033\n\026k_EMsgAMRenewAgreem"
  "ent\020\366!\022\032\n\025k_EMsgAMXsollaPayment\020\370!\022\"\n\035k_"
  "EMsgAMXsollaPaymentResponse\020\371!\022\"\n\035k_EMsg"
  "AMAcctAllowedToPurchase\020\372!\022*\n%k_EMsgAMAc"
  "ctAllowedToPurchaseResponse\020\373!\022\035\n\030k_EMsg"
  "AMSwapKioskDeposit\020\374!\022%\n k_EMsgAMSwapKio"
  "skDepositResponse\020\375!\022\037\n\032k_EMsgAMSetUserG"
  "iftUnowned\020\376!\022\'\n\"k_EMsgAMSetUserGiftUnow"
  "nedResponse\020\377!\022!\n\034k_EMsgAMClaimUnownedUs"
  "erGift\020\200\"\022)\n$k_EMsgAMClaimUnownedUserGif"
  "tResponse\020\201\"\022\030\n\023k_EMsgAMSetClanName\020\202\"\022 "
  "\n\033k_EMsgAMSetClanNameResponse\020\203\"\022\030\n\023k_EM"
  "sgAMGrantCoupon\020\204\"\022 \n\033k_EMsgAMGrantCoupo"
  "nResponse\020\205\"\022-\n(k_EMsgAMIsPackageRestric"
  "tedInUserCountry\020\206\"\0225\n0k_EMsgAMIsPackage"
  "RestrictedInUserCountryResponse\020\207\"\022-\n(k_"
  "EMsgAMHandlePendingTransactionResponse\020\210"
  "\"\022\036\n\031k_EMsgAMGrantGuestPasses2\020\211\"\022&\n!k_E"
  "MsgAMGrantGuestPasses2Response\020\212\"\022 \n\033k_E"
  "MsgAMGetPlayerBanDetails\020\215\"\022(\n#k_EMsgAMG"
  "etPlayerBanDetailsResponse\020\216\"\022\035\n\030k_EMsgA"
  "MFinalizePurchase\020\217\"\022%\n k_EMsgAMFinalize"
  "PurchaseResponse\020\220\"\022\"\n\035k_EMsgAMPersonaCh"
  "angeResponse\020\224\"\022+\n&k_EMsgAMGetClanDetail"
  "sForForumCreation\020\225\"\0223\n.k_EMsgAMGetClanD"
  "etailsForForumCreationResponse\020\226\"\022(\n#k_E"
  "MsgAMGetPendingNotificationCount\020\227\"\0220\n+k"
  "_EMsgAMGetPendingNotificationCountRespon"
  "se\020\230\"\022 \n\033k_EMsgAMPasswordHashUpgrade\020\231\"\022"
  "\035\n\030k_EMsgAMBoaCompraPayment\020\234\"\022%\n k_EMsg"
  "AMBoaCompraPaymentResponse\020\235\"\022%\n k_EMsgA"
  "MCompleteExternalPurchase\020\237\"\022-\n(k_EMsgAM"
  "CompleteExternalPurchaseResponse\020\240\"\022)\n$k"
  "_EMsgAMResolveNegativeWalletCredits\020\241\"\0221"
  "\n,k_EMsgAMResolveNegativeWalletCreditsRe"
  "sponse\020\242\"\022&\n!k_EMsgAMPlayerGetClanBasicD"
  "etails\020\245\"\022.\n)k_EMsgAMPlayerGetClanBasicD"
  "etailsResponse\020\246\"\022\027\n\022k_EMsgAMMOLPayment\020"
  "\247\"\022\037\n\032k_EMsgAMMOLPaymentResponse\020\250\"\022\033\n\026k"
  "_EMsgGetUserIPCountry\020\251\"\022#\n\036k_EMsgGetUse"
  "rIPCountryResponse\020\252\"\022+\n&k_EMsgNotificat"
  "ionOfSuspiciousActivity\020\253\"\022\032\n\025k_EMsgAMDe"
  "gicaPayment\020\254\"\022\"\n\035k_EMsgAMDegicaPaymentR"
  "esponse\020\255\"\022\031\n\024k_EMsgAMEClubPayment\020\256\"\022!\n"
  "\034k_EMsgAMEClubPaymentResponse\020\257\"\022%\n k_EM"
  "sgAMPayPalPaymentsHubPayment\020\260\"\022-\n(k_EMs"
  "gAMPayPalPaymentsHubPaymentResponse\020\261\"\0221"
  "\n,k_EMsgAMTwoFactorRecoverAuthenticatorR"
  "equest\020\262\"\0222\n-k_EMsgAMTwoFactorRecoverAut"
  "henticatorResponse\020\263\"\022\035\n\030k_EMsgAMSmart2P"
  "ayPayment\020\264\"\022%\n k_EMsgAMSmart2PayPayment"
  "Response\020\265\"\0227\n2k_EMsgAMValidatePasswordR"
  "esetCodeAndSendSmsRequest\020\266\"\0228\n3k_EMsgAM"
  "ValidatePasswordResetCodeAndSendSmsRespo"
  "nse\020\267\"\022*\n%k_EMsgAMGetAccountResetDetails"
  "Request\020\270\"\022+\n&k_EMsgAMGetAccountResetDet"
  "ailsResponse\020\271\"\022\032\n\025k_EMsgAMBitPayPayment"
  "\020\272\"\022\"\n\035k_EMsgAMBitPayPaymentResponse\020\273\"\022"
  "\"\n\035k_EMsgAMSendAccountInfoUpdate\020\274\"\022\036\n\031k"
  "_EMsgAMSendScheduledGift\020\275\"\022\032\n\025k_EMsgAMN"
  "odwinPayment\020\276\"\022\"\n\035k_EMsgAMNodwinPayment"
  "Response\020\277\"\022 \n\033k_EMsgAMResolveWalletRevo"
  "ke\020\300\"\022\'\n\"k_EMsgAMResolveWalletReverseRev"
  "oke\020\301\"\022\032\n\025k_EMsgAMFundedPayment\020\302\"\022\"\n\035k_"
  "EMsgAMFundedPaymentResponse\020\303\"\022.\n)k_EMsg"
  "AMRequestPersonaUpdateForChatServer\020\304\"\022 "
  "\n\033k_EMsgAMPerfectWorldPayment\020\305\"\022(\n#k_EM"
  "sgAMPerfectWorldPaymentResponse\020\306\"\022\034\n\027k_"
  "EMsgAMECommPayPayment\020\307\"\022$\n\037k_EMsgAMECom"
  "mPayPaymentResponse\020\310\"\022\036\n\031k_EMsgAMSetRem"
  "oteClientID\020\311\"\022\026\n\021k_EMsgBasePSRange\020\210\'\022 "
  "\n\033k_EMsgPSIsValidShoppingCart\020\213\'\022(\n#k_EM"
  "sgPSIsValidShoppingCartResponse\020\214\'\022$\n\037k_"
  "EMsgPSGetShoppingCartContents\020\221\'\022,\n\'k_EM"
  "sgPSGetShoppingCartContentsResponse\020\222\'\022*"
  "\n%k_EMsgPSAddWalletCreditToShoppingCart\020"
  "\223\'\0222\n-k_EMsgPSAddWalletCreditToShoppingC"
  "artResponse\020\224\'\022\027\n\022k_EMsgBaseUFSRange\020\320(\022"
  "%\n k_EMsgClientUFSUploadFileRequest\020\322(\022&"
  "\n!k_EMsgClientUFSUploadFileResponse\020\323(\022#"
  "\n\036k_EMsgClientUFSUploadFileChunk\020\324(\022&\n!k"
  "_EMsgClientUFSUploadFileFinished\020\325(\022%\n k"
  "_EMsgClientUFSGetFileListForApp\020\326(\022-\n(k_"
  "EMsgClientUFSGetFileListForAppResponse\020\327"
  "(\022#\n\036k_EMsgClientUFSDownloadRequest\020\332(\022$"
  "\n\037k_EMsgClientUFSDownloadResponse\020\333(\022!\n\034"
  "k_EMsgClientUFSDownloadChunk\020\334(\022 \n\033k_EMs"
  "gClientUFSLoginRequest\020\335(\022!\n\034k_EMsgClien"
  "tUFSLoginResponse\020\336(\022!\n\034k_EMsgUFSReloadP"
  "artitionInfo\020\337(\022%\n k_EMsgClientUFSTransf"
  "erHeartbeat\020\340(\022\035\n\030k_EMsgUFSSynchronizeFi"
  "le\020\341(\022%\n k_EMsgUFSSynchronizeFileRespons"
  "e\020\342(\022%\n k_EMsgClientUFSDeleteFileRequest"
  "\020\343(\022&\n!k_EMsgClientUFSDeleteFileResponse"
  "\020\344(\022!\n\034k_EMsgClientUFSGetUGCDetails\020\352(\022)"
  "\n$k_EMsgClientUFSGetUGCDetailsResponse\020\353"
  "(\022\035\n\030k_EMsgUFSUpdateFileFlags\020\354(\022%\n k_EM"
  "sgUFSUpdateFileFlagsResponse\020\355(\022%\n k_EMs"
  "gClientUFSGetSingleFileInfo\020\356(\022-\n(k_EMsg"
  "ClientUFSGetSingleFileInfoResponse\020\357(\022\035\n"
  "\030k_EMsgClientUFSShareFile\020\360(\022%\n k_EMsgCl"
  "ientUFSShareFileResponse\020\361(\022\033\n\026k_EMsgUFS"
  "ReloadAccount\020\362(\022#\n\036k_EMsgUFSReloadAccou"
  "ntResponse\020\363(\022!\n\034k_EMsgUFSUpdateRecordBa"
  "tched\020\364(\022)\n$k_EMsgUFSUpdateRecordBatched"
  "Response\020\365(\022\031\n\024k_EMsgUFSMigrateFile\020\366(\022!"
  "\n\034k_EMsgUFSMigrateFileResponse\020\367(\022\030\n\023k_E"
  "MsgUFSGetUGCURLs\020\370(\022 \n\033k_EMsgUFSGetUGCUR"
  "LsResponse\020\371(\022)\n$k_EMsgUFSHttpUploadFile"
  "FinishRequest\020\372(\022*\n%k_EMsgUFSHttpUploadF"
  "ileFinishResponse\020\373(\022\"\n\035k_EMsgUFSDownloa"
  "dStartRequest\020\374(\022#\n\036k_EMsgUFSDownloadSta"
  "rtResponse\020\375(\022\"\n\035k_EMsgUFSDownloadChunkR"
  "equest\020\376(\022#\n\036k_EMsgUFSDownloadChunkRespo"
  "nse\020\377(\022#\n\036k_EMsgUFSDownloadFinishRequest"
  "\020\200)\022$\n\037k_EMsgUFSDownloadFinishResponse\020\201"
  ")\022\033\n\026k_EMsgUFSFlushURLCache\020\202)\022 \n\033k_EMsg"
  "ClientUFSUploadCommit\020\203)\022(\n#k_EMsgClient"
  "UFSUploadCommitResponse\020\204)\022\036\n\031k_EMsgUFSM"
  "igrateFileAppID\020\205)\022&\n!k_EMsgUFSMigrateFi"
  "leAppIDResponse\020\206)\022\026\n\021k_EMsgBaseClient2\020"
  "\230*\022.\n)k_EMsgClientRequestForgottenPasswo"
  "rdEmail\020\231*\0226\n1k_EMsgClientRequestForgott"
  "enPasswordEmailResponse\020\232*\022&\n!k_EMsgClie"
  "ntCreateAccountResponse\020\233*\022\'\n\"k_EMsgClie"
  "ntResetForgottenPassword\020\234*\022/\n*k_EMsgCli"
  "entResetForgottenPasswordResponse\020\235*\022/\n*"
  "k_EMsgClientInformOfResetForgottenPasswo"
  "rd\020\237*\0227\n2k_EMsgClientInformOfResetForgot"
  "tenPasswordResponse\020\240*\022)\n$k_EMsgClientAn"
  "onUserLogOn_Deprecated\020\241*\022(\n#k_EMsgClien"
  "tGamesPlayedWithDataBlob\020\242*\022#\n\036k_EMsgCli"
  "entUpdateUserGameInfo\020\243*\022\037\n\032k_EMsgClient"
  "FileToDownload\020\244*\022\'\n\"k_EMsgClientFileToD"
  "ownloadResponse\020\245*\022\034\n\027k_EMsgClientLBSSet"
  "Score\020\246*\022$\n\037k_EMsgClientLBSSetScoreRespo"
  "nse\020\247*\022\"\n\035k_EMsgClientLBSFindOrCreateLB\020"
  "\250*\022*\n%k_EMsgClientLBSFindOrCreateLBRespo"
  "nse\020\251*\022 \n\033k_EMsgClientLBSGetLBEntries\020\252*"
  "\022(\n#k_EMsgClientLBSGetLBEntriesResponse\020"
  "\253*\022\035\n\030k_EMsgClientChatDeclined\020\262*\022\"\n\035k_E"
  "MsgClientFriendMsgIncoming\020\263*\022$\n\037k_EMsgC"
  "lientAuthList_Deprecated\020\264*\022#\n\036k_EMsgCli"
  "entTicketAuthComplete\020\265*\022!\n\034k_EMsgClient"
  "IsLimitedAccount\020\266*\022 \n\033k_EMsgClientReque"
  "stAuthList\020\267*\022\031\n\024k_EMsgClientAuthList\020\270*"
  "\022\025\n\020k_EMsgClientStat\020\271*\022\"\n\035k_EMsgClientP"
  "2PConnectionInfo\020\272*\022&\n!k_EMsgClientP2PCo"
  "nnectionFailInfo\020\273*\022&\n!k_EMsgClientGetDe"
  "potDecryptionKey\020\276*\022.\n)k_EMsgClientGetDe"
  "potDecryptionKeyResponse\020\277*\022\"\n\035k_EMsgCli"
  "entEnableTestLicense\020\303*\022*\n%k_EMsgClientE"
  "nableTestLicenseResponse\020\304*\022#\n\036k_EMsgCli"
  "entDisableTestLicense\020\305*\022+\n&k_EMsgClient"
  "DisableTestLicenseResponse\020\306*\022&\n!k_EMsgC"
  "lientRequestValidationMail\020\310*\022.\n)k_EMsgC"
  "lientRequestValidationMailResponse\020\311*\022%\n"
  " k_EMsgClientCheckAppBetaPassword\020\312*\022-\n("
  "k_EMsgClientCheckAppBetaPasswordResponse"
  "\020\313*\022\025\n\020k_EMsgClientToGC\020\314*\022\027\n\022k_EMsgClie"
  "ntFromGC\020\315*\022\036\n\031k_EMsgClientEmailAddrInfo"
  "\020\320*\022 \n\033k_EMsgClientPasswordChange3\020\321*\022\035\n"
  "\030k_EMsgClientEmailChange3\020\322*\022\"\n\035k_EMsgCl"
  "ientPersonalQAChange3\020\323*\022(\n#k_EMsgClient"
  "ResetForgottenPassword3\020\324*\022/\n*k_EMsgClie"
  "ntRequestForgottenPasswordEmail3\020\325*\022\034\n\027k"
  "_EMsgClientNewLoginKey\020\327*\022$\n\037k_EMsgClien"
  "tNewLoginKeyAccepted\020\330*\022)\n$k_EMsgClientL"
  "ogOnWithHash_Deprecated\020\331*\022 \n\033k_EMsgClie"
  "ntStoreUserStats2\020\332*\022\035\n\030k_EMsgClientStat"
  "sUpdated\020\333*\022#\n\036k_EMsgClientActivateOEMLi"
  "cense\020\334*\022#\n\036k_EMsgClientRegisterOEMMachi"
  "ne\020\335*\022+\n&k_EMsgClientRegisterOEMMachineR"
  "esponse\020\336*\022%\n k_EMsgClientRequestedClien"
  "tStats\020\350*\022\033\n\026k_EMsgClientStat2Int32\020\351*\022\026"
  "\n\021k_EMsgClientStat2\020\352*\022\037\n\032k_EMsgClientVe"
  "rifyPassword\020\353*\022\'\n\"k_EMsgClientVerifyPas"
  "swordResponse\020\354*\022#\n\036k_EMsgClientDRMDownl"
  "oadRequest\020\355*\022$\n\037k_EMsgClientDRMDownload"
  "Response\020\356*\022\037\n\032k_EMsgClientDRMFinalResul"
  "t\020\357*\022&\n!k_EMsgClientGetFriendsWhoPlayGam"
  "e\020\360*\022.\n)k_EMsgClientGetFriendsWhoPlayGam"
  "eResponse\020\361*\022 \n\033k_EMsgClientOGSBeginSess"
  "ion\020\362*\022(\n#k_EMsgClientOGSBeginSessionRes"
  "ponse\020\363*\022\036\n\031k_EMsgClientOGSEndSession\020\364*"
  "\022&\n!k_EMsgClientOGSEndSessionResponse\020\365*"
  "\022\034\n\027k_EMsgClientOGSWriteRow\020\366*\022#\n\036k_EMsg"
  "ClientGetPeerContentInfo\020\367*\022+\n&k_EMsgCli"
  "entGetPeerContentInfoResponse\020\370*\022\'\n\"k_EM"
  "sgClientStartPeerContentServer\020\371*\022/\n*k_E"
  "MsgClientStartPeerContentServerResponse\020"
  "\372*\022\"\n\035k_EMsgClientServerUnavailable\020\374*\022!"
  "\n\034k_EMsgClientServersAvailable\020\375*\022)\n$k_E"
  "MsgClientRegisterAuthTicketWithCM\020\376*\022\034\n\027"
  "k_EMsgClientGCMsgFailed\020\377*\022$\n\037k_EMsgClie"
  "ntMicroTxnAuthRequest\020\200+\022\"\n\035k_EMsgClient"
  "MicroTxnAuthorize\020\201+\022*\n%k_EMsgClientMicr"
  "oTxnAuthorizeResponse\020\202+\022 \n\033k_EMsgClient"
  "GetMicroTxnInfo\020\204+\022(\n#k_EMsgClientGetMic"
  "roTxnInfoResponse\020\205+\022%\n k_EMsgClientDere"
  "gisterWithServer\020\207+\022\'\n\"k_EMsgClientSubsc"
  "ribeToPersonaFeed\020\210+\022\026\n\021k_EMsgClientLogo"
  "n\020\212+\022!\n\034k_EMsgClientGetClientDetails\020\213+\022"
  ")\n$k_EMsgClientGetClientDetailsResponse\020"
  "\214+\022+\n&k_EMsgClientReportOverlayDetourFai"
  "lure\020\215+\022!\n\034k_EMsgClientGetClientAppList\020"
  "\216+\022)\n$k_EMsgClientGetClientAppListRespon"
  "se\020\217+\022!\n\034k_EMsgClientInstallClientApp\020\220+"
  "\022)\n$k_EMsgClientInstallClientAppResponse"
  "\020\221+\022#\n\036k_EMsgClientUninstallClientApp\020\222+"
  "\022+\n&k_EMsgClientUninstallClientAppRespon"
  "se\020\223+\022(\n#k_EMsgClientSetClientAppUpdateS"
  "tate\020\224+\0220\n+k_EMsgClientSetClientAppUpdat"
  "eStateResponse\020\225+\022*\n%k_EMsgClientRequest"
  "EncryptedAppTicket\020\226+\0222\n-k_EMsgClientReq"
  "uestEncryptedAppTicketResponse\020\227+\022!\n\034k_E"
  "MsgClientWalletInfoUpdate\020\230+\022\032\n\025k_EMsgCl"
  "ientLBSSetUGC\020\231+\022\"\n\035k_EMsgClientLBSSetUG"
  "CResponse\020\232+\022\"\n\035k_EMsgClientAMGetClanOff"
  "icers\020\233+\022*\n%k_EMsgClientAMGetClanOfficer"
  "sResponse\020\234+\022\"\n\035k_EMsgClientFriendProfil"
  "eInfo\020\237+\022*\n%k_EMsgClientFriendProfileInf"
  "oResponse\020\240+\022\"\n\035k_EMsgClientUpdateMachin"
  "eAuth\020\241+\022*\n%k_EMsgClientUpdateMachineAut"
  "hResponse\020\242+\022 \n\033k_EMsgClientReadMachineA"
  "uth\020\243+\022(\n#k_EMsgClientReadMachineAuthRes"
  "ponse\020\244+\022#\n\036k_EMsgClientRequestMachineAu"
  "th\020\245+\022+\n&k_EMsgClientRequestMachineAuthR"
  "esponse\020\246+\022#\n\036k_EMsgClientScreenshotsCha"
  "nged\020\247+\022 \n\033k_EMsgClientGetCDNAuthToken\020\252"
  "+\022(\n#k_EMsgClientGetCDNAuthTokenResponse"
  "\020\253+\022\'\n\"k_EMsgClientDownloadRateStatistic"
  "s\020\254+\022#\n\036k_EMsgClientRequestAccountData\020\255"
  "+\022+\n&k_EMsgClientRequestAccountDataRespo"
  "nse\020\256+\022(\n#k_EMsgClientResetForgottenPass"
  "word4\020\257+\022\033\n\026k_EMsgClientHideFriend\020\260+\022\"\n"
  "\035k_EMsgClientFriendsGroupsList\020\261+\022&\n!k_E"
  "MsgClientGetClanActivityCounts\020\262+\022.\n)k_E"
  "MsgClientGetClanActivityCountsResponse\020\263"
  "+\022 \n\033k_EMsgClientOGSReportString\020\264+\022\035\n\030k"
  "_EMsgClientOGSReportBug\020\265+\022\031\n\024k_EMsgClie"
  "ntSentLogs\020\266+\022 \n\033k_EMsgClientLogonGameSe"
  "rver\020\267+\022%\n k_EMsgAMClientCreateFriendsGr"
  "oup\020\270+\022-\n(k_EMsgAMClientCreateFriendsGro"
  "upResponse\020\271+\022%\n k_EMsgAMClientDeleteFri"
  "endsGroup\020\272+\022-\n(k_EMsgAMClientDeleteFrie"
  "ndsGroupResponse\020\273+\022%\n k_EMsgAMClientMan"
  "ageFriendsGroup\020\274+\022-\n(k_EMsgAMClientMana"
  "geFriendsGroupResponse\020\275+\022#\n\036k_EMsgAMCli"
  "entAddFriendToGroup\020\276+\022+\n&k_EMsgAMClient"
  "AddFriendToGroupResponse\020\277+\022(\n#k_EMsgAMC"
  "lientRemoveFriendFromGroup\020\300+\0220\n+k_EMsgA"
  "MClientRemoveFriendFromGroupResponse\020\301+\022"
  "(\n#k_EMsgClientAMGetPersonaNameHistory\020\302"
  "+\0220\n+k_EMsgClientAMGetPersonaNameHistory"
  "Response\020\303+\022#\n\036k_EMsgClientRequestFreeLi"
  "cense\020\304+\022+\n&k_EMsgClientRequestFreeLicen"
  "seResponse\020\305+\0220\n+k_EMsgClientDRMDownload"
  "RequestWithCrashData\020\306+\022\034\n\027k_EMsgClientA"
  "uthListAck\020\307+\022\"\n\035k_EMsgClientItemAnnounc"
  "ements\020\310+\022)\n$k_EMsgClientRequestItemAnno"
  "uncements\020\311+\022&\n!k_EMsgClientFriendMsgEch"
  "oToSender\020\312+\022%\n k_EMsgClientCommentNotif"
  "ications\020\316+\022,\n\'k_EMsgClientRequestCommen"
  "tNotifications\020\317+\022&\n!k_EMsgClientPersona"
  "ChangeResponse\020\320+\0223\n.k_EMsgClientRequest"
  "WebAPIAuthenticateUserNonce\020\321+\022;\n6k_EMsg"
  "ClientRequestWebAPIAuthenticateUserNonce"
  "Response\020\322+\022#\n\036k_EMsgClientPlayerNicknam"
  "eList\020\323+\022$\n\037k_EMsgAMClientSetPlayerNickn"
  "ame\020\324+\022,\n\'k_EMsgAMClientSetPlayerNicknam"
  "eResponse\020\325+\022,\n\'k_EMsgClientGetNumberOfC"
  "urrentPlayersDP\020\330+\0224\n/k_EMsgClientGetNum"
  "berOfCurrentPlayersDPResponse\020\331+\022$\n\037k_EM"
  "sgClientServiceMethodLegacy\020\332+\022,\n\'k_EMsg"
  "ClientServiceMethodLegacyResponse\020\333+\022*\n%"
  "k_EMsgClientFriendUserStatusPublished\020\334+"
  "\022\036\n\031k_EMsgClientCurrentUIMode\020\335+\022-\n(k_EM"
  "sgClientVanityURLChangedNotification\020\336+\022"
  "\"\n\035k_EMsgClientUserNotifications\020\337+\022\022\n\rk"
  "_EMsgBaseDFS\020\340+\022\025\n\020k_EMsgDFSGetFile\020\341+\022\036"
  "\n\031k_EMsgDFSInstallLocalFile\020\342+\022\030\n\023k_EMsg"
  "DFSConnection\020\343+\022\035\n\030k_EMsgDFSConnectionR"
  "eply\020\344+\022\'\n\"k_EMsgClientDFSAuthenticateRe"
  "quest\020\345+\022(\n#k_EMsgClientDFSAuthenticateR"
  "esponse\020\346+\022\036\n\031k_EMsgClientDFSEndSession\020"
  "\347+\022\027\n\022k_EMsgDFSPurgeFile\020\350+\022\027\n\022k_EMsgDFS"
  "RouteFile\020\351+\022\037\n\032k_EMsgDFSGetFileFromServ"
  "er\020\352+\022\036\n\031k_EMsgDFSAcceptedResponse\020\353+\022\035\n"
  "\030k_EMsgDFSRequestPingback\020\354+\022\036\n\031k_EMsgDF"
  "SRecvTransmitFile\020\355+\022\036\n\031k_EMsgDFSSendTra"
  "nsmitFile\020\356+\022\036\n\031k_EMsgDFSRequestPingback"
  "2\020\357+\022\037\n\032k_EMsgDFSResponsePingback2\020\360+\022\"\n"
  "\035k_EMsgClientDFSDownloadStatus\020\361+\022\033\n\026k_E"
  "MsgDFSStartTransfer\020\362+\022\036\n\031k_EMsgDFSTrans"
  "ferComplete\020\363+\022\037\n\032k_EMsgDFSRouteFileResp"
  "onse\020\364+\022&\n!k_EMsgClientNetworkingCertReq"
  "uest\020\365+\022.\n)k_EMsgClientNetworkingCertReq"
  "uestResponse\020\366+\022!\n\034k_EMsgClientChallenge"
  "Request\020\367+\022\"\n\035k_EMsgClientChallengeRespo"
  "nse\020\370+\022#\n\036k_EMsgBadgeCraftedNotification"
  "\020\371+\022,\n\'k_EMsgClientNetworkingMobileCertR"
  "equest\020\372+\0224\n/k_EMsgClientNetworkingMobil"
  "eCertRequestResponse\020\373+\022\022\n\rk_EMsgBaseMDS"
  "\020\250-\022#\n\036k_EMsgMDSGetDepotDecryptionKey\020\264-"
  "\022+\n&k_EMsgMDSGetDepotDecryptionKeyRespon"
  "se\020\265-\022(\n#k_EMsgMDSContentServerConfigReq"
  "uest\020\303-\022!\n\034k_EMsgMDSContentServerConfig\020"
  "\304-\022\036\n\031k_EMsgMDSGetDepotManifest\020\305-\022&\n!k_"
  "EMsgMDSGetDepotManifestResponse\020\306-\022#\n\036k_"
  "EMsgMDSGetDepotManifestChunk\020\307-\022\033\n\026k_EMs"
  "gMDSGetDepotChunk\020\310-\022#\n\036k_EMsgMDSGetDepo"
  "tChunkResponse\020\311-\022 \n\033k_EMsgMDSGetDepotCh"
  "unkChunk\020\312-\022\034\n\027k_EMsgMDSToCSFlushChunk\020\324"
  "-\022\032\n\025k_EMsgMDSMigrateChunk\020\327-\022\"\n\035k_EMsgM"
  "DSMigrateChunkResponse\020\330-\022\037\n\032k_EMsgMDSTo"
  "CSFlushManifest\020\331-\022\021\n\014k_EMsgCSBase\020\2700\022\021\n"
  "\014k_EMsgCSPing\020\2710\022\031\n\024k_EMsgCSPingResponse"
  "\020\2720\022\022\n\rk_EMsgGMSBase\020\2002\022!\n\034k_EMsgGMSGame"
  "ServerReplicate\020\2012\022\037\n\032k_EMsgClientGMSSer"
  "verQuery\020\2032\022\'\n\"k_EMsgGMSClientServerQuer"
  "yResponse\020\2042\022 \n\033k_EMsgAMGMSGameServerUpd"
  "ate\020\2052\022 \n\033k_EMsgAMGMSGameServerRemove\020\2062"
  "\022\036\n\031k_EMsgGameServerOutOfDate\020\2072\022\"\n\035k_EM"
  "sgDeviceAuthorizationBase\020\3442\022,\n\'k_EMsgCl"
  "ientAuthorizeLocalDeviceRequest\020\3452\022-\n(k_"
  "EMsgClientAuthorizeLocalDeviceResponse\020\346"
  "2\022)\n$k_EMsgClientDeauthorizeDeviceReques"
  "t\020\3472\022\"\n\035k_EMsgClientDeauthorizeDevice\020\3502"
  "\022-\n(k_EMsgClientUseLocalDeviceAuthorizat"
  "ions\020\3512\022%\n k_EMsgClientGetAuthorizedDevi"
  "ces\020\3522\022-\n(k_EMsgClientGetAuthorizedDevic"
  "esResponse\020\3532\022*\n%k_EMsgAMNotifySessionDe"
  "viceAuthorized\020\3542\0221\n,k_EMsgClientAuthori"
  "zeLocalDeviceNotification\020\3552\022\022\n\rk_EMsgMM"
  "SBase\020\3103\022\037\n\032k_EMsgClientMMSCreateLobby\020\311"
  "3\022\'\n\"k_EMsgClientMMSCreateLobbyResponse\020"
  "\3123\022\035\n\030k_EMsgClientMMSJoinLobby\020\3133\022%\n k_E"
  "MsgClientMMSJoinLobbyResponse\020\3143\022\036\n\031k_EM"
  "sgClientMMSLeaveLobby\020\3153\022&\n!k_EMsgClient"
  "MMSLeaveLobbyResponse\020\3163\022 \n\033k_EMsgClient"
  "MMSGetLobbyList\020\3173\022(\n#k_EMsgClientMMSGet"
  "LobbyListResponse\020\3203\022 \n\033k_EMsgClientMMSS"
  "etLobbyData\020\3213\022(\n#k_EMsgClientMMSSetLobb"
  "yDataResponse\020\3223\022 \n\033k_EMsgClientMMSGetLo"
  "bbyData\020\3233\022\035\n\030k_EMsgClientMMSLobbyData\020\324"
  "3\022$\n\037k_EMsgClientMMSSendLobbyChatMsg\020\3253\022"
  " \n\033k_EMsgClientMMSLobbyChatMsg\020\3263\022!\n\034k_E"
  "MsgClientMMSSetLobbyOwner\020\3273\022)\n$k_EMsgCl"
  "ientMMSSetLobbyOwnerResponse\020\3303\022&\n!k_EMs"
  "gClientMMSSetLobbyGameServer\020\3313\022&\n!k_EMs"
  "gClientMMSLobbyGameServerSet\020\3323\022#\n\036k_EMs"
  "gClientMMSUserJoinedLobby\020\3333\022!\n\034k_EMsgCl"
  "ientMMSUserLeftLobby\020\3343\022!\n\034k_EMsgClientM"
  "MSInviteToLobby\020\3353\022)\n$k_EMsgClientMMSFlu"
  "shFrenemyListCache\020\3363\0221\n,k_EMsgClientMMS"
  "FlushFrenemyListCacheResponse\020\3373\022\"\n\035k_EM"
  "sgClientMMSSetLobbyLinked\020\3403\022.\n)k_EMsgCl"
  "ientMMSSetRatelimitPolicyOnClient\020\3413\022\"\n\035"
  "k_EMsgClientMMSGetLobbyStatus\020\3423\022*\n%k_EM"
  "sgClientMMSGetLobbyStatusResponse\020\3433\022\032\n\025"
  "k_EMsgMMSGetLobbyList\020\3443\022\"\n\035k_EMsgMMSGet"
  "LobbyListResponse\020\3453\022\030\n\023k_EMsgNonStdMsgB"
  "ase\020\2205\022\035\n\030k_EMsgNonStdMsgMemcached\020\2215\022\036\n"
  "\031k_EMsgNonStdMsgHTTPServer\020\2225\022\036\n\031k_EMsgN"
  "onStdMsgHTTPClient\020\2235\022\036\n\031k_EMsgNonStdMsg"
  "WGResponse\020\2245\022 \n\033k_EMsgNonStdMsgPHPSimul"
  "ator\020\2255\022\031\n\024k_EMsgNonStdMsgChase\020\2265\022\037\n\032k_"
  "EMsgNonStdMsgDFSTransfer\020\2275\022\031\n\024k_EMsgNon"
  "StdMsgTests\020\2305\022\037\n\032k_EMsgNonStdMsgUMQpipe"
  "AAPL\020\2315\022\032\n\025k_EMSgNonStdMsgSyslog\020\2325\022\033\n\026k"
  "_EMsgNonStdMsgLogsink\020\2335\022\"\n\035k_EMsgNonStd"
  "MsgSteam2Emulator\020\2345\022\036\n\031k_EMsgNonStdMsgR"
  "TMPServer\020\2355\022\035\n\030k_EMsgNonStdMsgWebSocket"
  "\020\2365\022\031\n\024k_EMsgNonStdMsgRedis\020\2375\022\022\n\rk_EMsg"
  "UDSBase\020\3306\022%\n k_EMsgClientUDSP2PSessionS"
  "tarted\020\3316\022#\n\036k_EMsgClientUDSP2PSessionEn"
  "ded\020\3326\022\034\n\027k_EMsgUDSRenderUserAuth\020\3336\022$\n\037"
  "k_EMsgUDSRenderUserAuthResponse\020\3346\022\035\n\030k_"
  "EMsgClientInviteToGame\020\3356\022\030\n\023k_EMsgUDSHa"
  "sSession\020\3366\022 \n\033k_EMsgUDSHasSessionRespon"
  "se\020\3376\022\023\n\016k_EMsgMPASBase\020\2747\022\032\n\025k_EMsgMPAS"
  "VacBanReset\020\2757\022\022\n\rk_EMsgKGSBase\020\2408\022\022\n\rk_"
  "EMsgUCMBase\020\2049\022!\n\034k_EMsgClientUCMAddScre"
  "enshot\020\2059\022)\n$k_EMsgClientUCMAddScreensho"
  "tResponse\020\2069\022#\n\036k_EMsgUCMResetCommunityC"
  "ontent\020\2139\022+\n&k_EMsgUCMResetCommunityCont"
  "entResponse\020\2149\022$\n\037k_EMsgClientUCMDeleteS"
  "creenshot\020\2159\022,\n\'k_EMsgClientUCMDeleteScr"
  "eenshotResponse\020\2169\022\037\n\032k_EMsgClientUCMPub"
  "lishFile\020\2179\022\'\n\"k_EMsgClientUCMPublishFil"
  "eResponse\020\2209\022\'\n\"k_EMsgClientUCMDeletePub"
  "lishedFile\020\2239\022/\n*k_EMsgClientUCMDeletePu"
  "blishedFileResponse\020\2249\022\'\n\"k_EMsgClientUC"
  "MUpdatePublishedFile\020\2359\022/\n*k_EMsgClientU"
  "CMUpdatePublishedFileResponse\020\2369\022!\n\034k_EM"
  "sgUCMUpdatePublishedFile\020\2379\022)\n$k_EMsgUCM"
  "UpdatePublishedFileResponse\020\2409\022%\n k_EMsg"
  "UCMUpdatePublishedFileStat\020\2439\022!\n\034k_EMsgU"
  "CMReloadPublishedFile\020\2519\022&\n!k_EMsgUCMRel"
  "oadUserFileListCaches\020\2529\022#\n\036k_EMsgUCMPub"
  "lishedFileReported\020\2539\022%\n k_EMsgUCMPublis"
  "hedFilePreviewAdd\020\2559\022-\n(k_EMsgUCMPublish"
  "edFilePreviewAddResponse\020\2569\022(\n#k_EMsgUCM"
  "PublishedFilePreviewRemove\020\2579\0220\n+k_EMsgU"
  "CMPublishedFilePreviewRemoveResponse\020\2609\022"
  "%\n k_EMsgUCMPublishedFileSubscribed\020\2659\022\'"
  "\n\"k_EMsgUCMPublishedFileUnsubscribed\020\2669\022"
  "\031\n\024k_EMsgUCMPublishFile\020\2679\022!\n\034k_EMsgUCMP"
  "ublishFileResponse\020\2709\022#\n\036k_EMsgUCMPublis"
  "hedFileChildAdd\020\2719\022+\n&k_EMsgUCMPublished"
  "FileChildAddResponse\020\2729\022&\n!k_EMsgUCMPubl"
  "ishedFileChildRemove\020\2739\022.\n)k_EMsgUCMPubl"
  "ishedFileChildRemoveResponse\020\2749\022(\n#k_EMs"
  "gUCMPublishedFileParentChanged\020\2779\022.\n)k_E"
  "MsgClientUCMSetUserPublishedFileAction\020\304"
  "9\0226\n1k_EMsgClientUCMSetUserPublishedFile"
  "ActionResponse\020\3059\0227\n2k_EMsgClientUCMEnum"
  "eratePublishedFilesByUserAction\020\3069\022\?\n:k_"
  "EMsgClientUCMEnumeratePublishedFilesByUs"
  "erActionResponse\020\3079\022$\n\037k_EMsgUCMGetUserS"
  "ubscribedFiles\020\3119\022,\n\'k_EMsgUCMGetUserSub"
  "scribedFilesResponse\020\3129\022#\n\036k_EMsgUCMFixS"
  "tatsPublishedFile\020\3139\022;\n6k_EMsgClientUCME"
  "numerateUserSubscribedFilesWithUpdates\020\322"
  "9\022C\n>k_EMsgClientUCMEnumerateUserSubscri"
  "bedFilesWithUpdatesResponse\020\3239\022)\n$k_EMsg"
  "UCMPublishedFileContentUpdated\020\3249\022(\n#k_E"
  "MsgClientUCMPublishedFileUpdated\020\3259\022\021\n\014k"
  "_EMsgFSBase\020\314:\022#\n\036k_EMsgClientRichPresen"
  "ceUpload\020\315:\022$\n\037k_EMsgClientRichPresenceR"
  "equest\020\316:\022!\n\034k_EMsgClientRichPresenceInf"
  "o\020\317:\022 \n\033k_EMsgFSRichPresenceRequest\020\320:\022!"
  "\n\034k_EMsgFSRichPresenceResponse\020\321:\022\037\n\032k_E"
  "MsgFSComputeFrenematrix\020\322:\022\'\n\"k_EMsgFSCo"
  "mputeFrenematrixResponse\020\323:\022#\n\036k_EMsgFSP"
  "layStatusNotification\020\324:\022 \n\033k_EMsgFSAddO"
  "rRemoveFollower\020\326:\022(\n#k_EMsgFSAddOrRemov"
  "eFollowerResponse\020\327:\022 \n\033k_EMsgFSUpdateFo"
  "llowingList\020\330:\022 \n\033k_EMsgFSCommentNotific"
  "ation\020\331:\022&\n!k_EMsgFSCommentNotificationV"
  "iewed\020\332:\022#\n\036k_EMsgClientFSGetFollowerCou"
  "nt\020\333:\022+\n&k_EMsgClientFSGetFollowerCountR"
  "esponse\020\334:\022!\n\034k_EMsgClientFSGetIsFollowi"
  "ng\020\335:\022)\n$k_EMsgClientFSGetIsFollowingRes"
  "ponse\020\336:\022)\n$k_EMsgClientFSEnumerateFollo"
  "wingList\020\337:\0221\n,k_EMsgClientFSEnumerateFo"
  "llowingListResponse\020\340:\022(\n#k_EMsgFSGetPen"
  "dingNotificationCount\020\341:\0220\n+k_EMsgFSGetP"
  "endingNotificationCountResponse\020\342:\022/\n*k_"
  "EMsgClientChatOfflineMessageNotification"
  "\020\343:\022/\n*k_EMsgClientChatRequestOfflineMes"
  "sageCount\020\344:\022,\n\'k_EMsgClientChatGetFrien"
  "dMessageHistory\020\345:\0224\n/k_EMsgClientChatGe"
  "tFriendMessageHistoryResponse\020\346:\022>\n9k_EM"
  "sgClientChatGetFriendMessageHistoryForOf"
  "flineMessages\020\347:\022(\n#k_EMsgClientFSGetFri"
  "endsSteamLevels\020\350:\0220\n+k_EMsgClientFSGetF"
  "riendsSteamLevelsResponse\020\351:\022\036\n\031k_EMsgAM"
  "RequestFriendData\020\352:\022\024\n\017k_EMsgDRMRange2\020"
  "\260;\022,\n\'k_EMsgCEGVersionSetEnableDisableRe"
  "quest\020\260;\022-\n(k_EMsgCEGVersionSetEnableDis"
  "ableResponse\020\261;\022#\n\036k_EMsgCEGPropStatusDR"
  "MSRequest\020\262;\022$\n\037k_EMsgCEGPropStatusDRMSR"
  "esponse\020\263;\022\'\n\"k_EMsgCEGWhackFailureRepor"
  "tRequest\020\264;\022(\n#k_EMsgCEGWhackFailureRepo"
  "rtResponse\020\265;\022\036\n\031k_EMsgDRMSFetchVersionS"
  "et\020\266;\022&\n!k_EMsgDRMSFetchVersionSetRespon"
  "se\020\267;\022\023\n\016k_EMsgEconBase\020\224<\022+\n&k_EMsgEcon"
  "Trading_InitiateTradeRequest\020\225<\022,\n\'k_EMs"
  "gEconTrading_InitiateTradeProposed\020\226<\022,\n"
  "\'k_EMsgEconTrading_InitiateTradeResponse"
  "\020\227<\022*\n%k_EMsgEconTrading_InitiateTradeRe"
  "sult\020\230<\022#\n\036k_EMsgEconTrading_StartSessio"
  "n\020\231<\022)\n$k_EMsgEconTrading_CancelTradeReq"
  "uest\020\232<\022\"\n\035k_EMsgEconFlushInventoryCache"
  "\020\233<\022*\n%k_EMsgEconFlushInventoryCacheResp"
  "onse\020\234<\022&\n!k_EMsgEconCDKeyProcessTransac"
  "tion\020\237<\022.\n)k_EMsgEconCDKeyProcessTransac"
  "tionResponse\020\240<\022\033\n\026k_EMsgEconGetErrorLog"
  "s\020\241<\022#\n\036k_EMsgEconGetErrorLogsResponse\020\242"
  "<\022\022\n\rk_EMsgRMRange\020\370<\022\034\n\027k_EMsgRMTestVer"
  "isignOTP\020\370<\022$\n\037k_EMsgRMTestVerisignOTPRe"
  "sponse\020\371<\022 \n\033k_EMsgRMDeleteMemcachedKeys"
  "\020\373<\022\031\n\024k_EMsgRMRemoteInvoke\020\374<\022\031\n\024k_EMsg"
  "BadLoginIPList\020\375<\022\037\n\032k_EMsgRMMsgTraceAdd"
  "Trigger\020\376<\022\"\n\035k_EMsgRMMsgTraceRemoveTrig"
  "ger\020\377<\022\032\n\025k_EMsgRMMsgTraceEvent\020\200=\022\022\n\rk_"
  "EMsgUGSBase\020\334=\022\037\n\032k_EMsgUGSUpdateGlobalS"
  "tats\020\334=\022\"\n\035k_EMsgClientUGSGetGlobalStats"
  "\020\335=\022*\n%k_EMsgClientUGSGetGlobalStatsResp"
  "onse\020\336=\022\024\n\017k_EMsgStoreBase\020\300>\022\022\n\rk_EMsgU"
  "MQBase\020\244\?\022\032\n\025k_EMsgUMQLogonRequest\020\244\?\022\033\n"
  "\026k_EMsgUMQLogonResponse\020\245\?\022\033\n\026k_EMsgUMQL"
  "ogoffRequest\020\246\?\022\034\n\027k_EMsgUMQLogoffRespon"
  "se\020\247\?\022\035\n\030k_EMsgUMQSendChatMessage\020\250\?\022!\n\034"
  "k_EMsgUMQIncomingChatMessage\020\251\?\022\022\n\rk_EMs"
  "gUMQPoll\020\252\?\022\031\n\024k_EMsgUMQPollResults\020\253\?\022 "
  "\n\033k_EMsgUMQ2AM_ClientMsgBatch\020\254\?\022\027\n\022k_EM"
  "sgWorkshopBase\020\210@\022\025\n\020k_EMsgWebAPIBase\020\354@"
  "\022$\n\037k_EMsgWebAPIValidateOAuth2Token\020\354@\022,"
  "\n\'k_EMsgWebAPIValidateOAuth2TokenRespons"
  "e\020\355@\022%\n k_EMsgWebAPIRegisterGCInterfaces"
  "\020\357@\022+\n&k_EMsgWebAPIInvalidateOAuthClient"
  "Cache\020\360@\022*\n%k_EMsgWebAPIInvalidateOAuthT"
  "okenCache\020\361@\022\033\n\026k_EMsgWebAPISetSecrets\020\362"
  "@\022\027\n\022k_EMsgBackpackBase\020\320A\022 \n\033k_EMsgBack"
  "packAddToCurrency\020\321A\022(\n#k_EMsgBackpackAd"
  "dToCurrencyResponse\020\322A\022\022\n\rk_EMsgCREBase\020"
  "\264B\022\035\n\030k_EMsgCREItemVoteSummary\020\267B\022%\n k_E"
  "MsgCREItemVoteSummaryResponse\020\270B\022)\n$k_EM"
  "sgCREUpdateUserPublishedItemVote\020\273B\0221\n,k"
  "_EMsgCREUpdateUserPublishedItemVoteRespo"
  "nse\020\274B\022-\n(k_EMsgCREGetUserPublishedItemV"
  "oteDetails\020\275B\0225\n0k_EMsgCREGetUserPublish"
  "edItemVoteDetailsResponse\020\276B\022\026\n\021k_EMsgSe"
  "cretsBase\020\230C\022\'\n\"k_EMsgSecretsRequestCred"
  "entialPair\020\230C\022(\n#k_EMsgSecretsCredential"
  "PairResponse\020\231C\022\031\n\024k_EMsgBoxMonitorBase\020"
  "\374C\022\"\n\035k_EMsgBoxMonitorReportRequest\020\374C\022#"
  "\n\036k_EMsgBoxMonitorReportResponse\020\375C\022\026\n\021k"
  "_EMsgLogsinkBase\020\340D\022\035\n\030k_EMsgLogsinkWrit"
  "eReport\020\340D\022\023\n\016k_EMsgPICSBase\020\304E\022(\n#k_EMs"
  "gClientPICSChangesSinceRequest\020\305E\022)\n$k_E"
  "MsgClientPICSChangesSinceResponse\020\306E\022\'\n\""
  "k_EMsgClientPICSProductInfoRequest\020\307E\022(\n"
  "#k_EMsgClientPICSProductInfoResponse\020\310E\022"
  "\'\n\"k_EMsgClientPICSAccessTokenRequest\020\311E"
  "\022(\n#k_EMsgClientPICSAccessTokenResponse\020"
  "\312E\022\030\n\023k_EMsgWorkerProcess\020\250F\022#\n\036k_EMsgWo"
  "rkerProcessPingRequest\020\250F\022$\n\037k_EMsgWorke"
  "rProcessPingResponse\020\251F\022 \n\033k_EMsgWorkerP"
  "rocessShutdown\020\252F\022\033\n\026k_EMsgDRMWorkerProc"
  "ess\020\214G\022%\n k_EMsgDRMWorkerProcessDRMAndSi"
  "gn\020\214G\022-\n(k_EMsgDRMWorkerProcessDRMAndSig"
  "nResponse\020\215G\0220\n+k_EMsgDRMWorkerProcessSt"
  "eamworksInfoRequest\020\216G\0221\n,k_EMsgDRMWorke"
  "rProcessSteamworksInfoResponse\020\217G\022/\n*k_E"
  "MsgDRMWorkerProcessInstallDRMDLLRequest\020"
  "\220G\0220\n+k_EMsgDRMWorkerProcessInstallDRMDL"
  "LResponse\020\221G\0220\n+k_EMsgDRMWorkerProcessSe"
  "cretIdStringRequest\020\222G\0221\n,k_EMsgDRMWorke"
  "rProcessSecretIdStringResponse\020\223G\0227\n2k_E"
  "MsgDRMWorkerProcessInstallProcessedFiles"
  "Request\020\226G\0228\n3k_EMsgDRMWorkerProcessInst"
  "allProcessedFilesResponse\020\227G\022-\n(k_EMsgDR"
  "MWorkerProcessExamineBlobRequest\020\230G\022.\n)k"
  "_EMsgDRMWorkerProcessExamineBlobResponse"
  "\020\231G\0220\n+k_EMsgDRMWorkerProcessDescribeSec"
  "retRequest\020\232G\0221\n,k_EMsgDRMWorkerProcessD"
  "escribeSecretResponse\020\233G\0222\n-k_EMsgDRMWor"
  "kerProcessBackfillOriginalRequest\020\234G\0223\n."
  "k_EMsgDRMWorkerProcessBackfillOriginalRe"
  "sponse\020\235G\0220\n+k_EMsgDRMWorkerProcessValid"
  "ateDRMDLLRequest\020\236G\0221\n,k_EMsgDRMWorkerPr"
  "ocessValidateDRMDLLResponse\020\237G\022.\n)k_EMsg"
  "DRMWorkerProcessValidateFileRequest\020\240G\022/"
  "\n*k_EMsgDRMWorkerProcessValidateFileResp"
  "onse\020\241G\0221\n,k_EMsgDRMWorkerProcessSplitAn"
  "dInstallRequest\020\242G\0222\n-k_EMsgDRMWorkerPro"
  "cessSplitAndInstallResponse\020\243G\022)\n$k_EMsg"
  "DRMWorkerProcessGetBlobRequest\020\244G\022*\n%k_E"
  "MsgDRMWorkerProcessGetBlobResponse\020\245G\022/\n"
  "*k_EMsgDRMWorkerProcessEvaluateCrashRequ"
  "est\020\246G\0220\n+k_EMsgDRMWorkerProcessEvaluate"
  "CrashResponse\020\247G\022-\n(k_EMsgDRMWorkerProce"
  "ssAnalyzeFileRequest\020\250G\022.\n)k_EMsgDRMWork"
  "erProcessAnalyzeFileResponse\020\251G\022,\n\'k_EMs"
  "gDRMWorkerProcessUnpackBlobRequest\020\252G\022-\n"
  "(k_EMsgDRMWorkerProcessUnpackBlobRespons"
  "e\020\253G\022,\n\'k_EMsgDRMWorkerProcessInstallAll"
  "Request\020\254G\022-\n(k_EMsgDRMWorkerProcessInst"
  "allAllResponse\020\255G\022\034\n\027k_EMsgTestWorkerPro"
  "cess\020\360G\0223\n.k_EMsgTestWorkerProcessLoadUn"
  "loadModuleRequest\020\360G\0224\n/k_EMsgTestWorker"
  "ProcessLoadUnloadModuleResponse\020\361G\0224\n/k_"
  "EMsgTestWorkerProcessServiceModuleCallRe"
  "quest\020\362G\0225\n0k_EMsgTestWorkerProcessServi"
  "ceModuleCallResponse\020\363G\022\032\n\025k_EMsgQuestSe"
  "rverBase\020\324H\022 \n\033k_EMsgClientGetEmoticonLi"
  "st\020\362H\022\035\n\030k_EMsgClientEmoticonList\020\363H\022\022\n\r"
  "k_EMsgSLCBase\020\270I\022\037\n\032k_EMsgSLCUserSession"
  "Status\020\270I\022&\n!k_EMsgSLCRequestUserSession"
  "Status\020\271I\022&\n!k_EMsgSLCSharedLicensesLock"
  "Status\020\272I\022(\n#k_EMsgClientSharedLibraryLo"
  "ckStatus\020\275I\022)\n$k_EMsgClientSharedLibrary"
  "StopPlaying\020\276I\022!\n\034k_EMsgSLCOwnerLibraryC"
  "hanged\020\277I\022\"\n\035k_EMsgSLCSharedLibraryChang"
  "ed\020\300I\022\033\n\026k_EMsgRemoteClientBase\020\234J\022$\n\037k_"
  "EMsgRemoteClientAuth_OBSOLETE\020\234J\022,\n\'k_EM"
  "sgRemoteClientAuthResponse_OBSOLETE\020\235J\022 "
  "\n\033k_EMsgRemoteClientAppStatus\020\236J\022\"\n\035k_EM"
  "sgRemoteClientStartStream\020\237J\022*\n%k_EMsgRe"
  "moteClientStartStreamResponse\020\240J\022\033\n\026k_EM"
  "sgRemoteClientPing\020\241J\022#\n\036k_EMsgRemoteCli"
  "entPingResponse\020\242J\022\033\n\026k_EMsgClientUnlock"
  "H264\020\243J\022#\n\036k_EMsgClientUnlockH264Respons"
  "e\020\244J\022!\n\034k_EMsgRemoteClientAcceptEULA\020\245J\022"
  "*\n%k_EMsgRemoteClientGetControllerConfig"
  "\020\246J\0222\n-k_EMsgRemoteClientGetControllerCo"
  "nfigResponse\020\247J\022\'\n\"k_EMsgRemoteClientStr"
  "eamingEnabled\020\250J\022$\n\037k_EMsgClientUnlockHE"
  "VC_OBSOLETE\020\251J\022,\n\'k_EMsgClientUnlockHEVC"
  "Response_OBSOLETE\020\252J\022$\n\037k_EMsgRemoteClie"
  "ntStatusRequest\020\253J\022%\n k_EMsgRemoteClient"
  "StatusResponse\020\254J\022\'\n\"k_EMsgClientConcurr"
  "entSessionsBase\020\200K\022$\n\037k_EMsgClientPlayin"
  "gSessionState\020\200K\022#\n\036k_EMsgClientKickPlay"
  "ingSession\020\201K\022\036\n\031k_EMsgClientBroadcastBa"
  "se\020\344K\022\036\n\031k_EMsgClientBroadcastInit\020\344K\022 \n"
  "\033k_EMsgClientBroadcastFrames\020\345K\022$\n\037k_EMs"
  "gClientBroadcastDisconnect\020\346K\022&\n!k_EMsgC"
  "lientBroadcastUploadConfig\020\350K\022\026\n\021k_EMsgB"
  "aseClient3\020\310L\022&\n!k_EMsgClientVoiceCallPr"
  "eAuthorize\020\310L\022.\n)k_EMsgClientVoiceCallPr"
  "eAuthorizeResponse\020\311L\022\'\n\"k_EMsgClientSer"
  "verTimestampRequest\020\312L\022(\n#k_EMsgClientSe"
  "rverTimestampResponse\020\313L\022/\n*k_EMsgServic"
  "eMethodCallFromClientNonAuthed\020\314L\022\026\n\021k_E"
  "MsgClientHello\020\315L\022)\n$k_EMsgClientEnableO"
  "rDisableDownloads\020\316L\0221\n,k_EMsgClientEnab"
  "leOrDisableDownloadsResponse\020\317L\022!\n\034k_EMs"
  "gClientFeatureGroupInfo\020\320L\022\033\n\026k_EMsgClie"
  "ntLANP2PBase\020\254M\022#\n\036k_EMsgClientLANP2PReq"
  "uestChunk\020\254M\022+\n&k_EMsgClientLANP2PReques"
  "tChunkResponse\020\255M\022!\n\034k_EMsgClientPeerChu"
  "nkRequest\020\256M\022\"\n\035k_EMsgClientPeerChunkRes"
  "ponse\020\257M\022\032\n\025k_EMsgClientLANP2PMax\020\217N\022\035\n\030"
  "k_EMsgBaseWatchdogServer\020\220N\022\031\n\024k_EMsgNot"
  "ifyWatchdog\020\220N\022 \n\033k_EMsgClientSiteLicens"
  "eBase\020\364N\0220\n+k_EMsgClientSiteLicenseSiteI"
  "nfoNotification\020\364N\022$\n\037k_EMsgClientSiteLi"
  "censeCheckout\020\365N\022,\n\'k_EMsgClientSiteLice"
  "nseCheckoutResponse\020\366N\022-\n(k_EMsgClientSi"
  "teLicenseGetAvailableSeats\020\367N\0225\n0k_EMsgC"
  "lientSiteLicenseGetAvailableSeatsRespons"
  "e\020\370N\022/\n*k_EMsgClientSiteLicenseGetConten"
  "tCacheInfo\020\371N\0227\n2k_EMsgClientSiteLicense"
  "GetContentCacheInfoResponse\020\372N\022\031\n\024k_EMsg"
  "BaseChatServer\020\340]\0220\n+k_EMsgChatServerGet"
  "PendingNotificationCount\020\340]\0228\n3k_EMsgCha"
  "tServerGetPendingNotificationCountRespon"
  "se\020\341]\022\033\n\026k_EMsgBaseSecretServer\020\304^\022\036\n\031k_"
  "EMsgServerSecretChanged\020\304^\022\021\n\014k_EMsgBase"
  "WG\020\250_\022$\n\037k_EMsgWGConnectionProtocolError"
  "\020\250_\022(\n#k_EMsgWGConnectionValidateUserTok"
  "en\020\251_\0220\n+k_EMsgWGConnectionValidateUserT"
  "okenResponse\020\252_\022&\n!k_EMsgWGConnectionLeg"
  "acyWGRequest\020\253_\022\'\n\"k_EMsgWGConnectionLeg"
  "acyWGResponse\020\254_\032\002\020\001*\317\004\n\027EClientPersonaS"
  "tateFlag\022#\n\037k_EClientPersonaStateFlagSta"
  "tus\020\001\022\'\n#k_EClientPersonaStateFlagPlayer"
  "Name\020\002\022&\n\"k_EClientPersonaStateFlagQuery"
  "Port\020\004\022%\n!k_EClientPersonaStateFlagSourc"
  "eID\020\010\022%\n!k_EClientPersonaStateFlagPresen"
  "ce\020\020\022%\n!k_EClientPersonaStateFlagLastSee"
  "n\020@\022*\n%k_EClientPersonaStateFlagUserClan"
  "Rank\020\200\001\022\'\n\"k_EClientPersonaStateGameExtr"
  "aInfo\020\200\002\022&\n!k_EClientPersonaStateGameDat"
  "aBlob\020\200\004\022&\n!k_EClientPersonaStateFlagCla"
  "nData\020\200\010\022&\n!k_EClientPersonaStateFlagFac"
  "ebook\020\200\020\022*\n%k_EClientPersonaStateFlagRic"
  "hPresence\020\200 \022\'\n\"k_EClientPersonaStateFla"
  "gBroadcast\020\200@\022\'\n!k_EClientPersonaStateFl"
  "agWatching\020\200\200\001*\271\001\n\024EMsgClanAccountFlags\022"
  "\037\n\033k_EMsgClanAccountFlagPublic\020\001\022\036\n\032k_EM"
  "sgClanAccountFlagLarge\020\002\022\037\n\033k_EMsgClanAc"
  "countFlagLocked\020\004\022!\n\035k_EMsgClanAccountFl"
  "agDisabled\020\010\022\034\n\030k_EMsgClanAccountFlagOGG"
  "\020\020*\220\003\n\021ESteamReviewScore\022.\n*k_ESteamRevi"
  "ewScore_OverwhelminglyPositive\020\t\022$\n k_ES"
  "teamReviewScore_VeryPositive\020\010\022 \n\034k_ESte"
  "amReviewScore_Positive\020\007\022&\n\"k_ESteamRevi"
  "ewScore_MostlyPositive\020\006\022\035\n\031k_ESteamRevi"
  "ewScore_Mixed\020\005\022&\n\"k_ESteamReviewScore_M"
  "ostlyNegative\020\004\022 \n\034k_ESteamReviewScore_N"
  "egative\020\003\022$\n k_ESteamReviewScore_VeryNeg"
  "ative\020\002\022.\n*k_ESteamReviewScore_Overwhelm"
  "inglyNegative\020\001\022\034\n\030k_ESteamReviewScore_N"
  "one\020\000*\275\001\n\023ECodecUsagePlatform\022 \n\034k_ECode"
  "cUsagePlatformUnknown\020\000\022 \n\034k_ECodecUsage"
  "PlatformWindows\020\001\022\036\n\032k_ECodecUsagePlatfo"
  "rmMacOS\020\002\022\036\n\032k_ECodecUsagePlatformLinux\020"
  "\003\022\"\n\036k_ECodecUsagePlatformSteamDeck\020\004*\235\001"
  "\n\021ECodecUsageReason\022\036\n\032k_ECodecUsageReas"
  "onUnknown\020\000\022!\n\035k_ECodecUsageReasonRemote"
  "Play\020\001\022#\n\037k_ECodecUsageReasonBroadcastin"
  "g\020\002\022 \n\034k_ECodecUsageReasonGameVideo\020\003B\005H"
  "\001\200\001\000"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_enums_5fclientserver_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_enums_5fclientserver_2eproto = {
  false, false, 54524, descriptor_table_protodef_enums_5fclientserver_2eproto, "enums_clientserver.proto", 
  &descriptor_table_enums_5fclientserver_2eproto_once, nullptr, 0, 0,
  schemas, file_default_instances, TableStruct_enums_5fclientserver_2eproto::offsets,
  nullptr, file_level_enum_descriptors_enums_5fclientserver_2eproto, file_level_service_descriptors_enums_5fclientserver_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_enums_5fclientserver_2eproto_getter() {
  return &descriptor_table_enums_5fclientserver_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_enums_5fclientserver_2eproto(&descriptor_table_enums_5fclientserver_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsg_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[0];
}
bool EMsg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 100:
    case 113:
    case 115:
    case 120:
    case 121:
    case 123:
    case 124:
    case 126:
    case 127:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 215:
    case 221:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 300:
    case 301:
    case 307:
    case 308:
    case 309:
    case 316:
    case 317:
    case 318:
    case 320:
    case 321:
    case 322:
    case 323:
    case 324:
    case 325:
    case 326:
    case 327:
    case 329:
    case 330:
    case 331:
    case 332:
    case 334:
    case 335:
    case 336:
    case 337:
    case 338:
    case 339:
    case 340:
    case 400:
    case 402:
    case 403:
    case 405:
    case 406:
    case 423:
    case 424:
    case 425:
    case 426:
    case 429:
    case 430:
    case 431:
    case 432:
    case 433:
    case 500:
    case 504:
    case 505:
    case 508:
    case 509:
    case 510:
    case 511:
    case 512:
    case 513:
    case 514:
    case 515:
    case 516:
    case 517:
    case 518:
    case 519:
    case 522:
    case 523:
    case 524:
    case 525:
    case 526:
    case 527:
    case 528:
    case 529:
    case 530:
    case 531:
    case 532:
    case 533:
    case 534:
    case 535:
    case 536:
    case 537:
    case 538:
    case 541:
    case 542:
    case 550:
    case 551:
    case 552:
    case 553:
    case 554:
    case 555:
    case 560:
    case 561:
    case 563:
    case 566:
    case 567:
    case 568:
    case 569:
    case 570:
    case 571:
    case 572:
    case 573:
    case 574:
    case 575:
    case 576:
    case 577:
    case 578:
    case 579:
    case 580:
    case 581:
    case 582:
    case 583:
    case 584:
    case 586:
    case 587:
    case 588:
    case 589:
    case 590:
    case 591:
    case 592:
    case 593:
    case 596:
    case 597:
    case 598:
    case 600:
    case 601:
    case 602:
    case 604:
    case 605:
    case 606:
    case 607:
    case 608:
    case 609:
    case 610:
    case 611:
    case 625:
    case 628:
    case 629:
    case 630:
    case 631:
    case 633:
    case 634:
    case 635:
    case 636:
    case 637:
    case 638:
    case 639:
    case 640:
    case 641:
    case 642:
    case 643:
    case 644:
    case 645:
    case 646:
    case 650:
    case 700:
    case 701:
    case 702:
    case 703:
    case 704:
    case 705:
    case 706:
    case 707:
    case 710:
    case 712:
    case 714:
    case 715:
    case 716:
    case 717:
    case 718:
    case 719:
    case 720:
    case 721:
    case 726:
    case 727:
    case 728:
    case 730:
    case 731:
    case 732:
    case 736:
    case 738:
    case 740:
    case 741:
    case 742:
    case 743:
    case 744:
    case 745:
    case 746:
    case 747:
    case 751:
    case 755:
    case 756:
    case 757:
    case 758:
    case 759:
    case 760:
    case 763:
    case 764:
    case 765:
    case 766:
    case 767:
    case 768:
    case 771:
    case 773:
    case 774:
    case 779:
    case 780:
    case 782:
    case 783:
    case 784:
    case 785:
    case 791:
    case 792:
    case 796:
    case 797:
    case 798:
    case 799:
    case 800:
    case 801:
    case 802:
    case 803:
    case 805:
    case 807:
    case 808:
    case 809:
    case 810:
    case 813:
    case 814:
    case 815:
    case 818:
    case 819:
    case 820:
    case 821:
    case 822:
    case 830:
    case 831:
    case 832:
    case 839:
    case 842:
    case 845:
    case 846:
    case 848:
    case 849:
    case 850:
    case 851:
    case 855:
    case 856:
    case 857:
    case 858:
    case 860:
    case 880:
    case 896:
    case 897:
    case 900:
    case 901:
    case 903:
    case 905:
    case 906:
    case 907:
    case 908:
    case 909:
    case 910:
    case 911:
    case 918:
    case 919:
    case 920:
    case 921:
    case 922:
    case 923:
    case 936:
    case 937:
    case 938:
    case 939:
    case 940:
    case 941:
    case 1000:
    case 1004:
    case 1005:
    case 1006:
    case 1010:
    case 1019:
    case 1020:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1100:
    case 1101:
    case 1102:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1114:
    case 1115:
    case 1116:
    case 1117:
    case 1118:
    case 1119:
    case 1120:
    case 1121:
    case 1122:
    case 1123:
    case 1124:
    case 1125:
    case 1126:
    case 1127:
    case 1128:
    case 1129:
    case 1130:
    case 1131:
    case 1132:
    case 1133:
    case 1134:
    case 1200:
    case 1201:
    case 1202:
    case 1203:
    case 1204:
    case 1300:
    case 1301:
    case 1302:
    case 1303:
    case 1304:
    case 1305:
    case 1400:
    case 1401:
    case 1402:
    case 1403:
    case 1404:
    case 1406:
    case 1408:
    case 1409:
    case 1410:
    case 1411:
    case 1417:
    case 1418:
    case 1421:
    case 1422:
    case 1425:
    case 1426:
    case 1427:
    case 1433:
    case 1434:
    case 1435:
    case 1437:
    case 1438:
    case 1440:
    case 1441:
    case 1445:
    case 1446:
    case 1448:
    case 1449:
    case 1450:
    case 1451:
    case 1452:
    case 1453:
    case 1454:
    case 1455:
    case 1456:
    case 1457:
    case 1458:
    case 1459:
    case 1460:
    case 1461:
    case 1462:
    case 1463:
    case 1464:
    case 1465:
    case 1468:
    case 1469:
    case 1470:
    case 1471:
    case 1472:
    case 1473:
    case 1474:
    case 1475:
    case 1476:
    case 1477:
    case 1478:
    case 1479:
    case 1480:
    case 1481:
    case 1482:
    case 1483:
    case 1484:
    case 1485:
    case 1486:
    case 1487:
    case 1494:
    case 1495:
    case 1496:
    case 1497:
    case 1498:
    case 1499:
    case 1500:
    case 1501:
    case 1502:
    case 1503:
    case 1504:
    case 1505:
    case 1506:
    case 1507:
    case 1508:
    case 1509:
    case 1510:
    case 1511:
    case 1512:
    case 1513:
    case 1514:
    case 1515:
    case 1516:
    case 1517:
    case 1518:
    case 1519:
    case 1600:
    case 1601:
    case 1603:
    case 1604:
    case 1607:
    case 1608:
    case 1612:
    case 1615:
    case 1616:
    case 1617:
    case 1620:
    case 1621:
    case 1622:
    case 1623:
    case 1624:
    case 1628:
    case 1629:
    case 1631:
    case 1700:
    case 1701:
    case 1702:
    case 1703:
    case 1704:
    case 1705:
    case 2200:
    case 2203:
    case 2206:
    case 2207:
    case 2208:
    case 2209:
    case 2210:
    case 2212:
    case 2213:
    case 2216:
    case 2217:
    case 2218:
    case 2219:
    case 2220:
    case 2221:
    case 2222:
    case 2223:
    case 2224:
    case 2225:
    case 2226:
    case 2227:
    case 2228:
    case 2229:
    case 2230:
    case 2231:
    case 2232:
    case 2233:
    case 2234:
    case 2235:
    case 2236:
    case 2237:
    case 2238:
    case 2239:
    case 2240:
    case 2241:
    case 2242:
    case 2243:
    case 2244:
    case 2245:
    case 2246:
    case 2247:
    case 2500:
    case 2502:
    case 2900:
    case 2902:
    case 2903:
    case 2905:
    case 2906:
    case 2907:
    case 2908:
    case 3000:
    case 3001:
    case 3002:
    case 3100:
    case 3150:
    case 3161:
    case 3162:
    case 3200:
    case 3201:
    case 3202:
    case 3203:
    case 3204:
    case 3205:
    case 3206:
    case 3207:
    case 3208:
    case 3209:
    case 3210:
    case 3211:
    case 3212:
    case 3213:
    case 3214:
    case 3400:
    case 3401:
    case 3402:
    case 3403:
    case 3404:
    case 3406:
    case 3600:
    case 3629:
    case 3630:
    case 4000:
    case 4001:
    case 4002:
    case 4005:
    case 4006:
    case 4007:
    case 4008:
    case 4009:
    case 4010:
    case 4011:
    case 4012:
    case 4013:
    case 4015:
    case 4021:
    case 4022:
    case 4023:
    case 4024:
    case 4025:
    case 4026:
    case 4039:
    case 4040:
    case 4041:
    case 4042:
    case 4043:
    case 4044:
    case 4045:
    case 4046:
    case 4047:
    case 4050:
    case 4051:
    case 4052:
    case 4053:
    case 4054:
    case 4055:
    case 4056:
    case 4057:
    case 4059:
    case 4060:
    case 4061:
    case 4062:
    case 4064:
    case 4065:
    case 4066:
    case 4067:
    case 4068:
    case 4073:
    case 4074:
    case 4075:
    case 4076:
    case 4077:
    case 4079:
    case 4080:
    case 4081:
    case 4082:
    case 4083:
    case 4084:
    case 4085:
    case 4086:
    case 4087:
    case 4090:
    case 4091:
    case 4092:
    case 4095:
    case 4096:
    case 4097:
    case 4098:
    case 4099:
    case 4100:
    case 4101:
    case 4102:
    case 4103:
    case 4104:
    case 4105:
    case 4106:
    case 4107:
    case 4108:
    case 4110:
    case 4111:
    case 4112:
    case 4113:
    case 4114:
    case 4115:
    case 4116:
    case 4117:
    case 4118:
    case 4119:
    case 4120:
    case 4121:
    case 4122:
    case 4123:
    case 4124:
    case 4125:
    case 4126:
    case 4127:
    case 4128:
    case 4140:
    case 4143:
    case 4144:
    case 4145:
    case 4147:
    case 4148:
    case 4149:
    case 4152:
    case 4153:
    case 4155:
    case 4158:
    case 4159:
    case 4160:
    case 4161:
    case 4162:
    case 4163:
    case 4164:
    case 4165:
    case 4166:
    case 4172:
    case 4173:
    case 4174:
    case 4175:
    case 4184:
    case 4185:
    case 4190:
    case 4191:
    case 4194:
    case 4195:
    case 4197:
    case 4198:
    case 4199:
    case 4206:
    case 4209:
    case 4210:
    case 4211:
    case 4213:
    case 4219:
    case 4220:
    case 4224:
    case 4231:
    case 4232:
    case 4236:
    case 4241:
    case 4242:
    case 4244:
    case 4245:
    case 4246:
    case 4247:
    case 4248:
    case 4249:
    case 4250:
    case 4251:
    case 4252:
    case 4255:
    case 4256:
    case 4258:
    case 4260:
    case 4262:
    case 4264:
    case 4265:
    case 4266:
    case 4267:
    case 4269:
    case 4270:
    case 4271:
    case 4272:
    case 4278:
    case 4279:
    case 4280:
    case 4281:
    case 4282:
    case 4283:
    case 4284:
    case 4285:
    case 4286:
    case 4287:
    case 4288:
    case 4289:
    case 4290:
    case 4294:
    case 4295:
    case 4298:
    case 4299:
    case 4300:
    case 4301:
    case 4302:
    case 4305:
    case 4307:
    case 4308:
    case 4309:
    case 4310:
    case 4311:
    case 4312:
    case 4313:
    case 4314:
    case 4315:
    case 4316:
    case 4317:
    case 4320:
    case 4321:
    case 4322:
    case 4323:
    case 4324:
    case 4325:
    case 4326:
    case 4327:
    case 4328:
    case 4329:
    case 4330:
    case 4331:
    case 4332:
    case 4333:
    case 4334:
    case 4335:
    case 4336:
    case 4337:
    case 4338:
    case 4339:
    case 4340:
    case 4341:
    case 4342:
    case 4344:
    case 4345:
    case 4346:
    case 4347:
    case 4348:
    case 4349:
    case 4350:
    case 4351:
    case 4352:
    case 4353:
    case 4354:
    case 4355:
    case 4356:
    case 4357:
    case 4358:
    case 4359:
    case 4360:
    case 4361:
    case 4362:
    case 4365:
    case 4366:
    case 4367:
    case 4368:
    case 4372:
    case 4373:
    case 4374:
    case 4375:
    case 4376:
    case 4377:
    case 4380:
    case 4381:
    case 4383:
    case 4384:
    case 4385:
    case 4386:
    case 4389:
    case 4390:
    case 4391:
    case 4392:
    case 4393:
    case 4394:
    case 4395:
    case 4396:
    case 4397:
    case 4398:
    case 4399:
    case 4400:
    case 4401:
    case 4402:
    case 4403:
    case 4404:
    case 4405:
    case 4406:
    case 4407:
    case 4408:
    case 4409:
    case 4410:
    case 4411:
    case 4412:
    case 4413:
    case 4414:
    case 4415:
    case 4416:
    case 4417:
    case 4418:
    case 4419:
    case 4420:
    case 4421:
    case 4422:
    case 4423:
    case 4424:
    case 4425:
    case 5000:
    case 5003:
    case 5004:
    case 5009:
    case 5010:
    case 5011:
    case 5012:
    case 5200:
    case 5202:
    case 5203:
    case 5204:
    case 5205:
    case 5206:
    case 5207:
    case 5210:
    case 5211:
    case 5212:
    case 5213:
    case 5214:
    case 5215:
    case 5216:
    case 5217:
    case 5218:
    case 5219:
    case 5220:
    case 5226:
    case 5227:
    case 5228:
    case 5229:
    case 5230:
    case 5231:
    case 5232:
    case 5233:
    case 5234:
    case 5235:
    case 5236:
    case 5237:
    case 5238:
    case 5239:
    case 5240:
    case 5241:
    case 5242:
    case 5243:
    case 5244:
    case 5245:
    case 5246:
    case 5247:
    case 5248:
    case 5249:
    case 5250:
    case 5251:
    case 5252:
    case 5253:
    case 5254:
    case 5400:
    case 5401:
    case 5402:
    case 5403:
    case 5404:
    case 5405:
    case 5407:
    case 5408:
    case 5409:
    case 5410:
    case 5411:
    case 5412:
    case 5413:
    case 5414:
    case 5415:
    case 5416:
    case 5417:
    case 5418:
    case 5419:
    case 5426:
    case 5427:
    case 5428:
    case 5429:
    case 5430:
    case 5431:
    case 5432:
    case 5433:
    case 5434:
    case 5435:
    case 5438:
    case 5439:
    case 5443:
    case 5444:
    case 5445:
    case 5446:
    case 5448:
    case 5449:
    case 5450:
    case 5451:
    case 5452:
    case 5453:
    case 5456:
    case 5457:
    case 5458:
    case 5459:
    case 5460:
    case 5461:
    case 5463:
    case 5464:
    case 5465:
    case 5466:
    case 5467:
    case 5468:
    case 5469:
    case 5470:
    case 5480:
    case 5481:
    case 5482:
    case 5483:
    case 5484:
    case 5485:
    case 5486:
    case 5487:
    case 5488:
    case 5489:
    case 5490:
    case 5491:
    case 5492:
    case 5493:
    case 5494:
    case 5495:
    case 5496:
    case 5497:
    case 5498:
    case 5500:
    case 5501:
    case 5502:
    case 5503:
    case 5504:
    case 5505:
    case 5506:
    case 5508:
    case 5509:
    case 5511:
    case 5512:
    case 5514:
    case 5515:
    case 5516:
    case 5517:
    case 5518:
    case 5519:
    case 5520:
    case 5521:
    case 5522:
    case 5523:
    case 5524:
    case 5525:
    case 5526:
    case 5527:
    case 5528:
    case 5529:
    case 5530:
    case 5531:
    case 5532:
    case 5535:
    case 5536:
    case 5537:
    case 5538:
    case 5539:
    case 5540:
    case 5541:
    case 5542:
    case 5543:
    case 5546:
    case 5547:
    case 5548:
    case 5549:
    case 5550:
    case 5551:
    case 5552:
    case 5553:
    case 5554:
    case 5555:
    case 5556:
    case 5557:
    case 5558:
    case 5559:
    case 5560:
    case 5561:
    case 5562:
    case 5563:
    case 5564:
    case 5565:
    case 5566:
    case 5567:
    case 5568:
    case 5569:
    case 5570:
    case 5571:
    case 5572:
    case 5573:
    case 5574:
    case 5575:
    case 5576:
    case 5577:
    case 5578:
    case 5582:
    case 5583:
    case 5584:
    case 5585:
    case 5586:
    case 5587:
    case 5588:
    case 5589:
    case 5592:
    case 5593:
    case 5594:
    case 5595:
    case 5596:
    case 5597:
    case 5598:
    case 5599:
    case 5600:
    case 5601:
    case 5602:
    case 5603:
    case 5604:
    case 5605:
    case 5606:
    case 5607:
    case 5608:
    case 5609:
    case 5610:
    case 5611:
    case 5612:
    case 5613:
    case 5614:
    case 5615:
    case 5616:
    case 5617:
    case 5618:
    case 5619:
    case 5620:
    case 5621:
    case 5622:
    case 5623:
    case 5624:
    case 5625:
    case 5626:
    case 5627:
    case 5800:
    case 5812:
    case 5813:
    case 5827:
    case 5828:
    case 5829:
    case 5830:
    case 5831:
    case 5832:
    case 5833:
    case 5834:
    case 5844:
    case 5847:
    case 5848:
    case 5849:
    case 6200:
    case 6201:
    case 6202:
    case 6400:
    case 6401:
    case 6403:
    case 6404:
    case 6405:
    case 6406:
    case 6407:
    case 6500:
    case 6501:
    case 6502:
    case 6503:
    case 6504:
    case 6505:
    case 6506:
    case 6507:
    case 6508:
    case 6509:
    case 6600:
    case 6601:
    case 6602:
    case 6603:
    case 6604:
    case 6605:
    case 6606:
    case 6607:
    case 6608:
    case 6609:
    case 6610:
    case 6611:
    case 6612:
    case 6613:
    case 6614:
    case 6615:
    case 6616:
    case 6617:
    case 6618:
    case 6619:
    case 6620:
    case 6621:
    case 6622:
    case 6623:
    case 6624:
    case 6625:
    case 6626:
    case 6627:
    case 6628:
    case 6629:
    case 6800:
    case 6801:
    case 6802:
    case 6803:
    case 6804:
    case 6805:
    case 6806:
    case 6807:
    case 6808:
    case 6809:
    case 6810:
    case 6811:
    case 6812:
    case 6813:
    case 6814:
    case 6815:
    case 7000:
    case 7001:
    case 7002:
    case 7003:
    case 7004:
    case 7005:
    case 7006:
    case 7007:
    case 7100:
    case 7101:
    case 7200:
    case 7300:
    case 7301:
    case 7302:
    case 7307:
    case 7308:
    case 7309:
    case 7310:
    case 7311:
    case 7312:
    case 7315:
    case 7316:
    case 7325:
    case 7326:
    case 7327:
    case 7328:
    case 7331:
    case 7337:
    case 7338:
    case 7339:
    case 7341:
    case 7342:
    case 7343:
    case 7344:
    case 7349:
    case 7350:
    case 7351:
    case 7352:
    case 7353:
    case 7354:
    case 7355:
    case 7356:
    case 7359:
    case 7364:
    case 7365:
    case 7366:
    case 7367:
    case 7369:
    case 7370:
    case 7371:
    case 7378:
    case 7379:
    case 7380:
    case 7381:
    case 7500:
    case 7501:
    case 7502:
    case 7503:
    case 7504:
    case 7505:
    case 7506:
    case 7507:
    case 7508:
    case 7510:
    case 7511:
    case 7512:
    case 7513:
    case 7514:
    case 7515:
    case 7516:
    case 7517:
    case 7518:
    case 7519:
    case 7520:
    case 7521:
    case 7522:
    case 7523:
    case 7524:
    case 7525:
    case 7526:
    case 7527:
    case 7528:
    case 7529:
    case 7530:
    case 7600:
    case 7601:
    case 7602:
    case 7603:
    case 7604:
    case 7605:
    case 7606:
    case 7607:
    case 7700:
    case 7701:
    case 7702:
    case 7703:
    case 7704:
    case 7705:
    case 7706:
    case 7707:
    case 7708:
    case 7711:
    case 7712:
    case 7713:
    case 7714:
    case 7800:
    case 7801:
    case 7803:
    case 7804:
    case 7805:
    case 7806:
    case 7807:
    case 7808:
    case 7900:
    case 7901:
    case 7902:
    case 8000:
    case 8100:
    case 8101:
    case 8102:
    case 8103:
    case 8104:
    case 8105:
    case 8106:
    case 8107:
    case 8108:
    case 8200:
    case 8300:
    case 8301:
    case 8303:
    case 8304:
    case 8305:
    case 8306:
    case 8400:
    case 8401:
    case 8402:
    case 8500:
    case 8503:
    case 8504:
    case 8507:
    case 8508:
    case 8509:
    case 8510:
    case 8600:
    case 8601:
    case 8700:
    case 8701:
    case 8800:
    case 8900:
    case 8901:
    case 8902:
    case 8903:
    case 8904:
    case 8905:
    case 8906:
    case 9000:
    case 9001:
    case 9002:
    case 9100:
    case 9101:
    case 9102:
    case 9103:
    case 9104:
    case 9105:
    case 9106:
    case 9107:
    case 9110:
    case 9111:
    case 9112:
    case 9113:
    case 9114:
    case 9115:
    case 9116:
    case 9117:
    case 9118:
    case 9119:
    case 9120:
    case 9121:
    case 9122:
    case 9123:
    case 9124:
    case 9125:
    case 9126:
    case 9127:
    case 9128:
    case 9129:
    case 9130:
    case 9131:
    case 9132:
    case 9133:
    case 9200:
    case 9201:
    case 9202:
    case 9203:
    case 9300:
    case 9330:
    case 9331:
    case 9400:
    case 9401:
    case 9402:
    case 9405:
    case 9406:
    case 9407:
    case 9408:
    case 9500:
    case 9501:
    case 9502:
    case 9503:
    case 9504:
    case 9505:
    case 9506:
    case 9507:
    case 9508:
    case 9509:
    case 9510:
    case 9511:
    case 9512:
    case 9513:
    case 9514:
    case 9515:
    case 9516:
    case 9600:
    case 9601:
    case 9700:
    case 9701:
    case 9702:
    case 9704:
    case 9800:
    case 9801:
    case 9802:
    case 9803:
    case 9804:
    case 9805:
    case 9806:
    case 9807:
    case 9808:
    case 9900:
    case 9901:
    case 9902:
    case 9903:
    case 9999:
    case 10000:
    case 10100:
    case 10101:
    case 10102:
    case 10103:
    case 10104:
    case 10105:
    case 10106:
    case 12000:
    case 12001:
    case 12100:
    case 12200:
    case 12201:
    case 12202:
    case 12203:
    case 12204:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EClientPersonaStateFlag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[1];
}
bool EClientPersonaStateFlag_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgClanAccountFlags_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[2];
}
bool EMsgClanAccountFlags_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ESteamReviewScore_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[3];
}
bool ESteamReviewScore_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECodecUsagePlatform_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[4];
}
bool ECodecUsagePlatform_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECodecUsageReason_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[5];
}
bool ECodecUsageReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
