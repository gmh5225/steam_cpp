// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_partnerapps.steamclient.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_steammessages_5fpartnerapps_2esteamclient_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_steammessages_5fpartnerapps_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019005 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_base.pb.h"
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fpartnerapps_2esteamclient_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[16]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fpartnerapps_2esteamclient_2eproto;
class CPartnerApps_Download_Request;
struct CPartnerApps_Download_RequestDefaultTypeInternal;
extern CPartnerApps_Download_RequestDefaultTypeInternal _CPartnerApps_Download_Request_default_instance_;
class CPartnerApps_Download_Response;
struct CPartnerApps_Download_ResponseDefaultTypeInternal;
extern CPartnerApps_Download_ResponseDefaultTypeInternal _CPartnerApps_Download_Response_default_instance_;
class CPartnerApps_ExistingDRMUpload;
struct CPartnerApps_ExistingDRMUploadDefaultTypeInternal;
extern CPartnerApps_ExistingDRMUploadDefaultTypeInternal _CPartnerApps_ExistingDRMUpload_default_instance_;
class CPartnerApps_FindDRMUploads_Request;
struct CPartnerApps_FindDRMUploads_RequestDefaultTypeInternal;
extern CPartnerApps_FindDRMUploads_RequestDefaultTypeInternal _CPartnerApps_FindDRMUploads_Request_default_instance_;
class CPartnerApps_FindDRMUploads_Response;
struct CPartnerApps_FindDRMUploads_ResponseDefaultTypeInternal;
extern CPartnerApps_FindDRMUploads_ResponseDefaultTypeInternal _CPartnerApps_FindDRMUploads_Response_default_instance_;
class CPartnerApps_FinishUploadDepot_Request;
struct CPartnerApps_FinishUploadDepot_RequestDefaultTypeInternal;
extern CPartnerApps_FinishUploadDepot_RequestDefaultTypeInternal _CPartnerApps_FinishUploadDepot_Request_default_instance_;
class CPartnerApps_FinishUploadDepot_Response;
struct CPartnerApps_FinishUploadDepot_ResponseDefaultTypeInternal;
extern CPartnerApps_FinishUploadDepot_ResponseDefaultTypeInternal _CPartnerApps_FinishUploadDepot_Response_default_instance_;
class CPartnerApps_FinishUploadKVSign_Response;
struct CPartnerApps_FinishUploadKVSign_ResponseDefaultTypeInternal;
extern CPartnerApps_FinishUploadKVSign_ResponseDefaultTypeInternal _CPartnerApps_FinishUploadKVSign_Response_default_instance_;
class CPartnerApps_FinishUploadLegacyDRM_Request;
struct CPartnerApps_FinishUploadLegacyDRM_RequestDefaultTypeInternal;
extern CPartnerApps_FinishUploadLegacyDRM_RequestDefaultTypeInternal _CPartnerApps_FinishUploadLegacyDRM_Request_default_instance_;
class CPartnerApps_FinishUploadLegacyDRM_Response;
struct CPartnerApps_FinishUploadLegacyDRM_ResponseDefaultTypeInternal;
extern CPartnerApps_FinishUploadLegacyDRM_ResponseDefaultTypeInternal _CPartnerApps_FinishUploadLegacyDRM_Response_default_instance_;
class CPartnerApps_FinishUpload_Request;
struct CPartnerApps_FinishUpload_RequestDefaultTypeInternal;
extern CPartnerApps_FinishUpload_RequestDefaultTypeInternal _CPartnerApps_FinishUpload_Request_default_instance_;
class CPartnerApps_FinishUpload_Response;
struct CPartnerApps_FinishUpload_ResponseDefaultTypeInternal;
extern CPartnerApps_FinishUpload_ResponseDefaultTypeInternal _CPartnerApps_FinishUpload_Response_default_instance_;
class CPartnerApps_GetDepotBuildResult_Request;
struct CPartnerApps_GetDepotBuildResult_RequestDefaultTypeInternal;
extern CPartnerApps_GetDepotBuildResult_RequestDefaultTypeInternal _CPartnerApps_GetDepotBuildResult_Request_default_instance_;
class CPartnerApps_GetDepotBuildResult_Response;
struct CPartnerApps_GetDepotBuildResult_ResponseDefaultTypeInternal;
extern CPartnerApps_GetDepotBuildResult_ResponseDefaultTypeInternal _CPartnerApps_GetDepotBuildResult_Response_default_instance_;
class CPartnerApps_RequestUploadToken_Request;
struct CPartnerApps_RequestUploadToken_RequestDefaultTypeInternal;
extern CPartnerApps_RequestUploadToken_RequestDefaultTypeInternal _CPartnerApps_RequestUploadToken_Request_default_instance_;
class CPartnerApps_RequestUploadToken_Response;
struct CPartnerApps_RequestUploadToken_ResponseDefaultTypeInternal;
extern CPartnerApps_RequestUploadToken_ResponseDefaultTypeInternal _CPartnerApps_RequestUploadToken_Response_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CPartnerApps_Download_Request* Arena::CreateMaybeMessage<::CPartnerApps_Download_Request>(Arena*);
template<> ::CPartnerApps_Download_Response* Arena::CreateMaybeMessage<::CPartnerApps_Download_Response>(Arena*);
template<> ::CPartnerApps_ExistingDRMUpload* Arena::CreateMaybeMessage<::CPartnerApps_ExistingDRMUpload>(Arena*);
template<> ::CPartnerApps_FindDRMUploads_Request* Arena::CreateMaybeMessage<::CPartnerApps_FindDRMUploads_Request>(Arena*);
template<> ::CPartnerApps_FindDRMUploads_Response* Arena::CreateMaybeMessage<::CPartnerApps_FindDRMUploads_Response>(Arena*);
template<> ::CPartnerApps_FinishUploadDepot_Request* Arena::CreateMaybeMessage<::CPartnerApps_FinishUploadDepot_Request>(Arena*);
template<> ::CPartnerApps_FinishUploadDepot_Response* Arena::CreateMaybeMessage<::CPartnerApps_FinishUploadDepot_Response>(Arena*);
template<> ::CPartnerApps_FinishUploadKVSign_Response* Arena::CreateMaybeMessage<::CPartnerApps_FinishUploadKVSign_Response>(Arena*);
template<> ::CPartnerApps_FinishUploadLegacyDRM_Request* Arena::CreateMaybeMessage<::CPartnerApps_FinishUploadLegacyDRM_Request>(Arena*);
template<> ::CPartnerApps_FinishUploadLegacyDRM_Response* Arena::CreateMaybeMessage<::CPartnerApps_FinishUploadLegacyDRM_Response>(Arena*);
template<> ::CPartnerApps_FinishUpload_Request* Arena::CreateMaybeMessage<::CPartnerApps_FinishUpload_Request>(Arena*);
template<> ::CPartnerApps_FinishUpload_Response* Arena::CreateMaybeMessage<::CPartnerApps_FinishUpload_Response>(Arena*);
template<> ::CPartnerApps_GetDepotBuildResult_Request* Arena::CreateMaybeMessage<::CPartnerApps_GetDepotBuildResult_Request>(Arena*);
template<> ::CPartnerApps_GetDepotBuildResult_Response* Arena::CreateMaybeMessage<::CPartnerApps_GetDepotBuildResult_Response>(Arena*);
template<> ::CPartnerApps_RequestUploadToken_Request* Arena::CreateMaybeMessage<::CPartnerApps_RequestUploadToken_Request>(Arena*);
template<> ::CPartnerApps_RequestUploadToken_Response* Arena::CreateMaybeMessage<::CPartnerApps_RequestUploadToken_Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class CPartnerApps_RequestUploadToken_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_RequestUploadToken_Request) */ {
 public:
  inline CPartnerApps_RequestUploadToken_Request() : CPartnerApps_RequestUploadToken_Request(nullptr) {}
  ~CPartnerApps_RequestUploadToken_Request() override;
  explicit constexpr CPartnerApps_RequestUploadToken_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_RequestUploadToken_Request(const CPartnerApps_RequestUploadToken_Request& from);
  CPartnerApps_RequestUploadToken_Request(CPartnerApps_RequestUploadToken_Request&& from) noexcept
    : CPartnerApps_RequestUploadToken_Request() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_RequestUploadToken_Request& operator=(const CPartnerApps_RequestUploadToken_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_RequestUploadToken_Request& operator=(CPartnerApps_RequestUploadToken_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_RequestUploadToken_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_RequestUploadToken_Request* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_RequestUploadToken_Request*>(
               &_CPartnerApps_RequestUploadToken_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CPartnerApps_RequestUploadToken_Request& a, CPartnerApps_RequestUploadToken_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_RequestUploadToken_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_RequestUploadToken_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_RequestUploadToken_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_RequestUploadToken_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_RequestUploadToken_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_RequestUploadToken_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_RequestUploadToken_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_RequestUploadToken_Request";
  }
  protected:
  explicit CPartnerApps_RequestUploadToken_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilenameFieldNumber = 1,
    kAppidFieldNumber = 2,
  };
  // optional string filename = 1;
  bool has_filename() const;
  private:
  bool _internal_has_filename() const;
  public:
  void clear_filename();
  const std::string& filename() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_filename(ArgT0&& arg0, ArgT... args);
  std::string* mutable_filename();
  PROTOBUF_NODISCARD std::string* release_filename();
  void set_allocated_filename(std::string* filename);
  private:
  const std::string& _internal_filename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filename(const std::string& value);
  std::string* _internal_mutable_filename();
  public:

  // optional uint32 appid = 2;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  uint32_t appid() const;
  void set_appid(uint32_t value);
  private:
  uint32_t _internal_appid() const;
  void _internal_set_appid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CPartnerApps_RequestUploadToken_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_;
  uint32_t appid_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_RequestUploadToken_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_RequestUploadToken_Response) */ {
 public:
  inline CPartnerApps_RequestUploadToken_Response() : CPartnerApps_RequestUploadToken_Response(nullptr) {}
  ~CPartnerApps_RequestUploadToken_Response() override;
  explicit constexpr CPartnerApps_RequestUploadToken_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_RequestUploadToken_Response(const CPartnerApps_RequestUploadToken_Response& from);
  CPartnerApps_RequestUploadToken_Response(CPartnerApps_RequestUploadToken_Response&& from) noexcept
    : CPartnerApps_RequestUploadToken_Response() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_RequestUploadToken_Response& operator=(const CPartnerApps_RequestUploadToken_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_RequestUploadToken_Response& operator=(CPartnerApps_RequestUploadToken_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_RequestUploadToken_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_RequestUploadToken_Response* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_RequestUploadToken_Response*>(
               &_CPartnerApps_RequestUploadToken_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CPartnerApps_RequestUploadToken_Response& a, CPartnerApps_RequestUploadToken_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_RequestUploadToken_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_RequestUploadToken_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_RequestUploadToken_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_RequestUploadToken_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_RequestUploadToken_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_RequestUploadToken_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_RequestUploadToken_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_RequestUploadToken_Response";
  }
  protected:
  explicit CPartnerApps_RequestUploadToken_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 2,
    kUploadTokenFieldNumber = 1,
    kRoutingIdFieldNumber = 3,
  };
  // optional string location = 2;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const std::string& location() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_location(ArgT0&& arg0, ArgT... args);
  std::string* mutable_location();
  PROTOBUF_NODISCARD std::string* release_location();
  void set_allocated_location(std::string* location);
  private:
  const std::string& _internal_location() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_location(const std::string& value);
  std::string* _internal_mutable_location();
  public:

  // optional uint64 upload_token = 1;
  bool has_upload_token() const;
  private:
  bool _internal_has_upload_token() const;
  public:
  void clear_upload_token();
  uint64_t upload_token() const;
  void set_upload_token(uint64_t value);
  private:
  uint64_t _internal_upload_token() const;
  void _internal_set_upload_token(uint64_t value);
  public:

  // optional uint64 routing_id = 3;
  bool has_routing_id() const;
  private:
  bool _internal_has_routing_id() const;
  public:
  void clear_routing_id();
  uint64_t routing_id() const;
  void set_routing_id(uint64_t value);
  private:
  uint64_t _internal_routing_id() const;
  void _internal_set_routing_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CPartnerApps_RequestUploadToken_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr location_;
  uint64_t upload_token_;
  uint64_t routing_id_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_FinishUpload_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_FinishUpload_Request) */ {
 public:
  inline CPartnerApps_FinishUpload_Request() : CPartnerApps_FinishUpload_Request(nullptr) {}
  ~CPartnerApps_FinishUpload_Request() override;
  explicit constexpr CPartnerApps_FinishUpload_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_FinishUpload_Request(const CPartnerApps_FinishUpload_Request& from);
  CPartnerApps_FinishUpload_Request(CPartnerApps_FinishUpload_Request&& from) noexcept
    : CPartnerApps_FinishUpload_Request() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_FinishUpload_Request& operator=(const CPartnerApps_FinishUpload_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_FinishUpload_Request& operator=(CPartnerApps_FinishUpload_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_FinishUpload_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_FinishUpload_Request* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_FinishUpload_Request*>(
               &_CPartnerApps_FinishUpload_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CPartnerApps_FinishUpload_Request& a, CPartnerApps_FinishUpload_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_FinishUpload_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_FinishUpload_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_FinishUpload_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_FinishUpload_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_FinishUpload_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_FinishUpload_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_FinishUpload_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_FinishUpload_Request";
  }
  protected:
  explicit CPartnerApps_FinishUpload_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUploadTokenFieldNumber = 1,
    kRoutingIdFieldNumber = 2,
    kAppIdFieldNumber = 3,
  };
  // optional uint64 upload_token = 1;
  bool has_upload_token() const;
  private:
  bool _internal_has_upload_token() const;
  public:
  void clear_upload_token();
  uint64_t upload_token() const;
  void set_upload_token(uint64_t value);
  private:
  uint64_t _internal_upload_token() const;
  void _internal_set_upload_token(uint64_t value);
  public:

  // optional uint64 routing_id = 2;
  bool has_routing_id() const;
  private:
  bool _internal_has_routing_id() const;
  public:
  void clear_routing_id();
  uint64_t routing_id() const;
  void set_routing_id(uint64_t value);
  private:
  uint64_t _internal_routing_id() const;
  void _internal_set_routing_id(uint64_t value);
  public:

  // optional uint32 app_id = 3;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  uint32_t app_id() const;
  void set_app_id(uint32_t value);
  private:
  uint32_t _internal_app_id() const;
  void _internal_set_app_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CPartnerApps_FinishUpload_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t upload_token_;
  uint64_t routing_id_;
  uint32_t app_id_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_FinishUploadKVSign_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_FinishUploadKVSign_Response) */ {
 public:
  inline CPartnerApps_FinishUploadKVSign_Response() : CPartnerApps_FinishUploadKVSign_Response(nullptr) {}
  ~CPartnerApps_FinishUploadKVSign_Response() override;
  explicit constexpr CPartnerApps_FinishUploadKVSign_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_FinishUploadKVSign_Response(const CPartnerApps_FinishUploadKVSign_Response& from);
  CPartnerApps_FinishUploadKVSign_Response(CPartnerApps_FinishUploadKVSign_Response&& from) noexcept
    : CPartnerApps_FinishUploadKVSign_Response() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_FinishUploadKVSign_Response& operator=(const CPartnerApps_FinishUploadKVSign_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_FinishUploadKVSign_Response& operator=(CPartnerApps_FinishUploadKVSign_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_FinishUploadKVSign_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_FinishUploadKVSign_Response* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_FinishUploadKVSign_Response*>(
               &_CPartnerApps_FinishUploadKVSign_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CPartnerApps_FinishUploadKVSign_Response& a, CPartnerApps_FinishUploadKVSign_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_FinishUploadKVSign_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_FinishUploadKVSign_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_FinishUploadKVSign_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_FinishUploadKVSign_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_FinishUploadKVSign_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_FinishUploadKVSign_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_FinishUploadKVSign_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_FinishUploadKVSign_Response";
  }
  protected:
  explicit CPartnerApps_FinishUploadKVSign_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSignedInstallscriptFieldNumber = 1,
  };
  // optional string signed_installscript = 1;
  bool has_signed_installscript() const;
  private:
  bool _internal_has_signed_installscript() const;
  public:
  void clear_signed_installscript();
  const std::string& signed_installscript() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_signed_installscript(ArgT0&& arg0, ArgT... args);
  std::string* mutable_signed_installscript();
  PROTOBUF_NODISCARD std::string* release_signed_installscript();
  void set_allocated_signed_installscript(std::string* signed_installscript);
  private:
  const std::string& _internal_signed_installscript() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signed_installscript(const std::string& value);
  std::string* _internal_mutable_signed_installscript();
  public:

  // @@protoc_insertion_point(class_scope:CPartnerApps_FinishUploadKVSign_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signed_installscript_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_FinishUploadLegacyDRM_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_FinishUploadLegacyDRM_Request) */ {
 public:
  inline CPartnerApps_FinishUploadLegacyDRM_Request() : CPartnerApps_FinishUploadLegacyDRM_Request(nullptr) {}
  ~CPartnerApps_FinishUploadLegacyDRM_Request() override;
  explicit constexpr CPartnerApps_FinishUploadLegacyDRM_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_FinishUploadLegacyDRM_Request(const CPartnerApps_FinishUploadLegacyDRM_Request& from);
  CPartnerApps_FinishUploadLegacyDRM_Request(CPartnerApps_FinishUploadLegacyDRM_Request&& from) noexcept
    : CPartnerApps_FinishUploadLegacyDRM_Request() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_FinishUploadLegacyDRM_Request& operator=(const CPartnerApps_FinishUploadLegacyDRM_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_FinishUploadLegacyDRM_Request& operator=(CPartnerApps_FinishUploadLegacyDRM_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_FinishUploadLegacyDRM_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_FinishUploadLegacyDRM_Request* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_FinishUploadLegacyDRM_Request*>(
               &_CPartnerApps_FinishUploadLegacyDRM_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CPartnerApps_FinishUploadLegacyDRM_Request& a, CPartnerApps_FinishUploadLegacyDRM_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_FinishUploadLegacyDRM_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_FinishUploadLegacyDRM_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_FinishUploadLegacyDRM_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_FinishUploadLegacyDRM_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_FinishUploadLegacyDRM_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_FinishUploadLegacyDRM_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_FinishUploadLegacyDRM_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_FinishUploadLegacyDRM_Request";
  }
  protected:
  explicit CPartnerApps_FinishUploadLegacyDRM_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kToolNameFieldNumber = 5,
    kUploadTokenFieldNumber = 1,
    kRoutingIdFieldNumber = 2,
    kAppIdFieldNumber = 3,
    kFlagsFieldNumber = 4,
    kUseCloudFieldNumber = 6,
  };
  // optional string tool_name = 5;
  bool has_tool_name() const;
  private:
  bool _internal_has_tool_name() const;
  public:
  void clear_tool_name();
  const std::string& tool_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_tool_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_tool_name();
  PROTOBUF_NODISCARD std::string* release_tool_name();
  void set_allocated_tool_name(std::string* tool_name);
  private:
  const std::string& _internal_tool_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tool_name(const std::string& value);
  std::string* _internal_mutable_tool_name();
  public:

  // optional uint64 upload_token = 1;
  bool has_upload_token() const;
  private:
  bool _internal_has_upload_token() const;
  public:
  void clear_upload_token();
  uint64_t upload_token() const;
  void set_upload_token(uint64_t value);
  private:
  uint64_t _internal_upload_token() const;
  void _internal_set_upload_token(uint64_t value);
  public:

  // optional uint64 routing_id = 2;
  bool has_routing_id() const;
  private:
  bool _internal_has_routing_id() const;
  public:
  void clear_routing_id();
  uint64_t routing_id() const;
  void set_routing_id(uint64_t value);
  private:
  uint64_t _internal_routing_id() const;
  void _internal_set_routing_id(uint64_t value);
  public:

  // optional uint32 app_id = 3;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  uint32_t app_id() const;
  void set_app_id(uint32_t value);
  private:
  uint32_t _internal_app_id() const;
  void _internal_set_app_id(uint32_t value);
  public:

  // optional uint32 flags = 4;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  uint32_t flags() const;
  void set_flags(uint32_t value);
  private:
  uint32_t _internal_flags() const;
  void _internal_set_flags(uint32_t value);
  public:

  // optional bool use_cloud = 6 [default = false, (.description) = "use cloud storage for build products"];
  bool has_use_cloud() const;
  private:
  bool _internal_has_use_cloud() const;
  public:
  void clear_use_cloud();
  bool use_cloud() const;
  void set_use_cloud(bool value);
  private:
  bool _internal_use_cloud() const;
  void _internal_set_use_cloud(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CPartnerApps_FinishUploadLegacyDRM_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tool_name_;
  uint64_t upload_token_;
  uint64_t routing_id_;
  uint32_t app_id_;
  uint32_t flags_;
  bool use_cloud_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_FinishUploadLegacyDRM_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_FinishUploadLegacyDRM_Response) */ {
 public:
  inline CPartnerApps_FinishUploadLegacyDRM_Response() : CPartnerApps_FinishUploadLegacyDRM_Response(nullptr) {}
  ~CPartnerApps_FinishUploadLegacyDRM_Response() override;
  explicit constexpr CPartnerApps_FinishUploadLegacyDRM_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_FinishUploadLegacyDRM_Response(const CPartnerApps_FinishUploadLegacyDRM_Response& from);
  CPartnerApps_FinishUploadLegacyDRM_Response(CPartnerApps_FinishUploadLegacyDRM_Response&& from) noexcept
    : CPartnerApps_FinishUploadLegacyDRM_Response() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_FinishUploadLegacyDRM_Response& operator=(const CPartnerApps_FinishUploadLegacyDRM_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_FinishUploadLegacyDRM_Response& operator=(CPartnerApps_FinishUploadLegacyDRM_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_FinishUploadLegacyDRM_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_FinishUploadLegacyDRM_Response* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_FinishUploadLegacyDRM_Response*>(
               &_CPartnerApps_FinishUploadLegacyDRM_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CPartnerApps_FinishUploadLegacyDRM_Response& a, CPartnerApps_FinishUploadLegacyDRM_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_FinishUploadLegacyDRM_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_FinishUploadLegacyDRM_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_FinishUploadLegacyDRM_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_FinishUploadLegacyDRM_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_FinishUploadLegacyDRM_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_FinishUploadLegacyDRM_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_FinishUploadLegacyDRM_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_FinishUploadLegacyDRM_Response";
  }
  protected:
  explicit CPartnerApps_FinishUploadLegacyDRM_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileIdFieldNumber = 1,
  };
  // optional string file_id = 1;
  bool has_file_id() const;
  private:
  bool _internal_has_file_id() const;
  public:
  void clear_file_id();
  const std::string& file_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_file_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_file_id();
  PROTOBUF_NODISCARD std::string* release_file_id();
  void set_allocated_file_id(std::string* file_id);
  private:
  const std::string& _internal_file_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_id(const std::string& value);
  std::string* _internal_mutable_file_id();
  public:

  // @@protoc_insertion_point(class_scope:CPartnerApps_FinishUploadLegacyDRM_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_id_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_FinishUpload_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CPartnerApps_FinishUpload_Response) */ {
 public:
  inline CPartnerApps_FinishUpload_Response() : CPartnerApps_FinishUpload_Response(nullptr) {}
  explicit constexpr CPartnerApps_FinishUpload_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_FinishUpload_Response(const CPartnerApps_FinishUpload_Response& from);
  CPartnerApps_FinishUpload_Response(CPartnerApps_FinishUpload_Response&& from) noexcept
    : CPartnerApps_FinishUpload_Response() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_FinishUpload_Response& operator=(const CPartnerApps_FinishUpload_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_FinishUpload_Response& operator=(CPartnerApps_FinishUpload_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_FinishUpload_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_FinishUpload_Response* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_FinishUpload_Response*>(
               &_CPartnerApps_FinishUpload_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CPartnerApps_FinishUpload_Response& a, CPartnerApps_FinishUpload_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_FinishUpload_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_FinishUpload_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_FinishUpload_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_FinishUpload_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CPartnerApps_FinishUpload_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CPartnerApps_FinishUpload_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_FinishUpload_Response";
  }
  protected:
  explicit CPartnerApps_FinishUpload_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CPartnerApps_FinishUpload_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_FinishUploadDepot_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_FinishUploadDepot_Request) */ {
 public:
  inline CPartnerApps_FinishUploadDepot_Request() : CPartnerApps_FinishUploadDepot_Request(nullptr) {}
  ~CPartnerApps_FinishUploadDepot_Request() override;
  explicit constexpr CPartnerApps_FinishUploadDepot_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_FinishUploadDepot_Request(const CPartnerApps_FinishUploadDepot_Request& from);
  CPartnerApps_FinishUploadDepot_Request(CPartnerApps_FinishUploadDepot_Request&& from) noexcept
    : CPartnerApps_FinishUploadDepot_Request() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_FinishUploadDepot_Request& operator=(const CPartnerApps_FinishUploadDepot_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_FinishUploadDepot_Request& operator=(CPartnerApps_FinishUploadDepot_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_FinishUploadDepot_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_FinishUploadDepot_Request* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_FinishUploadDepot_Request*>(
               &_CPartnerApps_FinishUploadDepot_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CPartnerApps_FinishUploadDepot_Request& a, CPartnerApps_FinishUploadDepot_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_FinishUploadDepot_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_FinishUploadDepot_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_FinishUploadDepot_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_FinishUploadDepot_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_FinishUploadDepot_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_FinishUploadDepot_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_FinishUploadDepot_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_FinishUploadDepot_Request";
  }
  protected:
  explicit CPartnerApps_FinishUploadDepot_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUploadTokenFieldNumber = 1,
    kRoutingIdFieldNumber = 2,
    kAppIdFieldNumber = 3,
    kDepotIdFieldNumber = 4,
    kBuildFlagsFieldNumber = 5,
  };
  // optional uint64 upload_token = 1;
  bool has_upload_token() const;
  private:
  bool _internal_has_upload_token() const;
  public:
  void clear_upload_token();
  uint64_t upload_token() const;
  void set_upload_token(uint64_t value);
  private:
  uint64_t _internal_upload_token() const;
  void _internal_set_upload_token(uint64_t value);
  public:

  // optional uint64 routing_id = 2;
  bool has_routing_id() const;
  private:
  bool _internal_has_routing_id() const;
  public:
  void clear_routing_id();
  uint64_t routing_id() const;
  void set_routing_id(uint64_t value);
  private:
  uint64_t _internal_routing_id() const;
  void _internal_set_routing_id(uint64_t value);
  public:

  // optional uint32 app_id = 3;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  uint32_t app_id() const;
  void set_app_id(uint32_t value);
  private:
  uint32_t _internal_app_id() const;
  void _internal_set_app_id(uint32_t value);
  public:

  // optional uint32 depot_id = 4;
  bool has_depot_id() const;
  private:
  bool _internal_has_depot_id() const;
  public:
  void clear_depot_id();
  uint32_t depot_id() const;
  void set_depot_id(uint32_t value);
  private:
  uint32_t _internal_depot_id() const;
  void _internal_set_depot_id(uint32_t value);
  public:

  // optional uint32 build_flags = 5;
  bool has_build_flags() const;
  private:
  bool _internal_has_build_flags() const;
  public:
  void clear_build_flags();
  uint32_t build_flags() const;
  void set_build_flags(uint32_t value);
  private:
  uint32_t _internal_build_flags() const;
  void _internal_set_build_flags(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CPartnerApps_FinishUploadDepot_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t upload_token_;
  uint64_t routing_id_;
  uint32_t app_id_;
  uint32_t depot_id_;
  uint32_t build_flags_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_FinishUploadDepot_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_FinishUploadDepot_Response) */ {
 public:
  inline CPartnerApps_FinishUploadDepot_Response() : CPartnerApps_FinishUploadDepot_Response(nullptr) {}
  ~CPartnerApps_FinishUploadDepot_Response() override;
  explicit constexpr CPartnerApps_FinishUploadDepot_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_FinishUploadDepot_Response(const CPartnerApps_FinishUploadDepot_Response& from);
  CPartnerApps_FinishUploadDepot_Response(CPartnerApps_FinishUploadDepot_Response&& from) noexcept
    : CPartnerApps_FinishUploadDepot_Response() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_FinishUploadDepot_Response& operator=(const CPartnerApps_FinishUploadDepot_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_FinishUploadDepot_Response& operator=(CPartnerApps_FinishUploadDepot_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_FinishUploadDepot_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_FinishUploadDepot_Response* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_FinishUploadDepot_Response*>(
               &_CPartnerApps_FinishUploadDepot_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CPartnerApps_FinishUploadDepot_Response& a, CPartnerApps_FinishUploadDepot_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_FinishUploadDepot_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_FinishUploadDepot_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_FinishUploadDepot_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_FinishUploadDepot_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_FinishUploadDepot_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_FinishUploadDepot_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_FinishUploadDepot_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_FinishUploadDepot_Response";
  }
  protected:
  explicit CPartnerApps_FinishUploadDepot_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBuildRoutingIdFieldNumber = 1,
  };
  // optional uint64 build_routing_id = 1;
  bool has_build_routing_id() const;
  private:
  bool _internal_has_build_routing_id() const;
  public:
  void clear_build_routing_id();
  uint64_t build_routing_id() const;
  void set_build_routing_id(uint64_t value);
  private:
  uint64_t _internal_build_routing_id() const;
  void _internal_set_build_routing_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CPartnerApps_FinishUploadDepot_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t build_routing_id_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_GetDepotBuildResult_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_GetDepotBuildResult_Request) */ {
 public:
  inline CPartnerApps_GetDepotBuildResult_Request() : CPartnerApps_GetDepotBuildResult_Request(nullptr) {}
  ~CPartnerApps_GetDepotBuildResult_Request() override;
  explicit constexpr CPartnerApps_GetDepotBuildResult_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_GetDepotBuildResult_Request(const CPartnerApps_GetDepotBuildResult_Request& from);
  CPartnerApps_GetDepotBuildResult_Request(CPartnerApps_GetDepotBuildResult_Request&& from) noexcept
    : CPartnerApps_GetDepotBuildResult_Request() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_GetDepotBuildResult_Request& operator=(const CPartnerApps_GetDepotBuildResult_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_GetDepotBuildResult_Request& operator=(CPartnerApps_GetDepotBuildResult_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_GetDepotBuildResult_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_GetDepotBuildResult_Request* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_GetDepotBuildResult_Request*>(
               &_CPartnerApps_GetDepotBuildResult_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CPartnerApps_GetDepotBuildResult_Request& a, CPartnerApps_GetDepotBuildResult_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_GetDepotBuildResult_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_GetDepotBuildResult_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_GetDepotBuildResult_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_GetDepotBuildResult_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_GetDepotBuildResult_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_GetDepotBuildResult_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_GetDepotBuildResult_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_GetDepotBuildResult_Request";
  }
  protected:
  explicit CPartnerApps_GetDepotBuildResult_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUploadTokenFieldNumber = 1,
    kRoutingIdFieldNumber = 2,
  };
  // optional uint64 upload_token = 1;
  bool has_upload_token() const;
  private:
  bool _internal_has_upload_token() const;
  public:
  void clear_upload_token();
  uint64_t upload_token() const;
  void set_upload_token(uint64_t value);
  private:
  uint64_t _internal_upload_token() const;
  void _internal_set_upload_token(uint64_t value);
  public:

  // optional uint64 routing_id = 2;
  bool has_routing_id() const;
  private:
  bool _internal_has_routing_id() const;
  public:
  void clear_routing_id();
  uint64_t routing_id() const;
  void set_routing_id(uint64_t value);
  private:
  uint64_t _internal_routing_id() const;
  void _internal_set_routing_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CPartnerApps_GetDepotBuildResult_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t upload_token_;
  uint64_t routing_id_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_GetDepotBuildResult_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_GetDepotBuildResult_Response) */ {
 public:
  inline CPartnerApps_GetDepotBuildResult_Response() : CPartnerApps_GetDepotBuildResult_Response(nullptr) {}
  ~CPartnerApps_GetDepotBuildResult_Response() override;
  explicit constexpr CPartnerApps_GetDepotBuildResult_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_GetDepotBuildResult_Response(const CPartnerApps_GetDepotBuildResult_Response& from);
  CPartnerApps_GetDepotBuildResult_Response(CPartnerApps_GetDepotBuildResult_Response&& from) noexcept
    : CPartnerApps_GetDepotBuildResult_Response() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_GetDepotBuildResult_Response& operator=(const CPartnerApps_GetDepotBuildResult_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_GetDepotBuildResult_Response& operator=(CPartnerApps_GetDepotBuildResult_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_GetDepotBuildResult_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_GetDepotBuildResult_Response* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_GetDepotBuildResult_Response*>(
               &_CPartnerApps_GetDepotBuildResult_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CPartnerApps_GetDepotBuildResult_Response& a, CPartnerApps_GetDepotBuildResult_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_GetDepotBuildResult_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_GetDepotBuildResult_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_GetDepotBuildResult_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_GetDepotBuildResult_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_GetDepotBuildResult_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_GetDepotBuildResult_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_GetDepotBuildResult_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_GetDepotBuildResult_Response";
  }
  protected:
  explicit CPartnerApps_GetDepotBuildResult_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorMsgFieldNumber = 2,
    kManifestIdFieldNumber = 1,
  };
  // optional string error_msg = 2;
  bool has_error_msg() const;
  private:
  bool _internal_has_error_msg() const;
  public:
  void clear_error_msg();
  const std::string& error_msg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_error_msg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_error_msg();
  PROTOBUF_NODISCARD std::string* release_error_msg();
  void set_allocated_error_msg(std::string* error_msg);
  private:
  const std::string& _internal_error_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_msg(const std::string& value);
  std::string* _internal_mutable_error_msg();
  public:

  // optional uint64 manifest_id = 1;
  bool has_manifest_id() const;
  private:
  bool _internal_has_manifest_id() const;
  public:
  void clear_manifest_id();
  uint64_t manifest_id() const;
  void set_manifest_id(uint64_t value);
  private:
  uint64_t _internal_manifest_id() const;
  void _internal_set_manifest_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CPartnerApps_GetDepotBuildResult_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr error_msg_;
  uint64_t manifest_id_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_FindDRMUploads_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_FindDRMUploads_Request) */ {
 public:
  inline CPartnerApps_FindDRMUploads_Request() : CPartnerApps_FindDRMUploads_Request(nullptr) {}
  ~CPartnerApps_FindDRMUploads_Request() override;
  explicit constexpr CPartnerApps_FindDRMUploads_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_FindDRMUploads_Request(const CPartnerApps_FindDRMUploads_Request& from);
  CPartnerApps_FindDRMUploads_Request(CPartnerApps_FindDRMUploads_Request&& from) noexcept
    : CPartnerApps_FindDRMUploads_Request() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_FindDRMUploads_Request& operator=(const CPartnerApps_FindDRMUploads_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_FindDRMUploads_Request& operator=(CPartnerApps_FindDRMUploads_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_FindDRMUploads_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_FindDRMUploads_Request* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_FindDRMUploads_Request*>(
               &_CPartnerApps_FindDRMUploads_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CPartnerApps_FindDRMUploads_Request& a, CPartnerApps_FindDRMUploads_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_FindDRMUploads_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_FindDRMUploads_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_FindDRMUploads_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_FindDRMUploads_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_FindDRMUploads_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_FindDRMUploads_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_FindDRMUploads_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_FindDRMUploads_Request";
  }
  protected:
  explicit CPartnerApps_FindDRMUploads_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
  };
  // optional int32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  int32_t app_id() const;
  void set_app_id(int32_t value);
  private:
  int32_t _internal_app_id() const;
  void _internal_set_app_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CPartnerApps_FindDRMUploads_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int32_t app_id_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_ExistingDRMUpload final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_ExistingDRMUpload) */ {
 public:
  inline CPartnerApps_ExistingDRMUpload() : CPartnerApps_ExistingDRMUpload(nullptr) {}
  ~CPartnerApps_ExistingDRMUpload() override;
  explicit constexpr CPartnerApps_ExistingDRMUpload(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_ExistingDRMUpload(const CPartnerApps_ExistingDRMUpload& from);
  CPartnerApps_ExistingDRMUpload(CPartnerApps_ExistingDRMUpload&& from) noexcept
    : CPartnerApps_ExistingDRMUpload() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_ExistingDRMUpload& operator=(const CPartnerApps_ExistingDRMUpload& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_ExistingDRMUpload& operator=(CPartnerApps_ExistingDRMUpload&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_ExistingDRMUpload& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_ExistingDRMUpload* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_ExistingDRMUpload*>(
               &_CPartnerApps_ExistingDRMUpload_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CPartnerApps_ExistingDRMUpload& a, CPartnerApps_ExistingDRMUpload& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_ExistingDRMUpload* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_ExistingDRMUpload* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_ExistingDRMUpload* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_ExistingDRMUpload>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_ExistingDRMUpload& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_ExistingDRMUpload& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_ExistingDRMUpload* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_ExistingDRMUpload";
  }
  protected:
  explicit CPartnerApps_ExistingDRMUpload(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileIdFieldNumber = 1,
    kSuppliedNameFieldNumber = 5,
    kModTypeFieldNumber = 7,
    kOrigFileIdFieldNumber = 9,
    kAppIdFieldNumber = 2,
    kActorIdFieldNumber = 3,
    kFlagsFieldNumber = 6,
    kTimestampFieldNumber = 8,
  };
  // optional string file_id = 1;
  bool has_file_id() const;
  private:
  bool _internal_has_file_id() const;
  public:
  void clear_file_id();
  const std::string& file_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_file_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_file_id();
  PROTOBUF_NODISCARD std::string* release_file_id();
  void set_allocated_file_id(std::string* file_id);
  private:
  const std::string& _internal_file_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_id(const std::string& value);
  std::string* _internal_mutable_file_id();
  public:

  // optional string supplied_name = 5;
  bool has_supplied_name() const;
  private:
  bool _internal_has_supplied_name() const;
  public:
  void clear_supplied_name();
  const std::string& supplied_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_supplied_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_supplied_name();
  PROTOBUF_NODISCARD std::string* release_supplied_name();
  void set_allocated_supplied_name(std::string* supplied_name);
  private:
  const std::string& _internal_supplied_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_supplied_name(const std::string& value);
  std::string* _internal_mutable_supplied_name();
  public:

  // optional string mod_type = 7;
  bool has_mod_type() const;
  private:
  bool _internal_has_mod_type() const;
  public:
  void clear_mod_type();
  const std::string& mod_type() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_mod_type(ArgT0&& arg0, ArgT... args);
  std::string* mutable_mod_type();
  PROTOBUF_NODISCARD std::string* release_mod_type();
  void set_allocated_mod_type(std::string* mod_type);
  private:
  const std::string& _internal_mod_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mod_type(const std::string& value);
  std::string* _internal_mutable_mod_type();
  public:

  // optional string orig_file_id = 9;
  bool has_orig_file_id() const;
  private:
  bool _internal_has_orig_file_id() const;
  public:
  void clear_orig_file_id();
  const std::string& orig_file_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_orig_file_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_orig_file_id();
  PROTOBUF_NODISCARD std::string* release_orig_file_id();
  void set_allocated_orig_file_id(std::string* orig_file_id);
  private:
  const std::string& _internal_orig_file_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_orig_file_id(const std::string& value);
  std::string* _internal_mutable_orig_file_id();
  public:

  // optional uint32 app_id = 2;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  uint32_t app_id() const;
  void set_app_id(uint32_t value);
  private:
  uint32_t _internal_app_id() const;
  void _internal_set_app_id(uint32_t value);
  public:

  // optional int32 actor_id = 3;
  bool has_actor_id() const;
  private:
  bool _internal_has_actor_id() const;
  public:
  void clear_actor_id();
  int32_t actor_id() const;
  void set_actor_id(int32_t value);
  private:
  int32_t _internal_actor_id() const;
  void _internal_set_actor_id(int32_t value);
  public:

  // optional uint32 flags = 6;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  uint32_t flags() const;
  void set_flags(uint32_t value);
  private:
  uint32_t _internal_flags() const;
  void _internal_set_flags(uint32_t value);
  public:

  // optional fixed32 timestamp = 8;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  uint32_t timestamp() const;
  void set_timestamp(uint32_t value);
  private:
  uint32_t _internal_timestamp() const;
  void _internal_set_timestamp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CPartnerApps_ExistingDRMUpload)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr supplied_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mod_type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr orig_file_id_;
  uint32_t app_id_;
  int32_t actor_id_;
  uint32_t flags_;
  uint32_t timestamp_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_FindDRMUploads_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_FindDRMUploads_Response) */ {
 public:
  inline CPartnerApps_FindDRMUploads_Response() : CPartnerApps_FindDRMUploads_Response(nullptr) {}
  ~CPartnerApps_FindDRMUploads_Response() override;
  explicit constexpr CPartnerApps_FindDRMUploads_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_FindDRMUploads_Response(const CPartnerApps_FindDRMUploads_Response& from);
  CPartnerApps_FindDRMUploads_Response(CPartnerApps_FindDRMUploads_Response&& from) noexcept
    : CPartnerApps_FindDRMUploads_Response() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_FindDRMUploads_Response& operator=(const CPartnerApps_FindDRMUploads_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_FindDRMUploads_Response& operator=(CPartnerApps_FindDRMUploads_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_FindDRMUploads_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_FindDRMUploads_Response* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_FindDRMUploads_Response*>(
               &_CPartnerApps_FindDRMUploads_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CPartnerApps_FindDRMUploads_Response& a, CPartnerApps_FindDRMUploads_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_FindDRMUploads_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_FindDRMUploads_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_FindDRMUploads_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_FindDRMUploads_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_FindDRMUploads_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_FindDRMUploads_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_FindDRMUploads_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_FindDRMUploads_Response";
  }
  protected:
  explicit CPartnerApps_FindDRMUploads_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUploadsFieldNumber = 1,
  };
  // repeated .CPartnerApps_ExistingDRMUpload uploads = 1;
  int uploads_size() const;
  private:
  int _internal_uploads_size() const;
  public:
  void clear_uploads();
  ::CPartnerApps_ExistingDRMUpload* mutable_uploads(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CPartnerApps_ExistingDRMUpload >*
      mutable_uploads();
  private:
  const ::CPartnerApps_ExistingDRMUpload& _internal_uploads(int index) const;
  ::CPartnerApps_ExistingDRMUpload* _internal_add_uploads();
  public:
  const ::CPartnerApps_ExistingDRMUpload& uploads(int index) const;
  ::CPartnerApps_ExistingDRMUpload* add_uploads();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CPartnerApps_ExistingDRMUpload >&
      uploads() const;

  // @@protoc_insertion_point(class_scope:CPartnerApps_FindDRMUploads_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CPartnerApps_ExistingDRMUpload > uploads_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_Download_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_Download_Request) */ {
 public:
  inline CPartnerApps_Download_Request() : CPartnerApps_Download_Request(nullptr) {}
  ~CPartnerApps_Download_Request() override;
  explicit constexpr CPartnerApps_Download_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_Download_Request(const CPartnerApps_Download_Request& from);
  CPartnerApps_Download_Request(CPartnerApps_Download_Request&& from) noexcept
    : CPartnerApps_Download_Request() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_Download_Request& operator=(const CPartnerApps_Download_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_Download_Request& operator=(CPartnerApps_Download_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_Download_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_Download_Request* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_Download_Request*>(
               &_CPartnerApps_Download_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CPartnerApps_Download_Request& a, CPartnerApps_Download_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_Download_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_Download_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_Download_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_Download_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_Download_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_Download_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_Download_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_Download_Request";
  }
  protected:
  explicit CPartnerApps_Download_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileIdFieldNumber = 1,
    kAppIdFieldNumber = 2,
  };
  // optional string file_id = 1;
  bool has_file_id() const;
  private:
  bool _internal_has_file_id() const;
  public:
  void clear_file_id();
  const std::string& file_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_file_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_file_id();
  PROTOBUF_NODISCARD std::string* release_file_id();
  void set_allocated_file_id(std::string* file_id);
  private:
  const std::string& _internal_file_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_id(const std::string& value);
  std::string* _internal_mutable_file_id();
  public:

  // optional int32 app_id = 2;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  int32_t app_id() const;
  void set_app_id(int32_t value);
  private:
  int32_t _internal_app_id() const;
  void _internal_set_app_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CPartnerApps_Download_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_id_;
  int32_t app_id_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CPartnerApps_Download_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPartnerApps_Download_Response) */ {
 public:
  inline CPartnerApps_Download_Response() : CPartnerApps_Download_Response(nullptr) {}
  ~CPartnerApps_Download_Response() override;
  explicit constexpr CPartnerApps_Download_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPartnerApps_Download_Response(const CPartnerApps_Download_Response& from);
  CPartnerApps_Download_Response(CPartnerApps_Download_Response&& from) noexcept
    : CPartnerApps_Download_Response() {
    *this = ::std::move(from);
  }

  inline CPartnerApps_Download_Response& operator=(const CPartnerApps_Download_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPartnerApps_Download_Response& operator=(CPartnerApps_Download_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPartnerApps_Download_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPartnerApps_Download_Response* internal_default_instance() {
    return reinterpret_cast<const CPartnerApps_Download_Response*>(
               &_CPartnerApps_Download_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CPartnerApps_Download_Response& a, CPartnerApps_Download_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CPartnerApps_Download_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPartnerApps_Download_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPartnerApps_Download_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPartnerApps_Download_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPartnerApps_Download_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CPartnerApps_Download_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPartnerApps_Download_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPartnerApps_Download_Response";
  }
  protected:
  explicit CPartnerApps_Download_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDownloadUrlFieldNumber = 1,
    kAppIdFieldNumber = 2,
  };
  // optional string download_url = 1;
  bool has_download_url() const;
  private:
  bool _internal_has_download_url() const;
  public:
  void clear_download_url();
  const std::string& download_url() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_download_url(ArgT0&& arg0, ArgT... args);
  std::string* mutable_download_url();
  PROTOBUF_NODISCARD std::string* release_download_url();
  void set_allocated_download_url(std::string* download_url);
  private:
  const std::string& _internal_download_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_download_url(const std::string& value);
  std::string* _internal_mutable_download_url();
  public:

  // optional int32 app_id = 2;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  int32_t app_id() const;
  void set_app_id(int32_t value);
  private:
  int32_t _internal_app_id() const;
  void _internal_set_app_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CPartnerApps_Download_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr download_url_;
  int32_t app_id_;
  friend struct ::TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto;
};
// ===================================================================

class PartnerApps_Stub;

class PartnerApps : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline PartnerApps() {};
 public:
  virtual ~PartnerApps();

  typedef PartnerApps_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void RequestKVSignUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_RequestUploadToken_Request* request,
                       ::CPartnerApps_RequestUploadToken_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RequestDRMUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_RequestUploadToken_Request* request,
                       ::CPartnerApps_RequestUploadToken_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RequestCEGUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_RequestUploadToken_Request* request,
                       ::CPartnerApps_RequestUploadToken_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RequestDepotUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_RequestUploadToken_Request* request,
                       ::CPartnerApps_RequestUploadToken_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void FinishUploadKVSign(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_FinishUpload_Request* request,
                       ::CPartnerApps_FinishUploadKVSign_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void FinishUploadDRMUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_FinishUploadLegacyDRM_Request* request,
                       ::CPartnerApps_FinishUploadLegacyDRM_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void FinishUploadCEGUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_FinishUpload_Request* request,
                       ::CPartnerApps_FinishUpload_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void FinishUploadDepotUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_FinishUploadDepot_Request* request,
                       ::CPartnerApps_FinishUploadDepot_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetDepotBuildResult(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_GetDepotBuildResult_Request* request,
                       ::CPartnerApps_GetDepotBuildResult_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void FindDRMUploads(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_FindDRMUploads_Request* request,
                       ::CPartnerApps_FindDRMUploads_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void Download(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_Download_Request* request,
                       ::CPartnerApps_Download_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(PartnerApps);
};

class PartnerApps_Stub : public PartnerApps {
 public:
  PartnerApps_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  PartnerApps_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~PartnerApps_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements PartnerApps ------------------------------------------

  void RequestKVSignUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_RequestUploadToken_Request* request,
                       ::CPartnerApps_RequestUploadToken_Response* response,
                       ::google::protobuf::Closure* done);
  void RequestDRMUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_RequestUploadToken_Request* request,
                       ::CPartnerApps_RequestUploadToken_Response* response,
                       ::google::protobuf::Closure* done);
  void RequestCEGUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_RequestUploadToken_Request* request,
                       ::CPartnerApps_RequestUploadToken_Response* response,
                       ::google::protobuf::Closure* done);
  void RequestDepotUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_RequestUploadToken_Request* request,
                       ::CPartnerApps_RequestUploadToken_Response* response,
                       ::google::protobuf::Closure* done);
  void FinishUploadKVSign(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_FinishUpload_Request* request,
                       ::CPartnerApps_FinishUploadKVSign_Response* response,
                       ::google::protobuf::Closure* done);
  void FinishUploadDRMUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_FinishUploadLegacyDRM_Request* request,
                       ::CPartnerApps_FinishUploadLegacyDRM_Response* response,
                       ::google::protobuf::Closure* done);
  void FinishUploadCEGUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_FinishUpload_Request* request,
                       ::CPartnerApps_FinishUpload_Response* response,
                       ::google::protobuf::Closure* done);
  void FinishUploadDepotUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_FinishUploadDepot_Request* request,
                       ::CPartnerApps_FinishUploadDepot_Response* response,
                       ::google::protobuf::Closure* done);
  void GetDepotBuildResult(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_GetDepotBuildResult_Request* request,
                       ::CPartnerApps_GetDepotBuildResult_Response* response,
                       ::google::protobuf::Closure* done);
  void FindDRMUploads(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_FindDRMUploads_Request* request,
                       ::CPartnerApps_FindDRMUploads_Response* response,
                       ::google::protobuf::Closure* done);
  void Download(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CPartnerApps_Download_Request* request,
                       ::CPartnerApps_Download_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(PartnerApps_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CPartnerApps_RequestUploadToken_Request

// optional string filename = 1;
inline bool CPartnerApps_RequestUploadToken_Request::_internal_has_filename() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPartnerApps_RequestUploadToken_Request::has_filename() const {
  return _internal_has_filename();
}
inline void CPartnerApps_RequestUploadToken_Request::clear_filename() {
  filename_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CPartnerApps_RequestUploadToken_Request::filename() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_RequestUploadToken_Request.filename)
  return _internal_filename();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CPartnerApps_RequestUploadToken_Request::set_filename(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CPartnerApps_RequestUploadToken_Request.filename)
}
inline std::string* CPartnerApps_RequestUploadToken_Request::mutable_filename() {
  std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:CPartnerApps_RequestUploadToken_Request.filename)
  return _s;
}
inline const std::string& CPartnerApps_RequestUploadToken_Request::_internal_filename() const {
  return filename_.Get();
}
inline void CPartnerApps_RequestUploadToken_Request::_internal_set_filename(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CPartnerApps_RequestUploadToken_Request::_internal_mutable_filename() {
  _has_bits_[0] |= 0x00000001u;
  return filename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CPartnerApps_RequestUploadToken_Request::release_filename() {
  // @@protoc_insertion_point(field_release:CPartnerApps_RequestUploadToken_Request.filename)
  if (!_internal_has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = filename_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (filename_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    filename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CPartnerApps_RequestUploadToken_Request::set_allocated_filename(std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filename,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (filename_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    filename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CPartnerApps_RequestUploadToken_Request.filename)
}

// optional uint32 appid = 2;
inline bool CPartnerApps_RequestUploadToken_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CPartnerApps_RequestUploadToken_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CPartnerApps_RequestUploadToken_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CPartnerApps_RequestUploadToken_Request::_internal_appid() const {
  return appid_;
}
inline uint32_t CPartnerApps_RequestUploadToken_Request::appid() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_RequestUploadToken_Request.appid)
  return _internal_appid();
}
inline void CPartnerApps_RequestUploadToken_Request::_internal_set_appid(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
}
inline void CPartnerApps_RequestUploadToken_Request::set_appid(uint32_t value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_RequestUploadToken_Request.appid)
}

// -------------------------------------------------------------------

// CPartnerApps_RequestUploadToken_Response

// optional uint64 upload_token = 1;
inline bool CPartnerApps_RequestUploadToken_Response::_internal_has_upload_token() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CPartnerApps_RequestUploadToken_Response::has_upload_token() const {
  return _internal_has_upload_token();
}
inline void CPartnerApps_RequestUploadToken_Response::clear_upload_token() {
  upload_token_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CPartnerApps_RequestUploadToken_Response::_internal_upload_token() const {
  return upload_token_;
}
inline uint64_t CPartnerApps_RequestUploadToken_Response::upload_token() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_RequestUploadToken_Response.upload_token)
  return _internal_upload_token();
}
inline void CPartnerApps_RequestUploadToken_Response::_internal_set_upload_token(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  upload_token_ = value;
}
inline void CPartnerApps_RequestUploadToken_Response::set_upload_token(uint64_t value) {
  _internal_set_upload_token(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_RequestUploadToken_Response.upload_token)
}

// optional string location = 2;
inline bool CPartnerApps_RequestUploadToken_Response::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPartnerApps_RequestUploadToken_Response::has_location() const {
  return _internal_has_location();
}
inline void CPartnerApps_RequestUploadToken_Response::clear_location() {
  location_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CPartnerApps_RequestUploadToken_Response::location() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_RequestUploadToken_Response.location)
  return _internal_location();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CPartnerApps_RequestUploadToken_Response::set_location(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 location_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CPartnerApps_RequestUploadToken_Response.location)
}
inline std::string* CPartnerApps_RequestUploadToken_Response::mutable_location() {
  std::string* _s = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:CPartnerApps_RequestUploadToken_Response.location)
  return _s;
}
inline const std::string& CPartnerApps_RequestUploadToken_Response::_internal_location() const {
  return location_.Get();
}
inline void CPartnerApps_RequestUploadToken_Response::_internal_set_location(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  location_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CPartnerApps_RequestUploadToken_Response::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  return location_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CPartnerApps_RequestUploadToken_Response::release_location() {
  // @@protoc_insertion_point(field_release:CPartnerApps_RequestUploadToken_Response.location)
  if (!_internal_has_location()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = location_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (location_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CPartnerApps_RequestUploadToken_Response::set_allocated_location(std::string* location) {
  if (location != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), location,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (location_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CPartnerApps_RequestUploadToken_Response.location)
}

// optional uint64 routing_id = 3;
inline bool CPartnerApps_RequestUploadToken_Response::_internal_has_routing_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CPartnerApps_RequestUploadToken_Response::has_routing_id() const {
  return _internal_has_routing_id();
}
inline void CPartnerApps_RequestUploadToken_Response::clear_routing_id() {
  routing_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CPartnerApps_RequestUploadToken_Response::_internal_routing_id() const {
  return routing_id_;
}
inline uint64_t CPartnerApps_RequestUploadToken_Response::routing_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_RequestUploadToken_Response.routing_id)
  return _internal_routing_id();
}
inline void CPartnerApps_RequestUploadToken_Response::_internal_set_routing_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  routing_id_ = value;
}
inline void CPartnerApps_RequestUploadToken_Response::set_routing_id(uint64_t value) {
  _internal_set_routing_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_RequestUploadToken_Response.routing_id)
}

// -------------------------------------------------------------------

// CPartnerApps_FinishUpload_Request

// optional uint64 upload_token = 1;
inline bool CPartnerApps_FinishUpload_Request::_internal_has_upload_token() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUpload_Request::has_upload_token() const {
  return _internal_has_upload_token();
}
inline void CPartnerApps_FinishUpload_Request::clear_upload_token() {
  upload_token_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CPartnerApps_FinishUpload_Request::_internal_upload_token() const {
  return upload_token_;
}
inline uint64_t CPartnerApps_FinishUpload_Request::upload_token() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUpload_Request.upload_token)
  return _internal_upload_token();
}
inline void CPartnerApps_FinishUpload_Request::_internal_set_upload_token(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  upload_token_ = value;
}
inline void CPartnerApps_FinishUpload_Request::set_upload_token(uint64_t value) {
  _internal_set_upload_token(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUpload_Request.upload_token)
}

// optional uint64 routing_id = 2;
inline bool CPartnerApps_FinishUpload_Request::_internal_has_routing_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUpload_Request::has_routing_id() const {
  return _internal_has_routing_id();
}
inline void CPartnerApps_FinishUpload_Request::clear_routing_id() {
  routing_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CPartnerApps_FinishUpload_Request::_internal_routing_id() const {
  return routing_id_;
}
inline uint64_t CPartnerApps_FinishUpload_Request::routing_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUpload_Request.routing_id)
  return _internal_routing_id();
}
inline void CPartnerApps_FinishUpload_Request::_internal_set_routing_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  routing_id_ = value;
}
inline void CPartnerApps_FinishUpload_Request::set_routing_id(uint64_t value) {
  _internal_set_routing_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUpload_Request.routing_id)
}

// optional uint32 app_id = 3;
inline bool CPartnerApps_FinishUpload_Request::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUpload_Request::has_app_id() const {
  return _internal_has_app_id();
}
inline void CPartnerApps_FinishUpload_Request::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CPartnerApps_FinishUpload_Request::_internal_app_id() const {
  return app_id_;
}
inline uint32_t CPartnerApps_FinishUpload_Request::app_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUpload_Request.app_id)
  return _internal_app_id();
}
inline void CPartnerApps_FinishUpload_Request::_internal_set_app_id(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  app_id_ = value;
}
inline void CPartnerApps_FinishUpload_Request::set_app_id(uint32_t value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUpload_Request.app_id)
}

// -------------------------------------------------------------------

// CPartnerApps_FinishUploadKVSign_Response

// optional string signed_installscript = 1;
inline bool CPartnerApps_FinishUploadKVSign_Response::_internal_has_signed_installscript() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUploadKVSign_Response::has_signed_installscript() const {
  return _internal_has_signed_installscript();
}
inline void CPartnerApps_FinishUploadKVSign_Response::clear_signed_installscript() {
  signed_installscript_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CPartnerApps_FinishUploadKVSign_Response::signed_installscript() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUploadKVSign_Response.signed_installscript)
  return _internal_signed_installscript();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CPartnerApps_FinishUploadKVSign_Response::set_signed_installscript(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 signed_installscript_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUploadKVSign_Response.signed_installscript)
}
inline std::string* CPartnerApps_FinishUploadKVSign_Response::mutable_signed_installscript() {
  std::string* _s = _internal_mutable_signed_installscript();
  // @@protoc_insertion_point(field_mutable:CPartnerApps_FinishUploadKVSign_Response.signed_installscript)
  return _s;
}
inline const std::string& CPartnerApps_FinishUploadKVSign_Response::_internal_signed_installscript() const {
  return signed_installscript_.Get();
}
inline void CPartnerApps_FinishUploadKVSign_Response::_internal_set_signed_installscript(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  signed_installscript_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CPartnerApps_FinishUploadKVSign_Response::_internal_mutable_signed_installscript() {
  _has_bits_[0] |= 0x00000001u;
  return signed_installscript_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CPartnerApps_FinishUploadKVSign_Response::release_signed_installscript() {
  // @@protoc_insertion_point(field_release:CPartnerApps_FinishUploadKVSign_Response.signed_installscript)
  if (!_internal_has_signed_installscript()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = signed_installscript_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (signed_installscript_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    signed_installscript_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CPartnerApps_FinishUploadKVSign_Response::set_allocated_signed_installscript(std::string* signed_installscript) {
  if (signed_installscript != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  signed_installscript_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signed_installscript,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (signed_installscript_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    signed_installscript_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CPartnerApps_FinishUploadKVSign_Response.signed_installscript)
}

// -------------------------------------------------------------------

// CPartnerApps_FinishUploadLegacyDRM_Request

// optional uint64 upload_token = 1;
inline bool CPartnerApps_FinishUploadLegacyDRM_Request::_internal_has_upload_token() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUploadLegacyDRM_Request::has_upload_token() const {
  return _internal_has_upload_token();
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::clear_upload_token() {
  upload_token_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CPartnerApps_FinishUploadLegacyDRM_Request::_internal_upload_token() const {
  return upload_token_;
}
inline uint64_t CPartnerApps_FinishUploadLegacyDRM_Request::upload_token() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUploadLegacyDRM_Request.upload_token)
  return _internal_upload_token();
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::_internal_set_upload_token(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  upload_token_ = value;
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::set_upload_token(uint64_t value) {
  _internal_set_upload_token(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUploadLegacyDRM_Request.upload_token)
}

// optional uint64 routing_id = 2;
inline bool CPartnerApps_FinishUploadLegacyDRM_Request::_internal_has_routing_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUploadLegacyDRM_Request::has_routing_id() const {
  return _internal_has_routing_id();
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::clear_routing_id() {
  routing_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CPartnerApps_FinishUploadLegacyDRM_Request::_internal_routing_id() const {
  return routing_id_;
}
inline uint64_t CPartnerApps_FinishUploadLegacyDRM_Request::routing_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUploadLegacyDRM_Request.routing_id)
  return _internal_routing_id();
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::_internal_set_routing_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  routing_id_ = value;
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::set_routing_id(uint64_t value) {
  _internal_set_routing_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUploadLegacyDRM_Request.routing_id)
}

// optional uint32 app_id = 3;
inline bool CPartnerApps_FinishUploadLegacyDRM_Request::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUploadLegacyDRM_Request::has_app_id() const {
  return _internal_has_app_id();
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CPartnerApps_FinishUploadLegacyDRM_Request::_internal_app_id() const {
  return app_id_;
}
inline uint32_t CPartnerApps_FinishUploadLegacyDRM_Request::app_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUploadLegacyDRM_Request.app_id)
  return _internal_app_id();
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::_internal_set_app_id(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  app_id_ = value;
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::set_app_id(uint32_t value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUploadLegacyDRM_Request.app_id)
}

// optional uint32 flags = 4;
inline bool CPartnerApps_FinishUploadLegacyDRM_Request::_internal_has_flags() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUploadLegacyDRM_Request::has_flags() const {
  return _internal_has_flags();
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::clear_flags() {
  flags_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CPartnerApps_FinishUploadLegacyDRM_Request::_internal_flags() const {
  return flags_;
}
inline uint32_t CPartnerApps_FinishUploadLegacyDRM_Request::flags() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUploadLegacyDRM_Request.flags)
  return _internal_flags();
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::_internal_set_flags(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  flags_ = value;
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::set_flags(uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUploadLegacyDRM_Request.flags)
}

// optional string tool_name = 5;
inline bool CPartnerApps_FinishUploadLegacyDRM_Request::_internal_has_tool_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUploadLegacyDRM_Request::has_tool_name() const {
  return _internal_has_tool_name();
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::clear_tool_name() {
  tool_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CPartnerApps_FinishUploadLegacyDRM_Request::tool_name() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUploadLegacyDRM_Request.tool_name)
  return _internal_tool_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CPartnerApps_FinishUploadLegacyDRM_Request::set_tool_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 tool_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUploadLegacyDRM_Request.tool_name)
}
inline std::string* CPartnerApps_FinishUploadLegacyDRM_Request::mutable_tool_name() {
  std::string* _s = _internal_mutable_tool_name();
  // @@protoc_insertion_point(field_mutable:CPartnerApps_FinishUploadLegacyDRM_Request.tool_name)
  return _s;
}
inline const std::string& CPartnerApps_FinishUploadLegacyDRM_Request::_internal_tool_name() const {
  return tool_name_.Get();
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::_internal_set_tool_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  tool_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CPartnerApps_FinishUploadLegacyDRM_Request::_internal_mutable_tool_name() {
  _has_bits_[0] |= 0x00000001u;
  return tool_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CPartnerApps_FinishUploadLegacyDRM_Request::release_tool_name() {
  // @@protoc_insertion_point(field_release:CPartnerApps_FinishUploadLegacyDRM_Request.tool_name)
  if (!_internal_has_tool_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = tool_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (tool_name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    tool_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::set_allocated_tool_name(std::string* tool_name) {
  if (tool_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tool_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tool_name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (tool_name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    tool_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CPartnerApps_FinishUploadLegacyDRM_Request.tool_name)
}

// optional bool use_cloud = 6 [default = false, (.description) = "use cloud storage for build products"];
inline bool CPartnerApps_FinishUploadLegacyDRM_Request::_internal_has_use_cloud() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUploadLegacyDRM_Request::has_use_cloud() const {
  return _internal_has_use_cloud();
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::clear_use_cloud() {
  use_cloud_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CPartnerApps_FinishUploadLegacyDRM_Request::_internal_use_cloud() const {
  return use_cloud_;
}
inline bool CPartnerApps_FinishUploadLegacyDRM_Request::use_cloud() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUploadLegacyDRM_Request.use_cloud)
  return _internal_use_cloud();
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::_internal_set_use_cloud(bool value) {
  _has_bits_[0] |= 0x00000020u;
  use_cloud_ = value;
}
inline void CPartnerApps_FinishUploadLegacyDRM_Request::set_use_cloud(bool value) {
  _internal_set_use_cloud(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUploadLegacyDRM_Request.use_cloud)
}

// -------------------------------------------------------------------

// CPartnerApps_FinishUploadLegacyDRM_Response

// optional string file_id = 1;
inline bool CPartnerApps_FinishUploadLegacyDRM_Response::_internal_has_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUploadLegacyDRM_Response::has_file_id() const {
  return _internal_has_file_id();
}
inline void CPartnerApps_FinishUploadLegacyDRM_Response::clear_file_id() {
  file_id_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CPartnerApps_FinishUploadLegacyDRM_Response::file_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUploadLegacyDRM_Response.file_id)
  return _internal_file_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CPartnerApps_FinishUploadLegacyDRM_Response::set_file_id(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 file_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUploadLegacyDRM_Response.file_id)
}
inline std::string* CPartnerApps_FinishUploadLegacyDRM_Response::mutable_file_id() {
  std::string* _s = _internal_mutable_file_id();
  // @@protoc_insertion_point(field_mutable:CPartnerApps_FinishUploadLegacyDRM_Response.file_id)
  return _s;
}
inline const std::string& CPartnerApps_FinishUploadLegacyDRM_Response::_internal_file_id() const {
  return file_id_.Get();
}
inline void CPartnerApps_FinishUploadLegacyDRM_Response::_internal_set_file_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  file_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CPartnerApps_FinishUploadLegacyDRM_Response::_internal_mutable_file_id() {
  _has_bits_[0] |= 0x00000001u;
  return file_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CPartnerApps_FinishUploadLegacyDRM_Response::release_file_id() {
  // @@protoc_insertion_point(field_release:CPartnerApps_FinishUploadLegacyDRM_Response.file_id)
  if (!_internal_has_file_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = file_id_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (file_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    file_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CPartnerApps_FinishUploadLegacyDRM_Response::set_allocated_file_id(std::string* file_id) {
  if (file_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  file_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (file_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    file_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CPartnerApps_FinishUploadLegacyDRM_Response.file_id)
}

// -------------------------------------------------------------------

// CPartnerApps_FinishUpload_Response

// -------------------------------------------------------------------

// CPartnerApps_FinishUploadDepot_Request

// optional uint64 upload_token = 1;
inline bool CPartnerApps_FinishUploadDepot_Request::_internal_has_upload_token() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUploadDepot_Request::has_upload_token() const {
  return _internal_has_upload_token();
}
inline void CPartnerApps_FinishUploadDepot_Request::clear_upload_token() {
  upload_token_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CPartnerApps_FinishUploadDepot_Request::_internal_upload_token() const {
  return upload_token_;
}
inline uint64_t CPartnerApps_FinishUploadDepot_Request::upload_token() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUploadDepot_Request.upload_token)
  return _internal_upload_token();
}
inline void CPartnerApps_FinishUploadDepot_Request::_internal_set_upload_token(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  upload_token_ = value;
}
inline void CPartnerApps_FinishUploadDepot_Request::set_upload_token(uint64_t value) {
  _internal_set_upload_token(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUploadDepot_Request.upload_token)
}

// optional uint64 routing_id = 2;
inline bool CPartnerApps_FinishUploadDepot_Request::_internal_has_routing_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUploadDepot_Request::has_routing_id() const {
  return _internal_has_routing_id();
}
inline void CPartnerApps_FinishUploadDepot_Request::clear_routing_id() {
  routing_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CPartnerApps_FinishUploadDepot_Request::_internal_routing_id() const {
  return routing_id_;
}
inline uint64_t CPartnerApps_FinishUploadDepot_Request::routing_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUploadDepot_Request.routing_id)
  return _internal_routing_id();
}
inline void CPartnerApps_FinishUploadDepot_Request::_internal_set_routing_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  routing_id_ = value;
}
inline void CPartnerApps_FinishUploadDepot_Request::set_routing_id(uint64_t value) {
  _internal_set_routing_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUploadDepot_Request.routing_id)
}

// optional uint32 app_id = 3;
inline bool CPartnerApps_FinishUploadDepot_Request::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUploadDepot_Request::has_app_id() const {
  return _internal_has_app_id();
}
inline void CPartnerApps_FinishUploadDepot_Request::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CPartnerApps_FinishUploadDepot_Request::_internal_app_id() const {
  return app_id_;
}
inline uint32_t CPartnerApps_FinishUploadDepot_Request::app_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUploadDepot_Request.app_id)
  return _internal_app_id();
}
inline void CPartnerApps_FinishUploadDepot_Request::_internal_set_app_id(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  app_id_ = value;
}
inline void CPartnerApps_FinishUploadDepot_Request::set_app_id(uint32_t value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUploadDepot_Request.app_id)
}

// optional uint32 depot_id = 4;
inline bool CPartnerApps_FinishUploadDepot_Request::_internal_has_depot_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUploadDepot_Request::has_depot_id() const {
  return _internal_has_depot_id();
}
inline void CPartnerApps_FinishUploadDepot_Request::clear_depot_id() {
  depot_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CPartnerApps_FinishUploadDepot_Request::_internal_depot_id() const {
  return depot_id_;
}
inline uint32_t CPartnerApps_FinishUploadDepot_Request::depot_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUploadDepot_Request.depot_id)
  return _internal_depot_id();
}
inline void CPartnerApps_FinishUploadDepot_Request::_internal_set_depot_id(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  depot_id_ = value;
}
inline void CPartnerApps_FinishUploadDepot_Request::set_depot_id(uint32_t value) {
  _internal_set_depot_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUploadDepot_Request.depot_id)
}

// optional uint32 build_flags = 5;
inline bool CPartnerApps_FinishUploadDepot_Request::_internal_has_build_flags() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUploadDepot_Request::has_build_flags() const {
  return _internal_has_build_flags();
}
inline void CPartnerApps_FinishUploadDepot_Request::clear_build_flags() {
  build_flags_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CPartnerApps_FinishUploadDepot_Request::_internal_build_flags() const {
  return build_flags_;
}
inline uint32_t CPartnerApps_FinishUploadDepot_Request::build_flags() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUploadDepot_Request.build_flags)
  return _internal_build_flags();
}
inline void CPartnerApps_FinishUploadDepot_Request::_internal_set_build_flags(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  build_flags_ = value;
}
inline void CPartnerApps_FinishUploadDepot_Request::set_build_flags(uint32_t value) {
  _internal_set_build_flags(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUploadDepot_Request.build_flags)
}

// -------------------------------------------------------------------

// CPartnerApps_FinishUploadDepot_Response

// optional uint64 build_routing_id = 1;
inline bool CPartnerApps_FinishUploadDepot_Response::_internal_has_build_routing_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPartnerApps_FinishUploadDepot_Response::has_build_routing_id() const {
  return _internal_has_build_routing_id();
}
inline void CPartnerApps_FinishUploadDepot_Response::clear_build_routing_id() {
  build_routing_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CPartnerApps_FinishUploadDepot_Response::_internal_build_routing_id() const {
  return build_routing_id_;
}
inline uint64_t CPartnerApps_FinishUploadDepot_Response::build_routing_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FinishUploadDepot_Response.build_routing_id)
  return _internal_build_routing_id();
}
inline void CPartnerApps_FinishUploadDepot_Response::_internal_set_build_routing_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  build_routing_id_ = value;
}
inline void CPartnerApps_FinishUploadDepot_Response::set_build_routing_id(uint64_t value) {
  _internal_set_build_routing_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FinishUploadDepot_Response.build_routing_id)
}

// -------------------------------------------------------------------

// CPartnerApps_GetDepotBuildResult_Request

// optional uint64 upload_token = 1;
inline bool CPartnerApps_GetDepotBuildResult_Request::_internal_has_upload_token() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPartnerApps_GetDepotBuildResult_Request::has_upload_token() const {
  return _internal_has_upload_token();
}
inline void CPartnerApps_GetDepotBuildResult_Request::clear_upload_token() {
  upload_token_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CPartnerApps_GetDepotBuildResult_Request::_internal_upload_token() const {
  return upload_token_;
}
inline uint64_t CPartnerApps_GetDepotBuildResult_Request::upload_token() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_GetDepotBuildResult_Request.upload_token)
  return _internal_upload_token();
}
inline void CPartnerApps_GetDepotBuildResult_Request::_internal_set_upload_token(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  upload_token_ = value;
}
inline void CPartnerApps_GetDepotBuildResult_Request::set_upload_token(uint64_t value) {
  _internal_set_upload_token(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_GetDepotBuildResult_Request.upload_token)
}

// optional uint64 routing_id = 2;
inline bool CPartnerApps_GetDepotBuildResult_Request::_internal_has_routing_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CPartnerApps_GetDepotBuildResult_Request::has_routing_id() const {
  return _internal_has_routing_id();
}
inline void CPartnerApps_GetDepotBuildResult_Request::clear_routing_id() {
  routing_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CPartnerApps_GetDepotBuildResult_Request::_internal_routing_id() const {
  return routing_id_;
}
inline uint64_t CPartnerApps_GetDepotBuildResult_Request::routing_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_GetDepotBuildResult_Request.routing_id)
  return _internal_routing_id();
}
inline void CPartnerApps_GetDepotBuildResult_Request::_internal_set_routing_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  routing_id_ = value;
}
inline void CPartnerApps_GetDepotBuildResult_Request::set_routing_id(uint64_t value) {
  _internal_set_routing_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_GetDepotBuildResult_Request.routing_id)
}

// -------------------------------------------------------------------

// CPartnerApps_GetDepotBuildResult_Response

// optional uint64 manifest_id = 1;
inline bool CPartnerApps_GetDepotBuildResult_Response::_internal_has_manifest_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CPartnerApps_GetDepotBuildResult_Response::has_manifest_id() const {
  return _internal_has_manifest_id();
}
inline void CPartnerApps_GetDepotBuildResult_Response::clear_manifest_id() {
  manifest_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CPartnerApps_GetDepotBuildResult_Response::_internal_manifest_id() const {
  return manifest_id_;
}
inline uint64_t CPartnerApps_GetDepotBuildResult_Response::manifest_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_GetDepotBuildResult_Response.manifest_id)
  return _internal_manifest_id();
}
inline void CPartnerApps_GetDepotBuildResult_Response::_internal_set_manifest_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  manifest_id_ = value;
}
inline void CPartnerApps_GetDepotBuildResult_Response::set_manifest_id(uint64_t value) {
  _internal_set_manifest_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_GetDepotBuildResult_Response.manifest_id)
}

// optional string error_msg = 2;
inline bool CPartnerApps_GetDepotBuildResult_Response::_internal_has_error_msg() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPartnerApps_GetDepotBuildResult_Response::has_error_msg() const {
  return _internal_has_error_msg();
}
inline void CPartnerApps_GetDepotBuildResult_Response::clear_error_msg() {
  error_msg_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CPartnerApps_GetDepotBuildResult_Response::error_msg() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_GetDepotBuildResult_Response.error_msg)
  return _internal_error_msg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CPartnerApps_GetDepotBuildResult_Response::set_error_msg(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 error_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CPartnerApps_GetDepotBuildResult_Response.error_msg)
}
inline std::string* CPartnerApps_GetDepotBuildResult_Response::mutable_error_msg() {
  std::string* _s = _internal_mutable_error_msg();
  // @@protoc_insertion_point(field_mutable:CPartnerApps_GetDepotBuildResult_Response.error_msg)
  return _s;
}
inline const std::string& CPartnerApps_GetDepotBuildResult_Response::_internal_error_msg() const {
  return error_msg_.Get();
}
inline void CPartnerApps_GetDepotBuildResult_Response::_internal_set_error_msg(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  error_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CPartnerApps_GetDepotBuildResult_Response::_internal_mutable_error_msg() {
  _has_bits_[0] |= 0x00000001u;
  return error_msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CPartnerApps_GetDepotBuildResult_Response::release_error_msg() {
  // @@protoc_insertion_point(field_release:CPartnerApps_GetDepotBuildResult_Response.error_msg)
  if (!_internal_has_error_msg()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = error_msg_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (error_msg_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    error_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CPartnerApps_GetDepotBuildResult_Response::set_allocated_error_msg(std::string* error_msg) {
  if (error_msg != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  error_msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), error_msg,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (error_msg_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    error_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CPartnerApps_GetDepotBuildResult_Response.error_msg)
}

// -------------------------------------------------------------------

// CPartnerApps_FindDRMUploads_Request

// optional int32 app_id = 1;
inline bool CPartnerApps_FindDRMUploads_Request::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPartnerApps_FindDRMUploads_Request::has_app_id() const {
  return _internal_has_app_id();
}
inline void CPartnerApps_FindDRMUploads_Request::clear_app_id() {
  app_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline int32_t CPartnerApps_FindDRMUploads_Request::_internal_app_id() const {
  return app_id_;
}
inline int32_t CPartnerApps_FindDRMUploads_Request::app_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FindDRMUploads_Request.app_id)
  return _internal_app_id();
}
inline void CPartnerApps_FindDRMUploads_Request::_internal_set_app_id(int32_t value) {
  _has_bits_[0] |= 0x00000001u;
  app_id_ = value;
}
inline void CPartnerApps_FindDRMUploads_Request::set_app_id(int32_t value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_FindDRMUploads_Request.app_id)
}

// -------------------------------------------------------------------

// CPartnerApps_ExistingDRMUpload

// optional string file_id = 1;
inline bool CPartnerApps_ExistingDRMUpload::_internal_has_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPartnerApps_ExistingDRMUpload::has_file_id() const {
  return _internal_has_file_id();
}
inline void CPartnerApps_ExistingDRMUpload::clear_file_id() {
  file_id_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CPartnerApps_ExistingDRMUpload::file_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_ExistingDRMUpload.file_id)
  return _internal_file_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CPartnerApps_ExistingDRMUpload::set_file_id(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 file_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CPartnerApps_ExistingDRMUpload.file_id)
}
inline std::string* CPartnerApps_ExistingDRMUpload::mutable_file_id() {
  std::string* _s = _internal_mutable_file_id();
  // @@protoc_insertion_point(field_mutable:CPartnerApps_ExistingDRMUpload.file_id)
  return _s;
}
inline const std::string& CPartnerApps_ExistingDRMUpload::_internal_file_id() const {
  return file_id_.Get();
}
inline void CPartnerApps_ExistingDRMUpload::_internal_set_file_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  file_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CPartnerApps_ExistingDRMUpload::_internal_mutable_file_id() {
  _has_bits_[0] |= 0x00000001u;
  return file_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CPartnerApps_ExistingDRMUpload::release_file_id() {
  // @@protoc_insertion_point(field_release:CPartnerApps_ExistingDRMUpload.file_id)
  if (!_internal_has_file_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = file_id_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (file_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    file_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CPartnerApps_ExistingDRMUpload::set_allocated_file_id(std::string* file_id) {
  if (file_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  file_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (file_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    file_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CPartnerApps_ExistingDRMUpload.file_id)
}

// optional uint32 app_id = 2;
inline bool CPartnerApps_ExistingDRMUpload::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CPartnerApps_ExistingDRMUpload::has_app_id() const {
  return _internal_has_app_id();
}
inline void CPartnerApps_ExistingDRMUpload::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CPartnerApps_ExistingDRMUpload::_internal_app_id() const {
  return app_id_;
}
inline uint32_t CPartnerApps_ExistingDRMUpload::app_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_ExistingDRMUpload.app_id)
  return _internal_app_id();
}
inline void CPartnerApps_ExistingDRMUpload::_internal_set_app_id(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  app_id_ = value;
}
inline void CPartnerApps_ExistingDRMUpload::set_app_id(uint32_t value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_ExistingDRMUpload.app_id)
}

// optional int32 actor_id = 3;
inline bool CPartnerApps_ExistingDRMUpload::_internal_has_actor_id() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CPartnerApps_ExistingDRMUpload::has_actor_id() const {
  return _internal_has_actor_id();
}
inline void CPartnerApps_ExistingDRMUpload::clear_actor_id() {
  actor_id_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline int32_t CPartnerApps_ExistingDRMUpload::_internal_actor_id() const {
  return actor_id_;
}
inline int32_t CPartnerApps_ExistingDRMUpload::actor_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_ExistingDRMUpload.actor_id)
  return _internal_actor_id();
}
inline void CPartnerApps_ExistingDRMUpload::_internal_set_actor_id(int32_t value) {
  _has_bits_[0] |= 0x00000020u;
  actor_id_ = value;
}
inline void CPartnerApps_ExistingDRMUpload::set_actor_id(int32_t value) {
  _internal_set_actor_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_ExistingDRMUpload.actor_id)
}

// optional string supplied_name = 5;
inline bool CPartnerApps_ExistingDRMUpload::_internal_has_supplied_name() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CPartnerApps_ExistingDRMUpload::has_supplied_name() const {
  return _internal_has_supplied_name();
}
inline void CPartnerApps_ExistingDRMUpload::clear_supplied_name() {
  supplied_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CPartnerApps_ExistingDRMUpload::supplied_name() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_ExistingDRMUpload.supplied_name)
  return _internal_supplied_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CPartnerApps_ExistingDRMUpload::set_supplied_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 supplied_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CPartnerApps_ExistingDRMUpload.supplied_name)
}
inline std::string* CPartnerApps_ExistingDRMUpload::mutable_supplied_name() {
  std::string* _s = _internal_mutable_supplied_name();
  // @@protoc_insertion_point(field_mutable:CPartnerApps_ExistingDRMUpload.supplied_name)
  return _s;
}
inline const std::string& CPartnerApps_ExistingDRMUpload::_internal_supplied_name() const {
  return supplied_name_.Get();
}
inline void CPartnerApps_ExistingDRMUpload::_internal_set_supplied_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  supplied_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CPartnerApps_ExistingDRMUpload::_internal_mutable_supplied_name() {
  _has_bits_[0] |= 0x00000002u;
  return supplied_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CPartnerApps_ExistingDRMUpload::release_supplied_name() {
  // @@protoc_insertion_point(field_release:CPartnerApps_ExistingDRMUpload.supplied_name)
  if (!_internal_has_supplied_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  auto* p = supplied_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (supplied_name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    supplied_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CPartnerApps_ExistingDRMUpload::set_allocated_supplied_name(std::string* supplied_name) {
  if (supplied_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  supplied_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), supplied_name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (supplied_name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    supplied_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CPartnerApps_ExistingDRMUpload.supplied_name)
}

// optional uint32 flags = 6;
inline bool CPartnerApps_ExistingDRMUpload::_internal_has_flags() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CPartnerApps_ExistingDRMUpload::has_flags() const {
  return _internal_has_flags();
}
inline void CPartnerApps_ExistingDRMUpload::clear_flags() {
  flags_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CPartnerApps_ExistingDRMUpload::_internal_flags() const {
  return flags_;
}
inline uint32_t CPartnerApps_ExistingDRMUpload::flags() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_ExistingDRMUpload.flags)
  return _internal_flags();
}
inline void CPartnerApps_ExistingDRMUpload::_internal_set_flags(uint32_t value) {
  _has_bits_[0] |= 0x00000040u;
  flags_ = value;
}
inline void CPartnerApps_ExistingDRMUpload::set_flags(uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_ExistingDRMUpload.flags)
}

// optional string mod_type = 7;
inline bool CPartnerApps_ExistingDRMUpload::_internal_has_mod_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CPartnerApps_ExistingDRMUpload::has_mod_type() const {
  return _internal_has_mod_type();
}
inline void CPartnerApps_ExistingDRMUpload::clear_mod_type() {
  mod_type_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CPartnerApps_ExistingDRMUpload::mod_type() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_ExistingDRMUpload.mod_type)
  return _internal_mod_type();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CPartnerApps_ExistingDRMUpload::set_mod_type(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000004u;
 mod_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CPartnerApps_ExistingDRMUpload.mod_type)
}
inline std::string* CPartnerApps_ExistingDRMUpload::mutable_mod_type() {
  std::string* _s = _internal_mutable_mod_type();
  // @@protoc_insertion_point(field_mutable:CPartnerApps_ExistingDRMUpload.mod_type)
  return _s;
}
inline const std::string& CPartnerApps_ExistingDRMUpload::_internal_mod_type() const {
  return mod_type_.Get();
}
inline void CPartnerApps_ExistingDRMUpload::_internal_set_mod_type(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  mod_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CPartnerApps_ExistingDRMUpload::_internal_mutable_mod_type() {
  _has_bits_[0] |= 0x00000004u;
  return mod_type_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CPartnerApps_ExistingDRMUpload::release_mod_type() {
  // @@protoc_insertion_point(field_release:CPartnerApps_ExistingDRMUpload.mod_type)
  if (!_internal_has_mod_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  auto* p = mod_type_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (mod_type_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    mod_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CPartnerApps_ExistingDRMUpload::set_allocated_mod_type(std::string* mod_type) {
  if (mod_type != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  mod_type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mod_type,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (mod_type_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    mod_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CPartnerApps_ExistingDRMUpload.mod_type)
}

// optional fixed32 timestamp = 8;
inline bool CPartnerApps_ExistingDRMUpload::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CPartnerApps_ExistingDRMUpload::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void CPartnerApps_ExistingDRMUpload::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CPartnerApps_ExistingDRMUpload::_internal_timestamp() const {
  return timestamp_;
}
inline uint32_t CPartnerApps_ExistingDRMUpload::timestamp() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_ExistingDRMUpload.timestamp)
  return _internal_timestamp();
}
inline void CPartnerApps_ExistingDRMUpload::_internal_set_timestamp(uint32_t value) {
  _has_bits_[0] |= 0x00000080u;
  timestamp_ = value;
}
inline void CPartnerApps_ExistingDRMUpload::set_timestamp(uint32_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_ExistingDRMUpload.timestamp)
}

// optional string orig_file_id = 9;
inline bool CPartnerApps_ExistingDRMUpload::_internal_has_orig_file_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CPartnerApps_ExistingDRMUpload::has_orig_file_id() const {
  return _internal_has_orig_file_id();
}
inline void CPartnerApps_ExistingDRMUpload::clear_orig_file_id() {
  orig_file_id_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CPartnerApps_ExistingDRMUpload::orig_file_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_ExistingDRMUpload.orig_file_id)
  return _internal_orig_file_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CPartnerApps_ExistingDRMUpload::set_orig_file_id(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000008u;
 orig_file_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CPartnerApps_ExistingDRMUpload.orig_file_id)
}
inline std::string* CPartnerApps_ExistingDRMUpload::mutable_orig_file_id() {
  std::string* _s = _internal_mutable_orig_file_id();
  // @@protoc_insertion_point(field_mutable:CPartnerApps_ExistingDRMUpload.orig_file_id)
  return _s;
}
inline const std::string& CPartnerApps_ExistingDRMUpload::_internal_orig_file_id() const {
  return orig_file_id_.Get();
}
inline void CPartnerApps_ExistingDRMUpload::_internal_set_orig_file_id(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  orig_file_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CPartnerApps_ExistingDRMUpload::_internal_mutable_orig_file_id() {
  _has_bits_[0] |= 0x00000008u;
  return orig_file_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CPartnerApps_ExistingDRMUpload::release_orig_file_id() {
  // @@protoc_insertion_point(field_release:CPartnerApps_ExistingDRMUpload.orig_file_id)
  if (!_internal_has_orig_file_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  auto* p = orig_file_id_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (orig_file_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    orig_file_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CPartnerApps_ExistingDRMUpload::set_allocated_orig_file_id(std::string* orig_file_id) {
  if (orig_file_id != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  orig_file_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), orig_file_id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (orig_file_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    orig_file_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CPartnerApps_ExistingDRMUpload.orig_file_id)
}

// -------------------------------------------------------------------

// CPartnerApps_FindDRMUploads_Response

// repeated .CPartnerApps_ExistingDRMUpload uploads = 1;
inline int CPartnerApps_FindDRMUploads_Response::_internal_uploads_size() const {
  return uploads_.size();
}
inline int CPartnerApps_FindDRMUploads_Response::uploads_size() const {
  return _internal_uploads_size();
}
inline void CPartnerApps_FindDRMUploads_Response::clear_uploads() {
  uploads_.Clear();
}
inline ::CPartnerApps_ExistingDRMUpload* CPartnerApps_FindDRMUploads_Response::mutable_uploads(int index) {
  // @@protoc_insertion_point(field_mutable:CPartnerApps_FindDRMUploads_Response.uploads)
  return uploads_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CPartnerApps_ExistingDRMUpload >*
CPartnerApps_FindDRMUploads_Response::mutable_uploads() {
  // @@protoc_insertion_point(field_mutable_list:CPartnerApps_FindDRMUploads_Response.uploads)
  return &uploads_;
}
inline const ::CPartnerApps_ExistingDRMUpload& CPartnerApps_FindDRMUploads_Response::_internal_uploads(int index) const {
  return uploads_.Get(index);
}
inline const ::CPartnerApps_ExistingDRMUpload& CPartnerApps_FindDRMUploads_Response::uploads(int index) const {
  // @@protoc_insertion_point(field_get:CPartnerApps_FindDRMUploads_Response.uploads)
  return _internal_uploads(index);
}
inline ::CPartnerApps_ExistingDRMUpload* CPartnerApps_FindDRMUploads_Response::_internal_add_uploads() {
  return uploads_.Add();
}
inline ::CPartnerApps_ExistingDRMUpload* CPartnerApps_FindDRMUploads_Response::add_uploads() {
  ::CPartnerApps_ExistingDRMUpload* _add = _internal_add_uploads();
  // @@protoc_insertion_point(field_add:CPartnerApps_FindDRMUploads_Response.uploads)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CPartnerApps_ExistingDRMUpload >&
CPartnerApps_FindDRMUploads_Response::uploads() const {
  // @@protoc_insertion_point(field_list:CPartnerApps_FindDRMUploads_Response.uploads)
  return uploads_;
}

// -------------------------------------------------------------------

// CPartnerApps_Download_Request

// optional string file_id = 1;
inline bool CPartnerApps_Download_Request::_internal_has_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPartnerApps_Download_Request::has_file_id() const {
  return _internal_has_file_id();
}
inline void CPartnerApps_Download_Request::clear_file_id() {
  file_id_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CPartnerApps_Download_Request::file_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_Download_Request.file_id)
  return _internal_file_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CPartnerApps_Download_Request::set_file_id(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 file_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CPartnerApps_Download_Request.file_id)
}
inline std::string* CPartnerApps_Download_Request::mutable_file_id() {
  std::string* _s = _internal_mutable_file_id();
  // @@protoc_insertion_point(field_mutable:CPartnerApps_Download_Request.file_id)
  return _s;
}
inline const std::string& CPartnerApps_Download_Request::_internal_file_id() const {
  return file_id_.Get();
}
inline void CPartnerApps_Download_Request::_internal_set_file_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  file_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CPartnerApps_Download_Request::_internal_mutable_file_id() {
  _has_bits_[0] |= 0x00000001u;
  return file_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CPartnerApps_Download_Request::release_file_id() {
  // @@protoc_insertion_point(field_release:CPartnerApps_Download_Request.file_id)
  if (!_internal_has_file_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = file_id_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (file_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    file_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CPartnerApps_Download_Request::set_allocated_file_id(std::string* file_id) {
  if (file_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  file_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (file_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    file_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CPartnerApps_Download_Request.file_id)
}

// optional int32 app_id = 2;
inline bool CPartnerApps_Download_Request::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CPartnerApps_Download_Request::has_app_id() const {
  return _internal_has_app_id();
}
inline void CPartnerApps_Download_Request::clear_app_id() {
  app_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline int32_t CPartnerApps_Download_Request::_internal_app_id() const {
  return app_id_;
}
inline int32_t CPartnerApps_Download_Request::app_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_Download_Request.app_id)
  return _internal_app_id();
}
inline void CPartnerApps_Download_Request::_internal_set_app_id(int32_t value) {
  _has_bits_[0] |= 0x00000002u;
  app_id_ = value;
}
inline void CPartnerApps_Download_Request::set_app_id(int32_t value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_Download_Request.app_id)
}

// -------------------------------------------------------------------

// CPartnerApps_Download_Response

// optional string download_url = 1;
inline bool CPartnerApps_Download_Response::_internal_has_download_url() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPartnerApps_Download_Response::has_download_url() const {
  return _internal_has_download_url();
}
inline void CPartnerApps_Download_Response::clear_download_url() {
  download_url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CPartnerApps_Download_Response::download_url() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_Download_Response.download_url)
  return _internal_download_url();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CPartnerApps_Download_Response::set_download_url(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 download_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CPartnerApps_Download_Response.download_url)
}
inline std::string* CPartnerApps_Download_Response::mutable_download_url() {
  std::string* _s = _internal_mutable_download_url();
  // @@protoc_insertion_point(field_mutable:CPartnerApps_Download_Response.download_url)
  return _s;
}
inline const std::string& CPartnerApps_Download_Response::_internal_download_url() const {
  return download_url_.Get();
}
inline void CPartnerApps_Download_Response::_internal_set_download_url(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  download_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CPartnerApps_Download_Response::_internal_mutable_download_url() {
  _has_bits_[0] |= 0x00000001u;
  return download_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CPartnerApps_Download_Response::release_download_url() {
  // @@protoc_insertion_point(field_release:CPartnerApps_Download_Response.download_url)
  if (!_internal_has_download_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = download_url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (download_url_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    download_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CPartnerApps_Download_Response::set_allocated_download_url(std::string* download_url) {
  if (download_url != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  download_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), download_url,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (download_url_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    download_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CPartnerApps_Download_Response.download_url)
}

// optional int32 app_id = 2;
inline bool CPartnerApps_Download_Response::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CPartnerApps_Download_Response::has_app_id() const {
  return _internal_has_app_id();
}
inline void CPartnerApps_Download_Response::clear_app_id() {
  app_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline int32_t CPartnerApps_Download_Response::_internal_app_id() const {
  return app_id_;
}
inline int32_t CPartnerApps_Download_Response::app_id() const {
  // @@protoc_insertion_point(field_get:CPartnerApps_Download_Response.app_id)
  return _internal_app_id();
}
inline void CPartnerApps_Download_Response::_internal_set_app_id(int32_t value) {
  _has_bits_[0] |= 0x00000002u;
  app_id_ = value;
}
inline void CPartnerApps_Download_Response::set_app_id(int32_t value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CPartnerApps_Download_Response.app_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_steammessages_5fpartnerapps_2esteamclient_2eproto
