// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_depotbuilder.steamclient.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_steammessages_5fdepotbuilder_2esteamclient_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_steammessages_5fdepotbuilder_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019005 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_base.pb.h"
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fdepotbuilder_2esteamclient_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[14]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fdepotbuilder_2esteamclient_2eproto;
class CContentBuilder_CommitAppBuild_Request;
struct CContentBuilder_CommitAppBuild_RequestDefaultTypeInternal;
extern CContentBuilder_CommitAppBuild_RequestDefaultTypeInternal _CContentBuilder_CommitAppBuild_Request_default_instance_;
class CContentBuilder_CommitAppBuild_Request_Depots;
struct CContentBuilder_CommitAppBuild_Request_DepotsDefaultTypeInternal;
extern CContentBuilder_CommitAppBuild_Request_DepotsDefaultTypeInternal _CContentBuilder_CommitAppBuild_Request_Depots_default_instance_;
class CContentBuilder_CommitAppBuild_Response;
struct CContentBuilder_CommitAppBuild_ResponseDefaultTypeInternal;
extern CContentBuilder_CommitAppBuild_ResponseDefaultTypeInternal _CContentBuilder_CommitAppBuild_Response_default_instance_;
class CContentBuilder_FinishDepotUpload_Request;
struct CContentBuilder_FinishDepotUpload_RequestDefaultTypeInternal;
extern CContentBuilder_FinishDepotUpload_RequestDefaultTypeInternal _CContentBuilder_FinishDepotUpload_Request_default_instance_;
class CContentBuilder_FinishDepotUpload_Response;
struct CContentBuilder_FinishDepotUpload_ResponseDefaultTypeInternal;
extern CContentBuilder_FinishDepotUpload_ResponseDefaultTypeInternal _CContentBuilder_FinishDepotUpload_Response_default_instance_;
class CContentBuilder_GetMissingDepotChunks_Request;
struct CContentBuilder_GetMissingDepotChunks_RequestDefaultTypeInternal;
extern CContentBuilder_GetMissingDepotChunks_RequestDefaultTypeInternal _CContentBuilder_GetMissingDepotChunks_Request_default_instance_;
class CContentBuilder_GetMissingDepotChunks_Response;
struct CContentBuilder_GetMissingDepotChunks_ResponseDefaultTypeInternal;
extern CContentBuilder_GetMissingDepotChunks_ResponseDefaultTypeInternal _CContentBuilder_GetMissingDepotChunks_Response_default_instance_;
class CContentBuilder_GetMissingDepotChunks_Response_Chunks;
struct CContentBuilder_GetMissingDepotChunks_Response_ChunksDefaultTypeInternal;
extern CContentBuilder_GetMissingDepotChunks_Response_ChunksDefaultTypeInternal _CContentBuilder_GetMissingDepotChunks_Response_Chunks_default_instance_;
class CContentBuilder_InitDepotBuild_Request;
struct CContentBuilder_InitDepotBuild_RequestDefaultTypeInternal;
extern CContentBuilder_InitDepotBuild_RequestDefaultTypeInternal _CContentBuilder_InitDepotBuild_Request_default_instance_;
class CContentBuilder_InitDepotBuild_Response;
struct CContentBuilder_InitDepotBuild_ResponseDefaultTypeInternal;
extern CContentBuilder_InitDepotBuild_ResponseDefaultTypeInternal _CContentBuilder_InitDepotBuild_Response_default_instance_;
class CContentBuilder_SignInstallScript_Request;
struct CContentBuilder_SignInstallScript_RequestDefaultTypeInternal;
extern CContentBuilder_SignInstallScript_RequestDefaultTypeInternal _CContentBuilder_SignInstallScript_Request_default_instance_;
class CContentBuilder_SignInstallScript_Response;
struct CContentBuilder_SignInstallScript_ResponseDefaultTypeInternal;
extern CContentBuilder_SignInstallScript_ResponseDefaultTypeInternal _CContentBuilder_SignInstallScript_Response_default_instance_;
class CContentBuilder_StartDepotUpload_Request;
struct CContentBuilder_StartDepotUpload_RequestDefaultTypeInternal;
extern CContentBuilder_StartDepotUpload_RequestDefaultTypeInternal _CContentBuilder_StartDepotUpload_Request_default_instance_;
class CContentBuilder_StartDepotUpload_Response;
struct CContentBuilder_StartDepotUpload_ResponseDefaultTypeInternal;
extern CContentBuilder_StartDepotUpload_ResponseDefaultTypeInternal _CContentBuilder_StartDepotUpload_Response_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CContentBuilder_CommitAppBuild_Request* Arena::CreateMaybeMessage<::CContentBuilder_CommitAppBuild_Request>(Arena*);
template<> ::CContentBuilder_CommitAppBuild_Request_Depots* Arena::CreateMaybeMessage<::CContentBuilder_CommitAppBuild_Request_Depots>(Arena*);
template<> ::CContentBuilder_CommitAppBuild_Response* Arena::CreateMaybeMessage<::CContentBuilder_CommitAppBuild_Response>(Arena*);
template<> ::CContentBuilder_FinishDepotUpload_Request* Arena::CreateMaybeMessage<::CContentBuilder_FinishDepotUpload_Request>(Arena*);
template<> ::CContentBuilder_FinishDepotUpload_Response* Arena::CreateMaybeMessage<::CContentBuilder_FinishDepotUpload_Response>(Arena*);
template<> ::CContentBuilder_GetMissingDepotChunks_Request* Arena::CreateMaybeMessage<::CContentBuilder_GetMissingDepotChunks_Request>(Arena*);
template<> ::CContentBuilder_GetMissingDepotChunks_Response* Arena::CreateMaybeMessage<::CContentBuilder_GetMissingDepotChunks_Response>(Arena*);
template<> ::CContentBuilder_GetMissingDepotChunks_Response_Chunks* Arena::CreateMaybeMessage<::CContentBuilder_GetMissingDepotChunks_Response_Chunks>(Arena*);
template<> ::CContentBuilder_InitDepotBuild_Request* Arena::CreateMaybeMessage<::CContentBuilder_InitDepotBuild_Request>(Arena*);
template<> ::CContentBuilder_InitDepotBuild_Response* Arena::CreateMaybeMessage<::CContentBuilder_InitDepotBuild_Response>(Arena*);
template<> ::CContentBuilder_SignInstallScript_Request* Arena::CreateMaybeMessage<::CContentBuilder_SignInstallScript_Request>(Arena*);
template<> ::CContentBuilder_SignInstallScript_Response* Arena::CreateMaybeMessage<::CContentBuilder_SignInstallScript_Response>(Arena*);
template<> ::CContentBuilder_StartDepotUpload_Request* Arena::CreateMaybeMessage<::CContentBuilder_StartDepotUpload_Request>(Arena*);
template<> ::CContentBuilder_StartDepotUpload_Response* Arena::CreateMaybeMessage<::CContentBuilder_StartDepotUpload_Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class CContentBuilder_InitDepotBuild_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CContentBuilder_InitDepotBuild_Request) */ {
 public:
  inline CContentBuilder_InitDepotBuild_Request() : CContentBuilder_InitDepotBuild_Request(nullptr) {}
  ~CContentBuilder_InitDepotBuild_Request() override;
  explicit constexpr CContentBuilder_InitDepotBuild_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CContentBuilder_InitDepotBuild_Request(const CContentBuilder_InitDepotBuild_Request& from);
  CContentBuilder_InitDepotBuild_Request(CContentBuilder_InitDepotBuild_Request&& from) noexcept
    : CContentBuilder_InitDepotBuild_Request() {
    *this = ::std::move(from);
  }

  inline CContentBuilder_InitDepotBuild_Request& operator=(const CContentBuilder_InitDepotBuild_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CContentBuilder_InitDepotBuild_Request& operator=(CContentBuilder_InitDepotBuild_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CContentBuilder_InitDepotBuild_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CContentBuilder_InitDepotBuild_Request* internal_default_instance() {
    return reinterpret_cast<const CContentBuilder_InitDepotBuild_Request*>(
               &_CContentBuilder_InitDepotBuild_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CContentBuilder_InitDepotBuild_Request& a, CContentBuilder_InitDepotBuild_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CContentBuilder_InitDepotBuild_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CContentBuilder_InitDepotBuild_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CContentBuilder_InitDepotBuild_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CContentBuilder_InitDepotBuild_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CContentBuilder_InitDepotBuild_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CContentBuilder_InitDepotBuild_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CContentBuilder_InitDepotBuild_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CContentBuilder_InitDepotBuild_Request";
  }
  protected:
  explicit CContentBuilder_InitDepotBuild_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetBranchFieldNumber = 5,
    kAppidFieldNumber = 1,
    kDepotidFieldNumber = 2,
    kWorkshopItemidFieldNumber = 3,
    kForLocalCsFieldNumber = 4,
  };
  // optional string target_branch = 5;
  bool has_target_branch() const;
  private:
  bool _internal_has_target_branch() const;
  public:
  void clear_target_branch();
  const std::string& target_branch() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_target_branch(ArgT0&& arg0, ArgT... args);
  std::string* mutable_target_branch();
  PROTOBUF_NODISCARD std::string* release_target_branch();
  void set_allocated_target_branch(std::string* target_branch);
  private:
  const std::string& _internal_target_branch() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target_branch(const std::string& value);
  std::string* _internal_mutable_target_branch();
  public:

  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  uint32_t appid() const;
  void set_appid(uint32_t value);
  private:
  uint32_t _internal_appid() const;
  void _internal_set_appid(uint32_t value);
  public:

  // optional uint32 depotid = 2;
  bool has_depotid() const;
  private:
  bool _internal_has_depotid() const;
  public:
  void clear_depotid();
  uint32_t depotid() const;
  void set_depotid(uint32_t value);
  private:
  uint32_t _internal_depotid() const;
  void _internal_set_depotid(uint32_t value);
  public:

  // optional uint64 workshop_itemid = 3;
  bool has_workshop_itemid() const;
  private:
  bool _internal_has_workshop_itemid() const;
  public:
  void clear_workshop_itemid();
  uint64_t workshop_itemid() const;
  void set_workshop_itemid(uint64_t value);
  private:
  uint64_t _internal_workshop_itemid() const;
  void _internal_set_workshop_itemid(uint64_t value);
  public:

  // optional bool for_local_cs = 4;
  bool has_for_local_cs() const;
  private:
  bool _internal_has_for_local_cs() const;
  public:
  void clear_for_local_cs();
  bool for_local_cs() const;
  void set_for_local_cs(bool value);
  private:
  bool _internal_for_local_cs() const;
  void _internal_set_for_local_cs(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CContentBuilder_InitDepotBuild_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr target_branch_;
  uint32_t appid_;
  uint32_t depotid_;
  uint64_t workshop_itemid_;
  bool for_local_cs_;
  friend struct ::TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CContentBuilder_InitDepotBuild_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CContentBuilder_InitDepotBuild_Response) */ {
 public:
  inline CContentBuilder_InitDepotBuild_Response() : CContentBuilder_InitDepotBuild_Response(nullptr) {}
  ~CContentBuilder_InitDepotBuild_Response() override;
  explicit constexpr CContentBuilder_InitDepotBuild_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CContentBuilder_InitDepotBuild_Response(const CContentBuilder_InitDepotBuild_Response& from);
  CContentBuilder_InitDepotBuild_Response(CContentBuilder_InitDepotBuild_Response&& from) noexcept
    : CContentBuilder_InitDepotBuild_Response() {
    *this = ::std::move(from);
  }

  inline CContentBuilder_InitDepotBuild_Response& operator=(const CContentBuilder_InitDepotBuild_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CContentBuilder_InitDepotBuild_Response& operator=(CContentBuilder_InitDepotBuild_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CContentBuilder_InitDepotBuild_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CContentBuilder_InitDepotBuild_Response* internal_default_instance() {
    return reinterpret_cast<const CContentBuilder_InitDepotBuild_Response*>(
               &_CContentBuilder_InitDepotBuild_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CContentBuilder_InitDepotBuild_Response& a, CContentBuilder_InitDepotBuild_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CContentBuilder_InitDepotBuild_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CContentBuilder_InitDepotBuild_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CContentBuilder_InitDepotBuild_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CContentBuilder_InitDepotBuild_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CContentBuilder_InitDepotBuild_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CContentBuilder_InitDepotBuild_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CContentBuilder_InitDepotBuild_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CContentBuilder_InitDepotBuild_Response";
  }
  protected:
  explicit CContentBuilder_InitDepotBuild_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAesKeyFieldNumber = 3,
    kRsaKeyFieldNumber = 4,
    kUrlHostFieldNumber = 5,
    kBaselineManifestidFieldNumber = 1,
    kChunkSizeFieldNumber = 2,
    kOffsetDetectionEnabledFieldNumber = 6,
    kOffsetDetectionMinCleanChunkFieldNumber = 7,
    kOffsetDetectionBlastRadiusPreFieldNumber = 8,
    kOffsetDetectionBlastRadiusPostFieldNumber = 9,
    kOffsetDetectionMaxDistancePreFieldNumber = 10,
    kOffsetDetectionMaxDistancePostFieldNumber = 11,
  };
  // optional bytes aes_key = 3;
  bool has_aes_key() const;
  private:
  bool _internal_has_aes_key() const;
  public:
  void clear_aes_key();
  const std::string& aes_key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_aes_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_aes_key();
  PROTOBUF_NODISCARD std::string* release_aes_key();
  void set_allocated_aes_key(std::string* aes_key);
  private:
  const std::string& _internal_aes_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_aes_key(const std::string& value);
  std::string* _internal_mutable_aes_key();
  public:

  // optional bytes rsa_key = 4;
  bool has_rsa_key() const;
  private:
  bool _internal_has_rsa_key() const;
  public:
  void clear_rsa_key();
  const std::string& rsa_key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_rsa_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_rsa_key();
  PROTOBUF_NODISCARD std::string* release_rsa_key();
  void set_allocated_rsa_key(std::string* rsa_key);
  private:
  const std::string& _internal_rsa_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rsa_key(const std::string& value);
  std::string* _internal_mutable_rsa_key();
  public:

  // optional string url_host = 5;
  bool has_url_host() const;
  private:
  bool _internal_has_url_host() const;
  public:
  void clear_url_host();
  const std::string& url_host() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_url_host(ArgT0&& arg0, ArgT... args);
  std::string* mutable_url_host();
  PROTOBUF_NODISCARD std::string* release_url_host();
  void set_allocated_url_host(std::string* url_host);
  private:
  const std::string& _internal_url_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url_host(const std::string& value);
  std::string* _internal_mutable_url_host();
  public:

  // optional uint64 baseline_manifestid = 1;
  bool has_baseline_manifestid() const;
  private:
  bool _internal_has_baseline_manifestid() const;
  public:
  void clear_baseline_manifestid();
  uint64_t baseline_manifestid() const;
  void set_baseline_manifestid(uint64_t value);
  private:
  uint64_t _internal_baseline_manifestid() const;
  void _internal_set_baseline_manifestid(uint64_t value);
  public:

  // optional uint32 chunk_size = 2;
  bool has_chunk_size() const;
  private:
  bool _internal_has_chunk_size() const;
  public:
  void clear_chunk_size();
  uint32_t chunk_size() const;
  void set_chunk_size(uint32_t value);
  private:
  uint32_t _internal_chunk_size() const;
  void _internal_set_chunk_size(uint32_t value);
  public:

  // optional bool offset_detection_enabled = 6;
  bool has_offset_detection_enabled() const;
  private:
  bool _internal_has_offset_detection_enabled() const;
  public:
  void clear_offset_detection_enabled();
  bool offset_detection_enabled() const;
  void set_offset_detection_enabled(bool value);
  private:
  bool _internal_offset_detection_enabled() const;
  void _internal_set_offset_detection_enabled(bool value);
  public:

  // optional uint32 offset_detection_min_clean_chunk = 7;
  bool has_offset_detection_min_clean_chunk() const;
  private:
  bool _internal_has_offset_detection_min_clean_chunk() const;
  public:
  void clear_offset_detection_min_clean_chunk();
  uint32_t offset_detection_min_clean_chunk() const;
  void set_offset_detection_min_clean_chunk(uint32_t value);
  private:
  uint32_t _internal_offset_detection_min_clean_chunk() const;
  void _internal_set_offset_detection_min_clean_chunk(uint32_t value);
  public:

  // optional uint32 offset_detection_blast_radius_pre = 8;
  bool has_offset_detection_blast_radius_pre() const;
  private:
  bool _internal_has_offset_detection_blast_radius_pre() const;
  public:
  void clear_offset_detection_blast_radius_pre();
  uint32_t offset_detection_blast_radius_pre() const;
  void set_offset_detection_blast_radius_pre(uint32_t value);
  private:
  uint32_t _internal_offset_detection_blast_radius_pre() const;
  void _internal_set_offset_detection_blast_radius_pre(uint32_t value);
  public:

  // optional uint32 offset_detection_blast_radius_post = 9;
  bool has_offset_detection_blast_radius_post() const;
  private:
  bool _internal_has_offset_detection_blast_radius_post() const;
  public:
  void clear_offset_detection_blast_radius_post();
  uint32_t offset_detection_blast_radius_post() const;
  void set_offset_detection_blast_radius_post(uint32_t value);
  private:
  uint32_t _internal_offset_detection_blast_radius_post() const;
  void _internal_set_offset_detection_blast_radius_post(uint32_t value);
  public:

  // optional uint32 offset_detection_max_distance_pre = 10;
  bool has_offset_detection_max_distance_pre() const;
  private:
  bool _internal_has_offset_detection_max_distance_pre() const;
  public:
  void clear_offset_detection_max_distance_pre();
  uint32_t offset_detection_max_distance_pre() const;
  void set_offset_detection_max_distance_pre(uint32_t value);
  private:
  uint32_t _internal_offset_detection_max_distance_pre() const;
  void _internal_set_offset_detection_max_distance_pre(uint32_t value);
  public:

  // optional uint32 offset_detection_max_distance_post = 11;
  bool has_offset_detection_max_distance_post() const;
  private:
  bool _internal_has_offset_detection_max_distance_post() const;
  public:
  void clear_offset_detection_max_distance_post();
  uint32_t offset_detection_max_distance_post() const;
  void set_offset_detection_max_distance_post(uint32_t value);
  private:
  uint32_t _internal_offset_detection_max_distance_post() const;
  void _internal_set_offset_detection_max_distance_post(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CContentBuilder_InitDepotBuild_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr aes_key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rsa_key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr url_host_;
  uint64_t baseline_manifestid_;
  uint32_t chunk_size_;
  bool offset_detection_enabled_;
  uint32_t offset_detection_min_clean_chunk_;
  uint32_t offset_detection_blast_radius_pre_;
  uint32_t offset_detection_blast_radius_post_;
  uint32_t offset_detection_max_distance_pre_;
  uint32_t offset_detection_max_distance_post_;
  friend struct ::TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CContentBuilder_StartDepotUpload_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CContentBuilder_StartDepotUpload_Request) */ {
 public:
  inline CContentBuilder_StartDepotUpload_Request() : CContentBuilder_StartDepotUpload_Request(nullptr) {}
  ~CContentBuilder_StartDepotUpload_Request() override;
  explicit constexpr CContentBuilder_StartDepotUpload_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CContentBuilder_StartDepotUpload_Request(const CContentBuilder_StartDepotUpload_Request& from);
  CContentBuilder_StartDepotUpload_Request(CContentBuilder_StartDepotUpload_Request&& from) noexcept
    : CContentBuilder_StartDepotUpload_Request() {
    *this = ::std::move(from);
  }

  inline CContentBuilder_StartDepotUpload_Request& operator=(const CContentBuilder_StartDepotUpload_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CContentBuilder_StartDepotUpload_Request& operator=(CContentBuilder_StartDepotUpload_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CContentBuilder_StartDepotUpload_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CContentBuilder_StartDepotUpload_Request* internal_default_instance() {
    return reinterpret_cast<const CContentBuilder_StartDepotUpload_Request*>(
               &_CContentBuilder_StartDepotUpload_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CContentBuilder_StartDepotUpload_Request& a, CContentBuilder_StartDepotUpload_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CContentBuilder_StartDepotUpload_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CContentBuilder_StartDepotUpload_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CContentBuilder_StartDepotUpload_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CContentBuilder_StartDepotUpload_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CContentBuilder_StartDepotUpload_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CContentBuilder_StartDepotUpload_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CContentBuilder_StartDepotUpload_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CContentBuilder_StartDepotUpload_Request";
  }
  protected:
  explicit CContentBuilder_StartDepotUpload_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidFieldNumber = 1,
    kDepotidFieldNumber = 2,
    kWorkshopItemidFieldNumber = 3,
    kBaselineManifestidFieldNumber = 5,
    kForLocalCsFieldNumber = 4,
    kManifestSizeFieldNumber = 6,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  uint32_t appid() const;
  void set_appid(uint32_t value);
  private:
  uint32_t _internal_appid() const;
  void _internal_set_appid(uint32_t value);
  public:

  // optional uint32 depotid = 2;
  bool has_depotid() const;
  private:
  bool _internal_has_depotid() const;
  public:
  void clear_depotid();
  uint32_t depotid() const;
  void set_depotid(uint32_t value);
  private:
  uint32_t _internal_depotid() const;
  void _internal_set_depotid(uint32_t value);
  public:

  // optional uint64 workshop_itemid = 3;
  bool has_workshop_itemid() const;
  private:
  bool _internal_has_workshop_itemid() const;
  public:
  void clear_workshop_itemid();
  uint64_t workshop_itemid() const;
  void set_workshop_itemid(uint64_t value);
  private:
  uint64_t _internal_workshop_itemid() const;
  void _internal_set_workshop_itemid(uint64_t value);
  public:

  // optional uint64 baseline_manifestid = 5;
  bool has_baseline_manifestid() const;
  private:
  bool _internal_has_baseline_manifestid() const;
  public:
  void clear_baseline_manifestid();
  uint64_t baseline_manifestid() const;
  void set_baseline_manifestid(uint64_t value);
  private:
  uint64_t _internal_baseline_manifestid() const;
  void _internal_set_baseline_manifestid(uint64_t value);
  public:

  // optional bool for_local_cs = 4;
  bool has_for_local_cs() const;
  private:
  bool _internal_has_for_local_cs() const;
  public:
  void clear_for_local_cs();
  bool for_local_cs() const;
  void set_for_local_cs(bool value);
  private:
  bool _internal_for_local_cs() const;
  void _internal_set_for_local_cs(bool value);
  public:

  // optional uint32 manifest_size = 6;
  bool has_manifest_size() const;
  private:
  bool _internal_has_manifest_size() const;
  public:
  void clear_manifest_size();
  uint32_t manifest_size() const;
  void set_manifest_size(uint32_t value);
  private:
  uint32_t _internal_manifest_size() const;
  void _internal_set_manifest_size(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CContentBuilder_StartDepotUpload_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t appid_;
  uint32_t depotid_;
  uint64_t workshop_itemid_;
  uint64_t baseline_manifestid_;
  bool for_local_cs_;
  uint32_t manifest_size_;
  friend struct ::TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CContentBuilder_StartDepotUpload_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CContentBuilder_StartDepotUpload_Response) */ {
 public:
  inline CContentBuilder_StartDepotUpload_Response() : CContentBuilder_StartDepotUpload_Response(nullptr) {}
  ~CContentBuilder_StartDepotUpload_Response() override;
  explicit constexpr CContentBuilder_StartDepotUpload_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CContentBuilder_StartDepotUpload_Response(const CContentBuilder_StartDepotUpload_Response& from);
  CContentBuilder_StartDepotUpload_Response(CContentBuilder_StartDepotUpload_Response&& from) noexcept
    : CContentBuilder_StartDepotUpload_Response() {
    *this = ::std::move(from);
  }

  inline CContentBuilder_StartDepotUpload_Response& operator=(const CContentBuilder_StartDepotUpload_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CContentBuilder_StartDepotUpload_Response& operator=(CContentBuilder_StartDepotUpload_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CContentBuilder_StartDepotUpload_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CContentBuilder_StartDepotUpload_Response* internal_default_instance() {
    return reinterpret_cast<const CContentBuilder_StartDepotUpload_Response*>(
               &_CContentBuilder_StartDepotUpload_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CContentBuilder_StartDepotUpload_Response& a, CContentBuilder_StartDepotUpload_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CContentBuilder_StartDepotUpload_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CContentBuilder_StartDepotUpload_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CContentBuilder_StartDepotUpload_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CContentBuilder_StartDepotUpload_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CContentBuilder_StartDepotUpload_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CContentBuilder_StartDepotUpload_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CContentBuilder_StartDepotUpload_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CContentBuilder_StartDepotUpload_Response";
  }
  protected:
  explicit CContentBuilder_StartDepotUpload_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDepotBuildHandleFieldNumber = 1,
  };
  // optional uint64 depot_build_handle = 1;
  bool has_depot_build_handle() const;
  private:
  bool _internal_has_depot_build_handle() const;
  public:
  void clear_depot_build_handle();
  uint64_t depot_build_handle() const;
  void set_depot_build_handle(uint64_t value);
  private:
  uint64_t _internal_depot_build_handle() const;
  void _internal_set_depot_build_handle(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CContentBuilder_StartDepotUpload_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t depot_build_handle_;
  friend struct ::TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CContentBuilder_GetMissingDepotChunks_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CContentBuilder_GetMissingDepotChunks_Request) */ {
 public:
  inline CContentBuilder_GetMissingDepotChunks_Request() : CContentBuilder_GetMissingDepotChunks_Request(nullptr) {}
  ~CContentBuilder_GetMissingDepotChunks_Request() override;
  explicit constexpr CContentBuilder_GetMissingDepotChunks_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CContentBuilder_GetMissingDepotChunks_Request(const CContentBuilder_GetMissingDepotChunks_Request& from);
  CContentBuilder_GetMissingDepotChunks_Request(CContentBuilder_GetMissingDepotChunks_Request&& from) noexcept
    : CContentBuilder_GetMissingDepotChunks_Request() {
    *this = ::std::move(from);
  }

  inline CContentBuilder_GetMissingDepotChunks_Request& operator=(const CContentBuilder_GetMissingDepotChunks_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CContentBuilder_GetMissingDepotChunks_Request& operator=(CContentBuilder_GetMissingDepotChunks_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CContentBuilder_GetMissingDepotChunks_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CContentBuilder_GetMissingDepotChunks_Request* internal_default_instance() {
    return reinterpret_cast<const CContentBuilder_GetMissingDepotChunks_Request*>(
               &_CContentBuilder_GetMissingDepotChunks_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CContentBuilder_GetMissingDepotChunks_Request& a, CContentBuilder_GetMissingDepotChunks_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CContentBuilder_GetMissingDepotChunks_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CContentBuilder_GetMissingDepotChunks_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CContentBuilder_GetMissingDepotChunks_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CContentBuilder_GetMissingDepotChunks_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CContentBuilder_GetMissingDepotChunks_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CContentBuilder_GetMissingDepotChunks_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CContentBuilder_GetMissingDepotChunks_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CContentBuilder_GetMissingDepotChunks_Request";
  }
  protected:
  explicit CContentBuilder_GetMissingDepotChunks_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDepotBuildHandleFieldNumber = 2,
    kAppidFieldNumber = 1,
  };
  // optional uint64 depot_build_handle = 2;
  bool has_depot_build_handle() const;
  private:
  bool _internal_has_depot_build_handle() const;
  public:
  void clear_depot_build_handle();
  uint64_t depot_build_handle() const;
  void set_depot_build_handle(uint64_t value);
  private:
  uint64_t _internal_depot_build_handle() const;
  void _internal_set_depot_build_handle(uint64_t value);
  public:

  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  uint32_t appid() const;
  void set_appid(uint32_t value);
  private:
  uint32_t _internal_appid() const;
  void _internal_set_appid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CContentBuilder_GetMissingDepotChunks_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t depot_build_handle_;
  uint32_t appid_;
  friend struct ::TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CContentBuilder_GetMissingDepotChunks_Response_Chunks final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CContentBuilder_GetMissingDepotChunks_Response.Chunks) */ {
 public:
  inline CContentBuilder_GetMissingDepotChunks_Response_Chunks() : CContentBuilder_GetMissingDepotChunks_Response_Chunks(nullptr) {}
  ~CContentBuilder_GetMissingDepotChunks_Response_Chunks() override;
  explicit constexpr CContentBuilder_GetMissingDepotChunks_Response_Chunks(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CContentBuilder_GetMissingDepotChunks_Response_Chunks(const CContentBuilder_GetMissingDepotChunks_Response_Chunks& from);
  CContentBuilder_GetMissingDepotChunks_Response_Chunks(CContentBuilder_GetMissingDepotChunks_Response_Chunks&& from) noexcept
    : CContentBuilder_GetMissingDepotChunks_Response_Chunks() {
    *this = ::std::move(from);
  }

  inline CContentBuilder_GetMissingDepotChunks_Response_Chunks& operator=(const CContentBuilder_GetMissingDepotChunks_Response_Chunks& from) {
    CopyFrom(from);
    return *this;
  }
  inline CContentBuilder_GetMissingDepotChunks_Response_Chunks& operator=(CContentBuilder_GetMissingDepotChunks_Response_Chunks&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CContentBuilder_GetMissingDepotChunks_Response_Chunks& default_instance() {
    return *internal_default_instance();
  }
  static inline const CContentBuilder_GetMissingDepotChunks_Response_Chunks* internal_default_instance() {
    return reinterpret_cast<const CContentBuilder_GetMissingDepotChunks_Response_Chunks*>(
               &_CContentBuilder_GetMissingDepotChunks_Response_Chunks_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CContentBuilder_GetMissingDepotChunks_Response_Chunks& a, CContentBuilder_GetMissingDepotChunks_Response_Chunks& b) {
    a.Swap(&b);
  }
  inline void Swap(CContentBuilder_GetMissingDepotChunks_Response_Chunks* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CContentBuilder_GetMissingDepotChunks_Response_Chunks* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CContentBuilder_GetMissingDepotChunks_Response_Chunks* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CContentBuilder_GetMissingDepotChunks_Response_Chunks>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CContentBuilder_GetMissingDepotChunks_Response_Chunks& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CContentBuilder_GetMissingDepotChunks_Response_Chunks& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CContentBuilder_GetMissingDepotChunks_Response_Chunks* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CContentBuilder_GetMissingDepotChunks_Response.Chunks";
  }
  protected:
  explicit CContentBuilder_GetMissingDepotChunks_Response_Chunks(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShaFieldNumber = 1,
  };
  // optional bytes sha = 1;
  bool has_sha() const;
  private:
  bool _internal_has_sha() const;
  public:
  void clear_sha();
  const std::string& sha() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_sha(ArgT0&& arg0, ArgT... args);
  std::string* mutable_sha();
  PROTOBUF_NODISCARD std::string* release_sha();
  void set_allocated_sha(std::string* sha);
  private:
  const std::string& _internal_sha() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sha(const std::string& value);
  std::string* _internal_mutable_sha();
  public:

  // @@protoc_insertion_point(class_scope:CContentBuilder_GetMissingDepotChunks_Response.Chunks)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sha_;
  friend struct ::TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CContentBuilder_GetMissingDepotChunks_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CContentBuilder_GetMissingDepotChunks_Response) */ {
 public:
  inline CContentBuilder_GetMissingDepotChunks_Response() : CContentBuilder_GetMissingDepotChunks_Response(nullptr) {}
  ~CContentBuilder_GetMissingDepotChunks_Response() override;
  explicit constexpr CContentBuilder_GetMissingDepotChunks_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CContentBuilder_GetMissingDepotChunks_Response(const CContentBuilder_GetMissingDepotChunks_Response& from);
  CContentBuilder_GetMissingDepotChunks_Response(CContentBuilder_GetMissingDepotChunks_Response&& from) noexcept
    : CContentBuilder_GetMissingDepotChunks_Response() {
    *this = ::std::move(from);
  }

  inline CContentBuilder_GetMissingDepotChunks_Response& operator=(const CContentBuilder_GetMissingDepotChunks_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CContentBuilder_GetMissingDepotChunks_Response& operator=(CContentBuilder_GetMissingDepotChunks_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CContentBuilder_GetMissingDepotChunks_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CContentBuilder_GetMissingDepotChunks_Response* internal_default_instance() {
    return reinterpret_cast<const CContentBuilder_GetMissingDepotChunks_Response*>(
               &_CContentBuilder_GetMissingDepotChunks_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CContentBuilder_GetMissingDepotChunks_Response& a, CContentBuilder_GetMissingDepotChunks_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CContentBuilder_GetMissingDepotChunks_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CContentBuilder_GetMissingDepotChunks_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CContentBuilder_GetMissingDepotChunks_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CContentBuilder_GetMissingDepotChunks_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CContentBuilder_GetMissingDepotChunks_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CContentBuilder_GetMissingDepotChunks_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CContentBuilder_GetMissingDepotChunks_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CContentBuilder_GetMissingDepotChunks_Response";
  }
  protected:
  explicit CContentBuilder_GetMissingDepotChunks_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CContentBuilder_GetMissingDepotChunks_Response_Chunks Chunks;

  // accessors -------------------------------------------------------

  enum : int {
    kMissingChunksFieldNumber = 1,
    kTotalMissingBytesFieldNumber = 3,
    kTotalMissingChunksFieldNumber = 2,
  };
  // repeated .CContentBuilder_GetMissingDepotChunks_Response.Chunks missing_chunks = 1;
  int missing_chunks_size() const;
  private:
  int _internal_missing_chunks_size() const;
  public:
  void clear_missing_chunks();
  ::CContentBuilder_GetMissingDepotChunks_Response_Chunks* mutable_missing_chunks(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CContentBuilder_GetMissingDepotChunks_Response_Chunks >*
      mutable_missing_chunks();
  private:
  const ::CContentBuilder_GetMissingDepotChunks_Response_Chunks& _internal_missing_chunks(int index) const;
  ::CContentBuilder_GetMissingDepotChunks_Response_Chunks* _internal_add_missing_chunks();
  public:
  const ::CContentBuilder_GetMissingDepotChunks_Response_Chunks& missing_chunks(int index) const;
  ::CContentBuilder_GetMissingDepotChunks_Response_Chunks* add_missing_chunks();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CContentBuilder_GetMissingDepotChunks_Response_Chunks >&
      missing_chunks() const;

  // optional uint64 total_missing_bytes = 3;
  bool has_total_missing_bytes() const;
  private:
  bool _internal_has_total_missing_bytes() const;
  public:
  void clear_total_missing_bytes();
  uint64_t total_missing_bytes() const;
  void set_total_missing_bytes(uint64_t value);
  private:
  uint64_t _internal_total_missing_bytes() const;
  void _internal_set_total_missing_bytes(uint64_t value);
  public:

  // optional uint32 total_missing_chunks = 2;
  bool has_total_missing_chunks() const;
  private:
  bool _internal_has_total_missing_chunks() const;
  public:
  void clear_total_missing_chunks();
  uint32_t total_missing_chunks() const;
  void set_total_missing_chunks(uint32_t value);
  private:
  uint32_t _internal_total_missing_chunks() const;
  void _internal_set_total_missing_chunks(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CContentBuilder_GetMissingDepotChunks_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CContentBuilder_GetMissingDepotChunks_Response_Chunks > missing_chunks_;
  uint64_t total_missing_bytes_;
  uint32_t total_missing_chunks_;
  friend struct ::TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CContentBuilder_FinishDepotUpload_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CContentBuilder_FinishDepotUpload_Request) */ {
 public:
  inline CContentBuilder_FinishDepotUpload_Request() : CContentBuilder_FinishDepotUpload_Request(nullptr) {}
  ~CContentBuilder_FinishDepotUpload_Request() override;
  explicit constexpr CContentBuilder_FinishDepotUpload_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CContentBuilder_FinishDepotUpload_Request(const CContentBuilder_FinishDepotUpload_Request& from);
  CContentBuilder_FinishDepotUpload_Request(CContentBuilder_FinishDepotUpload_Request&& from) noexcept
    : CContentBuilder_FinishDepotUpload_Request() {
    *this = ::std::move(from);
  }

  inline CContentBuilder_FinishDepotUpload_Request& operator=(const CContentBuilder_FinishDepotUpload_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CContentBuilder_FinishDepotUpload_Request& operator=(CContentBuilder_FinishDepotUpload_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CContentBuilder_FinishDepotUpload_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CContentBuilder_FinishDepotUpload_Request* internal_default_instance() {
    return reinterpret_cast<const CContentBuilder_FinishDepotUpload_Request*>(
               &_CContentBuilder_FinishDepotUpload_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CContentBuilder_FinishDepotUpload_Request& a, CContentBuilder_FinishDepotUpload_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CContentBuilder_FinishDepotUpload_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CContentBuilder_FinishDepotUpload_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CContentBuilder_FinishDepotUpload_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CContentBuilder_FinishDepotUpload_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CContentBuilder_FinishDepotUpload_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CContentBuilder_FinishDepotUpload_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CContentBuilder_FinishDepotUpload_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CContentBuilder_FinishDepotUpload_Request";
  }
  protected:
  explicit CContentBuilder_FinishDepotUpload_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDepotBuildHandleFieldNumber = 2,
    kAppidFieldNumber = 1,
  };
  // optional uint64 depot_build_handle = 2;
  bool has_depot_build_handle() const;
  private:
  bool _internal_has_depot_build_handle() const;
  public:
  void clear_depot_build_handle();
  uint64_t depot_build_handle() const;
  void set_depot_build_handle(uint64_t value);
  private:
  uint64_t _internal_depot_build_handle() const;
  void _internal_set_depot_build_handle(uint64_t value);
  public:

  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  uint32_t appid() const;
  void set_appid(uint32_t value);
  private:
  uint32_t _internal_appid() const;
  void _internal_set_appid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CContentBuilder_FinishDepotUpload_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t depot_build_handle_;
  uint32_t appid_;
  friend struct ::TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CContentBuilder_FinishDepotUpload_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CContentBuilder_FinishDepotUpload_Response) */ {
 public:
  inline CContentBuilder_FinishDepotUpload_Response() : CContentBuilder_FinishDepotUpload_Response(nullptr) {}
  ~CContentBuilder_FinishDepotUpload_Response() override;
  explicit constexpr CContentBuilder_FinishDepotUpload_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CContentBuilder_FinishDepotUpload_Response(const CContentBuilder_FinishDepotUpload_Response& from);
  CContentBuilder_FinishDepotUpload_Response(CContentBuilder_FinishDepotUpload_Response&& from) noexcept
    : CContentBuilder_FinishDepotUpload_Response() {
    *this = ::std::move(from);
  }

  inline CContentBuilder_FinishDepotUpload_Response& operator=(const CContentBuilder_FinishDepotUpload_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CContentBuilder_FinishDepotUpload_Response& operator=(CContentBuilder_FinishDepotUpload_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CContentBuilder_FinishDepotUpload_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CContentBuilder_FinishDepotUpload_Response* internal_default_instance() {
    return reinterpret_cast<const CContentBuilder_FinishDepotUpload_Response*>(
               &_CContentBuilder_FinishDepotUpload_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CContentBuilder_FinishDepotUpload_Response& a, CContentBuilder_FinishDepotUpload_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CContentBuilder_FinishDepotUpload_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CContentBuilder_FinishDepotUpload_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CContentBuilder_FinishDepotUpload_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CContentBuilder_FinishDepotUpload_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CContentBuilder_FinishDepotUpload_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CContentBuilder_FinishDepotUpload_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CContentBuilder_FinishDepotUpload_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CContentBuilder_FinishDepotUpload_Response";
  }
  protected:
  explicit CContentBuilder_FinishDepotUpload_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kManifestidFieldNumber = 1,
    kPrevReusedFieldNumber = 2,
  };
  // optional uint64 manifestid = 1;
  bool has_manifestid() const;
  private:
  bool _internal_has_manifestid() const;
  public:
  void clear_manifestid();
  uint64_t manifestid() const;
  void set_manifestid(uint64_t value);
  private:
  uint64_t _internal_manifestid() const;
  void _internal_set_manifestid(uint64_t value);
  public:

  // optional bool prev_reused = 2;
  bool has_prev_reused() const;
  private:
  bool _internal_has_prev_reused() const;
  public:
  void clear_prev_reused();
  bool prev_reused() const;
  void set_prev_reused(bool value);
  private:
  bool _internal_prev_reused() const;
  void _internal_set_prev_reused(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CContentBuilder_FinishDepotUpload_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t manifestid_;
  bool prev_reused_;
  friend struct ::TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CContentBuilder_CommitAppBuild_Request_Depots final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CContentBuilder_CommitAppBuild_Request.Depots) */ {
 public:
  inline CContentBuilder_CommitAppBuild_Request_Depots() : CContentBuilder_CommitAppBuild_Request_Depots(nullptr) {}
  ~CContentBuilder_CommitAppBuild_Request_Depots() override;
  explicit constexpr CContentBuilder_CommitAppBuild_Request_Depots(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CContentBuilder_CommitAppBuild_Request_Depots(const CContentBuilder_CommitAppBuild_Request_Depots& from);
  CContentBuilder_CommitAppBuild_Request_Depots(CContentBuilder_CommitAppBuild_Request_Depots&& from) noexcept
    : CContentBuilder_CommitAppBuild_Request_Depots() {
    *this = ::std::move(from);
  }

  inline CContentBuilder_CommitAppBuild_Request_Depots& operator=(const CContentBuilder_CommitAppBuild_Request_Depots& from) {
    CopyFrom(from);
    return *this;
  }
  inline CContentBuilder_CommitAppBuild_Request_Depots& operator=(CContentBuilder_CommitAppBuild_Request_Depots&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CContentBuilder_CommitAppBuild_Request_Depots& default_instance() {
    return *internal_default_instance();
  }
  static inline const CContentBuilder_CommitAppBuild_Request_Depots* internal_default_instance() {
    return reinterpret_cast<const CContentBuilder_CommitAppBuild_Request_Depots*>(
               &_CContentBuilder_CommitAppBuild_Request_Depots_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CContentBuilder_CommitAppBuild_Request_Depots& a, CContentBuilder_CommitAppBuild_Request_Depots& b) {
    a.Swap(&b);
  }
  inline void Swap(CContentBuilder_CommitAppBuild_Request_Depots* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CContentBuilder_CommitAppBuild_Request_Depots* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CContentBuilder_CommitAppBuild_Request_Depots* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CContentBuilder_CommitAppBuild_Request_Depots>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CContentBuilder_CommitAppBuild_Request_Depots& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CContentBuilder_CommitAppBuild_Request_Depots& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CContentBuilder_CommitAppBuild_Request_Depots* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CContentBuilder_CommitAppBuild_Request.Depots";
  }
  protected:
  explicit CContentBuilder_CommitAppBuild_Request_Depots(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kManifestidFieldNumber = 2,
    kDepotidFieldNumber = 1,
  };
  // optional uint64 manifestid = 2;
  bool has_manifestid() const;
  private:
  bool _internal_has_manifestid() const;
  public:
  void clear_manifestid();
  uint64_t manifestid() const;
  void set_manifestid(uint64_t value);
  private:
  uint64_t _internal_manifestid() const;
  void _internal_set_manifestid(uint64_t value);
  public:

  // optional uint32 depotid = 1;
  bool has_depotid() const;
  private:
  bool _internal_has_depotid() const;
  public:
  void clear_depotid();
  uint32_t depotid() const;
  void set_depotid(uint32_t value);
  private:
  uint32_t _internal_depotid() const;
  void _internal_set_depotid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CContentBuilder_CommitAppBuild_Request.Depots)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t manifestid_;
  uint32_t depotid_;
  friend struct ::TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CContentBuilder_CommitAppBuild_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CContentBuilder_CommitAppBuild_Request) */ {
 public:
  inline CContentBuilder_CommitAppBuild_Request() : CContentBuilder_CommitAppBuild_Request(nullptr) {}
  ~CContentBuilder_CommitAppBuild_Request() override;
  explicit constexpr CContentBuilder_CommitAppBuild_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CContentBuilder_CommitAppBuild_Request(const CContentBuilder_CommitAppBuild_Request& from);
  CContentBuilder_CommitAppBuild_Request(CContentBuilder_CommitAppBuild_Request&& from) noexcept
    : CContentBuilder_CommitAppBuild_Request() {
    *this = ::std::move(from);
  }

  inline CContentBuilder_CommitAppBuild_Request& operator=(const CContentBuilder_CommitAppBuild_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CContentBuilder_CommitAppBuild_Request& operator=(CContentBuilder_CommitAppBuild_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CContentBuilder_CommitAppBuild_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CContentBuilder_CommitAppBuild_Request* internal_default_instance() {
    return reinterpret_cast<const CContentBuilder_CommitAppBuild_Request*>(
               &_CContentBuilder_CommitAppBuild_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CContentBuilder_CommitAppBuild_Request& a, CContentBuilder_CommitAppBuild_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CContentBuilder_CommitAppBuild_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CContentBuilder_CommitAppBuild_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CContentBuilder_CommitAppBuild_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CContentBuilder_CommitAppBuild_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CContentBuilder_CommitAppBuild_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CContentBuilder_CommitAppBuild_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CContentBuilder_CommitAppBuild_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CContentBuilder_CommitAppBuild_Request";
  }
  protected:
  explicit CContentBuilder_CommitAppBuild_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CContentBuilder_CommitAppBuild_Request_Depots Depots;

  // accessors -------------------------------------------------------

  enum : int {
    kDepotManifestsFieldNumber = 2,
    kBuildNotesFieldNumber = 4,
    kLiveBranchFieldNumber = 5,
    kAppidFieldNumber = 1,
  };
  // repeated .CContentBuilder_CommitAppBuild_Request.Depots depot_manifests = 2;
  int depot_manifests_size() const;
  private:
  int _internal_depot_manifests_size() const;
  public:
  void clear_depot_manifests();
  ::CContentBuilder_CommitAppBuild_Request_Depots* mutable_depot_manifests(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CContentBuilder_CommitAppBuild_Request_Depots >*
      mutable_depot_manifests();
  private:
  const ::CContentBuilder_CommitAppBuild_Request_Depots& _internal_depot_manifests(int index) const;
  ::CContentBuilder_CommitAppBuild_Request_Depots* _internal_add_depot_manifests();
  public:
  const ::CContentBuilder_CommitAppBuild_Request_Depots& depot_manifests(int index) const;
  ::CContentBuilder_CommitAppBuild_Request_Depots* add_depot_manifests();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CContentBuilder_CommitAppBuild_Request_Depots >&
      depot_manifests() const;

  // optional string build_notes = 4;
  bool has_build_notes() const;
  private:
  bool _internal_has_build_notes() const;
  public:
  void clear_build_notes();
  const std::string& build_notes() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_build_notes(ArgT0&& arg0, ArgT... args);
  std::string* mutable_build_notes();
  PROTOBUF_NODISCARD std::string* release_build_notes();
  void set_allocated_build_notes(std::string* build_notes);
  private:
  const std::string& _internal_build_notes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_build_notes(const std::string& value);
  std::string* _internal_mutable_build_notes();
  public:

  // optional string live_branch = 5;
  bool has_live_branch() const;
  private:
  bool _internal_has_live_branch() const;
  public:
  void clear_live_branch();
  const std::string& live_branch() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_live_branch(ArgT0&& arg0, ArgT... args);
  std::string* mutable_live_branch();
  PROTOBUF_NODISCARD std::string* release_live_branch();
  void set_allocated_live_branch(std::string* live_branch);
  private:
  const std::string& _internal_live_branch() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_live_branch(const std::string& value);
  std::string* _internal_mutable_live_branch();
  public:

  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  uint32_t appid() const;
  void set_appid(uint32_t value);
  private:
  uint32_t _internal_appid() const;
  void _internal_set_appid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CContentBuilder_CommitAppBuild_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CContentBuilder_CommitAppBuild_Request_Depots > depot_manifests_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr build_notes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr live_branch_;
  uint32_t appid_;
  friend struct ::TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CContentBuilder_CommitAppBuild_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CContentBuilder_CommitAppBuild_Response) */ {
 public:
  inline CContentBuilder_CommitAppBuild_Response() : CContentBuilder_CommitAppBuild_Response(nullptr) {}
  ~CContentBuilder_CommitAppBuild_Response() override;
  explicit constexpr CContentBuilder_CommitAppBuild_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CContentBuilder_CommitAppBuild_Response(const CContentBuilder_CommitAppBuild_Response& from);
  CContentBuilder_CommitAppBuild_Response(CContentBuilder_CommitAppBuild_Response&& from) noexcept
    : CContentBuilder_CommitAppBuild_Response() {
    *this = ::std::move(from);
  }

  inline CContentBuilder_CommitAppBuild_Response& operator=(const CContentBuilder_CommitAppBuild_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CContentBuilder_CommitAppBuild_Response& operator=(CContentBuilder_CommitAppBuild_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CContentBuilder_CommitAppBuild_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CContentBuilder_CommitAppBuild_Response* internal_default_instance() {
    return reinterpret_cast<const CContentBuilder_CommitAppBuild_Response*>(
               &_CContentBuilder_CommitAppBuild_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CContentBuilder_CommitAppBuild_Response& a, CContentBuilder_CommitAppBuild_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CContentBuilder_CommitAppBuild_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CContentBuilder_CommitAppBuild_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CContentBuilder_CommitAppBuild_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CContentBuilder_CommitAppBuild_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CContentBuilder_CommitAppBuild_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CContentBuilder_CommitAppBuild_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CContentBuilder_CommitAppBuild_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CContentBuilder_CommitAppBuild_Response";
  }
  protected:
  explicit CContentBuilder_CommitAppBuild_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBuildidFieldNumber = 1,
  };
  // optional uint32 buildid = 1;
  bool has_buildid() const;
  private:
  bool _internal_has_buildid() const;
  public:
  void clear_buildid();
  uint32_t buildid() const;
  void set_buildid(uint32_t value);
  private:
  uint32_t _internal_buildid() const;
  void _internal_set_buildid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CContentBuilder_CommitAppBuild_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t buildid_;
  friend struct ::TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CContentBuilder_SignInstallScript_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CContentBuilder_SignInstallScript_Request) */ {
 public:
  inline CContentBuilder_SignInstallScript_Request() : CContentBuilder_SignInstallScript_Request(nullptr) {}
  ~CContentBuilder_SignInstallScript_Request() override;
  explicit constexpr CContentBuilder_SignInstallScript_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CContentBuilder_SignInstallScript_Request(const CContentBuilder_SignInstallScript_Request& from);
  CContentBuilder_SignInstallScript_Request(CContentBuilder_SignInstallScript_Request&& from) noexcept
    : CContentBuilder_SignInstallScript_Request() {
    *this = ::std::move(from);
  }

  inline CContentBuilder_SignInstallScript_Request& operator=(const CContentBuilder_SignInstallScript_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CContentBuilder_SignInstallScript_Request& operator=(CContentBuilder_SignInstallScript_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CContentBuilder_SignInstallScript_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CContentBuilder_SignInstallScript_Request* internal_default_instance() {
    return reinterpret_cast<const CContentBuilder_SignInstallScript_Request*>(
               &_CContentBuilder_SignInstallScript_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CContentBuilder_SignInstallScript_Request& a, CContentBuilder_SignInstallScript_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CContentBuilder_SignInstallScript_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CContentBuilder_SignInstallScript_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CContentBuilder_SignInstallScript_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CContentBuilder_SignInstallScript_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CContentBuilder_SignInstallScript_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CContentBuilder_SignInstallScript_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CContentBuilder_SignInstallScript_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CContentBuilder_SignInstallScript_Request";
  }
  protected:
  explicit CContentBuilder_SignInstallScript_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstallScriptFieldNumber = 3,
    kAppidFieldNumber = 1,
    kDepotidFieldNumber = 2,
  };
  // optional string install_script = 3;
  bool has_install_script() const;
  private:
  bool _internal_has_install_script() const;
  public:
  void clear_install_script();
  const std::string& install_script() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_install_script(ArgT0&& arg0, ArgT... args);
  std::string* mutable_install_script();
  PROTOBUF_NODISCARD std::string* release_install_script();
  void set_allocated_install_script(std::string* install_script);
  private:
  const std::string& _internal_install_script() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_install_script(const std::string& value);
  std::string* _internal_mutable_install_script();
  public:

  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  uint32_t appid() const;
  void set_appid(uint32_t value);
  private:
  uint32_t _internal_appid() const;
  void _internal_set_appid(uint32_t value);
  public:

  // optional uint32 depotid = 2;
  bool has_depotid() const;
  private:
  bool _internal_has_depotid() const;
  public:
  void clear_depotid();
  uint32_t depotid() const;
  void set_depotid(uint32_t value);
  private:
  uint32_t _internal_depotid() const;
  void _internal_set_depotid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CContentBuilder_SignInstallScript_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr install_script_;
  uint32_t appid_;
  uint32_t depotid_;
  friend struct ::TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CContentBuilder_SignInstallScript_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CContentBuilder_SignInstallScript_Response) */ {
 public:
  inline CContentBuilder_SignInstallScript_Response() : CContentBuilder_SignInstallScript_Response(nullptr) {}
  ~CContentBuilder_SignInstallScript_Response() override;
  explicit constexpr CContentBuilder_SignInstallScript_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CContentBuilder_SignInstallScript_Response(const CContentBuilder_SignInstallScript_Response& from);
  CContentBuilder_SignInstallScript_Response(CContentBuilder_SignInstallScript_Response&& from) noexcept
    : CContentBuilder_SignInstallScript_Response() {
    *this = ::std::move(from);
  }

  inline CContentBuilder_SignInstallScript_Response& operator=(const CContentBuilder_SignInstallScript_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CContentBuilder_SignInstallScript_Response& operator=(CContentBuilder_SignInstallScript_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CContentBuilder_SignInstallScript_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CContentBuilder_SignInstallScript_Response* internal_default_instance() {
    return reinterpret_cast<const CContentBuilder_SignInstallScript_Response*>(
               &_CContentBuilder_SignInstallScript_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CContentBuilder_SignInstallScript_Response& a, CContentBuilder_SignInstallScript_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CContentBuilder_SignInstallScript_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CContentBuilder_SignInstallScript_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CContentBuilder_SignInstallScript_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CContentBuilder_SignInstallScript_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CContentBuilder_SignInstallScript_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CContentBuilder_SignInstallScript_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CContentBuilder_SignInstallScript_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CContentBuilder_SignInstallScript_Response";
  }
  protected:
  explicit CContentBuilder_SignInstallScript_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSignedInstallScriptFieldNumber = 1,
  };
  // optional string signed_install_script = 1;
  bool has_signed_install_script() const;
  private:
  bool _internal_has_signed_install_script() const;
  public:
  void clear_signed_install_script();
  const std::string& signed_install_script() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_signed_install_script(ArgT0&& arg0, ArgT... args);
  std::string* mutable_signed_install_script();
  PROTOBUF_NODISCARD std::string* release_signed_install_script();
  void set_allocated_signed_install_script(std::string* signed_install_script);
  private:
  const std::string& _internal_signed_install_script() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signed_install_script(const std::string& value);
  std::string* _internal_mutable_signed_install_script();
  public:

  // @@protoc_insertion_point(class_scope:CContentBuilder_SignInstallScript_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signed_install_script_;
  friend struct ::TableStruct_steammessages_5fdepotbuilder_2esteamclient_2eproto;
};
// ===================================================================

class ContentBuilder_Stub;

class ContentBuilder : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ContentBuilder() {};
 public:
  virtual ~ContentBuilder();

  typedef ContentBuilder_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void InitDepotBuild(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CContentBuilder_InitDepotBuild_Request* request,
                       ::CContentBuilder_InitDepotBuild_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void StartDepotUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CContentBuilder_StartDepotUpload_Request* request,
                       ::CContentBuilder_StartDepotUpload_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetMissingDepotChunks(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CContentBuilder_GetMissingDepotChunks_Request* request,
                       ::CContentBuilder_GetMissingDepotChunks_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void FinishDepotUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CContentBuilder_FinishDepotUpload_Request* request,
                       ::CContentBuilder_FinishDepotUpload_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void CommitAppBuild(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CContentBuilder_CommitAppBuild_Request* request,
                       ::CContentBuilder_CommitAppBuild_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SignInstallScript(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CContentBuilder_SignInstallScript_Request* request,
                       ::CContentBuilder_SignInstallScript_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ContentBuilder);
};

class ContentBuilder_Stub : public ContentBuilder {
 public:
  ContentBuilder_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  ContentBuilder_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~ContentBuilder_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements ContentBuilder ------------------------------------------

  void InitDepotBuild(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CContentBuilder_InitDepotBuild_Request* request,
                       ::CContentBuilder_InitDepotBuild_Response* response,
                       ::google::protobuf::Closure* done);
  void StartDepotUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CContentBuilder_StartDepotUpload_Request* request,
                       ::CContentBuilder_StartDepotUpload_Response* response,
                       ::google::protobuf::Closure* done);
  void GetMissingDepotChunks(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CContentBuilder_GetMissingDepotChunks_Request* request,
                       ::CContentBuilder_GetMissingDepotChunks_Response* response,
                       ::google::protobuf::Closure* done);
  void FinishDepotUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CContentBuilder_FinishDepotUpload_Request* request,
                       ::CContentBuilder_FinishDepotUpload_Response* response,
                       ::google::protobuf::Closure* done);
  void CommitAppBuild(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CContentBuilder_CommitAppBuild_Request* request,
                       ::CContentBuilder_CommitAppBuild_Response* response,
                       ::google::protobuf::Closure* done);
  void SignInstallScript(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CContentBuilder_SignInstallScript_Request* request,
                       ::CContentBuilder_SignInstallScript_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ContentBuilder_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CContentBuilder_InitDepotBuild_Request

// optional uint32 appid = 1;
inline bool CContentBuilder_InitDepotBuild_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CContentBuilder_InitDepotBuild_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CContentBuilder_InitDepotBuild_Request::_internal_appid() const {
  return appid_;
}
inline uint32_t CContentBuilder_InitDepotBuild_Request::appid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Request.appid)
  return _internal_appid();
}
inline void CContentBuilder_InitDepotBuild_Request::_internal_set_appid(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
}
inline void CContentBuilder_InitDepotBuild_Request::set_appid(uint32_t value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Request.appid)
}

// optional uint32 depotid = 2;
inline bool CContentBuilder_InitDepotBuild_Request::_internal_has_depotid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Request::has_depotid() const {
  return _internal_has_depotid();
}
inline void CContentBuilder_InitDepotBuild_Request::clear_depotid() {
  depotid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CContentBuilder_InitDepotBuild_Request::_internal_depotid() const {
  return depotid_;
}
inline uint32_t CContentBuilder_InitDepotBuild_Request::depotid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Request.depotid)
  return _internal_depotid();
}
inline void CContentBuilder_InitDepotBuild_Request::_internal_set_depotid(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  depotid_ = value;
}
inline void CContentBuilder_InitDepotBuild_Request::set_depotid(uint32_t value) {
  _internal_set_depotid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Request.depotid)
}

// optional uint64 workshop_itemid = 3;
inline bool CContentBuilder_InitDepotBuild_Request::_internal_has_workshop_itemid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Request::has_workshop_itemid() const {
  return _internal_has_workshop_itemid();
}
inline void CContentBuilder_InitDepotBuild_Request::clear_workshop_itemid() {
  workshop_itemid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CContentBuilder_InitDepotBuild_Request::_internal_workshop_itemid() const {
  return workshop_itemid_;
}
inline uint64_t CContentBuilder_InitDepotBuild_Request::workshop_itemid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Request.workshop_itemid)
  return _internal_workshop_itemid();
}
inline void CContentBuilder_InitDepotBuild_Request::_internal_set_workshop_itemid(uint64_t value) {
  _has_bits_[0] |= 0x00000008u;
  workshop_itemid_ = value;
}
inline void CContentBuilder_InitDepotBuild_Request::set_workshop_itemid(uint64_t value) {
  _internal_set_workshop_itemid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Request.workshop_itemid)
}

// optional bool for_local_cs = 4;
inline bool CContentBuilder_InitDepotBuild_Request::_internal_has_for_local_cs() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Request::has_for_local_cs() const {
  return _internal_has_for_local_cs();
}
inline void CContentBuilder_InitDepotBuild_Request::clear_for_local_cs() {
  for_local_cs_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CContentBuilder_InitDepotBuild_Request::_internal_for_local_cs() const {
  return for_local_cs_;
}
inline bool CContentBuilder_InitDepotBuild_Request::for_local_cs() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Request.for_local_cs)
  return _internal_for_local_cs();
}
inline void CContentBuilder_InitDepotBuild_Request::_internal_set_for_local_cs(bool value) {
  _has_bits_[0] |= 0x00000010u;
  for_local_cs_ = value;
}
inline void CContentBuilder_InitDepotBuild_Request::set_for_local_cs(bool value) {
  _internal_set_for_local_cs(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Request.for_local_cs)
}

// optional string target_branch = 5;
inline bool CContentBuilder_InitDepotBuild_Request::_internal_has_target_branch() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Request::has_target_branch() const {
  return _internal_has_target_branch();
}
inline void CContentBuilder_InitDepotBuild_Request::clear_target_branch() {
  target_branch_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CContentBuilder_InitDepotBuild_Request::target_branch() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Request.target_branch)
  return _internal_target_branch();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CContentBuilder_InitDepotBuild_Request::set_target_branch(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 target_branch_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Request.target_branch)
}
inline std::string* CContentBuilder_InitDepotBuild_Request::mutable_target_branch() {
  std::string* _s = _internal_mutable_target_branch();
  // @@protoc_insertion_point(field_mutable:CContentBuilder_InitDepotBuild_Request.target_branch)
  return _s;
}
inline const std::string& CContentBuilder_InitDepotBuild_Request::_internal_target_branch() const {
  return target_branch_.Get();
}
inline void CContentBuilder_InitDepotBuild_Request::_internal_set_target_branch(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  target_branch_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CContentBuilder_InitDepotBuild_Request::_internal_mutable_target_branch() {
  _has_bits_[0] |= 0x00000001u;
  return target_branch_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CContentBuilder_InitDepotBuild_Request::release_target_branch() {
  // @@protoc_insertion_point(field_release:CContentBuilder_InitDepotBuild_Request.target_branch)
  if (!_internal_has_target_branch()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = target_branch_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (target_branch_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    target_branch_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CContentBuilder_InitDepotBuild_Request::set_allocated_target_branch(std::string* target_branch) {
  if (target_branch != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  target_branch_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), target_branch,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (target_branch_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    target_branch_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CContentBuilder_InitDepotBuild_Request.target_branch)
}

// -------------------------------------------------------------------

// CContentBuilder_InitDepotBuild_Response

// optional uint64 baseline_manifestid = 1;
inline bool CContentBuilder_InitDepotBuild_Response::_internal_has_baseline_manifestid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Response::has_baseline_manifestid() const {
  return _internal_has_baseline_manifestid();
}
inline void CContentBuilder_InitDepotBuild_Response::clear_baseline_manifestid() {
  baseline_manifestid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CContentBuilder_InitDepotBuild_Response::_internal_baseline_manifestid() const {
  return baseline_manifestid_;
}
inline uint64_t CContentBuilder_InitDepotBuild_Response::baseline_manifestid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Response.baseline_manifestid)
  return _internal_baseline_manifestid();
}
inline void CContentBuilder_InitDepotBuild_Response::_internal_set_baseline_manifestid(uint64_t value) {
  _has_bits_[0] |= 0x00000008u;
  baseline_manifestid_ = value;
}
inline void CContentBuilder_InitDepotBuild_Response::set_baseline_manifestid(uint64_t value) {
  _internal_set_baseline_manifestid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Response.baseline_manifestid)
}

// optional uint32 chunk_size = 2;
inline bool CContentBuilder_InitDepotBuild_Response::_internal_has_chunk_size() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Response::has_chunk_size() const {
  return _internal_has_chunk_size();
}
inline void CContentBuilder_InitDepotBuild_Response::clear_chunk_size() {
  chunk_size_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CContentBuilder_InitDepotBuild_Response::_internal_chunk_size() const {
  return chunk_size_;
}
inline uint32_t CContentBuilder_InitDepotBuild_Response::chunk_size() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Response.chunk_size)
  return _internal_chunk_size();
}
inline void CContentBuilder_InitDepotBuild_Response::_internal_set_chunk_size(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  chunk_size_ = value;
}
inline void CContentBuilder_InitDepotBuild_Response::set_chunk_size(uint32_t value) {
  _internal_set_chunk_size(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Response.chunk_size)
}

// optional bytes aes_key = 3;
inline bool CContentBuilder_InitDepotBuild_Response::_internal_has_aes_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Response::has_aes_key() const {
  return _internal_has_aes_key();
}
inline void CContentBuilder_InitDepotBuild_Response::clear_aes_key() {
  aes_key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CContentBuilder_InitDepotBuild_Response::aes_key() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Response.aes_key)
  return _internal_aes_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CContentBuilder_InitDepotBuild_Response::set_aes_key(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 aes_key_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Response.aes_key)
}
inline std::string* CContentBuilder_InitDepotBuild_Response::mutable_aes_key() {
  std::string* _s = _internal_mutable_aes_key();
  // @@protoc_insertion_point(field_mutable:CContentBuilder_InitDepotBuild_Response.aes_key)
  return _s;
}
inline const std::string& CContentBuilder_InitDepotBuild_Response::_internal_aes_key() const {
  return aes_key_.Get();
}
inline void CContentBuilder_InitDepotBuild_Response::_internal_set_aes_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  aes_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CContentBuilder_InitDepotBuild_Response::_internal_mutable_aes_key() {
  _has_bits_[0] |= 0x00000001u;
  return aes_key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CContentBuilder_InitDepotBuild_Response::release_aes_key() {
  // @@protoc_insertion_point(field_release:CContentBuilder_InitDepotBuild_Response.aes_key)
  if (!_internal_has_aes_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = aes_key_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (aes_key_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    aes_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CContentBuilder_InitDepotBuild_Response::set_allocated_aes_key(std::string* aes_key) {
  if (aes_key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  aes_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), aes_key,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (aes_key_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    aes_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CContentBuilder_InitDepotBuild_Response.aes_key)
}

// optional bytes rsa_key = 4;
inline bool CContentBuilder_InitDepotBuild_Response::_internal_has_rsa_key() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Response::has_rsa_key() const {
  return _internal_has_rsa_key();
}
inline void CContentBuilder_InitDepotBuild_Response::clear_rsa_key() {
  rsa_key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CContentBuilder_InitDepotBuild_Response::rsa_key() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Response.rsa_key)
  return _internal_rsa_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CContentBuilder_InitDepotBuild_Response::set_rsa_key(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 rsa_key_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Response.rsa_key)
}
inline std::string* CContentBuilder_InitDepotBuild_Response::mutable_rsa_key() {
  std::string* _s = _internal_mutable_rsa_key();
  // @@protoc_insertion_point(field_mutable:CContentBuilder_InitDepotBuild_Response.rsa_key)
  return _s;
}
inline const std::string& CContentBuilder_InitDepotBuild_Response::_internal_rsa_key() const {
  return rsa_key_.Get();
}
inline void CContentBuilder_InitDepotBuild_Response::_internal_set_rsa_key(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  rsa_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CContentBuilder_InitDepotBuild_Response::_internal_mutable_rsa_key() {
  _has_bits_[0] |= 0x00000002u;
  return rsa_key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CContentBuilder_InitDepotBuild_Response::release_rsa_key() {
  // @@protoc_insertion_point(field_release:CContentBuilder_InitDepotBuild_Response.rsa_key)
  if (!_internal_has_rsa_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  auto* p = rsa_key_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (rsa_key_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    rsa_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CContentBuilder_InitDepotBuild_Response::set_allocated_rsa_key(std::string* rsa_key) {
  if (rsa_key != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  rsa_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rsa_key,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (rsa_key_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    rsa_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CContentBuilder_InitDepotBuild_Response.rsa_key)
}

// optional string url_host = 5;
inline bool CContentBuilder_InitDepotBuild_Response::_internal_has_url_host() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Response::has_url_host() const {
  return _internal_has_url_host();
}
inline void CContentBuilder_InitDepotBuild_Response::clear_url_host() {
  url_host_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CContentBuilder_InitDepotBuild_Response::url_host() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Response.url_host)
  return _internal_url_host();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CContentBuilder_InitDepotBuild_Response::set_url_host(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000004u;
 url_host_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Response.url_host)
}
inline std::string* CContentBuilder_InitDepotBuild_Response::mutable_url_host() {
  std::string* _s = _internal_mutable_url_host();
  // @@protoc_insertion_point(field_mutable:CContentBuilder_InitDepotBuild_Response.url_host)
  return _s;
}
inline const std::string& CContentBuilder_InitDepotBuild_Response::_internal_url_host() const {
  return url_host_.Get();
}
inline void CContentBuilder_InitDepotBuild_Response::_internal_set_url_host(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  url_host_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CContentBuilder_InitDepotBuild_Response::_internal_mutable_url_host() {
  _has_bits_[0] |= 0x00000004u;
  return url_host_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CContentBuilder_InitDepotBuild_Response::release_url_host() {
  // @@protoc_insertion_point(field_release:CContentBuilder_InitDepotBuild_Response.url_host)
  if (!_internal_has_url_host()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  auto* p = url_host_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (url_host_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    url_host_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CContentBuilder_InitDepotBuild_Response::set_allocated_url_host(std::string* url_host) {
  if (url_host != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  url_host_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), url_host,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (url_host_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    url_host_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CContentBuilder_InitDepotBuild_Response.url_host)
}

// optional bool offset_detection_enabled = 6;
inline bool CContentBuilder_InitDepotBuild_Response::_internal_has_offset_detection_enabled() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Response::has_offset_detection_enabled() const {
  return _internal_has_offset_detection_enabled();
}
inline void CContentBuilder_InitDepotBuild_Response::clear_offset_detection_enabled() {
  offset_detection_enabled_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CContentBuilder_InitDepotBuild_Response::_internal_offset_detection_enabled() const {
  return offset_detection_enabled_;
}
inline bool CContentBuilder_InitDepotBuild_Response::offset_detection_enabled() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Response.offset_detection_enabled)
  return _internal_offset_detection_enabled();
}
inline void CContentBuilder_InitDepotBuild_Response::_internal_set_offset_detection_enabled(bool value) {
  _has_bits_[0] |= 0x00000020u;
  offset_detection_enabled_ = value;
}
inline void CContentBuilder_InitDepotBuild_Response::set_offset_detection_enabled(bool value) {
  _internal_set_offset_detection_enabled(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Response.offset_detection_enabled)
}

// optional uint32 offset_detection_min_clean_chunk = 7;
inline bool CContentBuilder_InitDepotBuild_Response::_internal_has_offset_detection_min_clean_chunk() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Response::has_offset_detection_min_clean_chunk() const {
  return _internal_has_offset_detection_min_clean_chunk();
}
inline void CContentBuilder_InitDepotBuild_Response::clear_offset_detection_min_clean_chunk() {
  offset_detection_min_clean_chunk_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CContentBuilder_InitDepotBuild_Response::_internal_offset_detection_min_clean_chunk() const {
  return offset_detection_min_clean_chunk_;
}
inline uint32_t CContentBuilder_InitDepotBuild_Response::offset_detection_min_clean_chunk() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Response.offset_detection_min_clean_chunk)
  return _internal_offset_detection_min_clean_chunk();
}
inline void CContentBuilder_InitDepotBuild_Response::_internal_set_offset_detection_min_clean_chunk(uint32_t value) {
  _has_bits_[0] |= 0x00000040u;
  offset_detection_min_clean_chunk_ = value;
}
inline void CContentBuilder_InitDepotBuild_Response::set_offset_detection_min_clean_chunk(uint32_t value) {
  _internal_set_offset_detection_min_clean_chunk(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Response.offset_detection_min_clean_chunk)
}

// optional uint32 offset_detection_blast_radius_pre = 8;
inline bool CContentBuilder_InitDepotBuild_Response::_internal_has_offset_detection_blast_radius_pre() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Response::has_offset_detection_blast_radius_pre() const {
  return _internal_has_offset_detection_blast_radius_pre();
}
inline void CContentBuilder_InitDepotBuild_Response::clear_offset_detection_blast_radius_pre() {
  offset_detection_blast_radius_pre_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CContentBuilder_InitDepotBuild_Response::_internal_offset_detection_blast_radius_pre() const {
  return offset_detection_blast_radius_pre_;
}
inline uint32_t CContentBuilder_InitDepotBuild_Response::offset_detection_blast_radius_pre() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Response.offset_detection_blast_radius_pre)
  return _internal_offset_detection_blast_radius_pre();
}
inline void CContentBuilder_InitDepotBuild_Response::_internal_set_offset_detection_blast_radius_pre(uint32_t value) {
  _has_bits_[0] |= 0x00000080u;
  offset_detection_blast_radius_pre_ = value;
}
inline void CContentBuilder_InitDepotBuild_Response::set_offset_detection_blast_radius_pre(uint32_t value) {
  _internal_set_offset_detection_blast_radius_pre(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Response.offset_detection_blast_radius_pre)
}

// optional uint32 offset_detection_blast_radius_post = 9;
inline bool CContentBuilder_InitDepotBuild_Response::_internal_has_offset_detection_blast_radius_post() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Response::has_offset_detection_blast_radius_post() const {
  return _internal_has_offset_detection_blast_radius_post();
}
inline void CContentBuilder_InitDepotBuild_Response::clear_offset_detection_blast_radius_post() {
  offset_detection_blast_radius_post_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline uint32_t CContentBuilder_InitDepotBuild_Response::_internal_offset_detection_blast_radius_post() const {
  return offset_detection_blast_radius_post_;
}
inline uint32_t CContentBuilder_InitDepotBuild_Response::offset_detection_blast_radius_post() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Response.offset_detection_blast_radius_post)
  return _internal_offset_detection_blast_radius_post();
}
inline void CContentBuilder_InitDepotBuild_Response::_internal_set_offset_detection_blast_radius_post(uint32_t value) {
  _has_bits_[0] |= 0x00000100u;
  offset_detection_blast_radius_post_ = value;
}
inline void CContentBuilder_InitDepotBuild_Response::set_offset_detection_blast_radius_post(uint32_t value) {
  _internal_set_offset_detection_blast_radius_post(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Response.offset_detection_blast_radius_post)
}

// optional uint32 offset_detection_max_distance_pre = 10;
inline bool CContentBuilder_InitDepotBuild_Response::_internal_has_offset_detection_max_distance_pre() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Response::has_offset_detection_max_distance_pre() const {
  return _internal_has_offset_detection_max_distance_pre();
}
inline void CContentBuilder_InitDepotBuild_Response::clear_offset_detection_max_distance_pre() {
  offset_detection_max_distance_pre_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CContentBuilder_InitDepotBuild_Response::_internal_offset_detection_max_distance_pre() const {
  return offset_detection_max_distance_pre_;
}
inline uint32_t CContentBuilder_InitDepotBuild_Response::offset_detection_max_distance_pre() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Response.offset_detection_max_distance_pre)
  return _internal_offset_detection_max_distance_pre();
}
inline void CContentBuilder_InitDepotBuild_Response::_internal_set_offset_detection_max_distance_pre(uint32_t value) {
  _has_bits_[0] |= 0x00000200u;
  offset_detection_max_distance_pre_ = value;
}
inline void CContentBuilder_InitDepotBuild_Response::set_offset_detection_max_distance_pre(uint32_t value) {
  _internal_set_offset_detection_max_distance_pre(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Response.offset_detection_max_distance_pre)
}

// optional uint32 offset_detection_max_distance_post = 11;
inline bool CContentBuilder_InitDepotBuild_Response::_internal_has_offset_detection_max_distance_post() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CContentBuilder_InitDepotBuild_Response::has_offset_detection_max_distance_post() const {
  return _internal_has_offset_detection_max_distance_post();
}
inline void CContentBuilder_InitDepotBuild_Response::clear_offset_detection_max_distance_post() {
  offset_detection_max_distance_post_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline uint32_t CContentBuilder_InitDepotBuild_Response::_internal_offset_detection_max_distance_post() const {
  return offset_detection_max_distance_post_;
}
inline uint32_t CContentBuilder_InitDepotBuild_Response::offset_detection_max_distance_post() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_InitDepotBuild_Response.offset_detection_max_distance_post)
  return _internal_offset_detection_max_distance_post();
}
inline void CContentBuilder_InitDepotBuild_Response::_internal_set_offset_detection_max_distance_post(uint32_t value) {
  _has_bits_[0] |= 0x00000400u;
  offset_detection_max_distance_post_ = value;
}
inline void CContentBuilder_InitDepotBuild_Response::set_offset_detection_max_distance_post(uint32_t value) {
  _internal_set_offset_detection_max_distance_post(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_InitDepotBuild_Response.offset_detection_max_distance_post)
}

// -------------------------------------------------------------------

// CContentBuilder_StartDepotUpload_Request

// optional uint32 appid = 1;
inline bool CContentBuilder_StartDepotUpload_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CContentBuilder_StartDepotUpload_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CContentBuilder_StartDepotUpload_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CContentBuilder_StartDepotUpload_Request::_internal_appid() const {
  return appid_;
}
inline uint32_t CContentBuilder_StartDepotUpload_Request::appid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_StartDepotUpload_Request.appid)
  return _internal_appid();
}
inline void CContentBuilder_StartDepotUpload_Request::_internal_set_appid(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void CContentBuilder_StartDepotUpload_Request::set_appid(uint32_t value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_StartDepotUpload_Request.appid)
}

// optional uint32 depotid = 2;
inline bool CContentBuilder_StartDepotUpload_Request::_internal_has_depotid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CContentBuilder_StartDepotUpload_Request::has_depotid() const {
  return _internal_has_depotid();
}
inline void CContentBuilder_StartDepotUpload_Request::clear_depotid() {
  depotid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CContentBuilder_StartDepotUpload_Request::_internal_depotid() const {
  return depotid_;
}
inline uint32_t CContentBuilder_StartDepotUpload_Request::depotid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_StartDepotUpload_Request.depotid)
  return _internal_depotid();
}
inline void CContentBuilder_StartDepotUpload_Request::_internal_set_depotid(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  depotid_ = value;
}
inline void CContentBuilder_StartDepotUpload_Request::set_depotid(uint32_t value) {
  _internal_set_depotid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_StartDepotUpload_Request.depotid)
}

// optional uint64 workshop_itemid = 3;
inline bool CContentBuilder_StartDepotUpload_Request::_internal_has_workshop_itemid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CContentBuilder_StartDepotUpload_Request::has_workshop_itemid() const {
  return _internal_has_workshop_itemid();
}
inline void CContentBuilder_StartDepotUpload_Request::clear_workshop_itemid() {
  workshop_itemid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CContentBuilder_StartDepotUpload_Request::_internal_workshop_itemid() const {
  return workshop_itemid_;
}
inline uint64_t CContentBuilder_StartDepotUpload_Request::workshop_itemid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_StartDepotUpload_Request.workshop_itemid)
  return _internal_workshop_itemid();
}
inline void CContentBuilder_StartDepotUpload_Request::_internal_set_workshop_itemid(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  workshop_itemid_ = value;
}
inline void CContentBuilder_StartDepotUpload_Request::set_workshop_itemid(uint64_t value) {
  _internal_set_workshop_itemid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_StartDepotUpload_Request.workshop_itemid)
}

// optional bool for_local_cs = 4;
inline bool CContentBuilder_StartDepotUpload_Request::_internal_has_for_local_cs() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CContentBuilder_StartDepotUpload_Request::has_for_local_cs() const {
  return _internal_has_for_local_cs();
}
inline void CContentBuilder_StartDepotUpload_Request::clear_for_local_cs() {
  for_local_cs_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CContentBuilder_StartDepotUpload_Request::_internal_for_local_cs() const {
  return for_local_cs_;
}
inline bool CContentBuilder_StartDepotUpload_Request::for_local_cs() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_StartDepotUpload_Request.for_local_cs)
  return _internal_for_local_cs();
}
inline void CContentBuilder_StartDepotUpload_Request::_internal_set_for_local_cs(bool value) {
  _has_bits_[0] |= 0x00000010u;
  for_local_cs_ = value;
}
inline void CContentBuilder_StartDepotUpload_Request::set_for_local_cs(bool value) {
  _internal_set_for_local_cs(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_StartDepotUpload_Request.for_local_cs)
}

// optional uint64 baseline_manifestid = 5;
inline bool CContentBuilder_StartDepotUpload_Request::_internal_has_baseline_manifestid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CContentBuilder_StartDepotUpload_Request::has_baseline_manifestid() const {
  return _internal_has_baseline_manifestid();
}
inline void CContentBuilder_StartDepotUpload_Request::clear_baseline_manifestid() {
  baseline_manifestid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CContentBuilder_StartDepotUpload_Request::_internal_baseline_manifestid() const {
  return baseline_manifestid_;
}
inline uint64_t CContentBuilder_StartDepotUpload_Request::baseline_manifestid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_StartDepotUpload_Request.baseline_manifestid)
  return _internal_baseline_manifestid();
}
inline void CContentBuilder_StartDepotUpload_Request::_internal_set_baseline_manifestid(uint64_t value) {
  _has_bits_[0] |= 0x00000008u;
  baseline_manifestid_ = value;
}
inline void CContentBuilder_StartDepotUpload_Request::set_baseline_manifestid(uint64_t value) {
  _internal_set_baseline_manifestid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_StartDepotUpload_Request.baseline_manifestid)
}

// optional uint32 manifest_size = 6;
inline bool CContentBuilder_StartDepotUpload_Request::_internal_has_manifest_size() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CContentBuilder_StartDepotUpload_Request::has_manifest_size() const {
  return _internal_has_manifest_size();
}
inline void CContentBuilder_StartDepotUpload_Request::clear_manifest_size() {
  manifest_size_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CContentBuilder_StartDepotUpload_Request::_internal_manifest_size() const {
  return manifest_size_;
}
inline uint32_t CContentBuilder_StartDepotUpload_Request::manifest_size() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_StartDepotUpload_Request.manifest_size)
  return _internal_manifest_size();
}
inline void CContentBuilder_StartDepotUpload_Request::_internal_set_manifest_size(uint32_t value) {
  _has_bits_[0] |= 0x00000020u;
  manifest_size_ = value;
}
inline void CContentBuilder_StartDepotUpload_Request::set_manifest_size(uint32_t value) {
  _internal_set_manifest_size(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_StartDepotUpload_Request.manifest_size)
}

// -------------------------------------------------------------------

// CContentBuilder_StartDepotUpload_Response

// optional uint64 depot_build_handle = 1;
inline bool CContentBuilder_StartDepotUpload_Response::_internal_has_depot_build_handle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CContentBuilder_StartDepotUpload_Response::has_depot_build_handle() const {
  return _internal_has_depot_build_handle();
}
inline void CContentBuilder_StartDepotUpload_Response::clear_depot_build_handle() {
  depot_build_handle_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CContentBuilder_StartDepotUpload_Response::_internal_depot_build_handle() const {
  return depot_build_handle_;
}
inline uint64_t CContentBuilder_StartDepotUpload_Response::depot_build_handle() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_StartDepotUpload_Response.depot_build_handle)
  return _internal_depot_build_handle();
}
inline void CContentBuilder_StartDepotUpload_Response::_internal_set_depot_build_handle(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  depot_build_handle_ = value;
}
inline void CContentBuilder_StartDepotUpload_Response::set_depot_build_handle(uint64_t value) {
  _internal_set_depot_build_handle(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_StartDepotUpload_Response.depot_build_handle)
}

// -------------------------------------------------------------------

// CContentBuilder_GetMissingDepotChunks_Request

// optional uint32 appid = 1;
inline bool CContentBuilder_GetMissingDepotChunks_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CContentBuilder_GetMissingDepotChunks_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CContentBuilder_GetMissingDepotChunks_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CContentBuilder_GetMissingDepotChunks_Request::_internal_appid() const {
  return appid_;
}
inline uint32_t CContentBuilder_GetMissingDepotChunks_Request::appid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_GetMissingDepotChunks_Request.appid)
  return _internal_appid();
}
inline void CContentBuilder_GetMissingDepotChunks_Request::_internal_set_appid(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
}
inline void CContentBuilder_GetMissingDepotChunks_Request::set_appid(uint32_t value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_GetMissingDepotChunks_Request.appid)
}

// optional uint64 depot_build_handle = 2;
inline bool CContentBuilder_GetMissingDepotChunks_Request::_internal_has_depot_build_handle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CContentBuilder_GetMissingDepotChunks_Request::has_depot_build_handle() const {
  return _internal_has_depot_build_handle();
}
inline void CContentBuilder_GetMissingDepotChunks_Request::clear_depot_build_handle() {
  depot_build_handle_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CContentBuilder_GetMissingDepotChunks_Request::_internal_depot_build_handle() const {
  return depot_build_handle_;
}
inline uint64_t CContentBuilder_GetMissingDepotChunks_Request::depot_build_handle() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_GetMissingDepotChunks_Request.depot_build_handle)
  return _internal_depot_build_handle();
}
inline void CContentBuilder_GetMissingDepotChunks_Request::_internal_set_depot_build_handle(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  depot_build_handle_ = value;
}
inline void CContentBuilder_GetMissingDepotChunks_Request::set_depot_build_handle(uint64_t value) {
  _internal_set_depot_build_handle(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_GetMissingDepotChunks_Request.depot_build_handle)
}

// -------------------------------------------------------------------

// CContentBuilder_GetMissingDepotChunks_Response_Chunks

// optional bytes sha = 1;
inline bool CContentBuilder_GetMissingDepotChunks_Response_Chunks::_internal_has_sha() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CContentBuilder_GetMissingDepotChunks_Response_Chunks::has_sha() const {
  return _internal_has_sha();
}
inline void CContentBuilder_GetMissingDepotChunks_Response_Chunks::clear_sha() {
  sha_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CContentBuilder_GetMissingDepotChunks_Response_Chunks::sha() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_GetMissingDepotChunks_Response.Chunks.sha)
  return _internal_sha();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CContentBuilder_GetMissingDepotChunks_Response_Chunks::set_sha(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 sha_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CContentBuilder_GetMissingDepotChunks_Response.Chunks.sha)
}
inline std::string* CContentBuilder_GetMissingDepotChunks_Response_Chunks::mutable_sha() {
  std::string* _s = _internal_mutable_sha();
  // @@protoc_insertion_point(field_mutable:CContentBuilder_GetMissingDepotChunks_Response.Chunks.sha)
  return _s;
}
inline const std::string& CContentBuilder_GetMissingDepotChunks_Response_Chunks::_internal_sha() const {
  return sha_.Get();
}
inline void CContentBuilder_GetMissingDepotChunks_Response_Chunks::_internal_set_sha(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CContentBuilder_GetMissingDepotChunks_Response_Chunks::_internal_mutable_sha() {
  _has_bits_[0] |= 0x00000001u;
  return sha_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CContentBuilder_GetMissingDepotChunks_Response_Chunks::release_sha() {
  // @@protoc_insertion_point(field_release:CContentBuilder_GetMissingDepotChunks_Response.Chunks.sha)
  if (!_internal_has_sha()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = sha_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (sha_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    sha_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CContentBuilder_GetMissingDepotChunks_Response_Chunks::set_allocated_sha(std::string* sha) {
  if (sha != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  sha_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sha,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (sha_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    sha_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CContentBuilder_GetMissingDepotChunks_Response.Chunks.sha)
}

// -------------------------------------------------------------------

// CContentBuilder_GetMissingDepotChunks_Response

// repeated .CContentBuilder_GetMissingDepotChunks_Response.Chunks missing_chunks = 1;
inline int CContentBuilder_GetMissingDepotChunks_Response::_internal_missing_chunks_size() const {
  return missing_chunks_.size();
}
inline int CContentBuilder_GetMissingDepotChunks_Response::missing_chunks_size() const {
  return _internal_missing_chunks_size();
}
inline void CContentBuilder_GetMissingDepotChunks_Response::clear_missing_chunks() {
  missing_chunks_.Clear();
}
inline ::CContentBuilder_GetMissingDepotChunks_Response_Chunks* CContentBuilder_GetMissingDepotChunks_Response::mutable_missing_chunks(int index) {
  // @@protoc_insertion_point(field_mutable:CContentBuilder_GetMissingDepotChunks_Response.missing_chunks)
  return missing_chunks_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CContentBuilder_GetMissingDepotChunks_Response_Chunks >*
CContentBuilder_GetMissingDepotChunks_Response::mutable_missing_chunks() {
  // @@protoc_insertion_point(field_mutable_list:CContentBuilder_GetMissingDepotChunks_Response.missing_chunks)
  return &missing_chunks_;
}
inline const ::CContentBuilder_GetMissingDepotChunks_Response_Chunks& CContentBuilder_GetMissingDepotChunks_Response::_internal_missing_chunks(int index) const {
  return missing_chunks_.Get(index);
}
inline const ::CContentBuilder_GetMissingDepotChunks_Response_Chunks& CContentBuilder_GetMissingDepotChunks_Response::missing_chunks(int index) const {
  // @@protoc_insertion_point(field_get:CContentBuilder_GetMissingDepotChunks_Response.missing_chunks)
  return _internal_missing_chunks(index);
}
inline ::CContentBuilder_GetMissingDepotChunks_Response_Chunks* CContentBuilder_GetMissingDepotChunks_Response::_internal_add_missing_chunks() {
  return missing_chunks_.Add();
}
inline ::CContentBuilder_GetMissingDepotChunks_Response_Chunks* CContentBuilder_GetMissingDepotChunks_Response::add_missing_chunks() {
  ::CContentBuilder_GetMissingDepotChunks_Response_Chunks* _add = _internal_add_missing_chunks();
  // @@protoc_insertion_point(field_add:CContentBuilder_GetMissingDepotChunks_Response.missing_chunks)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CContentBuilder_GetMissingDepotChunks_Response_Chunks >&
CContentBuilder_GetMissingDepotChunks_Response::missing_chunks() const {
  // @@protoc_insertion_point(field_list:CContentBuilder_GetMissingDepotChunks_Response.missing_chunks)
  return missing_chunks_;
}

// optional uint32 total_missing_chunks = 2;
inline bool CContentBuilder_GetMissingDepotChunks_Response::_internal_has_total_missing_chunks() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CContentBuilder_GetMissingDepotChunks_Response::has_total_missing_chunks() const {
  return _internal_has_total_missing_chunks();
}
inline void CContentBuilder_GetMissingDepotChunks_Response::clear_total_missing_chunks() {
  total_missing_chunks_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CContentBuilder_GetMissingDepotChunks_Response::_internal_total_missing_chunks() const {
  return total_missing_chunks_;
}
inline uint32_t CContentBuilder_GetMissingDepotChunks_Response::total_missing_chunks() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_GetMissingDepotChunks_Response.total_missing_chunks)
  return _internal_total_missing_chunks();
}
inline void CContentBuilder_GetMissingDepotChunks_Response::_internal_set_total_missing_chunks(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  total_missing_chunks_ = value;
}
inline void CContentBuilder_GetMissingDepotChunks_Response::set_total_missing_chunks(uint32_t value) {
  _internal_set_total_missing_chunks(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_GetMissingDepotChunks_Response.total_missing_chunks)
}

// optional uint64 total_missing_bytes = 3;
inline bool CContentBuilder_GetMissingDepotChunks_Response::_internal_has_total_missing_bytes() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CContentBuilder_GetMissingDepotChunks_Response::has_total_missing_bytes() const {
  return _internal_has_total_missing_bytes();
}
inline void CContentBuilder_GetMissingDepotChunks_Response::clear_total_missing_bytes() {
  total_missing_bytes_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CContentBuilder_GetMissingDepotChunks_Response::_internal_total_missing_bytes() const {
  return total_missing_bytes_;
}
inline uint64_t CContentBuilder_GetMissingDepotChunks_Response::total_missing_bytes() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_GetMissingDepotChunks_Response.total_missing_bytes)
  return _internal_total_missing_bytes();
}
inline void CContentBuilder_GetMissingDepotChunks_Response::_internal_set_total_missing_bytes(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  total_missing_bytes_ = value;
}
inline void CContentBuilder_GetMissingDepotChunks_Response::set_total_missing_bytes(uint64_t value) {
  _internal_set_total_missing_bytes(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_GetMissingDepotChunks_Response.total_missing_bytes)
}

// -------------------------------------------------------------------

// CContentBuilder_FinishDepotUpload_Request

// optional uint32 appid = 1;
inline bool CContentBuilder_FinishDepotUpload_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CContentBuilder_FinishDepotUpload_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CContentBuilder_FinishDepotUpload_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CContentBuilder_FinishDepotUpload_Request::_internal_appid() const {
  return appid_;
}
inline uint32_t CContentBuilder_FinishDepotUpload_Request::appid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_FinishDepotUpload_Request.appid)
  return _internal_appid();
}
inline void CContentBuilder_FinishDepotUpload_Request::_internal_set_appid(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
}
inline void CContentBuilder_FinishDepotUpload_Request::set_appid(uint32_t value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_FinishDepotUpload_Request.appid)
}

// optional uint64 depot_build_handle = 2;
inline bool CContentBuilder_FinishDepotUpload_Request::_internal_has_depot_build_handle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CContentBuilder_FinishDepotUpload_Request::has_depot_build_handle() const {
  return _internal_has_depot_build_handle();
}
inline void CContentBuilder_FinishDepotUpload_Request::clear_depot_build_handle() {
  depot_build_handle_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CContentBuilder_FinishDepotUpload_Request::_internal_depot_build_handle() const {
  return depot_build_handle_;
}
inline uint64_t CContentBuilder_FinishDepotUpload_Request::depot_build_handle() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_FinishDepotUpload_Request.depot_build_handle)
  return _internal_depot_build_handle();
}
inline void CContentBuilder_FinishDepotUpload_Request::_internal_set_depot_build_handle(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  depot_build_handle_ = value;
}
inline void CContentBuilder_FinishDepotUpload_Request::set_depot_build_handle(uint64_t value) {
  _internal_set_depot_build_handle(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_FinishDepotUpload_Request.depot_build_handle)
}

// -------------------------------------------------------------------

// CContentBuilder_FinishDepotUpload_Response

// optional uint64 manifestid = 1;
inline bool CContentBuilder_FinishDepotUpload_Response::_internal_has_manifestid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CContentBuilder_FinishDepotUpload_Response::has_manifestid() const {
  return _internal_has_manifestid();
}
inline void CContentBuilder_FinishDepotUpload_Response::clear_manifestid() {
  manifestid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CContentBuilder_FinishDepotUpload_Response::_internal_manifestid() const {
  return manifestid_;
}
inline uint64_t CContentBuilder_FinishDepotUpload_Response::manifestid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_FinishDepotUpload_Response.manifestid)
  return _internal_manifestid();
}
inline void CContentBuilder_FinishDepotUpload_Response::_internal_set_manifestid(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  manifestid_ = value;
}
inline void CContentBuilder_FinishDepotUpload_Response::set_manifestid(uint64_t value) {
  _internal_set_manifestid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_FinishDepotUpload_Response.manifestid)
}

// optional bool prev_reused = 2;
inline bool CContentBuilder_FinishDepotUpload_Response::_internal_has_prev_reused() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CContentBuilder_FinishDepotUpload_Response::has_prev_reused() const {
  return _internal_has_prev_reused();
}
inline void CContentBuilder_FinishDepotUpload_Response::clear_prev_reused() {
  prev_reused_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CContentBuilder_FinishDepotUpload_Response::_internal_prev_reused() const {
  return prev_reused_;
}
inline bool CContentBuilder_FinishDepotUpload_Response::prev_reused() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_FinishDepotUpload_Response.prev_reused)
  return _internal_prev_reused();
}
inline void CContentBuilder_FinishDepotUpload_Response::_internal_set_prev_reused(bool value) {
  _has_bits_[0] |= 0x00000002u;
  prev_reused_ = value;
}
inline void CContentBuilder_FinishDepotUpload_Response::set_prev_reused(bool value) {
  _internal_set_prev_reused(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_FinishDepotUpload_Response.prev_reused)
}

// -------------------------------------------------------------------

// CContentBuilder_CommitAppBuild_Request_Depots

// optional uint32 depotid = 1;
inline bool CContentBuilder_CommitAppBuild_Request_Depots::_internal_has_depotid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CContentBuilder_CommitAppBuild_Request_Depots::has_depotid() const {
  return _internal_has_depotid();
}
inline void CContentBuilder_CommitAppBuild_Request_Depots::clear_depotid() {
  depotid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CContentBuilder_CommitAppBuild_Request_Depots::_internal_depotid() const {
  return depotid_;
}
inline uint32_t CContentBuilder_CommitAppBuild_Request_Depots::depotid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_CommitAppBuild_Request.Depots.depotid)
  return _internal_depotid();
}
inline void CContentBuilder_CommitAppBuild_Request_Depots::_internal_set_depotid(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  depotid_ = value;
}
inline void CContentBuilder_CommitAppBuild_Request_Depots::set_depotid(uint32_t value) {
  _internal_set_depotid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_CommitAppBuild_Request.Depots.depotid)
}

// optional uint64 manifestid = 2;
inline bool CContentBuilder_CommitAppBuild_Request_Depots::_internal_has_manifestid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CContentBuilder_CommitAppBuild_Request_Depots::has_manifestid() const {
  return _internal_has_manifestid();
}
inline void CContentBuilder_CommitAppBuild_Request_Depots::clear_manifestid() {
  manifestid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CContentBuilder_CommitAppBuild_Request_Depots::_internal_manifestid() const {
  return manifestid_;
}
inline uint64_t CContentBuilder_CommitAppBuild_Request_Depots::manifestid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_CommitAppBuild_Request.Depots.manifestid)
  return _internal_manifestid();
}
inline void CContentBuilder_CommitAppBuild_Request_Depots::_internal_set_manifestid(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  manifestid_ = value;
}
inline void CContentBuilder_CommitAppBuild_Request_Depots::set_manifestid(uint64_t value) {
  _internal_set_manifestid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_CommitAppBuild_Request.Depots.manifestid)
}

// -------------------------------------------------------------------

// CContentBuilder_CommitAppBuild_Request

// optional uint32 appid = 1;
inline bool CContentBuilder_CommitAppBuild_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CContentBuilder_CommitAppBuild_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CContentBuilder_CommitAppBuild_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CContentBuilder_CommitAppBuild_Request::_internal_appid() const {
  return appid_;
}
inline uint32_t CContentBuilder_CommitAppBuild_Request::appid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_CommitAppBuild_Request.appid)
  return _internal_appid();
}
inline void CContentBuilder_CommitAppBuild_Request::_internal_set_appid(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
}
inline void CContentBuilder_CommitAppBuild_Request::set_appid(uint32_t value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_CommitAppBuild_Request.appid)
}

// repeated .CContentBuilder_CommitAppBuild_Request.Depots depot_manifests = 2;
inline int CContentBuilder_CommitAppBuild_Request::_internal_depot_manifests_size() const {
  return depot_manifests_.size();
}
inline int CContentBuilder_CommitAppBuild_Request::depot_manifests_size() const {
  return _internal_depot_manifests_size();
}
inline void CContentBuilder_CommitAppBuild_Request::clear_depot_manifests() {
  depot_manifests_.Clear();
}
inline ::CContentBuilder_CommitAppBuild_Request_Depots* CContentBuilder_CommitAppBuild_Request::mutable_depot_manifests(int index) {
  // @@protoc_insertion_point(field_mutable:CContentBuilder_CommitAppBuild_Request.depot_manifests)
  return depot_manifests_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CContentBuilder_CommitAppBuild_Request_Depots >*
CContentBuilder_CommitAppBuild_Request::mutable_depot_manifests() {
  // @@protoc_insertion_point(field_mutable_list:CContentBuilder_CommitAppBuild_Request.depot_manifests)
  return &depot_manifests_;
}
inline const ::CContentBuilder_CommitAppBuild_Request_Depots& CContentBuilder_CommitAppBuild_Request::_internal_depot_manifests(int index) const {
  return depot_manifests_.Get(index);
}
inline const ::CContentBuilder_CommitAppBuild_Request_Depots& CContentBuilder_CommitAppBuild_Request::depot_manifests(int index) const {
  // @@protoc_insertion_point(field_get:CContentBuilder_CommitAppBuild_Request.depot_manifests)
  return _internal_depot_manifests(index);
}
inline ::CContentBuilder_CommitAppBuild_Request_Depots* CContentBuilder_CommitAppBuild_Request::_internal_add_depot_manifests() {
  return depot_manifests_.Add();
}
inline ::CContentBuilder_CommitAppBuild_Request_Depots* CContentBuilder_CommitAppBuild_Request::add_depot_manifests() {
  ::CContentBuilder_CommitAppBuild_Request_Depots* _add = _internal_add_depot_manifests();
  // @@protoc_insertion_point(field_add:CContentBuilder_CommitAppBuild_Request.depot_manifests)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CContentBuilder_CommitAppBuild_Request_Depots >&
CContentBuilder_CommitAppBuild_Request::depot_manifests() const {
  // @@protoc_insertion_point(field_list:CContentBuilder_CommitAppBuild_Request.depot_manifests)
  return depot_manifests_;
}

// optional string build_notes = 4;
inline bool CContentBuilder_CommitAppBuild_Request::_internal_has_build_notes() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CContentBuilder_CommitAppBuild_Request::has_build_notes() const {
  return _internal_has_build_notes();
}
inline void CContentBuilder_CommitAppBuild_Request::clear_build_notes() {
  build_notes_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CContentBuilder_CommitAppBuild_Request::build_notes() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_CommitAppBuild_Request.build_notes)
  return _internal_build_notes();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CContentBuilder_CommitAppBuild_Request::set_build_notes(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 build_notes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CContentBuilder_CommitAppBuild_Request.build_notes)
}
inline std::string* CContentBuilder_CommitAppBuild_Request::mutable_build_notes() {
  std::string* _s = _internal_mutable_build_notes();
  // @@protoc_insertion_point(field_mutable:CContentBuilder_CommitAppBuild_Request.build_notes)
  return _s;
}
inline const std::string& CContentBuilder_CommitAppBuild_Request::_internal_build_notes() const {
  return build_notes_.Get();
}
inline void CContentBuilder_CommitAppBuild_Request::_internal_set_build_notes(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  build_notes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CContentBuilder_CommitAppBuild_Request::_internal_mutable_build_notes() {
  _has_bits_[0] |= 0x00000001u;
  return build_notes_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CContentBuilder_CommitAppBuild_Request::release_build_notes() {
  // @@protoc_insertion_point(field_release:CContentBuilder_CommitAppBuild_Request.build_notes)
  if (!_internal_has_build_notes()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = build_notes_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (build_notes_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    build_notes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CContentBuilder_CommitAppBuild_Request::set_allocated_build_notes(std::string* build_notes) {
  if (build_notes != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  build_notes_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), build_notes,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (build_notes_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    build_notes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CContentBuilder_CommitAppBuild_Request.build_notes)
}

// optional string live_branch = 5;
inline bool CContentBuilder_CommitAppBuild_Request::_internal_has_live_branch() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CContentBuilder_CommitAppBuild_Request::has_live_branch() const {
  return _internal_has_live_branch();
}
inline void CContentBuilder_CommitAppBuild_Request::clear_live_branch() {
  live_branch_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CContentBuilder_CommitAppBuild_Request::live_branch() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_CommitAppBuild_Request.live_branch)
  return _internal_live_branch();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CContentBuilder_CommitAppBuild_Request::set_live_branch(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 live_branch_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CContentBuilder_CommitAppBuild_Request.live_branch)
}
inline std::string* CContentBuilder_CommitAppBuild_Request::mutable_live_branch() {
  std::string* _s = _internal_mutable_live_branch();
  // @@protoc_insertion_point(field_mutable:CContentBuilder_CommitAppBuild_Request.live_branch)
  return _s;
}
inline const std::string& CContentBuilder_CommitAppBuild_Request::_internal_live_branch() const {
  return live_branch_.Get();
}
inline void CContentBuilder_CommitAppBuild_Request::_internal_set_live_branch(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  live_branch_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CContentBuilder_CommitAppBuild_Request::_internal_mutable_live_branch() {
  _has_bits_[0] |= 0x00000002u;
  return live_branch_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CContentBuilder_CommitAppBuild_Request::release_live_branch() {
  // @@protoc_insertion_point(field_release:CContentBuilder_CommitAppBuild_Request.live_branch)
  if (!_internal_has_live_branch()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  auto* p = live_branch_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (live_branch_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    live_branch_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CContentBuilder_CommitAppBuild_Request::set_allocated_live_branch(std::string* live_branch) {
  if (live_branch != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  live_branch_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), live_branch,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (live_branch_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    live_branch_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CContentBuilder_CommitAppBuild_Request.live_branch)
}

// -------------------------------------------------------------------

// CContentBuilder_CommitAppBuild_Response

// optional uint32 buildid = 1;
inline bool CContentBuilder_CommitAppBuild_Response::_internal_has_buildid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CContentBuilder_CommitAppBuild_Response::has_buildid() const {
  return _internal_has_buildid();
}
inline void CContentBuilder_CommitAppBuild_Response::clear_buildid() {
  buildid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CContentBuilder_CommitAppBuild_Response::_internal_buildid() const {
  return buildid_;
}
inline uint32_t CContentBuilder_CommitAppBuild_Response::buildid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_CommitAppBuild_Response.buildid)
  return _internal_buildid();
}
inline void CContentBuilder_CommitAppBuild_Response::_internal_set_buildid(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  buildid_ = value;
}
inline void CContentBuilder_CommitAppBuild_Response::set_buildid(uint32_t value) {
  _internal_set_buildid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_CommitAppBuild_Response.buildid)
}

// -------------------------------------------------------------------

// CContentBuilder_SignInstallScript_Request

// optional uint32 appid = 1;
inline bool CContentBuilder_SignInstallScript_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CContentBuilder_SignInstallScript_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CContentBuilder_SignInstallScript_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CContentBuilder_SignInstallScript_Request::_internal_appid() const {
  return appid_;
}
inline uint32_t CContentBuilder_SignInstallScript_Request::appid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_SignInstallScript_Request.appid)
  return _internal_appid();
}
inline void CContentBuilder_SignInstallScript_Request::_internal_set_appid(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
}
inline void CContentBuilder_SignInstallScript_Request::set_appid(uint32_t value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_SignInstallScript_Request.appid)
}

// optional uint32 depotid = 2;
inline bool CContentBuilder_SignInstallScript_Request::_internal_has_depotid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CContentBuilder_SignInstallScript_Request::has_depotid() const {
  return _internal_has_depotid();
}
inline void CContentBuilder_SignInstallScript_Request::clear_depotid() {
  depotid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CContentBuilder_SignInstallScript_Request::_internal_depotid() const {
  return depotid_;
}
inline uint32_t CContentBuilder_SignInstallScript_Request::depotid() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_SignInstallScript_Request.depotid)
  return _internal_depotid();
}
inline void CContentBuilder_SignInstallScript_Request::_internal_set_depotid(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  depotid_ = value;
}
inline void CContentBuilder_SignInstallScript_Request::set_depotid(uint32_t value) {
  _internal_set_depotid(value);
  // @@protoc_insertion_point(field_set:CContentBuilder_SignInstallScript_Request.depotid)
}

// optional string install_script = 3;
inline bool CContentBuilder_SignInstallScript_Request::_internal_has_install_script() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CContentBuilder_SignInstallScript_Request::has_install_script() const {
  return _internal_has_install_script();
}
inline void CContentBuilder_SignInstallScript_Request::clear_install_script() {
  install_script_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CContentBuilder_SignInstallScript_Request::install_script() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_SignInstallScript_Request.install_script)
  return _internal_install_script();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CContentBuilder_SignInstallScript_Request::set_install_script(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 install_script_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CContentBuilder_SignInstallScript_Request.install_script)
}
inline std::string* CContentBuilder_SignInstallScript_Request::mutable_install_script() {
  std::string* _s = _internal_mutable_install_script();
  // @@protoc_insertion_point(field_mutable:CContentBuilder_SignInstallScript_Request.install_script)
  return _s;
}
inline const std::string& CContentBuilder_SignInstallScript_Request::_internal_install_script() const {
  return install_script_.Get();
}
inline void CContentBuilder_SignInstallScript_Request::_internal_set_install_script(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  install_script_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CContentBuilder_SignInstallScript_Request::_internal_mutable_install_script() {
  _has_bits_[0] |= 0x00000001u;
  return install_script_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CContentBuilder_SignInstallScript_Request::release_install_script() {
  // @@protoc_insertion_point(field_release:CContentBuilder_SignInstallScript_Request.install_script)
  if (!_internal_has_install_script()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = install_script_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (install_script_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    install_script_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CContentBuilder_SignInstallScript_Request::set_allocated_install_script(std::string* install_script) {
  if (install_script != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  install_script_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), install_script,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (install_script_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    install_script_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CContentBuilder_SignInstallScript_Request.install_script)
}

// -------------------------------------------------------------------

// CContentBuilder_SignInstallScript_Response

// optional string signed_install_script = 1;
inline bool CContentBuilder_SignInstallScript_Response::_internal_has_signed_install_script() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CContentBuilder_SignInstallScript_Response::has_signed_install_script() const {
  return _internal_has_signed_install_script();
}
inline void CContentBuilder_SignInstallScript_Response::clear_signed_install_script() {
  signed_install_script_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CContentBuilder_SignInstallScript_Response::signed_install_script() const {
  // @@protoc_insertion_point(field_get:CContentBuilder_SignInstallScript_Response.signed_install_script)
  return _internal_signed_install_script();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CContentBuilder_SignInstallScript_Response::set_signed_install_script(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 signed_install_script_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CContentBuilder_SignInstallScript_Response.signed_install_script)
}
inline std::string* CContentBuilder_SignInstallScript_Response::mutable_signed_install_script() {
  std::string* _s = _internal_mutable_signed_install_script();
  // @@protoc_insertion_point(field_mutable:CContentBuilder_SignInstallScript_Response.signed_install_script)
  return _s;
}
inline const std::string& CContentBuilder_SignInstallScript_Response::_internal_signed_install_script() const {
  return signed_install_script_.Get();
}
inline void CContentBuilder_SignInstallScript_Response::_internal_set_signed_install_script(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  signed_install_script_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CContentBuilder_SignInstallScript_Response::_internal_mutable_signed_install_script() {
  _has_bits_[0] |= 0x00000001u;
  return signed_install_script_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CContentBuilder_SignInstallScript_Response::release_signed_install_script() {
  // @@protoc_insertion_point(field_release:CContentBuilder_SignInstallScript_Response.signed_install_script)
  if (!_internal_has_signed_install_script()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = signed_install_script_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (signed_install_script_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    signed_install_script_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CContentBuilder_SignInstallScript_Response::set_allocated_signed_install_script(std::string* signed_install_script) {
  if (signed_install_script != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  signed_install_script_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signed_install_script,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (signed_install_script_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    signed_install_script_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CContentBuilder_SignInstallScript_Response.signed_install_script)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_steammessages_5fdepotbuilder_2esteamclient_2eproto
