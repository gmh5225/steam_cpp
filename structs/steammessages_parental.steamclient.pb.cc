// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_parental.steamclient.proto

#include "steammessages_parental.steamclient.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr ParentalApp::ParentalApp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : appid_(0u)
  , is_allowed_(false){}
struct ParentalAppDefaultTypeInternal {
  constexpr ParentalAppDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ParentalAppDefaultTypeInternal() {}
  union {
    ParentalApp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ParentalAppDefaultTypeInternal _ParentalApp_default_instance_;
constexpr ParentalSettings::ParentalSettings(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : applist_base_()
  , applist_custom_()
  , applist_base_description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , salt_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , passwordhash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , recovery_email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , steamid_(uint64_t{0u})
  , applist_base_id_(0u)
  , passwordhashtype_(0u)
  , enabled_features_(0u)
  , is_enabled_(false)
  , is_site_license_lock_(false){}
struct ParentalSettingsDefaultTypeInternal {
  constexpr ParentalSettingsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ParentalSettingsDefaultTypeInternal() {}
  union {
    ParentalSettings _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ParentalSettingsDefaultTypeInternal _ParentalSettings_default_instance_;
constexpr CParental_EnableParentalSettings_Request::CParental_EnableParentalSettings_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sessionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , settings_(nullptr)
  , enablecode_(0u)
  , steamid_(uint64_t{0u}){}
struct CParental_EnableParentalSettings_RequestDefaultTypeInternal {
  constexpr CParental_EnableParentalSettings_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_EnableParentalSettings_RequestDefaultTypeInternal() {}
  union {
    CParental_EnableParentalSettings_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_EnableParentalSettings_RequestDefaultTypeInternal _CParental_EnableParentalSettings_Request_default_instance_;
constexpr CParental_EnableParentalSettings_Response::CParental_EnableParentalSettings_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CParental_EnableParentalSettings_ResponseDefaultTypeInternal {
  constexpr CParental_EnableParentalSettings_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_EnableParentalSettings_ResponseDefaultTypeInternal() {}
  union {
    CParental_EnableParentalSettings_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_EnableParentalSettings_ResponseDefaultTypeInternal _CParental_EnableParentalSettings_Response_default_instance_;
constexpr CParental_DisableParentalSettings_Request::CParental_DisableParentalSettings_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , steamid_(uint64_t{0u}){}
struct CParental_DisableParentalSettings_RequestDefaultTypeInternal {
  constexpr CParental_DisableParentalSettings_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_DisableParentalSettings_RequestDefaultTypeInternal() {}
  union {
    CParental_DisableParentalSettings_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_DisableParentalSettings_RequestDefaultTypeInternal _CParental_DisableParentalSettings_Request_default_instance_;
constexpr CParental_DisableParentalSettings_Response::CParental_DisableParentalSettings_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CParental_DisableParentalSettings_ResponseDefaultTypeInternal {
  constexpr CParental_DisableParentalSettings_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_DisableParentalSettings_ResponseDefaultTypeInternal() {}
  union {
    CParental_DisableParentalSettings_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_DisableParentalSettings_ResponseDefaultTypeInternal _CParental_DisableParentalSettings_Response_default_instance_;
constexpr CParental_GetParentalSettings_Request::CParental_GetParentalSettings_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : steamid_(uint64_t{0u}){}
struct CParental_GetParentalSettings_RequestDefaultTypeInternal {
  constexpr CParental_GetParentalSettings_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_GetParentalSettings_RequestDefaultTypeInternal() {}
  union {
    CParental_GetParentalSettings_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_GetParentalSettings_RequestDefaultTypeInternal _CParental_GetParentalSettings_Request_default_instance_;
constexpr CParental_GetParentalSettings_Response::CParental_GetParentalSettings_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : settings_(nullptr){}
struct CParental_GetParentalSettings_ResponseDefaultTypeInternal {
  constexpr CParental_GetParentalSettings_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_GetParentalSettings_ResponseDefaultTypeInternal() {}
  union {
    CParental_GetParentalSettings_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_GetParentalSettings_ResponseDefaultTypeInternal _CParental_GetParentalSettings_Response_default_instance_;
constexpr CParental_GetSignedParentalSettings_Request::CParental_GetSignedParentalSettings_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : priority_(0u){}
struct CParental_GetSignedParentalSettings_RequestDefaultTypeInternal {
  constexpr CParental_GetSignedParentalSettings_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_GetSignedParentalSettings_RequestDefaultTypeInternal() {}
  union {
    CParental_GetSignedParentalSettings_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_GetSignedParentalSettings_RequestDefaultTypeInternal _CParental_GetSignedParentalSettings_Request_default_instance_;
constexpr CParental_GetSignedParentalSettings_Response::CParental_GetSignedParentalSettings_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : serialized_settings_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , signature_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CParental_GetSignedParentalSettings_ResponseDefaultTypeInternal {
  constexpr CParental_GetSignedParentalSettings_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_GetSignedParentalSettings_ResponseDefaultTypeInternal() {}
  union {
    CParental_GetSignedParentalSettings_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_GetSignedParentalSettings_ResponseDefaultTypeInternal _CParental_GetSignedParentalSettings_Response_default_instance_;
constexpr CParental_SetParentalSettings_Request::CParental_SetParentalSettings_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , new_password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sessionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , settings_(nullptr)
  , steamid_(uint64_t{0u}){}
struct CParental_SetParentalSettings_RequestDefaultTypeInternal {
  constexpr CParental_SetParentalSettings_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_SetParentalSettings_RequestDefaultTypeInternal() {}
  union {
    CParental_SetParentalSettings_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_SetParentalSettings_RequestDefaultTypeInternal _CParental_SetParentalSettings_Request_default_instance_;
constexpr CParental_SetParentalSettings_Response::CParental_SetParentalSettings_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CParental_SetParentalSettings_ResponseDefaultTypeInternal {
  constexpr CParental_SetParentalSettings_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_SetParentalSettings_ResponseDefaultTypeInternal() {}
  union {
    CParental_SetParentalSettings_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_SetParentalSettings_ResponseDefaultTypeInternal _CParental_SetParentalSettings_Response_default_instance_;
constexpr CParental_ValidateToken_Request::CParental_ValidateToken_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : unlock_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CParental_ValidateToken_RequestDefaultTypeInternal {
  constexpr CParental_ValidateToken_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_ValidateToken_RequestDefaultTypeInternal() {}
  union {
    CParental_ValidateToken_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_ValidateToken_RequestDefaultTypeInternal _CParental_ValidateToken_Request_default_instance_;
constexpr CParental_ValidateToken_Response::CParental_ValidateToken_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CParental_ValidateToken_ResponseDefaultTypeInternal {
  constexpr CParental_ValidateToken_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_ValidateToken_ResponseDefaultTypeInternal() {}
  union {
    CParental_ValidateToken_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_ValidateToken_ResponseDefaultTypeInternal _CParental_ValidateToken_Response_default_instance_;
constexpr CParental_ValidatePassword_Request::CParental_ValidatePassword_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , session_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , send_unlock_on_success_(false){}
struct CParental_ValidatePassword_RequestDefaultTypeInternal {
  constexpr CParental_ValidatePassword_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_ValidatePassword_RequestDefaultTypeInternal() {}
  union {
    CParental_ValidatePassword_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_ValidatePassword_RequestDefaultTypeInternal _CParental_ValidatePassword_Request_default_instance_;
constexpr CParental_ValidatePassword_Response::CParental_ValidatePassword_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CParental_ValidatePassword_ResponseDefaultTypeInternal {
  constexpr CParental_ValidatePassword_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_ValidatePassword_ResponseDefaultTypeInternal() {}
  union {
    CParental_ValidatePassword_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_ValidatePassword_ResponseDefaultTypeInternal _CParental_ValidatePassword_Response_default_instance_;
constexpr CParental_LockClient_Request::CParental_LockClient_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : session_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CParental_LockClient_RequestDefaultTypeInternal {
  constexpr CParental_LockClient_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_LockClient_RequestDefaultTypeInternal() {}
  union {
    CParental_LockClient_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_LockClient_RequestDefaultTypeInternal _CParental_LockClient_Request_default_instance_;
constexpr CParental_LockClient_Response::CParental_LockClient_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CParental_LockClient_ResponseDefaultTypeInternal {
  constexpr CParental_LockClient_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_LockClient_ResponseDefaultTypeInternal() {}
  union {
    CParental_LockClient_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_LockClient_ResponseDefaultTypeInternal _CParental_LockClient_Response_default_instance_;
constexpr CParental_RequestRecoveryCode_Request::CParental_RequestRecoveryCode_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CParental_RequestRecoveryCode_RequestDefaultTypeInternal {
  constexpr CParental_RequestRecoveryCode_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_RequestRecoveryCode_RequestDefaultTypeInternal() {}
  union {
    CParental_RequestRecoveryCode_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_RequestRecoveryCode_RequestDefaultTypeInternal _CParental_RequestRecoveryCode_Request_default_instance_;
constexpr CParental_RequestRecoveryCode_Response::CParental_RequestRecoveryCode_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CParental_RequestRecoveryCode_ResponseDefaultTypeInternal {
  constexpr CParental_RequestRecoveryCode_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_RequestRecoveryCode_ResponseDefaultTypeInternal() {}
  union {
    CParental_RequestRecoveryCode_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_RequestRecoveryCode_ResponseDefaultTypeInternal _CParental_RequestRecoveryCode_Response_default_instance_;
constexpr CParental_DisableWithRecoveryCode_Request::CParental_DisableWithRecoveryCode_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : recovery_code_(0u)
  , steamid_(uint64_t{0u}){}
struct CParental_DisableWithRecoveryCode_RequestDefaultTypeInternal {
  constexpr CParental_DisableWithRecoveryCode_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_DisableWithRecoveryCode_RequestDefaultTypeInternal() {}
  union {
    CParental_DisableWithRecoveryCode_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_DisableWithRecoveryCode_RequestDefaultTypeInternal _CParental_DisableWithRecoveryCode_Request_default_instance_;
constexpr CParental_DisableWithRecoveryCode_Response::CParental_DisableWithRecoveryCode_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CParental_DisableWithRecoveryCode_ResponseDefaultTypeInternal {
  constexpr CParental_DisableWithRecoveryCode_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_DisableWithRecoveryCode_ResponseDefaultTypeInternal() {}
  union {
    CParental_DisableWithRecoveryCode_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_DisableWithRecoveryCode_ResponseDefaultTypeInternal _CParental_DisableWithRecoveryCode_Response_default_instance_;
constexpr CParental_ParentalSettingsChange_Notification::CParental_ParentalSettingsChange_Notification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : serialized_settings_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , signature_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sessionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CParental_ParentalSettingsChange_NotificationDefaultTypeInternal {
  constexpr CParental_ParentalSettingsChange_NotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_ParentalSettingsChange_NotificationDefaultTypeInternal() {}
  union {
    CParental_ParentalSettingsChange_Notification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_ParentalSettingsChange_NotificationDefaultTypeInternal _CParental_ParentalSettingsChange_Notification_default_instance_;
constexpr CParental_ParentalUnlock_Notification::CParental_ParentalUnlock_Notification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sessionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CParental_ParentalUnlock_NotificationDefaultTypeInternal {
  constexpr CParental_ParentalUnlock_NotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_ParentalUnlock_NotificationDefaultTypeInternal() {}
  union {
    CParental_ParentalUnlock_Notification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_ParentalUnlock_NotificationDefaultTypeInternal _CParental_ParentalUnlock_Notification_default_instance_;
constexpr CParental_ParentalLock_Notification::CParental_ParentalLock_Notification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sessionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CParental_ParentalLock_NotificationDefaultTypeInternal {
  constexpr CParental_ParentalLock_NotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CParental_ParentalLock_NotificationDefaultTypeInternal() {}
  union {
    CParental_ParentalLock_Notification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CParental_ParentalLock_NotificationDefaultTypeInternal _CParental_ParentalLock_Notification_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[25];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_steammessages_5fparental_2esteamclient_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* file_level_service_descriptors_steammessages_5fparental_2esteamclient_2eproto[2];

const uint32_t TableStruct_steammessages_5fparental_2esteamclient_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::ParentalApp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ParentalApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ParentalApp, appid_),
  PROTOBUF_FIELD_OFFSET(::ParentalApp, is_allowed_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ParentalSettings, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ParentalSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ParentalSettings, steamid_),
  PROTOBUF_FIELD_OFFSET(::ParentalSettings, applist_base_id_),
  PROTOBUF_FIELD_OFFSET(::ParentalSettings, applist_base_description_),
  PROTOBUF_FIELD_OFFSET(::ParentalSettings, applist_base_),
  PROTOBUF_FIELD_OFFSET(::ParentalSettings, applist_custom_),
  PROTOBUF_FIELD_OFFSET(::ParentalSettings, passwordhashtype_),
  PROTOBUF_FIELD_OFFSET(::ParentalSettings, salt_),
  PROTOBUF_FIELD_OFFSET(::ParentalSettings, passwordhash_),
  PROTOBUF_FIELD_OFFSET(::ParentalSettings, is_enabled_),
  PROTOBUF_FIELD_OFFSET(::ParentalSettings, enabled_features_),
  PROTOBUF_FIELD_OFFSET(::ParentalSettings, recovery_email_),
  PROTOBUF_FIELD_OFFSET(::ParentalSettings, is_site_license_lock_),
  4,
  5,
  0,
  ~0u,
  ~0u,
  6,
  1,
  2,
  8,
  7,
  3,
  9,
  PROTOBUF_FIELD_OFFSET(::CParental_EnableParentalSettings_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_EnableParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_EnableParentalSettings_Request, password_),
  PROTOBUF_FIELD_OFFSET(::CParental_EnableParentalSettings_Request, settings_),
  PROTOBUF_FIELD_OFFSET(::CParental_EnableParentalSettings_Request, sessionid_),
  PROTOBUF_FIELD_OFFSET(::CParental_EnableParentalSettings_Request, enablecode_),
  PROTOBUF_FIELD_OFFSET(::CParental_EnableParentalSettings_Request, steamid_),
  0,
  2,
  1,
  3,
  4,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CParental_EnableParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_DisableParentalSettings_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_DisableParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_DisableParentalSettings_Request, password_),
  PROTOBUF_FIELD_OFFSET(::CParental_DisableParentalSettings_Request, steamid_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CParental_DisableParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_GetParentalSettings_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_GetParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_GetParentalSettings_Request, steamid_),
  0,
  PROTOBUF_FIELD_OFFSET(::CParental_GetParentalSettings_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_GetParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_GetParentalSettings_Response, settings_),
  0,
  PROTOBUF_FIELD_OFFSET(::CParental_GetSignedParentalSettings_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_GetSignedParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_GetSignedParentalSettings_Request, priority_),
  0,
  PROTOBUF_FIELD_OFFSET(::CParental_GetSignedParentalSettings_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_GetSignedParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_GetSignedParentalSettings_Response, serialized_settings_),
  PROTOBUF_FIELD_OFFSET(::CParental_GetSignedParentalSettings_Response, signature_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CParental_SetParentalSettings_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_SetParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_SetParentalSettings_Request, password_),
  PROTOBUF_FIELD_OFFSET(::CParental_SetParentalSettings_Request, settings_),
  PROTOBUF_FIELD_OFFSET(::CParental_SetParentalSettings_Request, new_password_),
  PROTOBUF_FIELD_OFFSET(::CParental_SetParentalSettings_Request, sessionid_),
  PROTOBUF_FIELD_OFFSET(::CParental_SetParentalSettings_Request, steamid_),
  0,
  3,
  1,
  2,
  4,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CParental_SetParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_ValidateToken_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_ValidateToken_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_ValidateToken_Request, unlock_token_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CParental_ValidateToken_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_ValidatePassword_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_ValidatePassword_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_ValidatePassword_Request, password_),
  PROTOBUF_FIELD_OFFSET(::CParental_ValidatePassword_Request, session_),
  PROTOBUF_FIELD_OFFSET(::CParental_ValidatePassword_Request, send_unlock_on_success_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CParental_ValidatePassword_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_ValidatePassword_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_ValidatePassword_Response, token_),
  0,
  PROTOBUF_FIELD_OFFSET(::CParental_LockClient_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_LockClient_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_LockClient_Request, session_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CParental_LockClient_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CParental_RequestRecoveryCode_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CParental_RequestRecoveryCode_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_DisableWithRecoveryCode_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_DisableWithRecoveryCode_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_DisableWithRecoveryCode_Request, recovery_code_),
  PROTOBUF_FIELD_OFFSET(::CParental_DisableWithRecoveryCode_Request, steamid_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CParental_DisableWithRecoveryCode_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_ParentalSettingsChange_Notification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_ParentalSettingsChange_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_ParentalSettingsChange_Notification, serialized_settings_),
  PROTOBUF_FIELD_OFFSET(::CParental_ParentalSettingsChange_Notification, signature_),
  PROTOBUF_FIELD_OFFSET(::CParental_ParentalSettingsChange_Notification, password_),
  PROTOBUF_FIELD_OFFSET(::CParental_ParentalSettingsChange_Notification, sessionid_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CParental_ParentalUnlock_Notification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_ParentalUnlock_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_ParentalUnlock_Notification, password_),
  PROTOBUF_FIELD_OFFSET(::CParental_ParentalUnlock_Notification, sessionid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CParental_ParentalLock_Notification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CParental_ParentalLock_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CParental_ParentalLock_Notification, sessionid_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::ParentalApp)},
  { 10, 28, -1, sizeof(::ParentalSettings)},
  { 40, 51, -1, sizeof(::CParental_EnableParentalSettings_Request)},
  { 56, -1, -1, sizeof(::CParental_EnableParentalSettings_Response)},
  { 62, 70, -1, sizeof(::CParental_DisableParentalSettings_Request)},
  { 72, -1, -1, sizeof(::CParental_DisableParentalSettings_Response)},
  { 78, 85, -1, sizeof(::CParental_GetParentalSettings_Request)},
  { 86, 93, -1, sizeof(::CParental_GetParentalSettings_Response)},
  { 94, 101, -1, sizeof(::CParental_GetSignedParentalSettings_Request)},
  { 102, 110, -1, sizeof(::CParental_GetSignedParentalSettings_Response)},
  { 112, 123, -1, sizeof(::CParental_SetParentalSettings_Request)},
  { 128, -1, -1, sizeof(::CParental_SetParentalSettings_Response)},
  { 134, 141, -1, sizeof(::CParental_ValidateToken_Request)},
  { 142, -1, -1, sizeof(::CParental_ValidateToken_Response)},
  { 148, 157, -1, sizeof(::CParental_ValidatePassword_Request)},
  { 160, 167, -1, sizeof(::CParental_ValidatePassword_Response)},
  { 168, 175, -1, sizeof(::CParental_LockClient_Request)},
  { 176, -1, -1, sizeof(::CParental_LockClient_Response)},
  { 182, -1, -1, sizeof(::CParental_RequestRecoveryCode_Request)},
  { 188, -1, -1, sizeof(::CParental_RequestRecoveryCode_Response)},
  { 194, 202, -1, sizeof(::CParental_DisableWithRecoveryCode_Request)},
  { 204, -1, -1, sizeof(::CParental_DisableWithRecoveryCode_Response)},
  { 210, 220, -1, sizeof(::CParental_ParentalSettingsChange_Notification)},
  { 224, 232, -1, sizeof(::CParental_ParentalUnlock_Notification)},
  { 234, 241, -1, sizeof(::CParental_ParentalLock_Notification)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ParentalApp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ParentalSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_EnableParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_EnableParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_DisableParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_DisableParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_GetParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_GetParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_GetSignedParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_GetSignedParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_SetParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_SetParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_ValidateToken_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_ValidateToken_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_ValidatePassword_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_ValidatePassword_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_LockClient_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_LockClient_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_RequestRecoveryCode_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_RequestRecoveryCode_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_DisableWithRecoveryCode_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_DisableWithRecoveryCode_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_ParentalSettingsChange_Notification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_ParentalUnlock_Notification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CParental_ParentalLock_Notification_default_instance_),
};

const char descriptor_table_protodef_steammessages_5fparental_2esteamclient_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n(steammessages_parental.steamclient.pro"
  "to\032\030steammessages_base.proto\032,steammessa"
  "ges_unified_base.steamclient.proto\"0\n\013Pa"
  "rentalApp\022\r\n\005appid\030\001 \001(\r\022\022\n\nis_allowed\030\002"
  " \001(\010\"\312\002\n\020ParentalSettings\022\017\n\007steamid\030\001 \001"
  "(\006\022\027\n\017applist_base_id\030\002 \001(\r\022 \n\030applist_b"
  "ase_description\030\003 \001(\t\022\"\n\014applist_base\030\004 "
  "\003(\0132\014.ParentalApp\022$\n\016applist_custom\030\005 \003("
  "\0132\014.ParentalApp\022\030\n\020passwordhashtype\030\006 \001("
  "\r\022\014\n\004salt\030\007 \001(\014\022\024\n\014passwordhash\030\010 \001(\014\022\022\n"
  "\nis_enabled\030\t \001(\010\022\030\n\020enabled_features\030\n "
  "\001(\r\022\026\n\016recovery_email\030\013 \001(\t\022\034\n\024is_site_l"
  "icense_lock\030\014 \001(\010\"\231\001\n(CParental_EnablePa"
  "rentalSettings_Request\022\020\n\010password\030\001 \001(\t"
  "\022#\n\010settings\030\002 \001(\0132\021.ParentalSettings\022\021\n"
  "\tsessionid\030\003 \001(\t\022\022\n\nenablecode\030\004 \001(\r\022\017\n\007"
  "steamid\030\n \001(\006\"+\n)CParental_EnableParenta"
  "lSettings_Response\"N\n)CParental_DisableP"
  "arentalSettings_Request\022\020\n\010password\030\001 \001("
  "\t\022\017\n\007steamid\030\n \001(\006\",\n*CParental_DisableP"
  "arentalSettings_Response\"8\n%CParental_Ge"
  "tParentalSettings_Request\022\017\n\007steamid\030\n \001"
  "(\006\"M\n&CParental_GetParentalSettings_Resp"
  "onse\022#\n\010settings\030\001 \001(\0132\021.ParentalSetting"
  "s\"\?\n+CParental_GetSignedParentalSettings"
  "_Request\022\020\n\010priority\030\001 \001(\r\"^\n,CParental_"
  "GetSignedParentalSettings_Response\022\033\n\023se"
  "rialized_settings\030\001 \001(\014\022\021\n\tsignature\030\002 \001"
  "(\014\"\230\001\n%CParental_SetParentalSettings_Req"
  "uest\022\020\n\010password\030\001 \001(\t\022#\n\010settings\030\002 \001(\013"
  "2\021.ParentalSettings\022\024\n\014new_password\030\003 \001("
  "\t\022\021\n\tsessionid\030\004 \001(\t\022\017\n\007steamid\030\n \001(\006\"(\n"
  "&CParental_SetParentalSettings_Response\""
  "7\n\037CParental_ValidateToken_Request\022\024\n\014un"
  "lock_token\030\001 \001(\t\"\"\n CParental_ValidateTo"
  "ken_Response\"g\n\"CParental_ValidatePasswo"
  "rd_Request\022\020\n\010password\030\001 \001(\t\022\017\n\007session\030"
  "\002 \001(\t\022\036\n\026send_unlock_on_success\030\003 \001(\010\"4\n"
  "#CParental_ValidatePassword_Response\022\r\n\005"
  "token\030\001 \001(\t\"/\n\034CParental_LockClient_Requ"
  "est\022\017\n\007session\030\001 \001(\t\"\037\n\035CParental_LockCl"
  "ient_Response\"\'\n%CParental_RequestRecove"
  "ryCode_Request\"(\n&CParental_RequestRecov"
  "eryCode_Response\"S\n)CParental_DisableWit"
  "hRecoveryCode_Request\022\025\n\rrecovery_code\030\001"
  " \001(\r\022\017\n\007steamid\030\n \001(\006\",\n*CParental_Disab"
  "leWithRecoveryCode_Response\"\204\001\n-CParenta"
  "l_ParentalSettingsChange_Notification\022\033\n"
  "\023serialized_settings\030\001 \001(\014\022\021\n\tsignature\030"
  "\002 \001(\014\022\020\n\010password\030\003 \001(\t\022\021\n\tsessionid\030\004 \001"
  "(\t\"L\n%CParental_ParentalUnlock_Notificat"
  "ion\022\020\n\010password\030\001 \001(\t\022\021\n\tsessionid\030\002 \001(\t"
  "\"8\n#CParental_ParentalLock_Notification\022"
  "\021\n\tsessionid\030\001 \001(\t2\322\016\n\010Parental\022\320\001\n\026Enab"
  "leParentalSettings\022).CParental_EnablePar"
  "entalSettings_Request\032*.CParental_Enable"
  "ParentalSettings_Response\"_\202\265\030[Enable pa"
  "rental settings for the logged in accoun"
  "t, optionally setting the current settin"
  "gs\022\253\001\n\027DisableParentalSettings\022*.CParent"
  "al_DisableParentalSettings_Request\032+.CPa"
  "rental_DisableParentalSettings_Response\""
  "7\202\265\0303Disable parental settings for the l"
  "ogged in account\022\247\001\n\023GetParentalSettings"
  "\022&.CParental_GetParentalSettings_Request"
  "\032\'.CParental_GetParentalSettings_Respons"
  "e\"\?\202\265\030;Get the current parental settings"
  " for the logged in account\022\350\001\n\031GetSigned"
  "ParentalSettings\022,.CParental_GetSignedPa"
  "rentalSettings_Request\032-.CParental_GetSi"
  "gnedParentalSettings_Response\"n\202\265\030jGet t"
  "he current parental settings for the log"
  "ged in account in a form that can by ver"
  "ified by the receiver\022\247\001\n\023SetParentalSet"
  "tings\022&.CParental_SetParentalSettings_Re"
  "quest\032\'.CParental_SetParentalSettings_Re"
  "sponse\"\?\202\265\030;Set the current parental set"
  "tings for the logged in account\022\247\001\n\rVali"
  "dateToken\022 .CParental_ValidateToken_Requ"
  "est\032!.CParental_ValidateToken_Response\"Q"
  "\202\265\030MCheck if the given parental unlock t"
  "oken is correct for the logged in accoun"
  "t\022\267\001\n\020ValidatePassword\022#.CParental_Valid"
  "atePassword_Request\032$.CParental_Validate"
  "Password_Response\"X\202\265\030TValidate the plai"
  "ntext password for the logged in account"
  " and return an unlock token\022\217\001\n\nLockClie"
  "nt\022\035.CParental_LockClient_Request\032\036.CPar"
  "ental_LockClient_Response\"B\202\265\030>Notify co"
  "nnected clients that a lock has occurred"
  " in a browser\022\303\001\n\023RequestRecoveryCode\022&."
  "CParental_RequestRecoveryCode_Request\032\'."
  "CParental_RequestRecoveryCode_Response\"["
  "\202\265\030WRequest a recovery code be sent to t"
  "he recovery email address for the specif"
  "ied account\022\252\001\n\027DisableWithRecoveryCode\022"
  "*.CParental_DisableWithRecoveryCode_Requ"
  "est\032+.CParental_DisableWithRecoveryCode_"
  "Response\"6\202\265\0302Attempt a recovery unlock "
  "on the specified account\032\035\202\265\030\031Parental s"
  "ettings service2\206\004\n\016ParentalClient\022\234\001\n\024N"
  "otifySettingsChange\022..CParental_Parental"
  "SettingsChange_Notification\032\013.NoResponse"
  "\"G\202\265\030CNotification from server to client"
  " of a change in parental settings\022\224\001\n\014No"
  "tifyUnlock\022&.CParental_ParentalUnlock_No"
  "tification\032\013.NoResponse\"O\202\265\030KNotificatio"
  "n from server to client that an unlock h"
  "as occurred in a browser\022\215\001\n\nNotifyLock\022"
  "$.CParental_ParentalLock_Notification\032\013."
  "NoResponse\"L\202\265\030HNotification from server"
  " to client that a lock has occurred in a"
  " browser\032.\202\265\030&Parental settings client n"
  "otifications\300\265\030\002B\003\200\001\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_steammessages_5fparental_2esteamclient_2eproto_deps[2] = {
  &::descriptor_table_steammessages_5fbase_2eproto,
  &::descriptor_table_steammessages_5funified_5fbase_2esteamclient_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fparental_2esteamclient_2eproto = {
  false, false, 4541, descriptor_table_protodef_steammessages_5fparental_2esteamclient_2eproto, "steammessages_parental.steamclient.proto", 
  &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once, descriptor_table_steammessages_5fparental_2esteamclient_2eproto_deps, 2, 25,
  schemas, file_default_instances, TableStruct_steammessages_5fparental_2esteamclient_2eproto::offsets,
  file_level_metadata_steammessages_5fparental_2esteamclient_2eproto, file_level_enum_descriptors_steammessages_5fparental_2esteamclient_2eproto, file_level_service_descriptors_steammessages_5fparental_2esteamclient_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter() {
  return &descriptor_table_steammessages_5fparental_2esteamclient_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_steammessages_5fparental_2esteamclient_2eproto(&descriptor_table_steammessages_5fparental_2esteamclient_2eproto);

// ===================================================================

class ParentalApp::_Internal {
 public:
  using HasBits = decltype(std::declval<ParentalApp>()._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_allowed(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ParentalApp::ParentalApp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ParentalApp)
}
ParentalApp::ParentalApp(const ParentalApp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_allowed_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(is_allowed_));
  // @@protoc_insertion_point(copy_constructor:ParentalApp)
}

inline void ParentalApp::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&appid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_allowed_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(is_allowed_));
}

ParentalApp::~ParentalApp() {
  // @@protoc_insertion_point(destructor:ParentalApp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ParentalApp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ParentalApp::ArenaDtor(void* object) {
  ParentalApp* _this = reinterpret_cast< ParentalApp* >(object);
  (void)_this;
}
void ParentalApp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParentalApp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ParentalApp::Clear() {
// @@protoc_insertion_point(message_clear_start:ParentalApp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_allowed_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(is_allowed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParentalApp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 appid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_appid(&has_bits);
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool is_allowed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_is_allowed(&has_bits);
          is_allowed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ParentalApp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ParentalApp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_appid(), target);
  }

  // optional bool is_allowed = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_is_allowed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ParentalApp)
  return target;
}

size_t ParentalApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ParentalApp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_appid());
    }

    // optional bool is_allowed = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ParentalApp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ParentalApp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ParentalApp::GetClassData() const { return &_class_data_; }

void ParentalApp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ParentalApp *>(to)->MergeFrom(
      static_cast<const ParentalApp &>(from));
}


void ParentalApp::MergeFrom(const ParentalApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ParentalApp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_allowed_ = from.is_allowed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ParentalApp::CopyFrom(const ParentalApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ParentalApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParentalApp::IsInitialized() const {
  return true;
}

void ParentalApp::InternalSwap(ParentalApp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParentalApp, is_allowed_)
      + sizeof(ParentalApp::is_allowed_)
      - PROTOBUF_FIELD_OFFSET(ParentalApp, appid_)>(
          reinterpret_cast<char*>(&appid_),
          reinterpret_cast<char*>(&other->appid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ParentalApp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[0]);
}

// ===================================================================

class ParentalSettings::_Internal {
 public:
  using HasBits = decltype(std::declval<ParentalSettings>()._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_applist_base_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_applist_base_description(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_passwordhashtype(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_salt(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_passwordhash(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_is_enabled(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_enabled_features(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_recovery_email(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_is_site_license_lock(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

ParentalSettings::ParentalSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  applist_base_(arena),
  applist_custom_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ParentalSettings)
}
ParentalSettings::ParentalSettings(const ParentalSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      applist_base_(from.applist_base_),
      applist_custom_(from.applist_custom_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applist_base_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    applist_base_description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_applist_base_description()) {
    applist_base_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applist_base_description(), 
      GetArenaForAllocation());
  }
  salt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    salt_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_salt()) {
    salt_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_salt(), 
      GetArenaForAllocation());
  }
  passwordhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    passwordhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_passwordhash()) {
    passwordhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_passwordhash(), 
      GetArenaForAllocation());
  }
  recovery_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    recovery_email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_recovery_email()) {
    recovery_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_recovery_email(), 
      GetArenaForAllocation());
  }
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_site_license_lock_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(is_site_license_lock_));
  // @@protoc_insertion_point(copy_constructor:ParentalSettings)
}

inline void ParentalSettings::SharedCtor() {
applist_base_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  applist_base_description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
salt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  salt_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
passwordhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  passwordhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
recovery_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  recovery_email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&steamid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_site_license_lock_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(is_site_license_lock_));
}

ParentalSettings::~ParentalSettings() {
  // @@protoc_insertion_point(destructor:ParentalSettings)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ParentalSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  applist_base_description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  salt_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  passwordhash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recovery_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ParentalSettings::ArenaDtor(void* object) {
  ParentalSettings* _this = reinterpret_cast< ParentalSettings* >(object);
  (void)_this;
}
void ParentalSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParentalSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ParentalSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:ParentalSettings)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applist_base_.Clear();
  applist_custom_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      applist_base_description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      salt_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      passwordhash_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      recovery_email_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&enabled_features_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(enabled_features_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&is_enabled_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_site_license_lock_) -
        reinterpret_cast<char*>(&is_enabled_)) + sizeof(is_site_license_lock_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParentalSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional fixed64 steamid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_steamid(&has_bits);
          steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 applist_base_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_applist_base_id(&has_bits);
          applist_base_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string applist_base_description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_applist_base_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ParentalSettings.applist_base_description");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ParentalApp applist_base = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_applist_base(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ParentalApp applist_custom = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_applist_custom(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional uint32 passwordhashtype = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_passwordhashtype(&has_bits);
          passwordhashtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes salt = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_salt();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes passwordhash = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_passwordhash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool is_enabled = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_is_enabled(&has_bits);
          is_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 enabled_features = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_enabled_features(&has_bits);
          enabled_features_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string recovery_email = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_recovery_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ParentalSettings.recovery_email");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool is_site_license_lock = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_is_site_license_lock(&has_bits);
          is_site_license_lock_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ParentalSettings::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ParentalSettings)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_steamid(), target);
  }

  // optional uint32 applist_base_id = 2;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_applist_base_id(), target);
  }

  // optional string applist_base_description = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_applist_base_description().data(), static_cast<int>(this->_internal_applist_base_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ParentalSettings.applist_base_description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_applist_base_description(), target);
  }

  // repeated .ParentalApp applist_base = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_applist_base_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_applist_base(i), target, stream);
  }

  // repeated .ParentalApp applist_custom = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_applist_custom_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_applist_custom(i), target, stream);
  }

  // optional uint32 passwordhashtype = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_passwordhashtype(), target);
  }

  // optional bytes salt = 7;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_salt(), target);
  }

  // optional bytes passwordhash = 8;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        8, this->_internal_passwordhash(), target);
  }

  // optional bool is_enabled = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_is_enabled(), target);
  }

  // optional uint32 enabled_features = 10;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_enabled_features(), target);
  }

  // optional string recovery_email = 11;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_recovery_email().data(), static_cast<int>(this->_internal_recovery_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ParentalSettings.recovery_email");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_recovery_email(), target);
  }

  // optional bool is_site_license_lock = 12;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_is_site_license_lock(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ParentalSettings)
  return target;
}

size_t ParentalSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ParentalSettings)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ParentalApp applist_base = 4;
  total_size += 1UL * this->_internal_applist_base_size();
  for (const auto& msg : this->applist_base_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ParentalApp applist_custom = 5;
  total_size += 1UL * this->_internal_applist_custom_size();
  for (const auto& msg : this->applist_custom_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string applist_base_description = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_applist_base_description());
    }

    // optional bytes salt = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_salt());
    }

    // optional bytes passwordhash = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_passwordhash());
    }

    // optional string recovery_email = 11;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_recovery_email());
    }

    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional uint32 applist_base_id = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_applist_base_id());
    }

    // optional uint32 passwordhashtype = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_passwordhashtype());
    }

    // optional uint32 enabled_features = 10;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_enabled_features());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional bool is_enabled = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 1;
    }

    // optional bool is_site_license_lock = 12;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ParentalSettings::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ParentalSettings::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ParentalSettings::GetClassData() const { return &_class_data_; }

void ParentalSettings::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ParentalSettings *>(to)->MergeFrom(
      static_cast<const ParentalSettings &>(from));
}


void ParentalSettings::MergeFrom(const ParentalSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ParentalSettings)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  applist_base_.MergeFrom(from.applist_base_);
  applist_custom_.MergeFrom(from.applist_custom_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_applist_base_description(from._internal_applist_base_description());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_salt(from._internal_salt());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_passwordhash(from._internal_passwordhash());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_recovery_email(from._internal_recovery_email());
    }
    if (cached_has_bits & 0x00000010u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000020u) {
      applist_base_id_ = from.applist_base_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      passwordhashtype_ = from.passwordhashtype_;
    }
    if (cached_has_bits & 0x00000080u) {
      enabled_features_ = from.enabled_features_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      is_enabled_ = from.is_enabled_;
    }
    if (cached_has_bits & 0x00000200u) {
      is_site_license_lock_ = from.is_site_license_lock_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ParentalSettings::CopyFrom(const ParentalSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ParentalSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParentalSettings::IsInitialized() const {
  return true;
}

void ParentalSettings::InternalSwap(ParentalSettings* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  applist_base_.InternalSwap(&other->applist_base_);
  applist_custom_.InternalSwap(&other->applist_custom_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &applist_base_description_, lhs_arena,
      &other->applist_base_description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &salt_, lhs_arena,
      &other->salt_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &passwordhash_, lhs_arena,
      &other->passwordhash_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &recovery_email_, lhs_arena,
      &other->recovery_email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParentalSettings, is_site_license_lock_)
      + sizeof(ParentalSettings::is_site_license_lock_)
      - PROTOBUF_FIELD_OFFSET(ParentalSettings, steamid_)>(
          reinterpret_cast<char*>(&steamid_),
          reinterpret_cast<char*>(&other->steamid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ParentalSettings::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[1]);
}

// ===================================================================

class CParental_EnableParentalSettings_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_EnableParentalSettings_Request>()._has_bits_);
  static void set_has_password(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ParentalSettings& settings(const CParental_EnableParentalSettings_Request* msg);
  static void set_has_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_sessionid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_enablecode(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::ParentalSettings&
CParental_EnableParentalSettings_Request::_Internal::settings(const CParental_EnableParentalSettings_Request* msg) {
  return *msg->settings_;
}
CParental_EnableParentalSettings_Request::CParental_EnableParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_EnableParentalSettings_Request)
}
CParental_EnableParentalSettings_Request::CParental_EnableParentalSettings_Request(const CParental_EnableParentalSettings_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_password()) {
    password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_password(), 
      GetArenaForAllocation());
  }
  sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_sessionid()) {
    sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sessionid(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_settings()) {
    settings_ = new ::ParentalSettings(*from.settings_);
  } else {
    settings_ = nullptr;
  }
  ::memcpy(&enablecode_, &from.enablecode_,
    static_cast<size_t>(reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&enablecode_)) + sizeof(steamid_));
  // @@protoc_insertion_point(copy_constructor:CParental_EnableParentalSettings_Request)
}

inline void CParental_EnableParentalSettings_Request::SharedCtor() {
password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&settings_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&settings_)) + sizeof(steamid_));
}

CParental_EnableParentalSettings_Request::~CParental_EnableParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:CParental_EnableParentalSettings_Request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_EnableParentalSettings_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete settings_;
}

void CParental_EnableParentalSettings_Request::ArenaDtor(void* object) {
  CParental_EnableParentalSettings_Request* _this = reinterpret_cast< CParental_EnableParentalSettings_Request* >(object);
  (void)_this;
}
void CParental_EnableParentalSettings_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_EnableParentalSettings_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_EnableParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_EnableParentalSettings_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      password_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      sessionid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(settings_ != nullptr);
      settings_->Clear();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&enablecode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steamid_) -
        reinterpret_cast<char*>(&enablecode_)) + sizeof(steamid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_EnableParentalSettings_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string password = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_EnableParentalSettings_Request.password");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ParentalSettings settings = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string sessionid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_sessionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_EnableParentalSettings_Request.sessionid");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 enablecode = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_enablecode(&has_bits);
          enablecode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional fixed64 steamid = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 81)) {
          _Internal::set_has_steamid(&has_bits);
          steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_EnableParentalSettings_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_EnableParentalSettings_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_EnableParentalSettings_Request.password");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_password(), target);
  }

  // optional .ParentalSettings settings = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::settings(this), target, stream);
  }

  // optional string sessionid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_sessionid().data(), static_cast<int>(this->_internal_sessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_EnableParentalSettings_Request.sessionid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_sessionid(), target);
  }

  // optional uint32 enablecode = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_enablecode(), target);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(10, this->_internal_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_EnableParentalSettings_Request)
  return target;
}

size_t CParental_EnableParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_EnableParentalSettings_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string password = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_password());
    }

    // optional string sessionid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_sessionid());
    }

    // optional .ParentalSettings settings = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *settings_);
    }

    // optional uint32 enablecode = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_enablecode());
    }

    // optional fixed64 steamid = 10;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_EnableParentalSettings_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_EnableParentalSettings_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_EnableParentalSettings_Request::GetClassData() const { return &_class_data_; }

void CParental_EnableParentalSettings_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_EnableParentalSettings_Request *>(to)->MergeFrom(
      static_cast<const CParental_EnableParentalSettings_Request &>(from));
}


void CParental_EnableParentalSettings_Request::MergeFrom(const CParental_EnableParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_EnableParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_password(from._internal_password());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_sessionid(from._internal_sessionid());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_settings()->::ParentalSettings::MergeFrom(from._internal_settings());
    }
    if (cached_has_bits & 0x00000008u) {
      enablecode_ = from.enablecode_;
    }
    if (cached_has_bits & 0x00000010u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_EnableParentalSettings_Request::CopyFrom(const CParental_EnableParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_EnableParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_EnableParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_EnableParentalSettings_Request::InternalSwap(CParental_EnableParentalSettings_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &password_, lhs_arena,
      &other->password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sessionid_, lhs_arena,
      &other->sessionid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CParental_EnableParentalSettings_Request, steamid_)
      + sizeof(CParental_EnableParentalSettings_Request::steamid_)
      - PROTOBUF_FIELD_OFFSET(CParental_EnableParentalSettings_Request, settings_)>(
          reinterpret_cast<char*>(&settings_),
          reinterpret_cast<char*>(&other->settings_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_EnableParentalSettings_Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[2]);
}

// ===================================================================

class CParental_EnableParentalSettings_Response::_Internal {
 public:
};

CParental_EnableParentalSettings_Response::CParental_EnableParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CParental_EnableParentalSettings_Response)
}
CParental_EnableParentalSettings_Response::CParental_EnableParentalSettings_Response(const CParental_EnableParentalSettings_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CParental_EnableParentalSettings_Response)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_EnableParentalSettings_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_EnableParentalSettings_Response::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CParental_EnableParentalSettings_Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[3]);
}

// ===================================================================

class CParental_DisableParentalSettings_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_DisableParentalSettings_Request>()._has_bits_);
  static void set_has_password(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CParental_DisableParentalSettings_Request::CParental_DisableParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_DisableParentalSettings_Request)
}
CParental_DisableParentalSettings_Request::CParental_DisableParentalSettings_Request(const CParental_DisableParentalSettings_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_password()) {
    password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_password(), 
      GetArenaForAllocation());
  }
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CParental_DisableParentalSettings_Request)
}

inline void CParental_DisableParentalSettings_Request::SharedCtor() {
password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
steamid_ = uint64_t{0u};
}

CParental_DisableParentalSettings_Request::~CParental_DisableParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:CParental_DisableParentalSettings_Request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_DisableParentalSettings_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CParental_DisableParentalSettings_Request::ArenaDtor(void* object) {
  CParental_DisableParentalSettings_Request* _this = reinterpret_cast< CParental_DisableParentalSettings_Request* >(object);
  (void)_this;
}
void CParental_DisableParentalSettings_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_DisableParentalSettings_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_DisableParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_DisableParentalSettings_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    password_.ClearNonDefaultToEmpty();
  }
  steamid_ = uint64_t{0u};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_DisableParentalSettings_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string password = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_DisableParentalSettings_Request.password");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional fixed64 steamid = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 81)) {
          _Internal::set_has_steamid(&has_bits);
          steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_DisableParentalSettings_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_DisableParentalSettings_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_DisableParentalSettings_Request.password");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_password(), target);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(10, this->_internal_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_DisableParentalSettings_Request)
  return target;
}

size_t CParental_DisableParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_DisableParentalSettings_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string password = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_password());
    }

    // optional fixed64 steamid = 10;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_DisableParentalSettings_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_DisableParentalSettings_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_DisableParentalSettings_Request::GetClassData() const { return &_class_data_; }

void CParental_DisableParentalSettings_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_DisableParentalSettings_Request *>(to)->MergeFrom(
      static_cast<const CParental_DisableParentalSettings_Request &>(from));
}


void CParental_DisableParentalSettings_Request::MergeFrom(const CParental_DisableParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_DisableParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_password(from._internal_password());
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_DisableParentalSettings_Request::CopyFrom(const CParental_DisableParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_DisableParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_DisableParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_DisableParentalSettings_Request::InternalSwap(CParental_DisableParentalSettings_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &password_, lhs_arena,
      &other->password_, rhs_arena
  );
  swap(steamid_, other->steamid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_DisableParentalSettings_Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[4]);
}

// ===================================================================

class CParental_DisableParentalSettings_Response::_Internal {
 public:
};

CParental_DisableParentalSettings_Response::CParental_DisableParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CParental_DisableParentalSettings_Response)
}
CParental_DisableParentalSettings_Response::CParental_DisableParentalSettings_Response(const CParental_DisableParentalSettings_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CParental_DisableParentalSettings_Response)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_DisableParentalSettings_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_DisableParentalSettings_Response::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CParental_DisableParentalSettings_Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[5]);
}

// ===================================================================

class CParental_GetParentalSettings_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_GetParentalSettings_Request>()._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CParental_GetParentalSettings_Request::CParental_GetParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_GetParentalSettings_Request)
}
CParental_GetParentalSettings_Request::CParental_GetParentalSettings_Request(const CParental_GetParentalSettings_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CParental_GetParentalSettings_Request)
}

inline void CParental_GetParentalSettings_Request::SharedCtor() {
steamid_ = uint64_t{0u};
}

CParental_GetParentalSettings_Request::~CParental_GetParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:CParental_GetParentalSettings_Request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_GetParentalSettings_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CParental_GetParentalSettings_Request::ArenaDtor(void* object) {
  CParental_GetParentalSettings_Request* _this = reinterpret_cast< CParental_GetParentalSettings_Request* >(object);
  (void)_this;
}
void CParental_GetParentalSettings_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_GetParentalSettings_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_GetParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_GetParentalSettings_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_ = uint64_t{0u};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_GetParentalSettings_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional fixed64 steamid = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 81)) {
          _Internal::set_has_steamid(&has_bits);
          steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_GetParentalSettings_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_GetParentalSettings_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(10, this->_internal_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_GetParentalSettings_Request)
  return target;
}

size_t CParental_GetParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_GetParentalSettings_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 steamid = 10;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_GetParentalSettings_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_GetParentalSettings_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_GetParentalSettings_Request::GetClassData() const { return &_class_data_; }

void CParental_GetParentalSettings_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_GetParentalSettings_Request *>(to)->MergeFrom(
      static_cast<const CParental_GetParentalSettings_Request &>(from));
}


void CParental_GetParentalSettings_Request::MergeFrom(const CParental_GetParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_GetParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_steamid()) {
    _internal_set_steamid(from._internal_steamid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_GetParentalSettings_Request::CopyFrom(const CParental_GetParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_GetParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_GetParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_GetParentalSettings_Request::InternalSwap(CParental_GetParentalSettings_Request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steamid_, other->steamid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_GetParentalSettings_Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[6]);
}

// ===================================================================

class CParental_GetParentalSettings_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_GetParentalSettings_Response>()._has_bits_);
  static const ::ParentalSettings& settings(const CParental_GetParentalSettings_Response* msg);
  static void set_has_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ParentalSettings&
CParental_GetParentalSettings_Response::_Internal::settings(const CParental_GetParentalSettings_Response* msg) {
  return *msg->settings_;
}
CParental_GetParentalSettings_Response::CParental_GetParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_GetParentalSettings_Response)
}
CParental_GetParentalSettings_Response::CParental_GetParentalSettings_Response(const CParental_GetParentalSettings_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_settings()) {
    settings_ = new ::ParentalSettings(*from.settings_);
  } else {
    settings_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:CParental_GetParentalSettings_Response)
}

inline void CParental_GetParentalSettings_Response::SharedCtor() {
settings_ = nullptr;
}

CParental_GetParentalSettings_Response::~CParental_GetParentalSettings_Response() {
  // @@protoc_insertion_point(destructor:CParental_GetParentalSettings_Response)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_GetParentalSettings_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete settings_;
}

void CParental_GetParentalSettings_Response::ArenaDtor(void* object) {
  CParental_GetParentalSettings_Response* _this = reinterpret_cast< CParental_GetParentalSettings_Response* >(object);
  (void)_this;
}
void CParental_GetParentalSettings_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_GetParentalSettings_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_GetParentalSettings_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_GetParentalSettings_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(settings_ != nullptr);
    settings_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_GetParentalSettings_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ParentalSettings settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_GetParentalSettings_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_GetParentalSettings_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ParentalSettings settings = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::settings(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_GetParentalSettings_Response)
  return target;
}

size_t CParental_GetParentalSettings_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_GetParentalSettings_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ParentalSettings settings = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *settings_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_GetParentalSettings_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_GetParentalSettings_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_GetParentalSettings_Response::GetClassData() const { return &_class_data_; }

void CParental_GetParentalSettings_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_GetParentalSettings_Response *>(to)->MergeFrom(
      static_cast<const CParental_GetParentalSettings_Response &>(from));
}


void CParental_GetParentalSettings_Response::MergeFrom(const CParental_GetParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_GetParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_settings()) {
    _internal_mutable_settings()->::ParentalSettings::MergeFrom(from._internal_settings());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_GetParentalSettings_Response::CopyFrom(const CParental_GetParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_GetParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_GetParentalSettings_Response::IsInitialized() const {
  return true;
}

void CParental_GetParentalSettings_Response::InternalSwap(CParental_GetParentalSettings_Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(settings_, other->settings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_GetParentalSettings_Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[7]);
}

// ===================================================================

class CParental_GetSignedParentalSettings_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_GetSignedParentalSettings_Request>()._has_bits_);
  static void set_has_priority(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CParental_GetSignedParentalSettings_Request::CParental_GetSignedParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_GetSignedParentalSettings_Request)
}
CParental_GetSignedParentalSettings_Request::CParental_GetSignedParentalSettings_Request(const CParental_GetSignedParentalSettings_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  priority_ = from.priority_;
  // @@protoc_insertion_point(copy_constructor:CParental_GetSignedParentalSettings_Request)
}

inline void CParental_GetSignedParentalSettings_Request::SharedCtor() {
priority_ = 0u;
}

CParental_GetSignedParentalSettings_Request::~CParental_GetSignedParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:CParental_GetSignedParentalSettings_Request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_GetSignedParentalSettings_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CParental_GetSignedParentalSettings_Request::ArenaDtor(void* object) {
  CParental_GetSignedParentalSettings_Request* _this = reinterpret_cast< CParental_GetSignedParentalSettings_Request* >(object);
  (void)_this;
}
void CParental_GetSignedParentalSettings_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_GetSignedParentalSettings_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_GetSignedParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_GetSignedParentalSettings_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  priority_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_GetSignedParentalSettings_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 priority = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_priority(&has_bits);
          priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_GetSignedParentalSettings_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_GetSignedParentalSettings_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 priority = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_priority(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_GetSignedParentalSettings_Request)
  return target;
}

size_t CParental_GetSignedParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_GetSignedParentalSettings_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 priority = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_priority());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_GetSignedParentalSettings_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_GetSignedParentalSettings_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_GetSignedParentalSettings_Request::GetClassData() const { return &_class_data_; }

void CParental_GetSignedParentalSettings_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_GetSignedParentalSettings_Request *>(to)->MergeFrom(
      static_cast<const CParental_GetSignedParentalSettings_Request &>(from));
}


void CParental_GetSignedParentalSettings_Request::MergeFrom(const CParental_GetSignedParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_GetSignedParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_priority()) {
    _internal_set_priority(from._internal_priority());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_GetSignedParentalSettings_Request::CopyFrom(const CParental_GetSignedParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_GetSignedParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_GetSignedParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_GetSignedParentalSettings_Request::InternalSwap(CParental_GetSignedParentalSettings_Request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(priority_, other->priority_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_GetSignedParentalSettings_Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[8]);
}

// ===================================================================

class CParental_GetSignedParentalSettings_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_GetSignedParentalSettings_Response>()._has_bits_);
  static void set_has_serialized_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_signature(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CParental_GetSignedParentalSettings_Response::CParental_GetSignedParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_GetSignedParentalSettings_Response)
}
CParental_GetSignedParentalSettings_Response::CParental_GetSignedParentalSettings_Response(const CParental_GetSignedParentalSettings_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  serialized_settings_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    serialized_settings_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_serialized_settings()) {
    serialized_settings_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_serialized_settings(), 
      GetArenaForAllocation());
  }
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    signature_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_signature()) {
    signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_signature(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CParental_GetSignedParentalSettings_Response)
}

inline void CParental_GetSignedParentalSettings_Response::SharedCtor() {
serialized_settings_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  serialized_settings_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  signature_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CParental_GetSignedParentalSettings_Response::~CParental_GetSignedParentalSettings_Response() {
  // @@protoc_insertion_point(destructor:CParental_GetSignedParentalSettings_Response)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_GetSignedParentalSettings_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  serialized_settings_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CParental_GetSignedParentalSettings_Response::ArenaDtor(void* object) {
  CParental_GetSignedParentalSettings_Response* _this = reinterpret_cast< CParental_GetSignedParentalSettings_Response* >(object);
  (void)_this;
}
void CParental_GetSignedParentalSettings_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_GetSignedParentalSettings_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_GetSignedParentalSettings_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_GetSignedParentalSettings_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      serialized_settings_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      signature_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_GetSignedParentalSettings_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bytes serialized_settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_serialized_settings();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes signature = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_signature();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_GetSignedParentalSettings_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_GetSignedParentalSettings_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes serialized_settings = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_serialized_settings(), target);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_signature(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_GetSignedParentalSettings_Response)
  return target;
}

size_t CParental_GetSignedParentalSettings_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_GetSignedParentalSettings_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes serialized_settings = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_serialized_settings());
    }

    // optional bytes signature = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_signature());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_GetSignedParentalSettings_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_GetSignedParentalSettings_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_GetSignedParentalSettings_Response::GetClassData() const { return &_class_data_; }

void CParental_GetSignedParentalSettings_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_GetSignedParentalSettings_Response *>(to)->MergeFrom(
      static_cast<const CParental_GetSignedParentalSettings_Response &>(from));
}


void CParental_GetSignedParentalSettings_Response::MergeFrom(const CParental_GetSignedParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_GetSignedParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_serialized_settings(from._internal_serialized_settings());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_signature(from._internal_signature());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_GetSignedParentalSettings_Response::CopyFrom(const CParental_GetSignedParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_GetSignedParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_GetSignedParentalSettings_Response::IsInitialized() const {
  return true;
}

void CParental_GetSignedParentalSettings_Response::InternalSwap(CParental_GetSignedParentalSettings_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &serialized_settings_, lhs_arena,
      &other->serialized_settings_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &signature_, lhs_arena,
      &other->signature_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_GetSignedParentalSettings_Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[9]);
}

// ===================================================================

class CParental_SetParentalSettings_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_SetParentalSettings_Request>()._has_bits_);
  static void set_has_password(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ParentalSettings& settings(const CParental_SetParentalSettings_Request* msg);
  static void set_has_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_new_password(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_sessionid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::ParentalSettings&
CParental_SetParentalSettings_Request::_Internal::settings(const CParental_SetParentalSettings_Request* msg) {
  return *msg->settings_;
}
CParental_SetParentalSettings_Request::CParental_SetParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_SetParentalSettings_Request)
}
CParental_SetParentalSettings_Request::CParental_SetParentalSettings_Request(const CParental_SetParentalSettings_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_password()) {
    password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_password(), 
      GetArenaForAllocation());
  }
  new_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    new_password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_new_password()) {
    new_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_new_password(), 
      GetArenaForAllocation());
  }
  sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_sessionid()) {
    sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sessionid(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_settings()) {
    settings_ = new ::ParentalSettings(*from.settings_);
  } else {
    settings_ = nullptr;
  }
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CParental_SetParentalSettings_Request)
}

inline void CParental_SetParentalSettings_Request::SharedCtor() {
password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
new_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  new_password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&settings_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&settings_)) + sizeof(steamid_));
}

CParental_SetParentalSettings_Request::~CParental_SetParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:CParental_SetParentalSettings_Request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_SetParentalSettings_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete settings_;
}

void CParental_SetParentalSettings_Request::ArenaDtor(void* object) {
  CParental_SetParentalSettings_Request* _this = reinterpret_cast< CParental_SetParentalSettings_Request* >(object);
  (void)_this;
}
void CParental_SetParentalSettings_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_SetParentalSettings_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_SetParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_SetParentalSettings_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      password_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      new_password_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      sessionid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(settings_ != nullptr);
      settings_->Clear();
    }
  }
  steamid_ = uint64_t{0u};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_SetParentalSettings_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string password = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_SetParentalSettings_Request.password");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ParentalSettings settings = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string new_password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_new_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_SetParentalSettings_Request.new_password");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string sessionid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_sessionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_SetParentalSettings_Request.sessionid");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional fixed64 steamid = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 81)) {
          _Internal::set_has_steamid(&has_bits);
          steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_SetParentalSettings_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_SetParentalSettings_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_SetParentalSettings_Request.password");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_password(), target);
  }

  // optional .ParentalSettings settings = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::settings(this), target, stream);
  }

  // optional string new_password = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_new_password().data(), static_cast<int>(this->_internal_new_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_SetParentalSettings_Request.new_password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_new_password(), target);
  }

  // optional string sessionid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_sessionid().data(), static_cast<int>(this->_internal_sessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_SetParentalSettings_Request.sessionid");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sessionid(), target);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(10, this->_internal_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_SetParentalSettings_Request)
  return target;
}

size_t CParental_SetParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_SetParentalSettings_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string password = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_password());
    }

    // optional string new_password = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_new_password());
    }

    // optional string sessionid = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_sessionid());
    }

    // optional .ParentalSettings settings = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *settings_);
    }

    // optional fixed64 steamid = 10;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_SetParentalSettings_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_SetParentalSettings_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_SetParentalSettings_Request::GetClassData() const { return &_class_data_; }

void CParental_SetParentalSettings_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_SetParentalSettings_Request *>(to)->MergeFrom(
      static_cast<const CParental_SetParentalSettings_Request &>(from));
}


void CParental_SetParentalSettings_Request::MergeFrom(const CParental_SetParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_SetParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_password(from._internal_password());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_new_password(from._internal_new_password());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_sessionid(from._internal_sessionid());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_settings()->::ParentalSettings::MergeFrom(from._internal_settings());
    }
    if (cached_has_bits & 0x00000010u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_SetParentalSettings_Request::CopyFrom(const CParental_SetParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_SetParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_SetParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_SetParentalSettings_Request::InternalSwap(CParental_SetParentalSettings_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &password_, lhs_arena,
      &other->password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &new_password_, lhs_arena,
      &other->new_password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sessionid_, lhs_arena,
      &other->sessionid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CParental_SetParentalSettings_Request, steamid_)
      + sizeof(CParental_SetParentalSettings_Request::steamid_)
      - PROTOBUF_FIELD_OFFSET(CParental_SetParentalSettings_Request, settings_)>(
          reinterpret_cast<char*>(&settings_),
          reinterpret_cast<char*>(&other->settings_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_SetParentalSettings_Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[10]);
}

// ===================================================================

class CParental_SetParentalSettings_Response::_Internal {
 public:
};

CParental_SetParentalSettings_Response::CParental_SetParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CParental_SetParentalSettings_Response)
}
CParental_SetParentalSettings_Response::CParental_SetParentalSettings_Response(const CParental_SetParentalSettings_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CParental_SetParentalSettings_Response)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_SetParentalSettings_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_SetParentalSettings_Response::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CParental_SetParentalSettings_Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[11]);
}

// ===================================================================

class CParental_ValidateToken_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_ValidateToken_Request>()._has_bits_);
  static void set_has_unlock_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CParental_ValidateToken_Request::CParental_ValidateToken_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_ValidateToken_Request)
}
CParental_ValidateToken_Request::CParental_ValidateToken_Request(const CParental_ValidateToken_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  unlock_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    unlock_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_unlock_token()) {
    unlock_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_unlock_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CParental_ValidateToken_Request)
}

inline void CParental_ValidateToken_Request::SharedCtor() {
unlock_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  unlock_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CParental_ValidateToken_Request::~CParental_ValidateToken_Request() {
  // @@protoc_insertion_point(destructor:CParental_ValidateToken_Request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_ValidateToken_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  unlock_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CParental_ValidateToken_Request::ArenaDtor(void* object) {
  CParental_ValidateToken_Request* _this = reinterpret_cast< CParental_ValidateToken_Request* >(object);
  (void)_this;
}
void CParental_ValidateToken_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_ValidateToken_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_ValidateToken_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_ValidateToken_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    unlock_token_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_ValidateToken_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string unlock_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_unlock_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_ValidateToken_Request.unlock_token");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_ValidateToken_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_ValidateToken_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string unlock_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_unlock_token().data(), static_cast<int>(this->_internal_unlock_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_ValidateToken_Request.unlock_token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_unlock_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_ValidateToken_Request)
  return target;
}

size_t CParental_ValidateToken_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_ValidateToken_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string unlock_token = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unlock_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_ValidateToken_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_ValidateToken_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_ValidateToken_Request::GetClassData() const { return &_class_data_; }

void CParental_ValidateToken_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_ValidateToken_Request *>(to)->MergeFrom(
      static_cast<const CParental_ValidateToken_Request &>(from));
}


void CParental_ValidateToken_Request::MergeFrom(const CParental_ValidateToken_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_ValidateToken_Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_unlock_token()) {
    _internal_set_unlock_token(from._internal_unlock_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_ValidateToken_Request::CopyFrom(const CParental_ValidateToken_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_ValidateToken_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ValidateToken_Request::IsInitialized() const {
  return true;
}

void CParental_ValidateToken_Request::InternalSwap(CParental_ValidateToken_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &unlock_token_, lhs_arena,
      &other->unlock_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_ValidateToken_Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[12]);
}

// ===================================================================

class CParental_ValidateToken_Response::_Internal {
 public:
};

CParental_ValidateToken_Response::CParental_ValidateToken_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CParental_ValidateToken_Response)
}
CParental_ValidateToken_Response::CParental_ValidateToken_Response(const CParental_ValidateToken_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CParental_ValidateToken_Response)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_ValidateToken_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_ValidateToken_Response::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CParental_ValidateToken_Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[13]);
}

// ===================================================================

class CParental_ValidatePassword_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_ValidatePassword_Request>()._has_bits_);
  static void set_has_password(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_session(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_send_unlock_on_success(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CParental_ValidatePassword_Request::CParental_ValidatePassword_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_ValidatePassword_Request)
}
CParental_ValidatePassword_Request::CParental_ValidatePassword_Request(const CParental_ValidatePassword_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_password()) {
    password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_password(), 
      GetArenaForAllocation());
  }
  session_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    session_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_session()) {
    session_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_session(), 
      GetArenaForAllocation());
  }
  send_unlock_on_success_ = from.send_unlock_on_success_;
  // @@protoc_insertion_point(copy_constructor:CParental_ValidatePassword_Request)
}

inline void CParental_ValidatePassword_Request::SharedCtor() {
password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
session_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  session_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
send_unlock_on_success_ = false;
}

CParental_ValidatePassword_Request::~CParental_ValidatePassword_Request() {
  // @@protoc_insertion_point(destructor:CParental_ValidatePassword_Request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_ValidatePassword_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CParental_ValidatePassword_Request::ArenaDtor(void* object) {
  CParental_ValidatePassword_Request* _this = reinterpret_cast< CParental_ValidatePassword_Request* >(object);
  (void)_this;
}
void CParental_ValidatePassword_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_ValidatePassword_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_ValidatePassword_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_ValidatePassword_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      password_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      session_.ClearNonDefaultToEmpty();
    }
  }
  send_unlock_on_success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_ValidatePassword_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string password = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_ValidatePassword_Request.password");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string session = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_session();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_ValidatePassword_Request.session");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool send_unlock_on_success = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_send_unlock_on_success(&has_bits);
          send_unlock_on_success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_ValidatePassword_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_ValidatePassword_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_ValidatePassword_Request.password");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_password(), target);
  }

  // optional string session = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_session().data(), static_cast<int>(this->_internal_session().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_ValidatePassword_Request.session");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_session(), target);
  }

  // optional bool send_unlock_on_success = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_send_unlock_on_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_ValidatePassword_Request)
  return target;
}

size_t CParental_ValidatePassword_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_ValidatePassword_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string password = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_password());
    }

    // optional string session = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_session());
    }

    // optional bool send_unlock_on_success = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_ValidatePassword_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_ValidatePassword_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_ValidatePassword_Request::GetClassData() const { return &_class_data_; }

void CParental_ValidatePassword_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_ValidatePassword_Request *>(to)->MergeFrom(
      static_cast<const CParental_ValidatePassword_Request &>(from));
}


void CParental_ValidatePassword_Request::MergeFrom(const CParental_ValidatePassword_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_ValidatePassword_Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_password(from._internal_password());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_session(from._internal_session());
    }
    if (cached_has_bits & 0x00000004u) {
      send_unlock_on_success_ = from.send_unlock_on_success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_ValidatePassword_Request::CopyFrom(const CParental_ValidatePassword_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_ValidatePassword_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ValidatePassword_Request::IsInitialized() const {
  return true;
}

void CParental_ValidatePassword_Request::InternalSwap(CParental_ValidatePassword_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &password_, lhs_arena,
      &other->password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &session_, lhs_arena,
      &other->session_, rhs_arena
  );
  swap(send_unlock_on_success_, other->send_unlock_on_success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_ValidatePassword_Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[14]);
}

// ===================================================================

class CParental_ValidatePassword_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_ValidatePassword_Response>()._has_bits_);
  static void set_has_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CParental_ValidatePassword_Response::CParental_ValidatePassword_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_ValidatePassword_Response)
}
CParental_ValidatePassword_Response::CParental_ValidatePassword_Response(const CParental_ValidatePassword_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_token()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CParental_ValidatePassword_Response)
}

inline void CParental_ValidatePassword_Response::SharedCtor() {
token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CParental_ValidatePassword_Response::~CParental_ValidatePassword_Response() {
  // @@protoc_insertion_point(destructor:CParental_ValidatePassword_Response)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_ValidatePassword_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CParental_ValidatePassword_Response::ArenaDtor(void* object) {
  CParental_ValidatePassword_Response* _this = reinterpret_cast< CParental_ValidatePassword_Response* >(object);
  (void)_this;
}
void CParental_ValidatePassword_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_ValidatePassword_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_ValidatePassword_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_ValidatePassword_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    token_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_ValidatePassword_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_ValidatePassword_Response.token");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_ValidatePassword_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_ValidatePassword_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_ValidatePassword_Response.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_ValidatePassword_Response)
  return target;
}

size_t CParental_ValidatePassword_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_ValidatePassword_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string token = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_ValidatePassword_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_ValidatePassword_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_ValidatePassword_Response::GetClassData() const { return &_class_data_; }

void CParental_ValidatePassword_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_ValidatePassword_Response *>(to)->MergeFrom(
      static_cast<const CParental_ValidatePassword_Response &>(from));
}


void CParental_ValidatePassword_Response::MergeFrom(const CParental_ValidatePassword_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_ValidatePassword_Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_token()) {
    _internal_set_token(from._internal_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_ValidatePassword_Response::CopyFrom(const CParental_ValidatePassword_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_ValidatePassword_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ValidatePassword_Response::IsInitialized() const {
  return true;
}

void CParental_ValidatePassword_Response::InternalSwap(CParental_ValidatePassword_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &token_, lhs_arena,
      &other->token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_ValidatePassword_Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[15]);
}

// ===================================================================

class CParental_LockClient_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_LockClient_Request>()._has_bits_);
  static void set_has_session(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CParental_LockClient_Request::CParental_LockClient_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_LockClient_Request)
}
CParental_LockClient_Request::CParental_LockClient_Request(const CParental_LockClient_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  session_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    session_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_session()) {
    session_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_session(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CParental_LockClient_Request)
}

inline void CParental_LockClient_Request::SharedCtor() {
session_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  session_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CParental_LockClient_Request::~CParental_LockClient_Request() {
  // @@protoc_insertion_point(destructor:CParental_LockClient_Request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_LockClient_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  session_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CParental_LockClient_Request::ArenaDtor(void* object) {
  CParental_LockClient_Request* _this = reinterpret_cast< CParental_LockClient_Request* >(object);
  (void)_this;
}
void CParental_LockClient_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_LockClient_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_LockClient_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_LockClient_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    session_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_LockClient_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string session = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_session();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_LockClient_Request.session");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_LockClient_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_LockClient_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string session = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_session().data(), static_cast<int>(this->_internal_session().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_LockClient_Request.session");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_session(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_LockClient_Request)
  return target;
}

size_t CParental_LockClient_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_LockClient_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string session = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_LockClient_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_LockClient_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_LockClient_Request::GetClassData() const { return &_class_data_; }

void CParental_LockClient_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_LockClient_Request *>(to)->MergeFrom(
      static_cast<const CParental_LockClient_Request &>(from));
}


void CParental_LockClient_Request::MergeFrom(const CParental_LockClient_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_LockClient_Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_session()) {
    _internal_set_session(from._internal_session());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_LockClient_Request::CopyFrom(const CParental_LockClient_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_LockClient_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_LockClient_Request::IsInitialized() const {
  return true;
}

void CParental_LockClient_Request::InternalSwap(CParental_LockClient_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &session_, lhs_arena,
      &other->session_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_LockClient_Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[16]);
}

// ===================================================================

class CParental_LockClient_Response::_Internal {
 public:
};

CParental_LockClient_Response::CParental_LockClient_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CParental_LockClient_Response)
}
CParental_LockClient_Response::CParental_LockClient_Response(const CParental_LockClient_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CParental_LockClient_Response)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_LockClient_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_LockClient_Response::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CParental_LockClient_Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[17]);
}

// ===================================================================

class CParental_RequestRecoveryCode_Request::_Internal {
 public:
};

CParental_RequestRecoveryCode_Request::CParental_RequestRecoveryCode_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CParental_RequestRecoveryCode_Request)
}
CParental_RequestRecoveryCode_Request::CParental_RequestRecoveryCode_Request(const CParental_RequestRecoveryCode_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CParental_RequestRecoveryCode_Request)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_RequestRecoveryCode_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_RequestRecoveryCode_Request::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CParental_RequestRecoveryCode_Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[18]);
}

// ===================================================================

class CParental_RequestRecoveryCode_Response::_Internal {
 public:
};

CParental_RequestRecoveryCode_Response::CParental_RequestRecoveryCode_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CParental_RequestRecoveryCode_Response)
}
CParental_RequestRecoveryCode_Response::CParental_RequestRecoveryCode_Response(const CParental_RequestRecoveryCode_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CParental_RequestRecoveryCode_Response)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_RequestRecoveryCode_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_RequestRecoveryCode_Response::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CParental_RequestRecoveryCode_Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[19]);
}

// ===================================================================

class CParental_DisableWithRecoveryCode_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_DisableWithRecoveryCode_Request>()._has_bits_);
  static void set_has_recovery_code(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CParental_DisableWithRecoveryCode_Request::CParental_DisableWithRecoveryCode_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_DisableWithRecoveryCode_Request)
}
CParental_DisableWithRecoveryCode_Request::CParental_DisableWithRecoveryCode_Request(const CParental_DisableWithRecoveryCode_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&recovery_code_, &from.recovery_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&recovery_code_)) + sizeof(steamid_));
  // @@protoc_insertion_point(copy_constructor:CParental_DisableWithRecoveryCode_Request)
}

inline void CParental_DisableWithRecoveryCode_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&recovery_code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&recovery_code_)) + sizeof(steamid_));
}

CParental_DisableWithRecoveryCode_Request::~CParental_DisableWithRecoveryCode_Request() {
  // @@protoc_insertion_point(destructor:CParental_DisableWithRecoveryCode_Request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_DisableWithRecoveryCode_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CParental_DisableWithRecoveryCode_Request::ArenaDtor(void* object) {
  CParental_DisableWithRecoveryCode_Request* _this = reinterpret_cast< CParental_DisableWithRecoveryCode_Request* >(object);
  (void)_this;
}
void CParental_DisableWithRecoveryCode_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_DisableWithRecoveryCode_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_DisableWithRecoveryCode_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_DisableWithRecoveryCode_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&recovery_code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steamid_) -
        reinterpret_cast<char*>(&recovery_code_)) + sizeof(steamid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_DisableWithRecoveryCode_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 recovery_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_recovery_code(&has_bits);
          recovery_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional fixed64 steamid = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 81)) {
          _Internal::set_has_steamid(&has_bits);
          steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_DisableWithRecoveryCode_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_DisableWithRecoveryCode_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 recovery_code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_recovery_code(), target);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(10, this->_internal_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_DisableWithRecoveryCode_Request)
  return target;
}

size_t CParental_DisableWithRecoveryCode_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_DisableWithRecoveryCode_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 recovery_code = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_recovery_code());
    }

    // optional fixed64 steamid = 10;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_DisableWithRecoveryCode_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_DisableWithRecoveryCode_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_DisableWithRecoveryCode_Request::GetClassData() const { return &_class_data_; }

void CParental_DisableWithRecoveryCode_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_DisableWithRecoveryCode_Request *>(to)->MergeFrom(
      static_cast<const CParental_DisableWithRecoveryCode_Request &>(from));
}


void CParental_DisableWithRecoveryCode_Request::MergeFrom(const CParental_DisableWithRecoveryCode_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_DisableWithRecoveryCode_Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      recovery_code_ = from.recovery_code_;
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_DisableWithRecoveryCode_Request::CopyFrom(const CParental_DisableWithRecoveryCode_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_DisableWithRecoveryCode_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_DisableWithRecoveryCode_Request::IsInitialized() const {
  return true;
}

void CParental_DisableWithRecoveryCode_Request::InternalSwap(CParental_DisableWithRecoveryCode_Request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CParental_DisableWithRecoveryCode_Request, steamid_)
      + sizeof(CParental_DisableWithRecoveryCode_Request::steamid_)
      - PROTOBUF_FIELD_OFFSET(CParental_DisableWithRecoveryCode_Request, recovery_code_)>(
          reinterpret_cast<char*>(&recovery_code_),
          reinterpret_cast<char*>(&other->recovery_code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_DisableWithRecoveryCode_Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[20]);
}

// ===================================================================

class CParental_DisableWithRecoveryCode_Response::_Internal {
 public:
};

CParental_DisableWithRecoveryCode_Response::CParental_DisableWithRecoveryCode_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CParental_DisableWithRecoveryCode_Response)
}
CParental_DisableWithRecoveryCode_Response::CParental_DisableWithRecoveryCode_Response(const CParental_DisableWithRecoveryCode_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CParental_DisableWithRecoveryCode_Response)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_DisableWithRecoveryCode_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_DisableWithRecoveryCode_Response::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CParental_DisableWithRecoveryCode_Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[21]);
}

// ===================================================================

class CParental_ParentalSettingsChange_Notification::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_ParentalSettingsChange_Notification>()._has_bits_);
  static void set_has_serialized_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_signature(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_password(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_sessionid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CParental_ParentalSettingsChange_Notification::CParental_ParentalSettingsChange_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_ParentalSettingsChange_Notification)
}
CParental_ParentalSettingsChange_Notification::CParental_ParentalSettingsChange_Notification(const CParental_ParentalSettingsChange_Notification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  serialized_settings_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    serialized_settings_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_serialized_settings()) {
    serialized_settings_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_serialized_settings(), 
      GetArenaForAllocation());
  }
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    signature_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_signature()) {
    signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_signature(), 
      GetArenaForAllocation());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_password()) {
    password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_password(), 
      GetArenaForAllocation());
  }
  sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_sessionid()) {
    sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sessionid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CParental_ParentalSettingsChange_Notification)
}

inline void CParental_ParentalSettingsChange_Notification::SharedCtor() {
serialized_settings_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  serialized_settings_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  signature_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CParental_ParentalSettingsChange_Notification::~CParental_ParentalSettingsChange_Notification() {
  // @@protoc_insertion_point(destructor:CParental_ParentalSettingsChange_Notification)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_ParentalSettingsChange_Notification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  serialized_settings_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CParental_ParentalSettingsChange_Notification::ArenaDtor(void* object) {
  CParental_ParentalSettingsChange_Notification* _this = reinterpret_cast< CParental_ParentalSettingsChange_Notification* >(object);
  (void)_this;
}
void CParental_ParentalSettingsChange_Notification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_ParentalSettingsChange_Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_ParentalSettingsChange_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_ParentalSettingsChange_Notification)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      serialized_settings_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      signature_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      password_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      sessionid_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_ParentalSettingsChange_Notification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bytes serialized_settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_serialized_settings();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes signature = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_signature();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_ParentalSettingsChange_Notification.password");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string sessionid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_sessionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_ParentalSettingsChange_Notification.sessionid");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_ParentalSettingsChange_Notification::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_ParentalSettingsChange_Notification)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes serialized_settings = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_serialized_settings(), target);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_signature(), target);
  }

  // optional string password = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_ParentalSettingsChange_Notification.password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_password(), target);
  }

  // optional string sessionid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_sessionid().data(), static_cast<int>(this->_internal_sessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_ParentalSettingsChange_Notification.sessionid");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sessionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_ParentalSettingsChange_Notification)
  return target;
}

size_t CParental_ParentalSettingsChange_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_ParentalSettingsChange_Notification)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bytes serialized_settings = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_serialized_settings());
    }

    // optional bytes signature = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_signature());
    }

    // optional string password = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_password());
    }

    // optional string sessionid = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_sessionid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_ParentalSettingsChange_Notification::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_ParentalSettingsChange_Notification::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_ParentalSettingsChange_Notification::GetClassData() const { return &_class_data_; }

void CParental_ParentalSettingsChange_Notification::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_ParentalSettingsChange_Notification *>(to)->MergeFrom(
      static_cast<const CParental_ParentalSettingsChange_Notification &>(from));
}


void CParental_ParentalSettingsChange_Notification::MergeFrom(const CParental_ParentalSettingsChange_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_ParentalSettingsChange_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_serialized_settings(from._internal_serialized_settings());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_signature(from._internal_signature());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_password(from._internal_password());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_sessionid(from._internal_sessionid());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_ParentalSettingsChange_Notification::CopyFrom(const CParental_ParentalSettingsChange_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_ParentalSettingsChange_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ParentalSettingsChange_Notification::IsInitialized() const {
  return true;
}

void CParental_ParentalSettingsChange_Notification::InternalSwap(CParental_ParentalSettingsChange_Notification* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &serialized_settings_, lhs_arena,
      &other->serialized_settings_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &signature_, lhs_arena,
      &other->signature_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &password_, lhs_arena,
      &other->password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sessionid_, lhs_arena,
      &other->sessionid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_ParentalSettingsChange_Notification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[22]);
}

// ===================================================================

class CParental_ParentalUnlock_Notification::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_ParentalUnlock_Notification>()._has_bits_);
  static void set_has_password(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_sessionid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CParental_ParentalUnlock_Notification::CParental_ParentalUnlock_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_ParentalUnlock_Notification)
}
CParental_ParentalUnlock_Notification::CParental_ParentalUnlock_Notification(const CParental_ParentalUnlock_Notification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_password()) {
    password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_password(), 
      GetArenaForAllocation());
  }
  sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_sessionid()) {
    sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sessionid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CParental_ParentalUnlock_Notification)
}

inline void CParental_ParentalUnlock_Notification::SharedCtor() {
password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CParental_ParentalUnlock_Notification::~CParental_ParentalUnlock_Notification() {
  // @@protoc_insertion_point(destructor:CParental_ParentalUnlock_Notification)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_ParentalUnlock_Notification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CParental_ParentalUnlock_Notification::ArenaDtor(void* object) {
  CParental_ParentalUnlock_Notification* _this = reinterpret_cast< CParental_ParentalUnlock_Notification* >(object);
  (void)_this;
}
void CParental_ParentalUnlock_Notification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_ParentalUnlock_Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_ParentalUnlock_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_ParentalUnlock_Notification)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      password_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      sessionid_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_ParentalUnlock_Notification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string password = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_ParentalUnlock_Notification.password");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string sessionid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_sessionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_ParentalUnlock_Notification.sessionid");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_ParentalUnlock_Notification::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_ParentalUnlock_Notification)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_ParentalUnlock_Notification.password");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_password(), target);
  }

  // optional string sessionid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_sessionid().data(), static_cast<int>(this->_internal_sessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_ParentalUnlock_Notification.sessionid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sessionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_ParentalUnlock_Notification)
  return target;
}

size_t CParental_ParentalUnlock_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_ParentalUnlock_Notification)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string password = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_password());
    }

    // optional string sessionid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_sessionid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_ParentalUnlock_Notification::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_ParentalUnlock_Notification::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_ParentalUnlock_Notification::GetClassData() const { return &_class_data_; }

void CParental_ParentalUnlock_Notification::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_ParentalUnlock_Notification *>(to)->MergeFrom(
      static_cast<const CParental_ParentalUnlock_Notification &>(from));
}


void CParental_ParentalUnlock_Notification::MergeFrom(const CParental_ParentalUnlock_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_ParentalUnlock_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_password(from._internal_password());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_sessionid(from._internal_sessionid());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_ParentalUnlock_Notification::CopyFrom(const CParental_ParentalUnlock_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_ParentalUnlock_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ParentalUnlock_Notification::IsInitialized() const {
  return true;
}

void CParental_ParentalUnlock_Notification::InternalSwap(CParental_ParentalUnlock_Notification* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &password_, lhs_arena,
      &other->password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sessionid_, lhs_arena,
      &other->sessionid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_ParentalUnlock_Notification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[23]);
}

// ===================================================================

class CParental_ParentalLock_Notification::_Internal {
 public:
  using HasBits = decltype(std::declval<CParental_ParentalLock_Notification>()._has_bits_);
  static void set_has_sessionid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CParental_ParentalLock_Notification::CParental_ParentalLock_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CParental_ParentalLock_Notification)
}
CParental_ParentalLock_Notification::CParental_ParentalLock_Notification(const CParental_ParentalLock_Notification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_sessionid()) {
    sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sessionid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CParental_ParentalLock_Notification)
}

inline void CParental_ParentalLock_Notification::SharedCtor() {
sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CParental_ParentalLock_Notification::~CParental_ParentalLock_Notification() {
  // @@protoc_insertion_point(destructor:CParental_ParentalLock_Notification)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CParental_ParentalLock_Notification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sessionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CParental_ParentalLock_Notification::ArenaDtor(void* object) {
  CParental_ParentalLock_Notification* _this = reinterpret_cast< CParental_ParentalLock_Notification* >(object);
  (void)_this;
}
void CParental_ParentalLock_Notification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CParental_ParentalLock_Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CParental_ParentalLock_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:CParental_ParentalLock_Notification)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    sessionid_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CParental_ParentalLock_Notification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string sessionid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sessionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CParental_ParentalLock_Notification.sessionid");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CParental_ParentalLock_Notification::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CParental_ParentalLock_Notification)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sessionid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_sessionid().data(), static_cast<int>(this->_internal_sessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CParental_ParentalLock_Notification.sessionid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sessionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CParental_ParentalLock_Notification)
  return target;
}

size_t CParental_ParentalLock_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CParental_ParentalLock_Notification)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string sessionid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sessionid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CParental_ParentalLock_Notification::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CParental_ParentalLock_Notification::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CParental_ParentalLock_Notification::GetClassData() const { return &_class_data_; }

void CParental_ParentalLock_Notification::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CParental_ParentalLock_Notification *>(to)->MergeFrom(
      static_cast<const CParental_ParentalLock_Notification &>(from));
}


void CParental_ParentalLock_Notification::MergeFrom(const CParental_ParentalLock_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CParental_ParentalLock_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_sessionid()) {
    _internal_set_sessionid(from._internal_sessionid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CParental_ParentalLock_Notification::CopyFrom(const CParental_ParentalLock_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CParental_ParentalLock_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ParentalLock_Notification::IsInitialized() const {
  return true;
}

void CParental_ParentalLock_Notification::InternalSwap(CParental_ParentalLock_Notification* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sessionid_, lhs_arena,
      &other->sessionid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CParental_ParentalLock_Notification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_getter, &descriptor_table_steammessages_5fparental_2esteamclient_2eproto_once,
      file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[24]);
}

// ===================================================================

Parental::~Parental() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* Parental::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5fparental_2esteamclient_2eproto);
  return file_level_service_descriptors_steammessages_5fparental_2esteamclient_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* Parental::GetDescriptor() {
  return descriptor();
}

void Parental::EnableParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CParental_EnableParentalSettings_Request*,
                         ::CParental_EnableParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method EnableParentalSettings() not implemented.");
  done->Run();
}

void Parental::DisableParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CParental_DisableParentalSettings_Request*,
                         ::CParental_DisableParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DisableParentalSettings() not implemented.");
  done->Run();
}

void Parental::GetParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CParental_GetParentalSettings_Request*,
                         ::CParental_GetParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetParentalSettings() not implemented.");
  done->Run();
}

void Parental::GetSignedParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CParental_GetSignedParentalSettings_Request*,
                         ::CParental_GetSignedParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetSignedParentalSettings() not implemented.");
  done->Run();
}

void Parental::SetParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CParental_SetParentalSettings_Request*,
                         ::CParental_SetParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetParentalSettings() not implemented.");
  done->Run();
}

void Parental::ValidateToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CParental_ValidateToken_Request*,
                         ::CParental_ValidateToken_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ValidateToken() not implemented.");
  done->Run();
}

void Parental::ValidatePassword(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CParental_ValidatePassword_Request*,
                         ::CParental_ValidatePassword_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ValidatePassword() not implemented.");
  done->Run();
}

void Parental::LockClient(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CParental_LockClient_Request*,
                         ::CParental_LockClient_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method LockClient() not implemented.");
  done->Run();
}

void Parental::RequestRecoveryCode(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CParental_RequestRecoveryCode_Request*,
                         ::CParental_RequestRecoveryCode_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RequestRecoveryCode() not implemented.");
  done->Run();
}

void Parental::DisableWithRecoveryCode(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CParental_DisableWithRecoveryCode_Request*,
                         ::CParental_DisableWithRecoveryCode_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DisableWithRecoveryCode() not implemented.");
  done->Run();
}

void Parental::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_steammessages_5fparental_2esteamclient_2eproto[0]);
  switch(method->index()) {
    case 0:
      EnableParentalSettings(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CParental_EnableParentalSettings_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CParental_EnableParentalSettings_Response*>(
                 response),
             done);
      break;
    case 1:
      DisableParentalSettings(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CParental_DisableParentalSettings_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CParental_DisableParentalSettings_Response*>(
                 response),
             done);
      break;
    case 2:
      GetParentalSettings(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CParental_GetParentalSettings_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CParental_GetParentalSettings_Response*>(
                 response),
             done);
      break;
    case 3:
      GetSignedParentalSettings(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CParental_GetSignedParentalSettings_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CParental_GetSignedParentalSettings_Response*>(
                 response),
             done);
      break;
    case 4:
      SetParentalSettings(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CParental_SetParentalSettings_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CParental_SetParentalSettings_Response*>(
                 response),
             done);
      break;
    case 5:
      ValidateToken(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CParental_ValidateToken_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CParental_ValidateToken_Response*>(
                 response),
             done);
      break;
    case 6:
      ValidatePassword(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CParental_ValidatePassword_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CParental_ValidatePassword_Response*>(
                 response),
             done);
      break;
    case 7:
      LockClient(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CParental_LockClient_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CParental_LockClient_Response*>(
                 response),
             done);
      break;
    case 8:
      RequestRecoveryCode(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CParental_RequestRecoveryCode_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CParental_RequestRecoveryCode_Response*>(
                 response),
             done);
      break;
    case 9:
      DisableWithRecoveryCode(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CParental_DisableWithRecoveryCode_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CParental_DisableWithRecoveryCode_Response*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& Parental::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CParental_EnableParentalSettings_Request::default_instance();
    case 1:
      return ::CParental_DisableParentalSettings_Request::default_instance();
    case 2:
      return ::CParental_GetParentalSettings_Request::default_instance();
    case 3:
      return ::CParental_GetSignedParentalSettings_Request::default_instance();
    case 4:
      return ::CParental_SetParentalSettings_Request::default_instance();
    case 5:
      return ::CParental_ValidateToken_Request::default_instance();
    case 6:
      return ::CParental_ValidatePassword_Request::default_instance();
    case 7:
      return ::CParental_LockClient_Request::default_instance();
    case 8:
      return ::CParental_RequestRecoveryCode_Request::default_instance();
    case 9:
      return ::CParental_DisableWithRecoveryCode_Request::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& Parental::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CParental_EnableParentalSettings_Response::default_instance();
    case 1:
      return ::CParental_DisableParentalSettings_Response::default_instance();
    case 2:
      return ::CParental_GetParentalSettings_Response::default_instance();
    case 3:
      return ::CParental_GetSignedParentalSettings_Response::default_instance();
    case 4:
      return ::CParental_SetParentalSettings_Response::default_instance();
    case 5:
      return ::CParental_ValidateToken_Response::default_instance();
    case 6:
      return ::CParental_ValidatePassword_Response::default_instance();
    case 7:
      return ::CParental_LockClient_Response::default_instance();
    case 8:
      return ::CParental_RequestRecoveryCode_Response::default_instance();
    case 9:
      return ::CParental_DisableWithRecoveryCode_Response::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

Parental_Stub::Parental_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
Parental_Stub::Parental_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
Parental_Stub::~Parental_Stub() {
  if (owns_channel_) delete channel_;
}

void Parental_Stub::EnableParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CParental_EnableParentalSettings_Request* request,
                              ::CParental_EnableParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void Parental_Stub::DisableParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CParental_DisableParentalSettings_Request* request,
                              ::CParental_DisableParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void Parental_Stub::GetParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CParental_GetParentalSettings_Request* request,
                              ::CParental_GetParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void Parental_Stub::GetSignedParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CParental_GetSignedParentalSettings_Request* request,
                              ::CParental_GetSignedParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void Parental_Stub::SetParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CParental_SetParentalSettings_Request* request,
                              ::CParental_SetParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void Parental_Stub::ValidateToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CParental_ValidateToken_Request* request,
                              ::CParental_ValidateToken_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void Parental_Stub::ValidatePassword(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CParental_ValidatePassword_Request* request,
                              ::CParental_ValidatePassword_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void Parental_Stub::LockClient(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CParental_LockClient_Request* request,
                              ::CParental_LockClient_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void Parental_Stub::RequestRecoveryCode(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CParental_RequestRecoveryCode_Request* request,
                              ::CParental_RequestRecoveryCode_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}
void Parental_Stub::DisableWithRecoveryCode(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CParental_DisableWithRecoveryCode_Request* request,
                              ::CParental_DisableWithRecoveryCode_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(9),
                       controller, request, response, done);
}
// ===================================================================

ParentalClient::~ParentalClient() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* ParentalClient::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5fparental_2esteamclient_2eproto);
  return file_level_service_descriptors_steammessages_5fparental_2esteamclient_2eproto[1];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* ParentalClient::GetDescriptor() {
  return descriptor();
}

void ParentalClient::NotifySettingsChange(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CParental_ParentalSettingsChange_Notification*,
                         ::NoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method NotifySettingsChange() not implemented.");
  done->Run();
}

void ParentalClient::NotifyUnlock(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CParental_ParentalUnlock_Notification*,
                         ::NoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method NotifyUnlock() not implemented.");
  done->Run();
}

void ParentalClient::NotifyLock(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CParental_ParentalLock_Notification*,
                         ::NoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method NotifyLock() not implemented.");
  done->Run();
}

void ParentalClient::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_steammessages_5fparental_2esteamclient_2eproto[1]);
  switch(method->index()) {
    case 0:
      NotifySettingsChange(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CParental_ParentalSettingsChange_Notification*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::NoResponse*>(
                 response),
             done);
      break;
    case 1:
      NotifyUnlock(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CParental_ParentalUnlock_Notification*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::NoResponse*>(
                 response),
             done);
      break;
    case 2:
      NotifyLock(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CParental_ParentalLock_Notification*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::NoResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& ParentalClient::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CParental_ParentalSettingsChange_Notification::default_instance();
    case 1:
      return ::CParental_ParentalUnlock_Notification::default_instance();
    case 2:
      return ::CParental_ParentalLock_Notification::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& ParentalClient::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::NoResponse::default_instance();
    case 1:
      return ::NoResponse::default_instance();
    case 2:
      return ::NoResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

ParentalClient_Stub::ParentalClient_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
ParentalClient_Stub::ParentalClient_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
ParentalClient_Stub::~ParentalClient_Stub() {
  if (owns_channel_) delete channel_;
}

void ParentalClient_Stub::NotifySettingsChange(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CParental_ParentalSettingsChange_Notification* request,
                              ::NoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void ParentalClient_Stub::NotifyUnlock(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CParental_ParentalUnlock_Notification* request,
                              ::NoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void ParentalClient_Stub::NotifyLock(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CParental_ParentalLock_Notification* request,
                              ::NoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ParentalApp* Arena::CreateMaybeMessage< ::ParentalApp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ParentalApp >(arena);
}
template<> PROTOBUF_NOINLINE ::ParentalSettings* Arena::CreateMaybeMessage< ::ParentalSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ParentalSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_EnableParentalSettings_Request* Arena::CreateMaybeMessage< ::CParental_EnableParentalSettings_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_EnableParentalSettings_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_EnableParentalSettings_Response* Arena::CreateMaybeMessage< ::CParental_EnableParentalSettings_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_EnableParentalSettings_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_DisableParentalSettings_Request* Arena::CreateMaybeMessage< ::CParental_DisableParentalSettings_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_DisableParentalSettings_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_DisableParentalSettings_Response* Arena::CreateMaybeMessage< ::CParental_DisableParentalSettings_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_DisableParentalSettings_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_GetParentalSettings_Request* Arena::CreateMaybeMessage< ::CParental_GetParentalSettings_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_GetParentalSettings_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_GetParentalSettings_Response* Arena::CreateMaybeMessage< ::CParental_GetParentalSettings_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_GetParentalSettings_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_GetSignedParentalSettings_Request* Arena::CreateMaybeMessage< ::CParental_GetSignedParentalSettings_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_GetSignedParentalSettings_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_GetSignedParentalSettings_Response* Arena::CreateMaybeMessage< ::CParental_GetSignedParentalSettings_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_GetSignedParentalSettings_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_SetParentalSettings_Request* Arena::CreateMaybeMessage< ::CParental_SetParentalSettings_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_SetParentalSettings_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_SetParentalSettings_Response* Arena::CreateMaybeMessage< ::CParental_SetParentalSettings_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_SetParentalSettings_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_ValidateToken_Request* Arena::CreateMaybeMessage< ::CParental_ValidateToken_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_ValidateToken_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_ValidateToken_Response* Arena::CreateMaybeMessage< ::CParental_ValidateToken_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_ValidateToken_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_ValidatePassword_Request* Arena::CreateMaybeMessage< ::CParental_ValidatePassword_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_ValidatePassword_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_ValidatePassword_Response* Arena::CreateMaybeMessage< ::CParental_ValidatePassword_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_ValidatePassword_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_LockClient_Request* Arena::CreateMaybeMessage< ::CParental_LockClient_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_LockClient_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_LockClient_Response* Arena::CreateMaybeMessage< ::CParental_LockClient_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_LockClient_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_RequestRecoveryCode_Request* Arena::CreateMaybeMessage< ::CParental_RequestRecoveryCode_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_RequestRecoveryCode_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_RequestRecoveryCode_Response* Arena::CreateMaybeMessage< ::CParental_RequestRecoveryCode_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_RequestRecoveryCode_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_DisableWithRecoveryCode_Request* Arena::CreateMaybeMessage< ::CParental_DisableWithRecoveryCode_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_DisableWithRecoveryCode_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_DisableWithRecoveryCode_Response* Arena::CreateMaybeMessage< ::CParental_DisableWithRecoveryCode_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_DisableWithRecoveryCode_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_ParentalSettingsChange_Notification* Arena::CreateMaybeMessage< ::CParental_ParentalSettingsChange_Notification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_ParentalSettingsChange_Notification >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_ParentalUnlock_Notification* Arena::CreateMaybeMessage< ::CParental_ParentalUnlock_Notification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_ParentalUnlock_Notification >(arena);
}
template<> PROTOBUF_NOINLINE ::CParental_ParentalLock_Notification* Arena::CreateMaybeMessage< ::CParental_ParentalLock_Notification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CParental_ParentalLock_Notification >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
