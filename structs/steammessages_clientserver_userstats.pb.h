// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_clientserver_userstats.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_steammessages_5fclientserver_5fuserstats_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_steammessages_5fclientserver_5fuserstats_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019005 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_base.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5fuserstats_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fclientserver_5fuserstats_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[12]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fclientserver_5fuserstats_2eproto;
class CMsgClientGetUserStats;
struct CMsgClientGetUserStatsDefaultTypeInternal;
extern CMsgClientGetUserStatsDefaultTypeInternal _CMsgClientGetUserStats_default_instance_;
class CMsgClientGetUserStatsResponse;
struct CMsgClientGetUserStatsResponseDefaultTypeInternal;
extern CMsgClientGetUserStatsResponseDefaultTypeInternal _CMsgClientGetUserStatsResponse_default_instance_;
class CMsgClientGetUserStatsResponse_Achievement_Blocks;
struct CMsgClientGetUserStatsResponse_Achievement_BlocksDefaultTypeInternal;
extern CMsgClientGetUserStatsResponse_Achievement_BlocksDefaultTypeInternal _CMsgClientGetUserStatsResponse_Achievement_Blocks_default_instance_;
class CMsgClientGetUserStatsResponse_Stats;
struct CMsgClientGetUserStatsResponse_StatsDefaultTypeInternal;
extern CMsgClientGetUserStatsResponse_StatsDefaultTypeInternal _CMsgClientGetUserStatsResponse_Stats_default_instance_;
class CMsgClientStatsUpdated;
struct CMsgClientStatsUpdatedDefaultTypeInternal;
extern CMsgClientStatsUpdatedDefaultTypeInternal _CMsgClientStatsUpdated_default_instance_;
class CMsgClientStatsUpdated_Updated_Stats;
struct CMsgClientStatsUpdated_Updated_StatsDefaultTypeInternal;
extern CMsgClientStatsUpdated_Updated_StatsDefaultTypeInternal _CMsgClientStatsUpdated_Updated_Stats_default_instance_;
class CMsgClientStoreUserStats;
struct CMsgClientStoreUserStatsDefaultTypeInternal;
extern CMsgClientStoreUserStatsDefaultTypeInternal _CMsgClientStoreUserStats_default_instance_;
class CMsgClientStoreUserStats2;
struct CMsgClientStoreUserStats2DefaultTypeInternal;
extern CMsgClientStoreUserStats2DefaultTypeInternal _CMsgClientStoreUserStats2_default_instance_;
class CMsgClientStoreUserStats2_Stats;
struct CMsgClientStoreUserStats2_StatsDefaultTypeInternal;
extern CMsgClientStoreUserStats2_StatsDefaultTypeInternal _CMsgClientStoreUserStats2_Stats_default_instance_;
class CMsgClientStoreUserStatsResponse;
struct CMsgClientStoreUserStatsResponseDefaultTypeInternal;
extern CMsgClientStoreUserStatsResponseDefaultTypeInternal _CMsgClientStoreUserStatsResponse_default_instance_;
class CMsgClientStoreUserStatsResponse_Stats_Failed_Validation;
struct CMsgClientStoreUserStatsResponse_Stats_Failed_ValidationDefaultTypeInternal;
extern CMsgClientStoreUserStatsResponse_Stats_Failed_ValidationDefaultTypeInternal _CMsgClientStoreUserStatsResponse_Stats_Failed_Validation_default_instance_;
class CMsgClientStoreUserStats_Stats_To_Store;
struct CMsgClientStoreUserStats_Stats_To_StoreDefaultTypeInternal;
extern CMsgClientStoreUserStats_Stats_To_StoreDefaultTypeInternal _CMsgClientStoreUserStats_Stats_To_Store_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CMsgClientGetUserStats* Arena::CreateMaybeMessage<::CMsgClientGetUserStats>(Arena*);
template<> ::CMsgClientGetUserStatsResponse* Arena::CreateMaybeMessage<::CMsgClientGetUserStatsResponse>(Arena*);
template<> ::CMsgClientGetUserStatsResponse_Achievement_Blocks* Arena::CreateMaybeMessage<::CMsgClientGetUserStatsResponse_Achievement_Blocks>(Arena*);
template<> ::CMsgClientGetUserStatsResponse_Stats* Arena::CreateMaybeMessage<::CMsgClientGetUserStatsResponse_Stats>(Arena*);
template<> ::CMsgClientStatsUpdated* Arena::CreateMaybeMessage<::CMsgClientStatsUpdated>(Arena*);
template<> ::CMsgClientStatsUpdated_Updated_Stats* Arena::CreateMaybeMessage<::CMsgClientStatsUpdated_Updated_Stats>(Arena*);
template<> ::CMsgClientStoreUserStats* Arena::CreateMaybeMessage<::CMsgClientStoreUserStats>(Arena*);
template<> ::CMsgClientStoreUserStats2* Arena::CreateMaybeMessage<::CMsgClientStoreUserStats2>(Arena*);
template<> ::CMsgClientStoreUserStats2_Stats* Arena::CreateMaybeMessage<::CMsgClientStoreUserStats2_Stats>(Arena*);
template<> ::CMsgClientStoreUserStatsResponse* Arena::CreateMaybeMessage<::CMsgClientStoreUserStatsResponse>(Arena*);
template<> ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* Arena::CreateMaybeMessage<::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation>(Arena*);
template<> ::CMsgClientStoreUserStats_Stats_To_Store* Arena::CreateMaybeMessage<::CMsgClientStoreUserStats_Stats_To_Store>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class CMsgClientGetUserStats final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetUserStats) */ {
 public:
  inline CMsgClientGetUserStats() : CMsgClientGetUserStats(nullptr) {}
  ~CMsgClientGetUserStats() override;
  explicit constexpr CMsgClientGetUserStats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetUserStats(const CMsgClientGetUserStats& from);
  CMsgClientGetUserStats(CMsgClientGetUserStats&& from) noexcept
    : CMsgClientGetUserStats() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetUserStats& operator=(const CMsgClientGetUserStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetUserStats& operator=(CMsgClientGetUserStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientGetUserStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetUserStats* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetUserStats*>(
               &_CMsgClientGetUserStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CMsgClientGetUserStats& a, CMsgClientGetUserStats& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetUserStats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetUserStats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientGetUserStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientGetUserStats>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientGetUserStats& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CMsgClientGetUserStats& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetUserStats* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetUserStats";
  }
  protected:
  explicit CMsgClientGetUserStats(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameIdFieldNumber = 1,
    kCrcStatsFieldNumber = 2,
    kSchemaLocalVersionFieldNumber = 3,
    kSteamIdForUserFieldNumber = 4,
  };
  // optional fixed64 game_id = 1;
  bool has_game_id() const;
  private:
  bool _internal_has_game_id() const;
  public:
  void clear_game_id();
  uint64_t game_id() const;
  void set_game_id(uint64_t value);
  private:
  uint64_t _internal_game_id() const;
  void _internal_set_game_id(uint64_t value);
  public:

  // optional uint32 crc_stats = 2;
  bool has_crc_stats() const;
  private:
  bool _internal_has_crc_stats() const;
  public:
  void clear_crc_stats();
  uint32_t crc_stats() const;
  void set_crc_stats(uint32_t value);
  private:
  uint32_t _internal_crc_stats() const;
  void _internal_set_crc_stats(uint32_t value);
  public:

  // optional int32 schema_local_version = 3;
  bool has_schema_local_version() const;
  private:
  bool _internal_has_schema_local_version() const;
  public:
  void clear_schema_local_version();
  int32_t schema_local_version() const;
  void set_schema_local_version(int32_t value);
  private:
  int32_t _internal_schema_local_version() const;
  void _internal_set_schema_local_version(int32_t value);
  public:

  // optional fixed64 steam_id_for_user = 4;
  bool has_steam_id_for_user() const;
  private:
  bool _internal_has_steam_id_for_user() const;
  public:
  void clear_steam_id_for_user();
  uint64_t steam_id_for_user() const;
  void set_steam_id_for_user(uint64_t value);
  private:
  uint64_t _internal_steam_id_for_user() const;
  void _internal_set_steam_id_for_user(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientGetUserStats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t game_id_;
  uint32_t crc_stats_;
  int32_t schema_local_version_;
  uint64_t steam_id_for_user_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fuserstats_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientGetUserStatsResponse_Stats final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetUserStatsResponse.Stats) */ {
 public:
  inline CMsgClientGetUserStatsResponse_Stats() : CMsgClientGetUserStatsResponse_Stats(nullptr) {}
  ~CMsgClientGetUserStatsResponse_Stats() override;
  explicit constexpr CMsgClientGetUserStatsResponse_Stats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetUserStatsResponse_Stats(const CMsgClientGetUserStatsResponse_Stats& from);
  CMsgClientGetUserStatsResponse_Stats(CMsgClientGetUserStatsResponse_Stats&& from) noexcept
    : CMsgClientGetUserStatsResponse_Stats() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetUserStatsResponse_Stats& operator=(const CMsgClientGetUserStatsResponse_Stats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetUserStatsResponse_Stats& operator=(CMsgClientGetUserStatsResponse_Stats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientGetUserStatsResponse_Stats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetUserStatsResponse_Stats* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetUserStatsResponse_Stats*>(
               &_CMsgClientGetUserStatsResponse_Stats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgClientGetUserStatsResponse_Stats& a, CMsgClientGetUserStatsResponse_Stats& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetUserStatsResponse_Stats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetUserStatsResponse_Stats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientGetUserStatsResponse_Stats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientGetUserStatsResponse_Stats>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientGetUserStatsResponse_Stats& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CMsgClientGetUserStatsResponse_Stats& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetUserStatsResponse_Stats* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetUserStatsResponse.Stats";
  }
  protected:
  explicit CMsgClientGetUserStatsResponse_Stats(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatIdFieldNumber = 1,
    kStatValueFieldNumber = 2,
  };
  // optional uint32 stat_id = 1;
  bool has_stat_id() const;
  private:
  bool _internal_has_stat_id() const;
  public:
  void clear_stat_id();
  uint32_t stat_id() const;
  void set_stat_id(uint32_t value);
  private:
  uint32_t _internal_stat_id() const;
  void _internal_set_stat_id(uint32_t value);
  public:

  // optional uint32 stat_value = 2;
  bool has_stat_value() const;
  private:
  bool _internal_has_stat_value() const;
  public:
  void clear_stat_value();
  uint32_t stat_value() const;
  void set_stat_value(uint32_t value);
  private:
  uint32_t _internal_stat_value() const;
  void _internal_set_stat_value(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientGetUserStatsResponse.Stats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t stat_id_;
  uint32_t stat_value_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fuserstats_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientGetUserStatsResponse_Achievement_Blocks final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetUserStatsResponse.Achievement_Blocks) */ {
 public:
  inline CMsgClientGetUserStatsResponse_Achievement_Blocks() : CMsgClientGetUserStatsResponse_Achievement_Blocks(nullptr) {}
  ~CMsgClientGetUserStatsResponse_Achievement_Blocks() override;
  explicit constexpr CMsgClientGetUserStatsResponse_Achievement_Blocks(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetUserStatsResponse_Achievement_Blocks(const CMsgClientGetUserStatsResponse_Achievement_Blocks& from);
  CMsgClientGetUserStatsResponse_Achievement_Blocks(CMsgClientGetUserStatsResponse_Achievement_Blocks&& from) noexcept
    : CMsgClientGetUserStatsResponse_Achievement_Blocks() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetUserStatsResponse_Achievement_Blocks& operator=(const CMsgClientGetUserStatsResponse_Achievement_Blocks& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetUserStatsResponse_Achievement_Blocks& operator=(CMsgClientGetUserStatsResponse_Achievement_Blocks&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientGetUserStatsResponse_Achievement_Blocks& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetUserStatsResponse_Achievement_Blocks* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetUserStatsResponse_Achievement_Blocks*>(
               &_CMsgClientGetUserStatsResponse_Achievement_Blocks_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgClientGetUserStatsResponse_Achievement_Blocks& a, CMsgClientGetUserStatsResponse_Achievement_Blocks& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetUserStatsResponse_Achievement_Blocks* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetUserStatsResponse_Achievement_Blocks* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientGetUserStatsResponse_Achievement_Blocks* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientGetUserStatsResponse_Achievement_Blocks>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientGetUserStatsResponse_Achievement_Blocks& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CMsgClientGetUserStatsResponse_Achievement_Blocks& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetUserStatsResponse_Achievement_Blocks* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetUserStatsResponse.Achievement_Blocks";
  }
  protected:
  explicit CMsgClientGetUserStatsResponse_Achievement_Blocks(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnlockTimeFieldNumber = 2,
    kAchievementIdFieldNumber = 1,
  };
  // repeated fixed32 unlock_time = 2;
  int unlock_time_size() const;
  private:
  int _internal_unlock_time_size() const;
  public:
  void clear_unlock_time();
  private:
  uint32_t _internal_unlock_time(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_unlock_time() const;
  void _internal_add_unlock_time(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_unlock_time();
  public:
  uint32_t unlock_time(int index) const;
  void set_unlock_time(int index, uint32_t value);
  void add_unlock_time(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      unlock_time() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_unlock_time();

  // optional uint32 achievement_id = 1;
  bool has_achievement_id() const;
  private:
  bool _internal_has_achievement_id() const;
  public:
  void clear_achievement_id();
  uint32_t achievement_id() const;
  void set_achievement_id(uint32_t value);
  private:
  uint32_t _internal_achievement_id() const;
  void _internal_set_achievement_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientGetUserStatsResponse.Achievement_Blocks)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > unlock_time_;
  uint32_t achievement_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fuserstats_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientGetUserStatsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetUserStatsResponse) */ {
 public:
  inline CMsgClientGetUserStatsResponse() : CMsgClientGetUserStatsResponse(nullptr) {}
  ~CMsgClientGetUserStatsResponse() override;
  explicit constexpr CMsgClientGetUserStatsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetUserStatsResponse(const CMsgClientGetUserStatsResponse& from);
  CMsgClientGetUserStatsResponse(CMsgClientGetUserStatsResponse&& from) noexcept
    : CMsgClientGetUserStatsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetUserStatsResponse& operator=(const CMsgClientGetUserStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetUserStatsResponse& operator=(CMsgClientGetUserStatsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientGetUserStatsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetUserStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetUserStatsResponse*>(
               &_CMsgClientGetUserStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgClientGetUserStatsResponse& a, CMsgClientGetUserStatsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetUserStatsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetUserStatsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientGetUserStatsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientGetUserStatsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientGetUserStatsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CMsgClientGetUserStatsResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetUserStatsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetUserStatsResponse";
  }
  protected:
  explicit CMsgClientGetUserStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientGetUserStatsResponse_Stats Stats;
  typedef CMsgClientGetUserStatsResponse_Achievement_Blocks Achievement_Blocks;

  // accessors -------------------------------------------------------

  enum : int {
    kStatsFieldNumber = 5,
    kAchievementBlocksFieldNumber = 6,
    kSchemaFieldNumber = 4,
    kGameIdFieldNumber = 1,
    kCrcStatsFieldNumber = 3,
    kEresultFieldNumber = 2,
  };
  // repeated .CMsgClientGetUserStatsResponse.Stats stats = 5;
  int stats_size() const;
  private:
  int _internal_stats_size() const;
  public:
  void clear_stats();
  ::CMsgClientGetUserStatsResponse_Stats* mutable_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetUserStatsResponse_Stats >*
      mutable_stats();
  private:
  const ::CMsgClientGetUserStatsResponse_Stats& _internal_stats(int index) const;
  ::CMsgClientGetUserStatsResponse_Stats* _internal_add_stats();
  public:
  const ::CMsgClientGetUserStatsResponse_Stats& stats(int index) const;
  ::CMsgClientGetUserStatsResponse_Stats* add_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetUserStatsResponse_Stats >&
      stats() const;

  // repeated .CMsgClientGetUserStatsResponse.Achievement_Blocks achievement_blocks = 6;
  int achievement_blocks_size() const;
  private:
  int _internal_achievement_blocks_size() const;
  public:
  void clear_achievement_blocks();
  ::CMsgClientGetUserStatsResponse_Achievement_Blocks* mutable_achievement_blocks(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetUserStatsResponse_Achievement_Blocks >*
      mutable_achievement_blocks();
  private:
  const ::CMsgClientGetUserStatsResponse_Achievement_Blocks& _internal_achievement_blocks(int index) const;
  ::CMsgClientGetUserStatsResponse_Achievement_Blocks* _internal_add_achievement_blocks();
  public:
  const ::CMsgClientGetUserStatsResponse_Achievement_Blocks& achievement_blocks(int index) const;
  ::CMsgClientGetUserStatsResponse_Achievement_Blocks* add_achievement_blocks();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetUserStatsResponse_Achievement_Blocks >&
      achievement_blocks() const;

  // optional bytes schema = 4;
  bool has_schema() const;
  private:
  bool _internal_has_schema() const;
  public:
  void clear_schema();
  const std::string& schema() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_schema(ArgT0&& arg0, ArgT... args);
  std::string* mutable_schema();
  PROTOBUF_NODISCARD std::string* release_schema();
  void set_allocated_schema(std::string* schema);
  private:
  const std::string& _internal_schema() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_schema(const std::string& value);
  std::string* _internal_mutable_schema();
  public:

  // optional fixed64 game_id = 1;
  bool has_game_id() const;
  private:
  bool _internal_has_game_id() const;
  public:
  void clear_game_id();
  uint64_t game_id() const;
  void set_game_id(uint64_t value);
  private:
  uint64_t _internal_game_id() const;
  void _internal_set_game_id(uint64_t value);
  public:

  // optional uint32 crc_stats = 3;
  bool has_crc_stats() const;
  private:
  bool _internal_has_crc_stats() const;
  public:
  void clear_crc_stats();
  uint32_t crc_stats() const;
  void set_crc_stats(uint32_t value);
  private:
  uint32_t _internal_crc_stats() const;
  void _internal_set_crc_stats(uint32_t value);
  public:

  // optional int32 eresult = 2 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  int32_t eresult() const;
  void set_eresult(int32_t value);
  private:
  int32_t _internal_eresult() const;
  void _internal_set_eresult(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientGetUserStatsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetUserStatsResponse_Stats > stats_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetUserStatsResponse_Achievement_Blocks > achievement_blocks_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr schema_;
  uint64_t game_id_;
  uint32_t crc_stats_;
  int32_t eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fuserstats_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientStoreUserStatsResponse_Stats_Failed_Validation final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation) */ {
 public:
  inline CMsgClientStoreUserStatsResponse_Stats_Failed_Validation() : CMsgClientStoreUserStatsResponse_Stats_Failed_Validation(nullptr) {}
  ~CMsgClientStoreUserStatsResponse_Stats_Failed_Validation() override;
  explicit constexpr CMsgClientStoreUserStatsResponse_Stats_Failed_Validation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientStoreUserStatsResponse_Stats_Failed_Validation(const CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& from);
  CMsgClientStoreUserStatsResponse_Stats_Failed_Validation(CMsgClientStoreUserStatsResponse_Stats_Failed_Validation&& from) noexcept
    : CMsgClientStoreUserStatsResponse_Stats_Failed_Validation() {
    *this = ::std::move(from);
  }

  inline CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& operator=(const CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& operator=(CMsgClientStoreUserStatsResponse_Stats_Failed_Validation&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* internal_default_instance() {
    return reinterpret_cast<const CMsgClientStoreUserStatsResponse_Stats_Failed_Validation*>(
               &_CMsgClientStoreUserStatsResponse_Stats_Failed_Validation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& a, CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientStoreUserStatsResponse_Stats_Failed_Validation>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientStoreUserStatsResponse.Stats_Failed_Validation";
  }
  protected:
  explicit CMsgClientStoreUserStatsResponse_Stats_Failed_Validation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatIdFieldNumber = 1,
    kRevertedStatValueFieldNumber = 2,
  };
  // optional uint32 stat_id = 1;
  bool has_stat_id() const;
  private:
  bool _internal_has_stat_id() const;
  public:
  void clear_stat_id();
  uint32_t stat_id() const;
  void set_stat_id(uint32_t value);
  private:
  uint32_t _internal_stat_id() const;
  void _internal_set_stat_id(uint32_t value);
  public:

  // optional uint32 reverted_stat_value = 2;
  bool has_reverted_stat_value() const;
  private:
  bool _internal_has_reverted_stat_value() const;
  public:
  void clear_reverted_stat_value();
  uint32_t reverted_stat_value() const;
  void set_reverted_stat_value(uint32_t value);
  private:
  uint32_t _internal_reverted_stat_value() const;
  void _internal_set_reverted_stat_value(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t stat_id_;
  uint32_t reverted_stat_value_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fuserstats_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientStoreUserStatsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientStoreUserStatsResponse) */ {
 public:
  inline CMsgClientStoreUserStatsResponse() : CMsgClientStoreUserStatsResponse(nullptr) {}
  ~CMsgClientStoreUserStatsResponse() override;
  explicit constexpr CMsgClientStoreUserStatsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientStoreUserStatsResponse(const CMsgClientStoreUserStatsResponse& from);
  CMsgClientStoreUserStatsResponse(CMsgClientStoreUserStatsResponse&& from) noexcept
    : CMsgClientStoreUserStatsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientStoreUserStatsResponse& operator=(const CMsgClientStoreUserStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientStoreUserStatsResponse& operator=(CMsgClientStoreUserStatsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientStoreUserStatsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientStoreUserStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientStoreUserStatsResponse*>(
               &_CMsgClientStoreUserStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgClientStoreUserStatsResponse& a, CMsgClientStoreUserStatsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientStoreUserStatsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientStoreUserStatsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientStoreUserStatsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientStoreUserStatsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientStoreUserStatsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CMsgClientStoreUserStatsResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientStoreUserStatsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientStoreUserStatsResponse";
  }
  protected:
  explicit CMsgClientStoreUserStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientStoreUserStatsResponse_Stats_Failed_Validation Stats_Failed_Validation;

  // accessors -------------------------------------------------------

  enum : int {
    kStatsFailedValidationFieldNumber = 4,
    kGameIdFieldNumber = 1,
    kCrcStatsFieldNumber = 3,
    kStatsOutOfDateFieldNumber = 5,
    kEresultFieldNumber = 2,
  };
  // repeated .CMsgClientStoreUserStatsResponse.Stats_Failed_Validation stats_failed_validation = 4;
  int stats_failed_validation_size() const;
  private:
  int _internal_stats_failed_validation_size() const;
  public:
  void clear_stats_failed_validation();
  ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* mutable_stats_failed_validation(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation >*
      mutable_stats_failed_validation();
  private:
  const ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& _internal_stats_failed_validation(int index) const;
  ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* _internal_add_stats_failed_validation();
  public:
  const ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& stats_failed_validation(int index) const;
  ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* add_stats_failed_validation();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation >&
      stats_failed_validation() const;

  // optional fixed64 game_id = 1;
  bool has_game_id() const;
  private:
  bool _internal_has_game_id() const;
  public:
  void clear_game_id();
  uint64_t game_id() const;
  void set_game_id(uint64_t value);
  private:
  uint64_t _internal_game_id() const;
  void _internal_set_game_id(uint64_t value);
  public:

  // optional uint32 crc_stats = 3;
  bool has_crc_stats() const;
  private:
  bool _internal_has_crc_stats() const;
  public:
  void clear_crc_stats();
  uint32_t crc_stats() const;
  void set_crc_stats(uint32_t value);
  private:
  uint32_t _internal_crc_stats() const;
  void _internal_set_crc_stats(uint32_t value);
  public:

  // optional bool stats_out_of_date = 5;
  bool has_stats_out_of_date() const;
  private:
  bool _internal_has_stats_out_of_date() const;
  public:
  void clear_stats_out_of_date();
  bool stats_out_of_date() const;
  void set_stats_out_of_date(bool value);
  private:
  bool _internal_stats_out_of_date() const;
  void _internal_set_stats_out_of_date(bool value);
  public:

  // optional int32 eresult = 2 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  int32_t eresult() const;
  void set_eresult(int32_t value);
  private:
  int32_t _internal_eresult() const;
  void _internal_set_eresult(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientStoreUserStatsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation > stats_failed_validation_;
  uint64_t game_id_;
  uint32_t crc_stats_;
  bool stats_out_of_date_;
  int32_t eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fuserstats_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientStoreUserStats2_Stats final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientStoreUserStats2.Stats) */ {
 public:
  inline CMsgClientStoreUserStats2_Stats() : CMsgClientStoreUserStats2_Stats(nullptr) {}
  ~CMsgClientStoreUserStats2_Stats() override;
  explicit constexpr CMsgClientStoreUserStats2_Stats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientStoreUserStats2_Stats(const CMsgClientStoreUserStats2_Stats& from);
  CMsgClientStoreUserStats2_Stats(CMsgClientStoreUserStats2_Stats&& from) noexcept
    : CMsgClientStoreUserStats2_Stats() {
    *this = ::std::move(from);
  }

  inline CMsgClientStoreUserStats2_Stats& operator=(const CMsgClientStoreUserStats2_Stats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientStoreUserStats2_Stats& operator=(CMsgClientStoreUserStats2_Stats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientStoreUserStats2_Stats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientStoreUserStats2_Stats* internal_default_instance() {
    return reinterpret_cast<const CMsgClientStoreUserStats2_Stats*>(
               &_CMsgClientStoreUserStats2_Stats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgClientStoreUserStats2_Stats& a, CMsgClientStoreUserStats2_Stats& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientStoreUserStats2_Stats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientStoreUserStats2_Stats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientStoreUserStats2_Stats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientStoreUserStats2_Stats>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientStoreUserStats2_Stats& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CMsgClientStoreUserStats2_Stats& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientStoreUserStats2_Stats* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientStoreUserStats2.Stats";
  }
  protected:
  explicit CMsgClientStoreUserStats2_Stats(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatIdFieldNumber = 1,
    kStatValueFieldNumber = 2,
  };
  // optional uint32 stat_id = 1;
  bool has_stat_id() const;
  private:
  bool _internal_has_stat_id() const;
  public:
  void clear_stat_id();
  uint32_t stat_id() const;
  void set_stat_id(uint32_t value);
  private:
  uint32_t _internal_stat_id() const;
  void _internal_set_stat_id(uint32_t value);
  public:

  // optional uint32 stat_value = 2;
  bool has_stat_value() const;
  private:
  bool _internal_has_stat_value() const;
  public:
  void clear_stat_value();
  uint32_t stat_value() const;
  void set_stat_value(uint32_t value);
  private:
  uint32_t _internal_stat_value() const;
  void _internal_set_stat_value(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientStoreUserStats2.Stats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t stat_id_;
  uint32_t stat_value_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fuserstats_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientStoreUserStats2 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientStoreUserStats2) */ {
 public:
  inline CMsgClientStoreUserStats2() : CMsgClientStoreUserStats2(nullptr) {}
  ~CMsgClientStoreUserStats2() override;
  explicit constexpr CMsgClientStoreUserStats2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientStoreUserStats2(const CMsgClientStoreUserStats2& from);
  CMsgClientStoreUserStats2(CMsgClientStoreUserStats2&& from) noexcept
    : CMsgClientStoreUserStats2() {
    *this = ::std::move(from);
  }

  inline CMsgClientStoreUserStats2& operator=(const CMsgClientStoreUserStats2& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientStoreUserStats2& operator=(CMsgClientStoreUserStats2&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientStoreUserStats2& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientStoreUserStats2* internal_default_instance() {
    return reinterpret_cast<const CMsgClientStoreUserStats2*>(
               &_CMsgClientStoreUserStats2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgClientStoreUserStats2& a, CMsgClientStoreUserStats2& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientStoreUserStats2* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientStoreUserStats2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientStoreUserStats2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientStoreUserStats2>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientStoreUserStats2& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CMsgClientStoreUserStats2& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientStoreUserStats2* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientStoreUserStats2";
  }
  protected:
  explicit CMsgClientStoreUserStats2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientStoreUserStats2_Stats Stats;

  // accessors -------------------------------------------------------

  enum : int {
    kStatsFieldNumber = 6,
    kGameIdFieldNumber = 1,
    kSettorSteamIdFieldNumber = 2,
    kSetteeSteamIdFieldNumber = 3,
    kCrcStatsFieldNumber = 4,
    kExplicitResetFieldNumber = 5,
  };
  // repeated .CMsgClientStoreUserStats2.Stats stats = 6;
  int stats_size() const;
  private:
  int _internal_stats_size() const;
  public:
  void clear_stats();
  ::CMsgClientStoreUserStats2_Stats* mutable_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStats2_Stats >*
      mutable_stats();
  private:
  const ::CMsgClientStoreUserStats2_Stats& _internal_stats(int index) const;
  ::CMsgClientStoreUserStats2_Stats* _internal_add_stats();
  public:
  const ::CMsgClientStoreUserStats2_Stats& stats(int index) const;
  ::CMsgClientStoreUserStats2_Stats* add_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStats2_Stats >&
      stats() const;

  // optional fixed64 game_id = 1;
  bool has_game_id() const;
  private:
  bool _internal_has_game_id() const;
  public:
  void clear_game_id();
  uint64_t game_id() const;
  void set_game_id(uint64_t value);
  private:
  uint64_t _internal_game_id() const;
  void _internal_set_game_id(uint64_t value);
  public:

  // optional fixed64 settor_steam_id = 2;
  bool has_settor_steam_id() const;
  private:
  bool _internal_has_settor_steam_id() const;
  public:
  void clear_settor_steam_id();
  uint64_t settor_steam_id() const;
  void set_settor_steam_id(uint64_t value);
  private:
  uint64_t _internal_settor_steam_id() const;
  void _internal_set_settor_steam_id(uint64_t value);
  public:

  // optional fixed64 settee_steam_id = 3;
  bool has_settee_steam_id() const;
  private:
  bool _internal_has_settee_steam_id() const;
  public:
  void clear_settee_steam_id();
  uint64_t settee_steam_id() const;
  void set_settee_steam_id(uint64_t value);
  private:
  uint64_t _internal_settee_steam_id() const;
  void _internal_set_settee_steam_id(uint64_t value);
  public:

  // optional uint32 crc_stats = 4;
  bool has_crc_stats() const;
  private:
  bool _internal_has_crc_stats() const;
  public:
  void clear_crc_stats();
  uint32_t crc_stats() const;
  void set_crc_stats(uint32_t value);
  private:
  uint32_t _internal_crc_stats() const;
  void _internal_set_crc_stats(uint32_t value);
  public:

  // optional bool explicit_reset = 5;
  bool has_explicit_reset() const;
  private:
  bool _internal_has_explicit_reset() const;
  public:
  void clear_explicit_reset();
  bool explicit_reset() const;
  void set_explicit_reset(bool value);
  private:
  bool _internal_explicit_reset() const;
  void _internal_set_explicit_reset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientStoreUserStats2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStats2_Stats > stats_;
  uint64_t game_id_;
  uint64_t settor_steam_id_;
  uint64_t settee_steam_id_;
  uint32_t crc_stats_;
  bool explicit_reset_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fuserstats_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientStatsUpdated_Updated_Stats final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientStatsUpdated.Updated_Stats) */ {
 public:
  inline CMsgClientStatsUpdated_Updated_Stats() : CMsgClientStatsUpdated_Updated_Stats(nullptr) {}
  ~CMsgClientStatsUpdated_Updated_Stats() override;
  explicit constexpr CMsgClientStatsUpdated_Updated_Stats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientStatsUpdated_Updated_Stats(const CMsgClientStatsUpdated_Updated_Stats& from);
  CMsgClientStatsUpdated_Updated_Stats(CMsgClientStatsUpdated_Updated_Stats&& from) noexcept
    : CMsgClientStatsUpdated_Updated_Stats() {
    *this = ::std::move(from);
  }

  inline CMsgClientStatsUpdated_Updated_Stats& operator=(const CMsgClientStatsUpdated_Updated_Stats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientStatsUpdated_Updated_Stats& operator=(CMsgClientStatsUpdated_Updated_Stats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientStatsUpdated_Updated_Stats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientStatsUpdated_Updated_Stats* internal_default_instance() {
    return reinterpret_cast<const CMsgClientStatsUpdated_Updated_Stats*>(
               &_CMsgClientStatsUpdated_Updated_Stats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgClientStatsUpdated_Updated_Stats& a, CMsgClientStatsUpdated_Updated_Stats& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientStatsUpdated_Updated_Stats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientStatsUpdated_Updated_Stats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientStatsUpdated_Updated_Stats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientStatsUpdated_Updated_Stats>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientStatsUpdated_Updated_Stats& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CMsgClientStatsUpdated_Updated_Stats& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientStatsUpdated_Updated_Stats* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientStatsUpdated.Updated_Stats";
  }
  protected:
  explicit CMsgClientStatsUpdated_Updated_Stats(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatIdFieldNumber = 1,
    kStatValueFieldNumber = 2,
  };
  // optional uint32 stat_id = 1;
  bool has_stat_id() const;
  private:
  bool _internal_has_stat_id() const;
  public:
  void clear_stat_id();
  uint32_t stat_id() const;
  void set_stat_id(uint32_t value);
  private:
  uint32_t _internal_stat_id() const;
  void _internal_set_stat_id(uint32_t value);
  public:

  // optional uint32 stat_value = 2;
  bool has_stat_value() const;
  private:
  bool _internal_has_stat_value() const;
  public:
  void clear_stat_value();
  uint32_t stat_value() const;
  void set_stat_value(uint32_t value);
  private:
  uint32_t _internal_stat_value() const;
  void _internal_set_stat_value(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientStatsUpdated.Updated_Stats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t stat_id_;
  uint32_t stat_value_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fuserstats_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientStatsUpdated final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientStatsUpdated) */ {
 public:
  inline CMsgClientStatsUpdated() : CMsgClientStatsUpdated(nullptr) {}
  ~CMsgClientStatsUpdated() override;
  explicit constexpr CMsgClientStatsUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientStatsUpdated(const CMsgClientStatsUpdated& from);
  CMsgClientStatsUpdated(CMsgClientStatsUpdated&& from) noexcept
    : CMsgClientStatsUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgClientStatsUpdated& operator=(const CMsgClientStatsUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientStatsUpdated& operator=(CMsgClientStatsUpdated&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientStatsUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientStatsUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgClientStatsUpdated*>(
               &_CMsgClientStatsUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgClientStatsUpdated& a, CMsgClientStatsUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientStatsUpdated* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientStatsUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientStatsUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientStatsUpdated>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientStatsUpdated& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CMsgClientStatsUpdated& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientStatsUpdated* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientStatsUpdated";
  }
  protected:
  explicit CMsgClientStatsUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientStatsUpdated_Updated_Stats Updated_Stats;

  // accessors -------------------------------------------------------

  enum : int {
    kUpdatedStatsFieldNumber = 4,
    kSteamIdFieldNumber = 1,
    kGameIdFieldNumber = 2,
    kCrcStatsFieldNumber = 3,
  };
  // repeated .CMsgClientStatsUpdated.Updated_Stats updated_stats = 4;
  int updated_stats_size() const;
  private:
  int _internal_updated_stats_size() const;
  public:
  void clear_updated_stats();
  ::CMsgClientStatsUpdated_Updated_Stats* mutable_updated_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStatsUpdated_Updated_Stats >*
      mutable_updated_stats();
  private:
  const ::CMsgClientStatsUpdated_Updated_Stats& _internal_updated_stats(int index) const;
  ::CMsgClientStatsUpdated_Updated_Stats* _internal_add_updated_stats();
  public:
  const ::CMsgClientStatsUpdated_Updated_Stats& updated_stats(int index) const;
  ::CMsgClientStatsUpdated_Updated_Stats* add_updated_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStatsUpdated_Updated_Stats >&
      updated_stats() const;

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  private:
  bool _internal_has_steam_id() const;
  public:
  void clear_steam_id();
  uint64_t steam_id() const;
  void set_steam_id(uint64_t value);
  private:
  uint64_t _internal_steam_id() const;
  void _internal_set_steam_id(uint64_t value);
  public:

  // optional fixed64 game_id = 2;
  bool has_game_id() const;
  private:
  bool _internal_has_game_id() const;
  public:
  void clear_game_id();
  uint64_t game_id() const;
  void set_game_id(uint64_t value);
  private:
  uint64_t _internal_game_id() const;
  void _internal_set_game_id(uint64_t value);
  public:

  // optional uint32 crc_stats = 3;
  bool has_crc_stats() const;
  private:
  bool _internal_has_crc_stats() const;
  public:
  void clear_crc_stats();
  uint32_t crc_stats() const;
  void set_crc_stats(uint32_t value);
  private:
  uint32_t _internal_crc_stats() const;
  void _internal_set_crc_stats(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientStatsUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStatsUpdated_Updated_Stats > updated_stats_;
  uint64_t steam_id_;
  uint64_t game_id_;
  uint32_t crc_stats_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fuserstats_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientStoreUserStats_Stats_To_Store final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientStoreUserStats.Stats_To_Store) */ {
 public:
  inline CMsgClientStoreUserStats_Stats_To_Store() : CMsgClientStoreUserStats_Stats_To_Store(nullptr) {}
  ~CMsgClientStoreUserStats_Stats_To_Store() override;
  explicit constexpr CMsgClientStoreUserStats_Stats_To_Store(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientStoreUserStats_Stats_To_Store(const CMsgClientStoreUserStats_Stats_To_Store& from);
  CMsgClientStoreUserStats_Stats_To_Store(CMsgClientStoreUserStats_Stats_To_Store&& from) noexcept
    : CMsgClientStoreUserStats_Stats_To_Store() {
    *this = ::std::move(from);
  }

  inline CMsgClientStoreUserStats_Stats_To_Store& operator=(const CMsgClientStoreUserStats_Stats_To_Store& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientStoreUserStats_Stats_To_Store& operator=(CMsgClientStoreUserStats_Stats_To_Store&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientStoreUserStats_Stats_To_Store& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientStoreUserStats_Stats_To_Store* internal_default_instance() {
    return reinterpret_cast<const CMsgClientStoreUserStats_Stats_To_Store*>(
               &_CMsgClientStoreUserStats_Stats_To_Store_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMsgClientStoreUserStats_Stats_To_Store& a, CMsgClientStoreUserStats_Stats_To_Store& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientStoreUserStats_Stats_To_Store* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientStoreUserStats_Stats_To_Store* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientStoreUserStats_Stats_To_Store* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientStoreUserStats_Stats_To_Store>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientStoreUserStats_Stats_To_Store& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CMsgClientStoreUserStats_Stats_To_Store& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientStoreUserStats_Stats_To_Store* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientStoreUserStats.Stats_To_Store";
  }
  protected:
  explicit CMsgClientStoreUserStats_Stats_To_Store(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatIdFieldNumber = 1,
    kStatValueFieldNumber = 2,
  };
  // optional uint32 stat_id = 1;
  bool has_stat_id() const;
  private:
  bool _internal_has_stat_id() const;
  public:
  void clear_stat_id();
  uint32_t stat_id() const;
  void set_stat_id(uint32_t value);
  private:
  uint32_t _internal_stat_id() const;
  void _internal_set_stat_id(uint32_t value);
  public:

  // optional uint32 stat_value = 2;
  bool has_stat_value() const;
  private:
  bool _internal_has_stat_value() const;
  public:
  void clear_stat_value();
  uint32_t stat_value() const;
  void set_stat_value(uint32_t value);
  private:
  uint32_t _internal_stat_value() const;
  void _internal_set_stat_value(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientStoreUserStats.Stats_To_Store)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t stat_id_;
  uint32_t stat_value_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fuserstats_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientStoreUserStats final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientStoreUserStats) */ {
 public:
  inline CMsgClientStoreUserStats() : CMsgClientStoreUserStats(nullptr) {}
  ~CMsgClientStoreUserStats() override;
  explicit constexpr CMsgClientStoreUserStats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientStoreUserStats(const CMsgClientStoreUserStats& from);
  CMsgClientStoreUserStats(CMsgClientStoreUserStats&& from) noexcept
    : CMsgClientStoreUserStats() {
    *this = ::std::move(from);
  }

  inline CMsgClientStoreUserStats& operator=(const CMsgClientStoreUserStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientStoreUserStats& operator=(CMsgClientStoreUserStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgClientStoreUserStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientStoreUserStats* internal_default_instance() {
    return reinterpret_cast<const CMsgClientStoreUserStats*>(
               &_CMsgClientStoreUserStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMsgClientStoreUserStats& a, CMsgClientStoreUserStats& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientStoreUserStats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientStoreUserStats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgClientStoreUserStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgClientStoreUserStats>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgClientStoreUserStats& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CMsgClientStoreUserStats& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientStoreUserStats* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientStoreUserStats";
  }
  protected:
  explicit CMsgClientStoreUserStats(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientStoreUserStats_Stats_To_Store Stats_To_Store;

  // accessors -------------------------------------------------------

  enum : int {
    kStatsToStoreFieldNumber = 3,
    kGameIdFieldNumber = 1,
    kExplicitResetFieldNumber = 2,
  };
  // repeated .CMsgClientStoreUserStats.Stats_To_Store stats_to_store = 3;
  int stats_to_store_size() const;
  private:
  int _internal_stats_to_store_size() const;
  public:
  void clear_stats_to_store();
  ::CMsgClientStoreUserStats_Stats_To_Store* mutable_stats_to_store(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStats_Stats_To_Store >*
      mutable_stats_to_store();
  private:
  const ::CMsgClientStoreUserStats_Stats_To_Store& _internal_stats_to_store(int index) const;
  ::CMsgClientStoreUserStats_Stats_To_Store* _internal_add_stats_to_store();
  public:
  const ::CMsgClientStoreUserStats_Stats_To_Store& stats_to_store(int index) const;
  ::CMsgClientStoreUserStats_Stats_To_Store* add_stats_to_store();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStats_Stats_To_Store >&
      stats_to_store() const;

  // optional fixed64 game_id = 1;
  bool has_game_id() const;
  private:
  bool _internal_has_game_id() const;
  public:
  void clear_game_id();
  uint64_t game_id() const;
  void set_game_id(uint64_t value);
  private:
  uint64_t _internal_game_id() const;
  void _internal_set_game_id(uint64_t value);
  public:

  // optional bool explicit_reset = 2;
  bool has_explicit_reset() const;
  private:
  bool _internal_has_explicit_reset() const;
  public:
  void clear_explicit_reset();
  bool explicit_reset() const;
  void set_explicit_reset(bool value);
  private:
  bool _internal_explicit_reset() const;
  void _internal_set_explicit_reset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientStoreUserStats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStats_Stats_To_Store > stats_to_store_;
  uint64_t game_id_;
  bool explicit_reset_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fuserstats_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgClientGetUserStats

// optional fixed64 game_id = 1;
inline bool CMsgClientGetUserStats::_internal_has_game_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientGetUserStats::has_game_id() const {
  return _internal_has_game_id();
}
inline void CMsgClientGetUserStats::clear_game_id() {
  game_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientGetUserStats::_internal_game_id() const {
  return game_id_;
}
inline uint64_t CMsgClientGetUserStats::game_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetUserStats.game_id)
  return _internal_game_id();
}
inline void CMsgClientGetUserStats::_internal_set_game_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  game_id_ = value;
}
inline void CMsgClientGetUserStats::set_game_id(uint64_t value) {
  _internal_set_game_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetUserStats.game_id)
}

// optional uint32 crc_stats = 2;
inline bool CMsgClientGetUserStats::_internal_has_crc_stats() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientGetUserStats::has_crc_stats() const {
  return _internal_has_crc_stats();
}
inline void CMsgClientGetUserStats::clear_crc_stats() {
  crc_stats_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientGetUserStats::_internal_crc_stats() const {
  return crc_stats_;
}
inline uint32_t CMsgClientGetUserStats::crc_stats() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetUserStats.crc_stats)
  return _internal_crc_stats();
}
inline void CMsgClientGetUserStats::_internal_set_crc_stats(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  crc_stats_ = value;
}
inline void CMsgClientGetUserStats::set_crc_stats(uint32_t value) {
  _internal_set_crc_stats(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetUserStats.crc_stats)
}

// optional int32 schema_local_version = 3;
inline bool CMsgClientGetUserStats::_internal_has_schema_local_version() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientGetUserStats::has_schema_local_version() const {
  return _internal_has_schema_local_version();
}
inline void CMsgClientGetUserStats::clear_schema_local_version() {
  schema_local_version_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline int32_t CMsgClientGetUserStats::_internal_schema_local_version() const {
  return schema_local_version_;
}
inline int32_t CMsgClientGetUserStats::schema_local_version() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetUserStats.schema_local_version)
  return _internal_schema_local_version();
}
inline void CMsgClientGetUserStats::_internal_set_schema_local_version(int32_t value) {
  _has_bits_[0] |= 0x00000004u;
  schema_local_version_ = value;
}
inline void CMsgClientGetUserStats::set_schema_local_version(int32_t value) {
  _internal_set_schema_local_version(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetUserStats.schema_local_version)
}

// optional fixed64 steam_id_for_user = 4;
inline bool CMsgClientGetUserStats::_internal_has_steam_id_for_user() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientGetUserStats::has_steam_id_for_user() const {
  return _internal_has_steam_id_for_user();
}
inline void CMsgClientGetUserStats::clear_steam_id_for_user() {
  steam_id_for_user_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CMsgClientGetUserStats::_internal_steam_id_for_user() const {
  return steam_id_for_user_;
}
inline uint64_t CMsgClientGetUserStats::steam_id_for_user() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetUserStats.steam_id_for_user)
  return _internal_steam_id_for_user();
}
inline void CMsgClientGetUserStats::_internal_set_steam_id_for_user(uint64_t value) {
  _has_bits_[0] |= 0x00000008u;
  steam_id_for_user_ = value;
}
inline void CMsgClientGetUserStats::set_steam_id_for_user(uint64_t value) {
  _internal_set_steam_id_for_user(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetUserStats.steam_id_for_user)
}

// -------------------------------------------------------------------

// CMsgClientGetUserStatsResponse_Stats

// optional uint32 stat_id = 1;
inline bool CMsgClientGetUserStatsResponse_Stats::_internal_has_stat_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientGetUserStatsResponse_Stats::has_stat_id() const {
  return _internal_has_stat_id();
}
inline void CMsgClientGetUserStatsResponse_Stats::clear_stat_id() {
  stat_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientGetUserStatsResponse_Stats::_internal_stat_id() const {
  return stat_id_;
}
inline uint32_t CMsgClientGetUserStatsResponse_Stats::stat_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetUserStatsResponse.Stats.stat_id)
  return _internal_stat_id();
}
inline void CMsgClientGetUserStatsResponse_Stats::_internal_set_stat_id(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  stat_id_ = value;
}
inline void CMsgClientGetUserStatsResponse_Stats::set_stat_id(uint32_t value) {
  _internal_set_stat_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetUserStatsResponse.Stats.stat_id)
}

// optional uint32 stat_value = 2;
inline bool CMsgClientGetUserStatsResponse_Stats::_internal_has_stat_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientGetUserStatsResponse_Stats::has_stat_value() const {
  return _internal_has_stat_value();
}
inline void CMsgClientGetUserStatsResponse_Stats::clear_stat_value() {
  stat_value_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientGetUserStatsResponse_Stats::_internal_stat_value() const {
  return stat_value_;
}
inline uint32_t CMsgClientGetUserStatsResponse_Stats::stat_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetUserStatsResponse.Stats.stat_value)
  return _internal_stat_value();
}
inline void CMsgClientGetUserStatsResponse_Stats::_internal_set_stat_value(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  stat_value_ = value;
}
inline void CMsgClientGetUserStatsResponse_Stats::set_stat_value(uint32_t value) {
  _internal_set_stat_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetUserStatsResponse.Stats.stat_value)
}

// -------------------------------------------------------------------

// CMsgClientGetUserStatsResponse_Achievement_Blocks

// optional uint32 achievement_id = 1;
inline bool CMsgClientGetUserStatsResponse_Achievement_Blocks::_internal_has_achievement_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientGetUserStatsResponse_Achievement_Blocks::has_achievement_id() const {
  return _internal_has_achievement_id();
}
inline void CMsgClientGetUserStatsResponse_Achievement_Blocks::clear_achievement_id() {
  achievement_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientGetUserStatsResponse_Achievement_Blocks::_internal_achievement_id() const {
  return achievement_id_;
}
inline uint32_t CMsgClientGetUserStatsResponse_Achievement_Blocks::achievement_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetUserStatsResponse.Achievement_Blocks.achievement_id)
  return _internal_achievement_id();
}
inline void CMsgClientGetUserStatsResponse_Achievement_Blocks::_internal_set_achievement_id(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  achievement_id_ = value;
}
inline void CMsgClientGetUserStatsResponse_Achievement_Blocks::set_achievement_id(uint32_t value) {
  _internal_set_achievement_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetUserStatsResponse.Achievement_Blocks.achievement_id)
}

// repeated fixed32 unlock_time = 2;
inline int CMsgClientGetUserStatsResponse_Achievement_Blocks::_internal_unlock_time_size() const {
  return unlock_time_.size();
}
inline int CMsgClientGetUserStatsResponse_Achievement_Blocks::unlock_time_size() const {
  return _internal_unlock_time_size();
}
inline void CMsgClientGetUserStatsResponse_Achievement_Blocks::clear_unlock_time() {
  unlock_time_.Clear();
}
inline uint32_t CMsgClientGetUserStatsResponse_Achievement_Blocks::_internal_unlock_time(int index) const {
  return unlock_time_.Get(index);
}
inline uint32_t CMsgClientGetUserStatsResponse_Achievement_Blocks::unlock_time(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientGetUserStatsResponse.Achievement_Blocks.unlock_time)
  return _internal_unlock_time(index);
}
inline void CMsgClientGetUserStatsResponse_Achievement_Blocks::set_unlock_time(int index, uint32_t value) {
  unlock_time_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientGetUserStatsResponse.Achievement_Blocks.unlock_time)
}
inline void CMsgClientGetUserStatsResponse_Achievement_Blocks::_internal_add_unlock_time(uint32_t value) {
  unlock_time_.Add(value);
}
inline void CMsgClientGetUserStatsResponse_Achievement_Blocks::add_unlock_time(uint32_t value) {
  _internal_add_unlock_time(value);
  // @@protoc_insertion_point(field_add:CMsgClientGetUserStatsResponse.Achievement_Blocks.unlock_time)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientGetUserStatsResponse_Achievement_Blocks::_internal_unlock_time() const {
  return unlock_time_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgClientGetUserStatsResponse_Achievement_Blocks::unlock_time() const {
  // @@protoc_insertion_point(field_list:CMsgClientGetUserStatsResponse.Achievement_Blocks.unlock_time)
  return _internal_unlock_time();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientGetUserStatsResponse_Achievement_Blocks::_internal_mutable_unlock_time() {
  return &unlock_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgClientGetUserStatsResponse_Achievement_Blocks::mutable_unlock_time() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientGetUserStatsResponse.Achievement_Blocks.unlock_time)
  return _internal_mutable_unlock_time();
}

// -------------------------------------------------------------------

// CMsgClientGetUserStatsResponse

// optional fixed64 game_id = 1;
inline bool CMsgClientGetUserStatsResponse::_internal_has_game_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientGetUserStatsResponse::has_game_id() const {
  return _internal_has_game_id();
}
inline void CMsgClientGetUserStatsResponse::clear_game_id() {
  game_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgClientGetUserStatsResponse::_internal_game_id() const {
  return game_id_;
}
inline uint64_t CMsgClientGetUserStatsResponse::game_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetUserStatsResponse.game_id)
  return _internal_game_id();
}
inline void CMsgClientGetUserStatsResponse::_internal_set_game_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  game_id_ = value;
}
inline void CMsgClientGetUserStatsResponse::set_game_id(uint64_t value) {
  _internal_set_game_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetUserStatsResponse.game_id)
}

// optional int32 eresult = 2 [default = 2];
inline bool CMsgClientGetUserStatsResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientGetUserStatsResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientGetUserStatsResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000008u;
}
inline int32_t CMsgClientGetUserStatsResponse::_internal_eresult() const {
  return eresult_;
}
inline int32_t CMsgClientGetUserStatsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetUserStatsResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientGetUserStatsResponse::_internal_set_eresult(int32_t value) {
  _has_bits_[0] |= 0x00000008u;
  eresult_ = value;
}
inline void CMsgClientGetUserStatsResponse::set_eresult(int32_t value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetUserStatsResponse.eresult)
}

// optional uint32 crc_stats = 3;
inline bool CMsgClientGetUserStatsResponse::_internal_has_crc_stats() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientGetUserStatsResponse::has_crc_stats() const {
  return _internal_has_crc_stats();
}
inline void CMsgClientGetUserStatsResponse::clear_crc_stats() {
  crc_stats_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientGetUserStatsResponse::_internal_crc_stats() const {
  return crc_stats_;
}
inline uint32_t CMsgClientGetUserStatsResponse::crc_stats() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetUserStatsResponse.crc_stats)
  return _internal_crc_stats();
}
inline void CMsgClientGetUserStatsResponse::_internal_set_crc_stats(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  crc_stats_ = value;
}
inline void CMsgClientGetUserStatsResponse::set_crc_stats(uint32_t value) {
  _internal_set_crc_stats(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetUserStatsResponse.crc_stats)
}

// optional bytes schema = 4;
inline bool CMsgClientGetUserStatsResponse::_internal_has_schema() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientGetUserStatsResponse::has_schema() const {
  return _internal_has_schema();
}
inline void CMsgClientGetUserStatsResponse::clear_schema() {
  schema_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientGetUserStatsResponse::schema() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetUserStatsResponse.schema)
  return _internal_schema();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgClientGetUserStatsResponse::set_schema(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 schema_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgClientGetUserStatsResponse.schema)
}
inline std::string* CMsgClientGetUserStatsResponse::mutable_schema() {
  std::string* _s = _internal_mutable_schema();
  // @@protoc_insertion_point(field_mutable:CMsgClientGetUserStatsResponse.schema)
  return _s;
}
inline const std::string& CMsgClientGetUserStatsResponse::_internal_schema() const {
  return schema_.Get();
}
inline void CMsgClientGetUserStatsResponse::_internal_set_schema(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  schema_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CMsgClientGetUserStatsResponse::_internal_mutable_schema() {
  _has_bits_[0] |= 0x00000001u;
  return schema_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CMsgClientGetUserStatsResponse::release_schema() {
  // @@protoc_insertion_point(field_release:CMsgClientGetUserStatsResponse.schema)
  if (!_internal_has_schema()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = schema_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (schema_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    schema_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgClientGetUserStatsResponse::set_allocated_schema(std::string* schema) {
  if (schema != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  schema_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), schema,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (schema_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    schema_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgClientGetUserStatsResponse.schema)
}

// repeated .CMsgClientGetUserStatsResponse.Stats stats = 5;
inline int CMsgClientGetUserStatsResponse::_internal_stats_size() const {
  return stats_.size();
}
inline int CMsgClientGetUserStatsResponse::stats_size() const {
  return _internal_stats_size();
}
inline void CMsgClientGetUserStatsResponse::clear_stats() {
  stats_.Clear();
}
inline ::CMsgClientGetUserStatsResponse_Stats* CMsgClientGetUserStatsResponse::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientGetUserStatsResponse.stats)
  return stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetUserStatsResponse_Stats >*
CMsgClientGetUserStatsResponse::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientGetUserStatsResponse.stats)
  return &stats_;
}
inline const ::CMsgClientGetUserStatsResponse_Stats& CMsgClientGetUserStatsResponse::_internal_stats(int index) const {
  return stats_.Get(index);
}
inline const ::CMsgClientGetUserStatsResponse_Stats& CMsgClientGetUserStatsResponse::stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientGetUserStatsResponse.stats)
  return _internal_stats(index);
}
inline ::CMsgClientGetUserStatsResponse_Stats* CMsgClientGetUserStatsResponse::_internal_add_stats() {
  return stats_.Add();
}
inline ::CMsgClientGetUserStatsResponse_Stats* CMsgClientGetUserStatsResponse::add_stats() {
  ::CMsgClientGetUserStatsResponse_Stats* _add = _internal_add_stats();
  // @@protoc_insertion_point(field_add:CMsgClientGetUserStatsResponse.stats)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetUserStatsResponse_Stats >&
CMsgClientGetUserStatsResponse::stats() const {
  // @@protoc_insertion_point(field_list:CMsgClientGetUserStatsResponse.stats)
  return stats_;
}

// repeated .CMsgClientGetUserStatsResponse.Achievement_Blocks achievement_blocks = 6;
inline int CMsgClientGetUserStatsResponse::_internal_achievement_blocks_size() const {
  return achievement_blocks_.size();
}
inline int CMsgClientGetUserStatsResponse::achievement_blocks_size() const {
  return _internal_achievement_blocks_size();
}
inline void CMsgClientGetUserStatsResponse::clear_achievement_blocks() {
  achievement_blocks_.Clear();
}
inline ::CMsgClientGetUserStatsResponse_Achievement_Blocks* CMsgClientGetUserStatsResponse::mutable_achievement_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientGetUserStatsResponse.achievement_blocks)
  return achievement_blocks_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetUserStatsResponse_Achievement_Blocks >*
CMsgClientGetUserStatsResponse::mutable_achievement_blocks() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientGetUserStatsResponse.achievement_blocks)
  return &achievement_blocks_;
}
inline const ::CMsgClientGetUserStatsResponse_Achievement_Blocks& CMsgClientGetUserStatsResponse::_internal_achievement_blocks(int index) const {
  return achievement_blocks_.Get(index);
}
inline const ::CMsgClientGetUserStatsResponse_Achievement_Blocks& CMsgClientGetUserStatsResponse::achievement_blocks(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientGetUserStatsResponse.achievement_blocks)
  return _internal_achievement_blocks(index);
}
inline ::CMsgClientGetUserStatsResponse_Achievement_Blocks* CMsgClientGetUserStatsResponse::_internal_add_achievement_blocks() {
  return achievement_blocks_.Add();
}
inline ::CMsgClientGetUserStatsResponse_Achievement_Blocks* CMsgClientGetUserStatsResponse::add_achievement_blocks() {
  ::CMsgClientGetUserStatsResponse_Achievement_Blocks* _add = _internal_add_achievement_blocks();
  // @@protoc_insertion_point(field_add:CMsgClientGetUserStatsResponse.achievement_blocks)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetUserStatsResponse_Achievement_Blocks >&
CMsgClientGetUserStatsResponse::achievement_blocks() const {
  // @@protoc_insertion_point(field_list:CMsgClientGetUserStatsResponse.achievement_blocks)
  return achievement_blocks_;
}

// -------------------------------------------------------------------

// CMsgClientStoreUserStatsResponse_Stats_Failed_Validation

// optional uint32 stat_id = 1;
inline bool CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::_internal_has_stat_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::has_stat_id() const {
  return _internal_has_stat_id();
}
inline void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::clear_stat_id() {
  stat_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::_internal_stat_id() const {
  return stat_id_;
}
inline uint32_t CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::stat_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation.stat_id)
  return _internal_stat_id();
}
inline void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::_internal_set_stat_id(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  stat_id_ = value;
}
inline void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::set_stat_id(uint32_t value) {
  _internal_set_stat_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation.stat_id)
}

// optional uint32 reverted_stat_value = 2;
inline bool CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::_internal_has_reverted_stat_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::has_reverted_stat_value() const {
  return _internal_has_reverted_stat_value();
}
inline void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::clear_reverted_stat_value() {
  reverted_stat_value_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::_internal_reverted_stat_value() const {
  return reverted_stat_value_;
}
inline uint32_t CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::reverted_stat_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation.reverted_stat_value)
  return _internal_reverted_stat_value();
}
inline void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::_internal_set_reverted_stat_value(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  reverted_stat_value_ = value;
}
inline void CMsgClientStoreUserStatsResponse_Stats_Failed_Validation::set_reverted_stat_value(uint32_t value) {
  _internal_set_reverted_stat_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStatsResponse.Stats_Failed_Validation.reverted_stat_value)
}

// -------------------------------------------------------------------

// CMsgClientStoreUserStatsResponse

// optional fixed64 game_id = 1;
inline bool CMsgClientStoreUserStatsResponse::_internal_has_game_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStatsResponse::has_game_id() const {
  return _internal_has_game_id();
}
inline void CMsgClientStoreUserStatsResponse::clear_game_id() {
  game_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientStoreUserStatsResponse::_internal_game_id() const {
  return game_id_;
}
inline uint64_t CMsgClientStoreUserStatsResponse::game_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStatsResponse.game_id)
  return _internal_game_id();
}
inline void CMsgClientStoreUserStatsResponse::_internal_set_game_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  game_id_ = value;
}
inline void CMsgClientStoreUserStatsResponse::set_game_id(uint64_t value) {
  _internal_set_game_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStatsResponse.game_id)
}

// optional int32 eresult = 2 [default = 2];
inline bool CMsgClientStoreUserStatsResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStatsResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientStoreUserStatsResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000008u;
}
inline int32_t CMsgClientStoreUserStatsResponse::_internal_eresult() const {
  return eresult_;
}
inline int32_t CMsgClientStoreUserStatsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStatsResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientStoreUserStatsResponse::_internal_set_eresult(int32_t value) {
  _has_bits_[0] |= 0x00000008u;
  eresult_ = value;
}
inline void CMsgClientStoreUserStatsResponse::set_eresult(int32_t value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStatsResponse.eresult)
}

// optional uint32 crc_stats = 3;
inline bool CMsgClientStoreUserStatsResponse::_internal_has_crc_stats() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStatsResponse::has_crc_stats() const {
  return _internal_has_crc_stats();
}
inline void CMsgClientStoreUserStatsResponse::clear_crc_stats() {
  crc_stats_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientStoreUserStatsResponse::_internal_crc_stats() const {
  return crc_stats_;
}
inline uint32_t CMsgClientStoreUserStatsResponse::crc_stats() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStatsResponse.crc_stats)
  return _internal_crc_stats();
}
inline void CMsgClientStoreUserStatsResponse::_internal_set_crc_stats(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  crc_stats_ = value;
}
inline void CMsgClientStoreUserStatsResponse::set_crc_stats(uint32_t value) {
  _internal_set_crc_stats(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStatsResponse.crc_stats)
}

// repeated .CMsgClientStoreUserStatsResponse.Stats_Failed_Validation stats_failed_validation = 4;
inline int CMsgClientStoreUserStatsResponse::_internal_stats_failed_validation_size() const {
  return stats_failed_validation_.size();
}
inline int CMsgClientStoreUserStatsResponse::stats_failed_validation_size() const {
  return _internal_stats_failed_validation_size();
}
inline void CMsgClientStoreUserStatsResponse::clear_stats_failed_validation() {
  stats_failed_validation_.Clear();
}
inline ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* CMsgClientStoreUserStatsResponse::mutable_stats_failed_validation(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientStoreUserStatsResponse.stats_failed_validation)
  return stats_failed_validation_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation >*
CMsgClientStoreUserStatsResponse::mutable_stats_failed_validation() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientStoreUserStatsResponse.stats_failed_validation)
  return &stats_failed_validation_;
}
inline const ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& CMsgClientStoreUserStatsResponse::_internal_stats_failed_validation(int index) const {
  return stats_failed_validation_.Get(index);
}
inline const ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation& CMsgClientStoreUserStatsResponse::stats_failed_validation(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStatsResponse.stats_failed_validation)
  return _internal_stats_failed_validation(index);
}
inline ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* CMsgClientStoreUserStatsResponse::_internal_add_stats_failed_validation() {
  return stats_failed_validation_.Add();
}
inline ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* CMsgClientStoreUserStatsResponse::add_stats_failed_validation() {
  ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation* _add = _internal_add_stats_failed_validation();
  // @@protoc_insertion_point(field_add:CMsgClientStoreUserStatsResponse.stats_failed_validation)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStatsResponse_Stats_Failed_Validation >&
CMsgClientStoreUserStatsResponse::stats_failed_validation() const {
  // @@protoc_insertion_point(field_list:CMsgClientStoreUserStatsResponse.stats_failed_validation)
  return stats_failed_validation_;
}

// optional bool stats_out_of_date = 5;
inline bool CMsgClientStoreUserStatsResponse::_internal_has_stats_out_of_date() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStatsResponse::has_stats_out_of_date() const {
  return _internal_has_stats_out_of_date();
}
inline void CMsgClientStoreUserStatsResponse::clear_stats_out_of_date() {
  stats_out_of_date_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgClientStoreUserStatsResponse::_internal_stats_out_of_date() const {
  return stats_out_of_date_;
}
inline bool CMsgClientStoreUserStatsResponse::stats_out_of_date() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStatsResponse.stats_out_of_date)
  return _internal_stats_out_of_date();
}
inline void CMsgClientStoreUserStatsResponse::_internal_set_stats_out_of_date(bool value) {
  _has_bits_[0] |= 0x00000004u;
  stats_out_of_date_ = value;
}
inline void CMsgClientStoreUserStatsResponse::set_stats_out_of_date(bool value) {
  _internal_set_stats_out_of_date(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStatsResponse.stats_out_of_date)
}

// -------------------------------------------------------------------

// CMsgClientStoreUserStats2_Stats

// optional uint32 stat_id = 1;
inline bool CMsgClientStoreUserStats2_Stats::_internal_has_stat_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStats2_Stats::has_stat_id() const {
  return _internal_has_stat_id();
}
inline void CMsgClientStoreUserStats2_Stats::clear_stat_id() {
  stat_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientStoreUserStats2_Stats::_internal_stat_id() const {
  return stat_id_;
}
inline uint32_t CMsgClientStoreUserStats2_Stats::stat_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStats2.Stats.stat_id)
  return _internal_stat_id();
}
inline void CMsgClientStoreUserStats2_Stats::_internal_set_stat_id(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  stat_id_ = value;
}
inline void CMsgClientStoreUserStats2_Stats::set_stat_id(uint32_t value) {
  _internal_set_stat_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStats2.Stats.stat_id)
}

// optional uint32 stat_value = 2;
inline bool CMsgClientStoreUserStats2_Stats::_internal_has_stat_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStats2_Stats::has_stat_value() const {
  return _internal_has_stat_value();
}
inline void CMsgClientStoreUserStats2_Stats::clear_stat_value() {
  stat_value_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientStoreUserStats2_Stats::_internal_stat_value() const {
  return stat_value_;
}
inline uint32_t CMsgClientStoreUserStats2_Stats::stat_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStats2.Stats.stat_value)
  return _internal_stat_value();
}
inline void CMsgClientStoreUserStats2_Stats::_internal_set_stat_value(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  stat_value_ = value;
}
inline void CMsgClientStoreUserStats2_Stats::set_stat_value(uint32_t value) {
  _internal_set_stat_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStats2.Stats.stat_value)
}

// -------------------------------------------------------------------

// CMsgClientStoreUserStats2

// optional fixed64 game_id = 1;
inline bool CMsgClientStoreUserStats2::_internal_has_game_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStats2::has_game_id() const {
  return _internal_has_game_id();
}
inline void CMsgClientStoreUserStats2::clear_game_id() {
  game_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientStoreUserStats2::_internal_game_id() const {
  return game_id_;
}
inline uint64_t CMsgClientStoreUserStats2::game_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStats2.game_id)
  return _internal_game_id();
}
inline void CMsgClientStoreUserStats2::_internal_set_game_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  game_id_ = value;
}
inline void CMsgClientStoreUserStats2::set_game_id(uint64_t value) {
  _internal_set_game_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStats2.game_id)
}

// optional fixed64 settor_steam_id = 2;
inline bool CMsgClientStoreUserStats2::_internal_has_settor_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStats2::has_settor_steam_id() const {
  return _internal_has_settor_steam_id();
}
inline void CMsgClientStoreUserStats2::clear_settor_steam_id() {
  settor_steam_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgClientStoreUserStats2::_internal_settor_steam_id() const {
  return settor_steam_id_;
}
inline uint64_t CMsgClientStoreUserStats2::settor_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStats2.settor_steam_id)
  return _internal_settor_steam_id();
}
inline void CMsgClientStoreUserStats2::_internal_set_settor_steam_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  settor_steam_id_ = value;
}
inline void CMsgClientStoreUserStats2::set_settor_steam_id(uint64_t value) {
  _internal_set_settor_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStats2.settor_steam_id)
}

// optional fixed64 settee_steam_id = 3;
inline bool CMsgClientStoreUserStats2::_internal_has_settee_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStats2::has_settee_steam_id() const {
  return _internal_has_settee_steam_id();
}
inline void CMsgClientStoreUserStats2::clear_settee_steam_id() {
  settee_steam_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CMsgClientStoreUserStats2::_internal_settee_steam_id() const {
  return settee_steam_id_;
}
inline uint64_t CMsgClientStoreUserStats2::settee_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStats2.settee_steam_id)
  return _internal_settee_steam_id();
}
inline void CMsgClientStoreUserStats2::_internal_set_settee_steam_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  settee_steam_id_ = value;
}
inline void CMsgClientStoreUserStats2::set_settee_steam_id(uint64_t value) {
  _internal_set_settee_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStats2.settee_steam_id)
}

// optional uint32 crc_stats = 4;
inline bool CMsgClientStoreUserStats2::_internal_has_crc_stats() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStats2::has_crc_stats() const {
  return _internal_has_crc_stats();
}
inline void CMsgClientStoreUserStats2::clear_crc_stats() {
  crc_stats_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgClientStoreUserStats2::_internal_crc_stats() const {
  return crc_stats_;
}
inline uint32_t CMsgClientStoreUserStats2::crc_stats() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStats2.crc_stats)
  return _internal_crc_stats();
}
inline void CMsgClientStoreUserStats2::_internal_set_crc_stats(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  crc_stats_ = value;
}
inline void CMsgClientStoreUserStats2::set_crc_stats(uint32_t value) {
  _internal_set_crc_stats(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStats2.crc_stats)
}

// optional bool explicit_reset = 5;
inline bool CMsgClientStoreUserStats2::_internal_has_explicit_reset() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStats2::has_explicit_reset() const {
  return _internal_has_explicit_reset();
}
inline void CMsgClientStoreUserStats2::clear_explicit_reset() {
  explicit_reset_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgClientStoreUserStats2::_internal_explicit_reset() const {
  return explicit_reset_;
}
inline bool CMsgClientStoreUserStats2::explicit_reset() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStats2.explicit_reset)
  return _internal_explicit_reset();
}
inline void CMsgClientStoreUserStats2::_internal_set_explicit_reset(bool value) {
  _has_bits_[0] |= 0x00000010u;
  explicit_reset_ = value;
}
inline void CMsgClientStoreUserStats2::set_explicit_reset(bool value) {
  _internal_set_explicit_reset(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStats2.explicit_reset)
}

// repeated .CMsgClientStoreUserStats2.Stats stats = 6;
inline int CMsgClientStoreUserStats2::_internal_stats_size() const {
  return stats_.size();
}
inline int CMsgClientStoreUserStats2::stats_size() const {
  return _internal_stats_size();
}
inline void CMsgClientStoreUserStats2::clear_stats() {
  stats_.Clear();
}
inline ::CMsgClientStoreUserStats2_Stats* CMsgClientStoreUserStats2::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientStoreUserStats2.stats)
  return stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStats2_Stats >*
CMsgClientStoreUserStats2::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientStoreUserStats2.stats)
  return &stats_;
}
inline const ::CMsgClientStoreUserStats2_Stats& CMsgClientStoreUserStats2::_internal_stats(int index) const {
  return stats_.Get(index);
}
inline const ::CMsgClientStoreUserStats2_Stats& CMsgClientStoreUserStats2::stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStats2.stats)
  return _internal_stats(index);
}
inline ::CMsgClientStoreUserStats2_Stats* CMsgClientStoreUserStats2::_internal_add_stats() {
  return stats_.Add();
}
inline ::CMsgClientStoreUserStats2_Stats* CMsgClientStoreUserStats2::add_stats() {
  ::CMsgClientStoreUserStats2_Stats* _add = _internal_add_stats();
  // @@protoc_insertion_point(field_add:CMsgClientStoreUserStats2.stats)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStats2_Stats >&
CMsgClientStoreUserStats2::stats() const {
  // @@protoc_insertion_point(field_list:CMsgClientStoreUserStats2.stats)
  return stats_;
}

// -------------------------------------------------------------------

// CMsgClientStatsUpdated_Updated_Stats

// optional uint32 stat_id = 1;
inline bool CMsgClientStatsUpdated_Updated_Stats::_internal_has_stat_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientStatsUpdated_Updated_Stats::has_stat_id() const {
  return _internal_has_stat_id();
}
inline void CMsgClientStatsUpdated_Updated_Stats::clear_stat_id() {
  stat_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientStatsUpdated_Updated_Stats::_internal_stat_id() const {
  return stat_id_;
}
inline uint32_t CMsgClientStatsUpdated_Updated_Stats::stat_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientStatsUpdated.Updated_Stats.stat_id)
  return _internal_stat_id();
}
inline void CMsgClientStatsUpdated_Updated_Stats::_internal_set_stat_id(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  stat_id_ = value;
}
inline void CMsgClientStatsUpdated_Updated_Stats::set_stat_id(uint32_t value) {
  _internal_set_stat_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientStatsUpdated.Updated_Stats.stat_id)
}

// optional uint32 stat_value = 2;
inline bool CMsgClientStatsUpdated_Updated_Stats::_internal_has_stat_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientStatsUpdated_Updated_Stats::has_stat_value() const {
  return _internal_has_stat_value();
}
inline void CMsgClientStatsUpdated_Updated_Stats::clear_stat_value() {
  stat_value_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientStatsUpdated_Updated_Stats::_internal_stat_value() const {
  return stat_value_;
}
inline uint32_t CMsgClientStatsUpdated_Updated_Stats::stat_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientStatsUpdated.Updated_Stats.stat_value)
  return _internal_stat_value();
}
inline void CMsgClientStatsUpdated_Updated_Stats::_internal_set_stat_value(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  stat_value_ = value;
}
inline void CMsgClientStatsUpdated_Updated_Stats::set_stat_value(uint32_t value) {
  _internal_set_stat_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientStatsUpdated.Updated_Stats.stat_value)
}

// -------------------------------------------------------------------

// CMsgClientStatsUpdated

// optional fixed64 steam_id = 1;
inline bool CMsgClientStatsUpdated::_internal_has_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientStatsUpdated::has_steam_id() const {
  return _internal_has_steam_id();
}
inline void CMsgClientStatsUpdated::clear_steam_id() {
  steam_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientStatsUpdated::_internal_steam_id() const {
  return steam_id_;
}
inline uint64_t CMsgClientStatsUpdated::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientStatsUpdated.steam_id)
  return _internal_steam_id();
}
inline void CMsgClientStatsUpdated::_internal_set_steam_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  steam_id_ = value;
}
inline void CMsgClientStatsUpdated::set_steam_id(uint64_t value) {
  _internal_set_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientStatsUpdated.steam_id)
}

// optional fixed64 game_id = 2;
inline bool CMsgClientStatsUpdated::_internal_has_game_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientStatsUpdated::has_game_id() const {
  return _internal_has_game_id();
}
inline void CMsgClientStatsUpdated::clear_game_id() {
  game_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgClientStatsUpdated::_internal_game_id() const {
  return game_id_;
}
inline uint64_t CMsgClientStatsUpdated::game_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientStatsUpdated.game_id)
  return _internal_game_id();
}
inline void CMsgClientStatsUpdated::_internal_set_game_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  game_id_ = value;
}
inline void CMsgClientStatsUpdated::set_game_id(uint64_t value) {
  _internal_set_game_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientStatsUpdated.game_id)
}

// optional uint32 crc_stats = 3;
inline bool CMsgClientStatsUpdated::_internal_has_crc_stats() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientStatsUpdated::has_crc_stats() const {
  return _internal_has_crc_stats();
}
inline void CMsgClientStatsUpdated::clear_crc_stats() {
  crc_stats_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgClientStatsUpdated::_internal_crc_stats() const {
  return crc_stats_;
}
inline uint32_t CMsgClientStatsUpdated::crc_stats() const {
  // @@protoc_insertion_point(field_get:CMsgClientStatsUpdated.crc_stats)
  return _internal_crc_stats();
}
inline void CMsgClientStatsUpdated::_internal_set_crc_stats(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  crc_stats_ = value;
}
inline void CMsgClientStatsUpdated::set_crc_stats(uint32_t value) {
  _internal_set_crc_stats(value);
  // @@protoc_insertion_point(field_set:CMsgClientStatsUpdated.crc_stats)
}

// repeated .CMsgClientStatsUpdated.Updated_Stats updated_stats = 4;
inline int CMsgClientStatsUpdated::_internal_updated_stats_size() const {
  return updated_stats_.size();
}
inline int CMsgClientStatsUpdated::updated_stats_size() const {
  return _internal_updated_stats_size();
}
inline void CMsgClientStatsUpdated::clear_updated_stats() {
  updated_stats_.Clear();
}
inline ::CMsgClientStatsUpdated_Updated_Stats* CMsgClientStatsUpdated::mutable_updated_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientStatsUpdated.updated_stats)
  return updated_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStatsUpdated_Updated_Stats >*
CMsgClientStatsUpdated::mutable_updated_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientStatsUpdated.updated_stats)
  return &updated_stats_;
}
inline const ::CMsgClientStatsUpdated_Updated_Stats& CMsgClientStatsUpdated::_internal_updated_stats(int index) const {
  return updated_stats_.Get(index);
}
inline const ::CMsgClientStatsUpdated_Updated_Stats& CMsgClientStatsUpdated::updated_stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientStatsUpdated.updated_stats)
  return _internal_updated_stats(index);
}
inline ::CMsgClientStatsUpdated_Updated_Stats* CMsgClientStatsUpdated::_internal_add_updated_stats() {
  return updated_stats_.Add();
}
inline ::CMsgClientStatsUpdated_Updated_Stats* CMsgClientStatsUpdated::add_updated_stats() {
  ::CMsgClientStatsUpdated_Updated_Stats* _add = _internal_add_updated_stats();
  // @@protoc_insertion_point(field_add:CMsgClientStatsUpdated.updated_stats)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStatsUpdated_Updated_Stats >&
CMsgClientStatsUpdated::updated_stats() const {
  // @@protoc_insertion_point(field_list:CMsgClientStatsUpdated.updated_stats)
  return updated_stats_;
}

// -------------------------------------------------------------------

// CMsgClientStoreUserStats_Stats_To_Store

// optional uint32 stat_id = 1;
inline bool CMsgClientStoreUserStats_Stats_To_Store::_internal_has_stat_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStats_Stats_To_Store::has_stat_id() const {
  return _internal_has_stat_id();
}
inline void CMsgClientStoreUserStats_Stats_To_Store::clear_stat_id() {
  stat_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgClientStoreUserStats_Stats_To_Store::_internal_stat_id() const {
  return stat_id_;
}
inline uint32_t CMsgClientStoreUserStats_Stats_To_Store::stat_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStats.Stats_To_Store.stat_id)
  return _internal_stat_id();
}
inline void CMsgClientStoreUserStats_Stats_To_Store::_internal_set_stat_id(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  stat_id_ = value;
}
inline void CMsgClientStoreUserStats_Stats_To_Store::set_stat_id(uint32_t value) {
  _internal_set_stat_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStats.Stats_To_Store.stat_id)
}

// optional uint32 stat_value = 2;
inline bool CMsgClientStoreUserStats_Stats_To_Store::_internal_has_stat_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStats_Stats_To_Store::has_stat_value() const {
  return _internal_has_stat_value();
}
inline void CMsgClientStoreUserStats_Stats_To_Store::clear_stat_value() {
  stat_value_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgClientStoreUserStats_Stats_To_Store::_internal_stat_value() const {
  return stat_value_;
}
inline uint32_t CMsgClientStoreUserStats_Stats_To_Store::stat_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStats.Stats_To_Store.stat_value)
  return _internal_stat_value();
}
inline void CMsgClientStoreUserStats_Stats_To_Store::_internal_set_stat_value(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  stat_value_ = value;
}
inline void CMsgClientStoreUserStats_Stats_To_Store::set_stat_value(uint32_t value) {
  _internal_set_stat_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStats.Stats_To_Store.stat_value)
}

// -------------------------------------------------------------------

// CMsgClientStoreUserStats

// optional fixed64 game_id = 1;
inline bool CMsgClientStoreUserStats::_internal_has_game_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStats::has_game_id() const {
  return _internal_has_game_id();
}
inline void CMsgClientStoreUserStats::clear_game_id() {
  game_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgClientStoreUserStats::_internal_game_id() const {
  return game_id_;
}
inline uint64_t CMsgClientStoreUserStats::game_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStats.game_id)
  return _internal_game_id();
}
inline void CMsgClientStoreUserStats::_internal_set_game_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  game_id_ = value;
}
inline void CMsgClientStoreUserStats::set_game_id(uint64_t value) {
  _internal_set_game_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStats.game_id)
}

// optional bool explicit_reset = 2;
inline bool CMsgClientStoreUserStats::_internal_has_explicit_reset() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientStoreUserStats::has_explicit_reset() const {
  return _internal_has_explicit_reset();
}
inline void CMsgClientStoreUserStats::clear_explicit_reset() {
  explicit_reset_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgClientStoreUserStats::_internal_explicit_reset() const {
  return explicit_reset_;
}
inline bool CMsgClientStoreUserStats::explicit_reset() const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStats.explicit_reset)
  return _internal_explicit_reset();
}
inline void CMsgClientStoreUserStats::_internal_set_explicit_reset(bool value) {
  _has_bits_[0] |= 0x00000002u;
  explicit_reset_ = value;
}
inline void CMsgClientStoreUserStats::set_explicit_reset(bool value) {
  _internal_set_explicit_reset(value);
  // @@protoc_insertion_point(field_set:CMsgClientStoreUserStats.explicit_reset)
}

// repeated .CMsgClientStoreUserStats.Stats_To_Store stats_to_store = 3;
inline int CMsgClientStoreUserStats::_internal_stats_to_store_size() const {
  return stats_to_store_.size();
}
inline int CMsgClientStoreUserStats::stats_to_store_size() const {
  return _internal_stats_to_store_size();
}
inline void CMsgClientStoreUserStats::clear_stats_to_store() {
  stats_to_store_.Clear();
}
inline ::CMsgClientStoreUserStats_Stats_To_Store* CMsgClientStoreUserStats::mutable_stats_to_store(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientStoreUserStats.stats_to_store)
  return stats_to_store_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStats_Stats_To_Store >*
CMsgClientStoreUserStats::mutable_stats_to_store() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientStoreUserStats.stats_to_store)
  return &stats_to_store_;
}
inline const ::CMsgClientStoreUserStats_Stats_To_Store& CMsgClientStoreUserStats::_internal_stats_to_store(int index) const {
  return stats_to_store_.Get(index);
}
inline const ::CMsgClientStoreUserStats_Stats_To_Store& CMsgClientStoreUserStats::stats_to_store(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientStoreUserStats.stats_to_store)
  return _internal_stats_to_store(index);
}
inline ::CMsgClientStoreUserStats_Stats_To_Store* CMsgClientStoreUserStats::_internal_add_stats_to_store() {
  return stats_to_store_.Add();
}
inline ::CMsgClientStoreUserStats_Stats_To_Store* CMsgClientStoreUserStats::add_stats_to_store() {
  ::CMsgClientStoreUserStats_Stats_To_Store* _add = _internal_add_stats_to_store();
  // @@protoc_insertion_point(field_add:CMsgClientStoreUserStats.stats_to_store)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientStoreUserStats_Stats_To_Store >&
CMsgClientStoreUserStats::stats_to_store() const {
  // @@protoc_insertion_point(field_list:CMsgClientStoreUserStats.stats_to_store)
  return stats_to_store_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_steammessages_5fclientserver_5fuserstats_2eproto
