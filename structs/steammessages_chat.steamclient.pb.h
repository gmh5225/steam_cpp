// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_chat.steamclient.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_steammessages_5fchat_2esteamclient_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_steammessages_5fchat_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019005 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_base.pb.h"
#include "steammessages_unified_base.steamclient.pb.h"
#include "steammessages_clientserver_friends.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fchat_2esteamclient_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fchat_2esteamclient_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[151]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fchat_2esteamclient_2eproto;
class CChatMentions;
struct CChatMentionsDefaultTypeInternal;
extern CChatMentionsDefaultTypeInternal _CChatMentions_default_instance_;
class CChatPartyBeacon;
struct CChatPartyBeaconDefaultTypeInternal;
extern CChatPartyBeaconDefaultTypeInternal _CChatPartyBeacon_default_instance_;
class CChatRole;
struct CChatRoleDefaultTypeInternal;
extern CChatRoleDefaultTypeInternal _CChatRole_default_instance_;
class CChatRoleActions;
struct CChatRoleActionsDefaultTypeInternal;
extern CChatRoleActionsDefaultTypeInternal _CChatRoleActions_default_instance_;
class CChatRoomClient_MemberListViewUpdated_Notification;
struct CChatRoomClient_MemberListViewUpdated_NotificationDefaultTypeInternal;
extern CChatRoomClient_MemberListViewUpdated_NotificationDefaultTypeInternal _CChatRoomClient_MemberListViewUpdated_Notification_default_instance_;
class CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry;
struct CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntryDefaultTypeInternal;
extern CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntryDefaultTypeInternal _CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry_default_instance_;
class CChatRoomGroupHeaderState;
struct CChatRoomGroupHeaderStateDefaultTypeInternal;
extern CChatRoomGroupHeaderStateDefaultTypeInternal _CChatRoomGroupHeaderState_default_instance_;
class CChatRoomGroupInvite;
struct CChatRoomGroupInviteDefaultTypeInternal;
extern CChatRoomGroupInviteDefaultTypeInternal _CChatRoomGroupInvite_default_instance_;
class CChatRoomGroupState;
struct CChatRoomGroupStateDefaultTypeInternal;
extern CChatRoomGroupStateDefaultTypeInternal _CChatRoomGroupState_default_instance_;
class CChatRoomMember;
struct CChatRoomMemberDefaultTypeInternal;
extern CChatRoomMemberDefaultTypeInternal _CChatRoomMember_default_instance_;
class CChatRoomMemberListView;
struct CChatRoomMemberListViewDefaultTypeInternal;
extern CChatRoomMemberListViewDefaultTypeInternal _CChatRoomMemberListView_default_instance_;
class CChatRoomMemberSummaryCounts;
struct CChatRoomMemberSummaryCountsDefaultTypeInternal;
extern CChatRoomMemberSummaryCountsDefaultTypeInternal _CChatRoomMemberSummaryCounts_default_instance_;
class CChatRoomState;
struct CChatRoomStateDefaultTypeInternal;
extern CChatRoomStateDefaultTypeInternal _CChatRoomState_default_instance_;
class CChatRoomSummaryPair;
struct CChatRoomSummaryPairDefaultTypeInternal;
extern CChatRoomSummaryPairDefaultTypeInternal _CChatRoomSummaryPair_default_instance_;
class CChatRoom_AckChatMessage_Notification;
struct CChatRoom_AckChatMessage_NotificationDefaultTypeInternal;
extern CChatRoom_AckChatMessage_NotificationDefaultTypeInternal _CChatRoom_AckChatMessage_Notification_default_instance_;
class CChatRoom_AddRoleToUser_Request;
struct CChatRoom_AddRoleToUser_RequestDefaultTypeInternal;
extern CChatRoom_AddRoleToUser_RequestDefaultTypeInternal _CChatRoom_AddRoleToUser_Request_default_instance_;
class CChatRoom_AddRoleToUser_Response;
struct CChatRoom_AddRoleToUser_ResponseDefaultTypeInternal;
extern CChatRoom_AddRoleToUser_ResponseDefaultTypeInternal _CChatRoom_AddRoleToUser_Response_default_instance_;
class CChatRoom_ChatMessageModified_Notification;
struct CChatRoom_ChatMessageModified_NotificationDefaultTypeInternal;
extern CChatRoom_ChatMessageModified_NotificationDefaultTypeInternal _CChatRoom_ChatMessageModified_Notification_default_instance_;
class CChatRoom_ChatMessageModified_Notification_ChatMessage;
struct CChatRoom_ChatMessageModified_Notification_ChatMessageDefaultTypeInternal;
extern CChatRoom_ChatMessageModified_Notification_ChatMessageDefaultTypeInternal _CChatRoom_ChatMessageModified_Notification_ChatMessage_default_instance_;
class CChatRoom_ChatRoomGroupRoomsChange_Notification;
struct CChatRoom_ChatRoomGroupRoomsChange_NotificationDefaultTypeInternal;
extern CChatRoom_ChatRoomGroupRoomsChange_NotificationDefaultTypeInternal _CChatRoom_ChatRoomGroupRoomsChange_Notification_default_instance_;
class CChatRoom_ChatRoomHeaderState_Notification;
struct CChatRoom_ChatRoomHeaderState_NotificationDefaultTypeInternal;
extern CChatRoom_ChatRoomHeaderState_NotificationDefaultTypeInternal _CChatRoom_ChatRoomHeaderState_Notification_default_instance_;
class CChatRoom_CreateChatRoomGroup_Request;
struct CChatRoom_CreateChatRoomGroup_RequestDefaultTypeInternal;
extern CChatRoom_CreateChatRoomGroup_RequestDefaultTypeInternal _CChatRoom_CreateChatRoomGroup_Request_default_instance_;
class CChatRoom_CreateChatRoomGroup_Response;
struct CChatRoom_CreateChatRoomGroup_ResponseDefaultTypeInternal;
extern CChatRoom_CreateChatRoomGroup_ResponseDefaultTypeInternal _CChatRoom_CreateChatRoomGroup_Response_default_instance_;
class CChatRoom_CreateChatRoom_Request;
struct CChatRoom_CreateChatRoom_RequestDefaultTypeInternal;
extern CChatRoom_CreateChatRoom_RequestDefaultTypeInternal _CChatRoom_CreateChatRoom_Request_default_instance_;
class CChatRoom_CreateChatRoom_Response;
struct CChatRoom_CreateChatRoom_ResponseDefaultTypeInternal;
extern CChatRoom_CreateChatRoom_ResponseDefaultTypeInternal _CChatRoom_CreateChatRoom_Response_default_instance_;
class CChatRoom_CreateInviteLink_Request;
struct CChatRoom_CreateInviteLink_RequestDefaultTypeInternal;
extern CChatRoom_CreateInviteLink_RequestDefaultTypeInternal _CChatRoom_CreateInviteLink_Request_default_instance_;
class CChatRoom_CreateInviteLink_Response;
struct CChatRoom_CreateInviteLink_ResponseDefaultTypeInternal;
extern CChatRoom_CreateInviteLink_ResponseDefaultTypeInternal _CChatRoom_CreateInviteLink_Response_default_instance_;
class CChatRoom_CreateRole_Request;
struct CChatRoom_CreateRole_RequestDefaultTypeInternal;
extern CChatRoom_CreateRole_RequestDefaultTypeInternal _CChatRoom_CreateRole_Request_default_instance_;
class CChatRoom_CreateRole_Response;
struct CChatRoom_CreateRole_ResponseDefaultTypeInternal;
extern CChatRoom_CreateRole_ResponseDefaultTypeInternal _CChatRoom_CreateRole_Response_default_instance_;
class CChatRoom_DeleteChatMessages_Request;
struct CChatRoom_DeleteChatMessages_RequestDefaultTypeInternal;
extern CChatRoom_DeleteChatMessages_RequestDefaultTypeInternal _CChatRoom_DeleteChatMessages_Request_default_instance_;
class CChatRoom_DeleteChatMessages_Request_Message;
struct CChatRoom_DeleteChatMessages_Request_MessageDefaultTypeInternal;
extern CChatRoom_DeleteChatMessages_Request_MessageDefaultTypeInternal _CChatRoom_DeleteChatMessages_Request_Message_default_instance_;
class CChatRoom_DeleteChatMessages_Response;
struct CChatRoom_DeleteChatMessages_ResponseDefaultTypeInternal;
extern CChatRoom_DeleteChatMessages_ResponseDefaultTypeInternal _CChatRoom_DeleteChatMessages_Response_default_instance_;
class CChatRoom_DeleteChatRoom_Request;
struct CChatRoom_DeleteChatRoom_RequestDefaultTypeInternal;
extern CChatRoom_DeleteChatRoom_RequestDefaultTypeInternal _CChatRoom_DeleteChatRoom_Request_default_instance_;
class CChatRoom_DeleteChatRoom_Response;
struct CChatRoom_DeleteChatRoom_ResponseDefaultTypeInternal;
extern CChatRoom_DeleteChatRoom_ResponseDefaultTypeInternal _CChatRoom_DeleteChatRoom_Response_default_instance_;
class CChatRoom_DeleteInviteLink_Request;
struct CChatRoom_DeleteInviteLink_RequestDefaultTypeInternal;
extern CChatRoom_DeleteInviteLink_RequestDefaultTypeInternal _CChatRoom_DeleteInviteLink_Request_default_instance_;
class CChatRoom_DeleteInviteLink_Response;
struct CChatRoom_DeleteInviteLink_ResponseDefaultTypeInternal;
extern CChatRoom_DeleteInviteLink_ResponseDefaultTypeInternal _CChatRoom_DeleteInviteLink_Response_default_instance_;
class CChatRoom_DeleteRoleFromUser_Request;
struct CChatRoom_DeleteRoleFromUser_RequestDefaultTypeInternal;
extern CChatRoom_DeleteRoleFromUser_RequestDefaultTypeInternal _CChatRoom_DeleteRoleFromUser_Request_default_instance_;
class CChatRoom_DeleteRoleFromUser_Response;
struct CChatRoom_DeleteRoleFromUser_ResponseDefaultTypeInternal;
extern CChatRoom_DeleteRoleFromUser_ResponseDefaultTypeInternal _CChatRoom_DeleteRoleFromUser_Response_default_instance_;
class CChatRoom_DeleteRole_Request;
struct CChatRoom_DeleteRole_RequestDefaultTypeInternal;
extern CChatRoom_DeleteRole_RequestDefaultTypeInternal _CChatRoom_DeleteRole_Request_default_instance_;
class CChatRoom_DeleteRole_Response;
struct CChatRoom_DeleteRole_ResponseDefaultTypeInternal;
extern CChatRoom_DeleteRole_ResponseDefaultTypeInternal _CChatRoom_DeleteRole_Response_default_instance_;
class CChatRoom_EndMiniGameForChatRoomGroup_Request;
struct CChatRoom_EndMiniGameForChatRoomGroup_RequestDefaultTypeInternal;
extern CChatRoom_EndMiniGameForChatRoomGroup_RequestDefaultTypeInternal _CChatRoom_EndMiniGameForChatRoomGroup_Request_default_instance_;
class CChatRoom_EndMiniGameForChatRoomGroup_Response;
struct CChatRoom_EndMiniGameForChatRoomGroup_ResponseDefaultTypeInternal;
extern CChatRoom_EndMiniGameForChatRoomGroup_ResponseDefaultTypeInternal _CChatRoom_EndMiniGameForChatRoomGroup_Response_default_instance_;
class CChatRoom_GetBanList_Request;
struct CChatRoom_GetBanList_RequestDefaultTypeInternal;
extern CChatRoom_GetBanList_RequestDefaultTypeInternal _CChatRoom_GetBanList_Request_default_instance_;
class CChatRoom_GetBanList_Response;
struct CChatRoom_GetBanList_ResponseDefaultTypeInternal;
extern CChatRoom_GetBanList_ResponseDefaultTypeInternal _CChatRoom_GetBanList_Response_default_instance_;
class CChatRoom_GetBanList_Response_BanInfo;
struct CChatRoom_GetBanList_Response_BanInfoDefaultTypeInternal;
extern CChatRoom_GetBanList_Response_BanInfoDefaultTypeInternal _CChatRoom_GetBanList_Response_BanInfo_default_instance_;
class CChatRoom_GetChatRoomGroupState_Request;
struct CChatRoom_GetChatRoomGroupState_RequestDefaultTypeInternal;
extern CChatRoom_GetChatRoomGroupState_RequestDefaultTypeInternal _CChatRoom_GetChatRoomGroupState_Request_default_instance_;
class CChatRoom_GetChatRoomGroupState_Response;
struct CChatRoom_GetChatRoomGroupState_ResponseDefaultTypeInternal;
extern CChatRoom_GetChatRoomGroupState_ResponseDefaultTypeInternal _CChatRoom_GetChatRoomGroupState_Response_default_instance_;
class CChatRoom_GetChatRoomGroupSummary_Request;
struct CChatRoom_GetChatRoomGroupSummary_RequestDefaultTypeInternal;
extern CChatRoom_GetChatRoomGroupSummary_RequestDefaultTypeInternal _CChatRoom_GetChatRoomGroupSummary_Request_default_instance_;
class CChatRoom_GetChatRoomGroupSummary_Response;
struct CChatRoom_GetChatRoomGroupSummary_ResponseDefaultTypeInternal;
extern CChatRoom_GetChatRoomGroupSummary_ResponseDefaultTypeInternal _CChatRoom_GetChatRoomGroupSummary_Response_default_instance_;
class CChatRoom_GetInviteInfo_Request;
struct CChatRoom_GetInviteInfo_RequestDefaultTypeInternal;
extern CChatRoom_GetInviteInfo_RequestDefaultTypeInternal _CChatRoom_GetInviteInfo_Request_default_instance_;
class CChatRoom_GetInviteInfo_Response;
struct CChatRoom_GetInviteInfo_ResponseDefaultTypeInternal;
extern CChatRoom_GetInviteInfo_ResponseDefaultTypeInternal _CChatRoom_GetInviteInfo_Response_default_instance_;
class CChatRoom_GetInviteLinkInfo_Request;
struct CChatRoom_GetInviteLinkInfo_RequestDefaultTypeInternal;
extern CChatRoom_GetInviteLinkInfo_RequestDefaultTypeInternal _CChatRoom_GetInviteLinkInfo_Request_default_instance_;
class CChatRoom_GetInviteLinkInfo_Response;
struct CChatRoom_GetInviteLinkInfo_ResponseDefaultTypeInternal;
extern CChatRoom_GetInviteLinkInfo_ResponseDefaultTypeInternal _CChatRoom_GetInviteLinkInfo_Response_default_instance_;
class CChatRoom_GetInviteLinksForGroup_Request;
struct CChatRoom_GetInviteLinksForGroup_RequestDefaultTypeInternal;
extern CChatRoom_GetInviteLinksForGroup_RequestDefaultTypeInternal _CChatRoom_GetInviteLinksForGroup_Request_default_instance_;
class CChatRoom_GetInviteLinksForGroup_Response;
struct CChatRoom_GetInviteLinksForGroup_ResponseDefaultTypeInternal;
extern CChatRoom_GetInviteLinksForGroup_ResponseDefaultTypeInternal _CChatRoom_GetInviteLinksForGroup_Response_default_instance_;
class CChatRoom_GetInviteLinksForGroup_Response_LinkInfo;
struct CChatRoom_GetInviteLinksForGroup_Response_LinkInfoDefaultTypeInternal;
extern CChatRoom_GetInviteLinksForGroup_Response_LinkInfoDefaultTypeInternal _CChatRoom_GetInviteLinksForGroup_Response_LinkInfo_default_instance_;
class CChatRoom_GetInviteList_Request;
struct CChatRoom_GetInviteList_RequestDefaultTypeInternal;
extern CChatRoom_GetInviteList_RequestDefaultTypeInternal _CChatRoom_GetInviteList_Request_default_instance_;
class CChatRoom_GetInviteList_Response;
struct CChatRoom_GetInviteList_ResponseDefaultTypeInternal;
extern CChatRoom_GetInviteList_ResponseDefaultTypeInternal _CChatRoom_GetInviteList_Response_default_instance_;
class CChatRoom_GetMessageHistory_Request;
struct CChatRoom_GetMessageHistory_RequestDefaultTypeInternal;
extern CChatRoom_GetMessageHistory_RequestDefaultTypeInternal _CChatRoom_GetMessageHistory_Request_default_instance_;
class CChatRoom_GetMessageHistory_Response;
struct CChatRoom_GetMessageHistory_ResponseDefaultTypeInternal;
extern CChatRoom_GetMessageHistory_ResponseDefaultTypeInternal _CChatRoom_GetMessageHistory_Response_default_instance_;
class CChatRoom_GetMessageHistory_Response_ChatMessage;
struct CChatRoom_GetMessageHistory_Response_ChatMessageDefaultTypeInternal;
extern CChatRoom_GetMessageHistory_Response_ChatMessageDefaultTypeInternal _CChatRoom_GetMessageHistory_Response_ChatMessage_default_instance_;
class CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction;
struct CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReactionDefaultTypeInternal;
extern CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReactionDefaultTypeInternal _CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction_default_instance_;
class CChatRoom_GetMessageReactionReactors_Request;
struct CChatRoom_GetMessageReactionReactors_RequestDefaultTypeInternal;
extern CChatRoom_GetMessageReactionReactors_RequestDefaultTypeInternal _CChatRoom_GetMessageReactionReactors_Request_default_instance_;
class CChatRoom_GetMessageReactionReactors_Response;
struct CChatRoom_GetMessageReactionReactors_ResponseDefaultTypeInternal;
extern CChatRoom_GetMessageReactionReactors_ResponseDefaultTypeInternal _CChatRoom_GetMessageReactionReactors_Response_default_instance_;
class CChatRoom_GetMyChatRoomGroups_Request;
struct CChatRoom_GetMyChatRoomGroups_RequestDefaultTypeInternal;
extern CChatRoom_GetMyChatRoomGroups_RequestDefaultTypeInternal _CChatRoom_GetMyChatRoomGroups_Request_default_instance_;
class CChatRoom_GetMyChatRoomGroups_Response;
struct CChatRoom_GetMyChatRoomGroups_ResponseDefaultTypeInternal;
extern CChatRoom_GetMyChatRoomGroups_ResponseDefaultTypeInternal _CChatRoom_GetMyChatRoomGroups_Response_default_instance_;
class CChatRoom_GetRoleActions_Request;
struct CChatRoom_GetRoleActions_RequestDefaultTypeInternal;
extern CChatRoom_GetRoleActions_RequestDefaultTypeInternal _CChatRoom_GetRoleActions_Request_default_instance_;
class CChatRoom_GetRoleActions_Response;
struct CChatRoom_GetRoleActions_ResponseDefaultTypeInternal;
extern CChatRoom_GetRoleActions_ResponseDefaultTypeInternal _CChatRoom_GetRoleActions_Response_default_instance_;
class CChatRoom_GetRolesForUser_Request;
struct CChatRoom_GetRolesForUser_RequestDefaultTypeInternal;
extern CChatRoom_GetRolesForUser_RequestDefaultTypeInternal _CChatRoom_GetRolesForUser_Request_default_instance_;
class CChatRoom_GetRolesForUser_Response;
struct CChatRoom_GetRolesForUser_ResponseDefaultTypeInternal;
extern CChatRoom_GetRolesForUser_ResponseDefaultTypeInternal _CChatRoom_GetRolesForUser_Response_default_instance_;
class CChatRoom_GetRoles_Request;
struct CChatRoom_GetRoles_RequestDefaultTypeInternal;
extern CChatRoom_GetRoles_RequestDefaultTypeInternal _CChatRoom_GetRoles_Request_default_instance_;
class CChatRoom_GetRoles_Response;
struct CChatRoom_GetRoles_ResponseDefaultTypeInternal;
extern CChatRoom_GetRoles_ResponseDefaultTypeInternal _CChatRoom_GetRoles_Response_default_instance_;
class CChatRoom_IncomingChatMessage_Notification;
struct CChatRoom_IncomingChatMessage_NotificationDefaultTypeInternal;
extern CChatRoom_IncomingChatMessage_NotificationDefaultTypeInternal _CChatRoom_IncomingChatMessage_Notification_default_instance_;
class CChatRoom_InviteFriendToChatRoomGroup_Request;
struct CChatRoom_InviteFriendToChatRoomGroup_RequestDefaultTypeInternal;
extern CChatRoom_InviteFriendToChatRoomGroup_RequestDefaultTypeInternal _CChatRoom_InviteFriendToChatRoomGroup_Request_default_instance_;
class CChatRoom_InviteFriendToChatRoomGroup_Response;
struct CChatRoom_InviteFriendToChatRoomGroup_ResponseDefaultTypeInternal;
extern CChatRoom_InviteFriendToChatRoomGroup_ResponseDefaultTypeInternal _CChatRoom_InviteFriendToChatRoomGroup_Response_default_instance_;
class CChatRoom_JoinChatRoomGroup_Request;
struct CChatRoom_JoinChatRoomGroup_RequestDefaultTypeInternal;
extern CChatRoom_JoinChatRoomGroup_RequestDefaultTypeInternal _CChatRoom_JoinChatRoomGroup_Request_default_instance_;
class CChatRoom_JoinChatRoomGroup_Response;
struct CChatRoom_JoinChatRoomGroup_ResponseDefaultTypeInternal;
extern CChatRoom_JoinChatRoomGroup_ResponseDefaultTypeInternal _CChatRoom_JoinChatRoomGroup_Response_default_instance_;
class CChatRoom_JoinMiniGameForChatRoomGroup_Request;
struct CChatRoom_JoinMiniGameForChatRoomGroup_RequestDefaultTypeInternal;
extern CChatRoom_JoinMiniGameForChatRoomGroup_RequestDefaultTypeInternal _CChatRoom_JoinMiniGameForChatRoomGroup_Request_default_instance_;
class CChatRoom_JoinMiniGameForChatRoomGroup_Response;
struct CChatRoom_JoinMiniGameForChatRoomGroup_ResponseDefaultTypeInternal;
extern CChatRoom_JoinMiniGameForChatRoomGroup_ResponseDefaultTypeInternal _CChatRoom_JoinMiniGameForChatRoomGroup_Response_default_instance_;
class CChatRoom_JoinVoiceChat_Request;
struct CChatRoom_JoinVoiceChat_RequestDefaultTypeInternal;
extern CChatRoom_JoinVoiceChat_RequestDefaultTypeInternal _CChatRoom_JoinVoiceChat_Request_default_instance_;
class CChatRoom_JoinVoiceChat_Response;
struct CChatRoom_JoinVoiceChat_ResponseDefaultTypeInternal;
extern CChatRoom_JoinVoiceChat_ResponseDefaultTypeInternal _CChatRoom_JoinVoiceChat_Response_default_instance_;
class CChatRoom_KickUser_Request;
struct CChatRoom_KickUser_RequestDefaultTypeInternal;
extern CChatRoom_KickUser_RequestDefaultTypeInternal _CChatRoom_KickUser_Request_default_instance_;
class CChatRoom_KickUser_Response;
struct CChatRoom_KickUser_ResponseDefaultTypeInternal;
extern CChatRoom_KickUser_ResponseDefaultTypeInternal _CChatRoom_KickUser_Response_default_instance_;
class CChatRoom_LeaveChatRoomGroup_Request;
struct CChatRoom_LeaveChatRoomGroup_RequestDefaultTypeInternal;
extern CChatRoom_LeaveChatRoomGroup_RequestDefaultTypeInternal _CChatRoom_LeaveChatRoomGroup_Request_default_instance_;
class CChatRoom_LeaveChatRoomGroup_Response;
struct CChatRoom_LeaveChatRoomGroup_ResponseDefaultTypeInternal;
extern CChatRoom_LeaveChatRoomGroup_ResponseDefaultTypeInternal _CChatRoom_LeaveChatRoomGroup_Response_default_instance_;
class CChatRoom_LeaveVoiceChat_Request;
struct CChatRoom_LeaveVoiceChat_RequestDefaultTypeInternal;
extern CChatRoom_LeaveVoiceChat_RequestDefaultTypeInternal _CChatRoom_LeaveVoiceChat_Request_default_instance_;
class CChatRoom_LeaveVoiceChat_Response;
struct CChatRoom_LeaveVoiceChat_ResponseDefaultTypeInternal;
extern CChatRoom_LeaveVoiceChat_ResponseDefaultTypeInternal _CChatRoom_LeaveVoiceChat_Response_default_instance_;
class CChatRoom_MemberStateChange_Notification;
struct CChatRoom_MemberStateChange_NotificationDefaultTypeInternal;
extern CChatRoom_MemberStateChange_NotificationDefaultTypeInternal _CChatRoom_MemberStateChange_Notification_default_instance_;
class CChatRoom_MessageReaction_Notification;
struct CChatRoom_MessageReaction_NotificationDefaultTypeInternal;
extern CChatRoom_MessageReaction_NotificationDefaultTypeInternal _CChatRoom_MessageReaction_Notification_default_instance_;
class CChatRoom_MuteUser_Request;
struct CChatRoom_MuteUser_RequestDefaultTypeInternal;
extern CChatRoom_MuteUser_RequestDefaultTypeInternal _CChatRoom_MuteUser_Request_default_instance_;
class CChatRoom_MuteUser_Response;
struct CChatRoom_MuteUser_ResponseDefaultTypeInternal;
extern CChatRoom_MuteUser_ResponseDefaultTypeInternal _CChatRoom_MuteUser_Response_default_instance_;
class CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification;
struct CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_NotificationDefaultTypeInternal;
extern CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_NotificationDefaultTypeInternal _CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification_default_instance_;
class CChatRoom_RenameChatRoomGroup_Request;
struct CChatRoom_RenameChatRoomGroup_RequestDefaultTypeInternal;
extern CChatRoom_RenameChatRoomGroup_RequestDefaultTypeInternal _CChatRoom_RenameChatRoomGroup_Request_default_instance_;
class CChatRoom_RenameChatRoomGroup_Response;
struct CChatRoom_RenameChatRoomGroup_ResponseDefaultTypeInternal;
extern CChatRoom_RenameChatRoomGroup_ResponseDefaultTypeInternal _CChatRoom_RenameChatRoomGroup_Response_default_instance_;
class CChatRoom_RenameChatRoom_Request;
struct CChatRoom_RenameChatRoom_RequestDefaultTypeInternal;
extern CChatRoom_RenameChatRoom_RequestDefaultTypeInternal _CChatRoom_RenameChatRoom_Request_default_instance_;
class CChatRoom_RenameChatRoom_Response;
struct CChatRoom_RenameChatRoom_ResponseDefaultTypeInternal;
extern CChatRoom_RenameChatRoom_ResponseDefaultTypeInternal _CChatRoom_RenameChatRoom_Response_default_instance_;
class CChatRoom_RenameRole_Request;
struct CChatRoom_RenameRole_RequestDefaultTypeInternal;
extern CChatRoom_RenameRole_RequestDefaultTypeInternal _CChatRoom_RenameRole_Request_default_instance_;
class CChatRoom_RenameRole_Response;
struct CChatRoom_RenameRole_ResponseDefaultTypeInternal;
extern CChatRoom_RenameRole_ResponseDefaultTypeInternal _CChatRoom_RenameRole_Response_default_instance_;
class CChatRoom_ReorderChatRoom_Request;
struct CChatRoom_ReorderChatRoom_RequestDefaultTypeInternal;
extern CChatRoom_ReorderChatRoom_RequestDefaultTypeInternal _CChatRoom_ReorderChatRoom_Request_default_instance_;
class CChatRoom_ReorderChatRoom_Response;
struct CChatRoom_ReorderChatRoom_ResponseDefaultTypeInternal;
extern CChatRoom_ReorderChatRoom_ResponseDefaultTypeInternal _CChatRoom_ReorderChatRoom_Response_default_instance_;
class CChatRoom_ReorderRole_Request;
struct CChatRoom_ReorderRole_RequestDefaultTypeInternal;
extern CChatRoom_ReorderRole_RequestDefaultTypeInternal _CChatRoom_ReorderRole_Request_default_instance_;
class CChatRoom_ReorderRole_Response;
struct CChatRoom_ReorderRole_ResponseDefaultTypeInternal;
extern CChatRoom_ReorderRole_ResponseDefaultTypeInternal _CChatRoom_ReorderRole_Response_default_instance_;
class CChatRoom_ReplaceRoleActions_Request;
struct CChatRoom_ReplaceRoleActions_RequestDefaultTypeInternal;
extern CChatRoom_ReplaceRoleActions_RequestDefaultTypeInternal _CChatRoom_ReplaceRoleActions_Request_default_instance_;
class CChatRoom_ReplaceRoleActions_Response;
struct CChatRoom_ReplaceRoleActions_ResponseDefaultTypeInternal;
extern CChatRoom_ReplaceRoleActions_ResponseDefaultTypeInternal _CChatRoom_ReplaceRoleActions_Response_default_instance_;
class CChatRoom_RevokeInvite_Request;
struct CChatRoom_RevokeInvite_RequestDefaultTypeInternal;
extern CChatRoom_RevokeInvite_RequestDefaultTypeInternal _CChatRoom_RevokeInvite_Request_default_instance_;
class CChatRoom_RevokeInvite_Response;
struct CChatRoom_RevokeInvite_ResponseDefaultTypeInternal;
extern CChatRoom_RevokeInvite_ResponseDefaultTypeInternal _CChatRoom_RevokeInvite_Response_default_instance_;
class CChatRoom_SaveChatRoomGroup_Request;
struct CChatRoom_SaveChatRoomGroup_RequestDefaultTypeInternal;
extern CChatRoom_SaveChatRoomGroup_RequestDefaultTypeInternal _CChatRoom_SaveChatRoomGroup_Request_default_instance_;
class CChatRoom_SaveChatRoomGroup_Response;
struct CChatRoom_SaveChatRoomGroup_ResponseDefaultTypeInternal;
extern CChatRoom_SaveChatRoomGroup_ResponseDefaultTypeInternal _CChatRoom_SaveChatRoomGroup_Response_default_instance_;
class CChatRoom_SearchMembers_Request;
struct CChatRoom_SearchMembers_RequestDefaultTypeInternal;
extern CChatRoom_SearchMembers_RequestDefaultTypeInternal _CChatRoom_SearchMembers_Request_default_instance_;
class CChatRoom_SearchMembers_Response;
struct CChatRoom_SearchMembers_ResponseDefaultTypeInternal;
extern CChatRoom_SearchMembers_ResponseDefaultTypeInternal _CChatRoom_SearchMembers_Response_default_instance_;
class CChatRoom_SearchMembers_Response_MemberMatch;
struct CChatRoom_SearchMembers_Response_MemberMatchDefaultTypeInternal;
extern CChatRoom_SearchMembers_Response_MemberMatchDefaultTypeInternal _CChatRoom_SearchMembers_Response_MemberMatch_default_instance_;
class CChatRoom_SendChatMessage_Request;
struct CChatRoom_SendChatMessage_RequestDefaultTypeInternal;
extern CChatRoom_SendChatMessage_RequestDefaultTypeInternal _CChatRoom_SendChatMessage_Request_default_instance_;
class CChatRoom_SendChatMessage_Response;
struct CChatRoom_SendChatMessage_ResponseDefaultTypeInternal;
extern CChatRoom_SendChatMessage_ResponseDefaultTypeInternal _CChatRoom_SendChatMessage_Response_default_instance_;
class CChatRoom_SetAppChatRoomGroupForceActive_Request;
struct CChatRoom_SetAppChatRoomGroupForceActive_RequestDefaultTypeInternal;
extern CChatRoom_SetAppChatRoomGroupForceActive_RequestDefaultTypeInternal _CChatRoom_SetAppChatRoomGroupForceActive_Request_default_instance_;
class CChatRoom_SetAppChatRoomGroupForceActive_Response;
struct CChatRoom_SetAppChatRoomGroupForceActive_ResponseDefaultTypeInternal;
extern CChatRoom_SetAppChatRoomGroupForceActive_ResponseDefaultTypeInternal _CChatRoom_SetAppChatRoomGroupForceActive_Response_default_instance_;
class CChatRoom_SetAppChatRoomGroupStopForceActive_Notification;
struct CChatRoom_SetAppChatRoomGroupStopForceActive_NotificationDefaultTypeInternal;
extern CChatRoom_SetAppChatRoomGroupStopForceActive_NotificationDefaultTypeInternal _CChatRoom_SetAppChatRoomGroupStopForceActive_Notification_default_instance_;
class CChatRoom_SetChatRoomGroupAvatar_Request;
struct CChatRoom_SetChatRoomGroupAvatar_RequestDefaultTypeInternal;
extern CChatRoom_SetChatRoomGroupAvatar_RequestDefaultTypeInternal _CChatRoom_SetChatRoomGroupAvatar_Request_default_instance_;
class CChatRoom_SetChatRoomGroupAvatar_Response;
struct CChatRoom_SetChatRoomGroupAvatar_ResponseDefaultTypeInternal;
extern CChatRoom_SetChatRoomGroupAvatar_ResponseDefaultTypeInternal _CChatRoom_SetChatRoomGroupAvatar_Response_default_instance_;
class CChatRoom_SetChatRoomGroupTagline_Request;
struct CChatRoom_SetChatRoomGroupTagline_RequestDefaultTypeInternal;
extern CChatRoom_SetChatRoomGroupTagline_RequestDefaultTypeInternal _CChatRoom_SetChatRoomGroupTagline_Request_default_instance_;
class CChatRoom_SetChatRoomGroupTagline_Response;
struct CChatRoom_SetChatRoomGroupTagline_ResponseDefaultTypeInternal;
extern CChatRoom_SetChatRoomGroupTagline_ResponseDefaultTypeInternal _CChatRoom_SetChatRoomGroupTagline_Response_default_instance_;
class CChatRoom_SetChatRoomGroupWatchingBroadcast_Request;
struct CChatRoom_SetChatRoomGroupWatchingBroadcast_RequestDefaultTypeInternal;
extern CChatRoom_SetChatRoomGroupWatchingBroadcast_RequestDefaultTypeInternal _CChatRoom_SetChatRoomGroupWatchingBroadcast_Request_default_instance_;
class CChatRoom_SetChatRoomGroupWatchingBroadcast_Response;
struct CChatRoom_SetChatRoomGroupWatchingBroadcast_ResponseDefaultTypeInternal;
extern CChatRoom_SetChatRoomGroupWatchingBroadcast_ResponseDefaultTypeInternal _CChatRoom_SetChatRoomGroupWatchingBroadcast_Response_default_instance_;
class CChatRoom_SetSessionActiveChatRoomGroups_Request;
struct CChatRoom_SetSessionActiveChatRoomGroups_RequestDefaultTypeInternal;
extern CChatRoom_SetSessionActiveChatRoomGroups_RequestDefaultTypeInternal _CChatRoom_SetSessionActiveChatRoomGroups_Request_default_instance_;
class CChatRoom_SetSessionActiveChatRoomGroups_Response;
struct CChatRoom_SetSessionActiveChatRoomGroups_ResponseDefaultTypeInternal;
extern CChatRoom_SetSessionActiveChatRoomGroups_ResponseDefaultTypeInternal _CChatRoom_SetSessionActiveChatRoomGroups_Response_default_instance_;
class CChatRoom_SetUserBanState_Request;
struct CChatRoom_SetUserBanState_RequestDefaultTypeInternal;
extern CChatRoom_SetUserBanState_RequestDefaultTypeInternal _CChatRoom_SetUserBanState_Request_default_instance_;
class CChatRoom_SetUserBanState_Response;
struct CChatRoom_SetUserBanState_ResponseDefaultTypeInternal;
extern CChatRoom_SetUserBanState_ResponseDefaultTypeInternal _CChatRoom_SetUserBanState_Response_default_instance_;
class CChatRoom_SetUserChatGroupPreferences_Request;
struct CChatRoom_SetUserChatGroupPreferences_RequestDefaultTypeInternal;
extern CChatRoom_SetUserChatGroupPreferences_RequestDefaultTypeInternal _CChatRoom_SetUserChatGroupPreferences_Request_default_instance_;
class CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences;
struct CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferencesDefaultTypeInternal;
extern CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferencesDefaultTypeInternal _CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences_default_instance_;
class CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences;
struct CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferencesDefaultTypeInternal;
extern CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferencesDefaultTypeInternal _CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences_default_instance_;
class CChatRoom_SetUserChatGroupPreferences_Response;
struct CChatRoom_SetUserChatGroupPreferences_ResponseDefaultTypeInternal;
extern CChatRoom_SetUserChatGroupPreferences_ResponseDefaultTypeInternal _CChatRoom_SetUserChatGroupPreferences_Response_default_instance_;
class CChatRoom_UpdateMemberListView_Notification;
struct CChatRoom_UpdateMemberListView_NotificationDefaultTypeInternal;
extern CChatRoom_UpdateMemberListView_NotificationDefaultTypeInternal _CChatRoom_UpdateMemberListView_Notification_default_instance_;
class CChatRoom_UpdateMessageReaction_Request;
struct CChatRoom_UpdateMessageReaction_RequestDefaultTypeInternal;
extern CChatRoom_UpdateMessageReaction_RequestDefaultTypeInternal _CChatRoom_UpdateMessageReaction_Request_default_instance_;
class CChatRoom_UpdateMessageReaction_Response;
struct CChatRoom_UpdateMessageReaction_ResponseDefaultTypeInternal;
extern CChatRoom_UpdateMessageReaction_ResponseDefaultTypeInternal _CChatRoom_UpdateMessageReaction_Response_default_instance_;
class CChatUsability_ClientUsabilityMetrics_Notification;
struct CChatUsability_ClientUsabilityMetrics_NotificationDefaultTypeInternal;
extern CChatUsability_ClientUsabilityMetrics_NotificationDefaultTypeInternal _CChatUsability_ClientUsabilityMetrics_Notification_default_instance_;
class CChatUsability_ClientUsabilityMetrics_Notification_Metrics;
struct CChatUsability_ClientUsabilityMetrics_Notification_MetricsDefaultTypeInternal;
extern CChatUsability_ClientUsabilityMetrics_Notification_MetricsDefaultTypeInternal _CChatUsability_ClientUsabilityMetrics_Notification_Metrics_default_instance_;
class CChatUsability_ClientUsabilityMetrics_Notification_Settings;
struct CChatUsability_ClientUsabilityMetrics_Notification_SettingsDefaultTypeInternal;
extern CChatUsability_ClientUsabilityMetrics_Notification_SettingsDefaultTypeInternal _CChatUsability_ClientUsabilityMetrics_Notification_Settings_default_instance_;
class CChatUsability_ClientUsabilityMetrics_Notification_UIState;
struct CChatUsability_ClientUsabilityMetrics_Notification_UIStateDefaultTypeInternal;
extern CChatUsability_ClientUsabilityMetrics_Notification_UIStateDefaultTypeInternal _CChatUsability_ClientUsabilityMetrics_Notification_UIState_default_instance_;
class CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState;
struct CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseStateDefaultTypeInternal;
extern CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseStateDefaultTypeInternal _CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState_default_instance_;
class CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings;
struct CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettingsDefaultTypeInternal;
extern CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettingsDefaultTypeInternal _CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings_default_instance_;
class CChatUsability_RequestClientUsabilityMetrics_Notification;
struct CChatUsability_RequestClientUsabilityMetrics_NotificationDefaultTypeInternal;
extern CChatUsability_RequestClientUsabilityMetrics_NotificationDefaultTypeInternal _CChatUsability_RequestClientUsabilityMetrics_Notification_default_instance_;
class CChat_RequestFriendPersonaStates_Request;
struct CChat_RequestFriendPersonaStates_RequestDefaultTypeInternal;
extern CChat_RequestFriendPersonaStates_RequestDefaultTypeInternal _CChat_RequestFriendPersonaStates_Request_default_instance_;
class CChat_RequestFriendPersonaStates_Response;
struct CChat_RequestFriendPersonaStates_ResponseDefaultTypeInternal;
extern CChat_RequestFriendPersonaStates_ResponseDefaultTypeInternal _CChat_RequestFriendPersonaStates_Response_default_instance_;
class CClanChatRooms_GetClanChatRoomInfo_Request;
struct CClanChatRooms_GetClanChatRoomInfo_RequestDefaultTypeInternal;
extern CClanChatRooms_GetClanChatRoomInfo_RequestDefaultTypeInternal _CClanChatRooms_GetClanChatRoomInfo_Request_default_instance_;
class CClanChatRooms_GetClanChatRoomInfo_Response;
struct CClanChatRooms_GetClanChatRoomInfo_ResponseDefaultTypeInternal;
extern CClanChatRooms_GetClanChatRoomInfo_ResponseDefaultTypeInternal _CClanChatRooms_GetClanChatRoomInfo_Response_default_instance_;
class CClanChatRooms_SetClanChatRoomPrivate_Request;
struct CClanChatRooms_SetClanChatRoomPrivate_RequestDefaultTypeInternal;
extern CClanChatRooms_SetClanChatRoomPrivate_RequestDefaultTypeInternal _CClanChatRooms_SetClanChatRoomPrivate_Request_default_instance_;
class CClanChatRooms_SetClanChatRoomPrivate_Response;
struct CClanChatRooms_SetClanChatRoomPrivate_ResponseDefaultTypeInternal;
extern CClanChatRooms_SetClanChatRoomPrivate_ResponseDefaultTypeInternal _CClanChatRooms_SetClanChatRoomPrivate_Response_default_instance_;
class CUserChatRoomGroupState;
struct CUserChatRoomGroupStateDefaultTypeInternal;
extern CUserChatRoomGroupStateDefaultTypeInternal _CUserChatRoomGroupState_default_instance_;
class CUserChatRoomState;
struct CUserChatRoomStateDefaultTypeInternal;
extern CUserChatRoomStateDefaultTypeInternal _CUserChatRoomState_default_instance_;
class ChatRoomClient_NotifyChatGroupUserStateChanged_Notification;
struct ChatRoomClient_NotifyChatGroupUserStateChanged_NotificationDefaultTypeInternal;
extern ChatRoomClient_NotifyChatGroupUserStateChanged_NotificationDefaultTypeInternal _ChatRoomClient_NotifyChatGroupUserStateChanged_Notification_default_instance_;
class ChatRoomClient_NotifyChatRoomDisconnect_Notification;
struct ChatRoomClient_NotifyChatRoomDisconnect_NotificationDefaultTypeInternal;
extern ChatRoomClient_NotifyChatRoomDisconnect_NotificationDefaultTypeInternal _ChatRoomClient_NotifyChatRoomDisconnect_Notification_default_instance_;
class ServerMessage;
struct ServerMessageDefaultTypeInternal;
extern ServerMessageDefaultTypeInternal _ServerMessage_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CChatMentions* Arena::CreateMaybeMessage<::CChatMentions>(Arena*);
template<> ::CChatPartyBeacon* Arena::CreateMaybeMessage<::CChatPartyBeacon>(Arena*);
template<> ::CChatRole* Arena::CreateMaybeMessage<::CChatRole>(Arena*);
template<> ::CChatRoleActions* Arena::CreateMaybeMessage<::CChatRoleActions>(Arena*);
template<> ::CChatRoomClient_MemberListViewUpdated_Notification* Arena::CreateMaybeMessage<::CChatRoomClient_MemberListViewUpdated_Notification>(Arena*);
template<> ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry* Arena::CreateMaybeMessage<::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry>(Arena*);
template<> ::CChatRoomGroupHeaderState* Arena::CreateMaybeMessage<::CChatRoomGroupHeaderState>(Arena*);
template<> ::CChatRoomGroupInvite* Arena::CreateMaybeMessage<::CChatRoomGroupInvite>(Arena*);
template<> ::CChatRoomGroupState* Arena::CreateMaybeMessage<::CChatRoomGroupState>(Arena*);
template<> ::CChatRoomMember* Arena::CreateMaybeMessage<::CChatRoomMember>(Arena*);
template<> ::CChatRoomMemberListView* Arena::CreateMaybeMessage<::CChatRoomMemberListView>(Arena*);
template<> ::CChatRoomMemberSummaryCounts* Arena::CreateMaybeMessage<::CChatRoomMemberSummaryCounts>(Arena*);
template<> ::CChatRoomState* Arena::CreateMaybeMessage<::CChatRoomState>(Arena*);
template<> ::CChatRoomSummaryPair* Arena::CreateMaybeMessage<::CChatRoomSummaryPair>(Arena*);
template<> ::CChatRoom_AckChatMessage_Notification* Arena::CreateMaybeMessage<::CChatRoom_AckChatMessage_Notification>(Arena*);
template<> ::CChatRoom_AddRoleToUser_Request* Arena::CreateMaybeMessage<::CChatRoom_AddRoleToUser_Request>(Arena*);
template<> ::CChatRoom_AddRoleToUser_Response* Arena::CreateMaybeMessage<::CChatRoom_AddRoleToUser_Response>(Arena*);
template<> ::CChatRoom_ChatMessageModified_Notification* Arena::CreateMaybeMessage<::CChatRoom_ChatMessageModified_Notification>(Arena*);
template<> ::CChatRoom_ChatMessageModified_Notification_ChatMessage* Arena::CreateMaybeMessage<::CChatRoom_ChatMessageModified_Notification_ChatMessage>(Arena*);
template<> ::CChatRoom_ChatRoomGroupRoomsChange_Notification* Arena::CreateMaybeMessage<::CChatRoom_ChatRoomGroupRoomsChange_Notification>(Arena*);
template<> ::CChatRoom_ChatRoomHeaderState_Notification* Arena::CreateMaybeMessage<::CChatRoom_ChatRoomHeaderState_Notification>(Arena*);
template<> ::CChatRoom_CreateChatRoomGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_CreateChatRoomGroup_Request>(Arena*);
template<> ::CChatRoom_CreateChatRoomGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_CreateChatRoomGroup_Response>(Arena*);
template<> ::CChatRoom_CreateChatRoom_Request* Arena::CreateMaybeMessage<::CChatRoom_CreateChatRoom_Request>(Arena*);
template<> ::CChatRoom_CreateChatRoom_Response* Arena::CreateMaybeMessage<::CChatRoom_CreateChatRoom_Response>(Arena*);
template<> ::CChatRoom_CreateInviteLink_Request* Arena::CreateMaybeMessage<::CChatRoom_CreateInviteLink_Request>(Arena*);
template<> ::CChatRoom_CreateInviteLink_Response* Arena::CreateMaybeMessage<::CChatRoom_CreateInviteLink_Response>(Arena*);
template<> ::CChatRoom_CreateRole_Request* Arena::CreateMaybeMessage<::CChatRoom_CreateRole_Request>(Arena*);
template<> ::CChatRoom_CreateRole_Response* Arena::CreateMaybeMessage<::CChatRoom_CreateRole_Response>(Arena*);
template<> ::CChatRoom_DeleteChatMessages_Request* Arena::CreateMaybeMessage<::CChatRoom_DeleteChatMessages_Request>(Arena*);
template<> ::CChatRoom_DeleteChatMessages_Request_Message* Arena::CreateMaybeMessage<::CChatRoom_DeleteChatMessages_Request_Message>(Arena*);
template<> ::CChatRoom_DeleteChatMessages_Response* Arena::CreateMaybeMessage<::CChatRoom_DeleteChatMessages_Response>(Arena*);
template<> ::CChatRoom_DeleteChatRoom_Request* Arena::CreateMaybeMessage<::CChatRoom_DeleteChatRoom_Request>(Arena*);
template<> ::CChatRoom_DeleteChatRoom_Response* Arena::CreateMaybeMessage<::CChatRoom_DeleteChatRoom_Response>(Arena*);
template<> ::CChatRoom_DeleteInviteLink_Request* Arena::CreateMaybeMessage<::CChatRoom_DeleteInviteLink_Request>(Arena*);
template<> ::CChatRoom_DeleteInviteLink_Response* Arena::CreateMaybeMessage<::CChatRoom_DeleteInviteLink_Response>(Arena*);
template<> ::CChatRoom_DeleteRoleFromUser_Request* Arena::CreateMaybeMessage<::CChatRoom_DeleteRoleFromUser_Request>(Arena*);
template<> ::CChatRoom_DeleteRoleFromUser_Response* Arena::CreateMaybeMessage<::CChatRoom_DeleteRoleFromUser_Response>(Arena*);
template<> ::CChatRoom_DeleteRole_Request* Arena::CreateMaybeMessage<::CChatRoom_DeleteRole_Request>(Arena*);
template<> ::CChatRoom_DeleteRole_Response* Arena::CreateMaybeMessage<::CChatRoom_DeleteRole_Response>(Arena*);
template<> ::CChatRoom_EndMiniGameForChatRoomGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_EndMiniGameForChatRoomGroup_Request>(Arena*);
template<> ::CChatRoom_EndMiniGameForChatRoomGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_EndMiniGameForChatRoomGroup_Response>(Arena*);
template<> ::CChatRoom_GetBanList_Request* Arena::CreateMaybeMessage<::CChatRoom_GetBanList_Request>(Arena*);
template<> ::CChatRoom_GetBanList_Response* Arena::CreateMaybeMessage<::CChatRoom_GetBanList_Response>(Arena*);
template<> ::CChatRoom_GetBanList_Response_BanInfo* Arena::CreateMaybeMessage<::CChatRoom_GetBanList_Response_BanInfo>(Arena*);
template<> ::CChatRoom_GetChatRoomGroupState_Request* Arena::CreateMaybeMessage<::CChatRoom_GetChatRoomGroupState_Request>(Arena*);
template<> ::CChatRoom_GetChatRoomGroupState_Response* Arena::CreateMaybeMessage<::CChatRoom_GetChatRoomGroupState_Response>(Arena*);
template<> ::CChatRoom_GetChatRoomGroupSummary_Request* Arena::CreateMaybeMessage<::CChatRoom_GetChatRoomGroupSummary_Request>(Arena*);
template<> ::CChatRoom_GetChatRoomGroupSummary_Response* Arena::CreateMaybeMessage<::CChatRoom_GetChatRoomGroupSummary_Response>(Arena*);
template<> ::CChatRoom_GetInviteInfo_Request* Arena::CreateMaybeMessage<::CChatRoom_GetInviteInfo_Request>(Arena*);
template<> ::CChatRoom_GetInviteInfo_Response* Arena::CreateMaybeMessage<::CChatRoom_GetInviteInfo_Response>(Arena*);
template<> ::CChatRoom_GetInviteLinkInfo_Request* Arena::CreateMaybeMessage<::CChatRoom_GetInviteLinkInfo_Request>(Arena*);
template<> ::CChatRoom_GetInviteLinkInfo_Response* Arena::CreateMaybeMessage<::CChatRoom_GetInviteLinkInfo_Response>(Arena*);
template<> ::CChatRoom_GetInviteLinksForGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_GetInviteLinksForGroup_Request>(Arena*);
template<> ::CChatRoom_GetInviteLinksForGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_GetInviteLinksForGroup_Response>(Arena*);
template<> ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* Arena::CreateMaybeMessage<::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo>(Arena*);
template<> ::CChatRoom_GetInviteList_Request* Arena::CreateMaybeMessage<::CChatRoom_GetInviteList_Request>(Arena*);
template<> ::CChatRoom_GetInviteList_Response* Arena::CreateMaybeMessage<::CChatRoom_GetInviteList_Response>(Arena*);
template<> ::CChatRoom_GetMessageHistory_Request* Arena::CreateMaybeMessage<::CChatRoom_GetMessageHistory_Request>(Arena*);
template<> ::CChatRoom_GetMessageHistory_Response* Arena::CreateMaybeMessage<::CChatRoom_GetMessageHistory_Response>(Arena*);
template<> ::CChatRoom_GetMessageHistory_Response_ChatMessage* Arena::CreateMaybeMessage<::CChatRoom_GetMessageHistory_Response_ChatMessage>(Arena*);
template<> ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction* Arena::CreateMaybeMessage<::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction>(Arena*);
template<> ::CChatRoom_GetMessageReactionReactors_Request* Arena::CreateMaybeMessage<::CChatRoom_GetMessageReactionReactors_Request>(Arena*);
template<> ::CChatRoom_GetMessageReactionReactors_Response* Arena::CreateMaybeMessage<::CChatRoom_GetMessageReactionReactors_Response>(Arena*);
template<> ::CChatRoom_GetMyChatRoomGroups_Request* Arena::CreateMaybeMessage<::CChatRoom_GetMyChatRoomGroups_Request>(Arena*);
template<> ::CChatRoom_GetMyChatRoomGroups_Response* Arena::CreateMaybeMessage<::CChatRoom_GetMyChatRoomGroups_Response>(Arena*);
template<> ::CChatRoom_GetRoleActions_Request* Arena::CreateMaybeMessage<::CChatRoom_GetRoleActions_Request>(Arena*);
template<> ::CChatRoom_GetRoleActions_Response* Arena::CreateMaybeMessage<::CChatRoom_GetRoleActions_Response>(Arena*);
template<> ::CChatRoom_GetRolesForUser_Request* Arena::CreateMaybeMessage<::CChatRoom_GetRolesForUser_Request>(Arena*);
template<> ::CChatRoom_GetRolesForUser_Response* Arena::CreateMaybeMessage<::CChatRoom_GetRolesForUser_Response>(Arena*);
template<> ::CChatRoom_GetRoles_Request* Arena::CreateMaybeMessage<::CChatRoom_GetRoles_Request>(Arena*);
template<> ::CChatRoom_GetRoles_Response* Arena::CreateMaybeMessage<::CChatRoom_GetRoles_Response>(Arena*);
template<> ::CChatRoom_IncomingChatMessage_Notification* Arena::CreateMaybeMessage<::CChatRoom_IncomingChatMessage_Notification>(Arena*);
template<> ::CChatRoom_InviteFriendToChatRoomGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_InviteFriendToChatRoomGroup_Request>(Arena*);
template<> ::CChatRoom_InviteFriendToChatRoomGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_InviteFriendToChatRoomGroup_Response>(Arena*);
template<> ::CChatRoom_JoinChatRoomGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_JoinChatRoomGroup_Request>(Arena*);
template<> ::CChatRoom_JoinChatRoomGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_JoinChatRoomGroup_Response>(Arena*);
template<> ::CChatRoom_JoinMiniGameForChatRoomGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_JoinMiniGameForChatRoomGroup_Request>(Arena*);
template<> ::CChatRoom_JoinMiniGameForChatRoomGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_JoinMiniGameForChatRoomGroup_Response>(Arena*);
template<> ::CChatRoom_JoinVoiceChat_Request* Arena::CreateMaybeMessage<::CChatRoom_JoinVoiceChat_Request>(Arena*);
template<> ::CChatRoom_JoinVoiceChat_Response* Arena::CreateMaybeMessage<::CChatRoom_JoinVoiceChat_Response>(Arena*);
template<> ::CChatRoom_KickUser_Request* Arena::CreateMaybeMessage<::CChatRoom_KickUser_Request>(Arena*);
template<> ::CChatRoom_KickUser_Response* Arena::CreateMaybeMessage<::CChatRoom_KickUser_Response>(Arena*);
template<> ::CChatRoom_LeaveChatRoomGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_LeaveChatRoomGroup_Request>(Arena*);
template<> ::CChatRoom_LeaveChatRoomGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_LeaveChatRoomGroup_Response>(Arena*);
template<> ::CChatRoom_LeaveVoiceChat_Request* Arena::CreateMaybeMessage<::CChatRoom_LeaveVoiceChat_Request>(Arena*);
template<> ::CChatRoom_LeaveVoiceChat_Response* Arena::CreateMaybeMessage<::CChatRoom_LeaveVoiceChat_Response>(Arena*);
template<> ::CChatRoom_MemberStateChange_Notification* Arena::CreateMaybeMessage<::CChatRoom_MemberStateChange_Notification>(Arena*);
template<> ::CChatRoom_MessageReaction_Notification* Arena::CreateMaybeMessage<::CChatRoom_MessageReaction_Notification>(Arena*);
template<> ::CChatRoom_MuteUser_Request* Arena::CreateMaybeMessage<::CChatRoom_MuteUser_Request>(Arena*);
template<> ::CChatRoom_MuteUser_Response* Arena::CreateMaybeMessage<::CChatRoom_MuteUser_Response>(Arena*);
template<> ::CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* Arena::CreateMaybeMessage<::CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification>(Arena*);
template<> ::CChatRoom_RenameChatRoomGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_RenameChatRoomGroup_Request>(Arena*);
template<> ::CChatRoom_RenameChatRoomGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_RenameChatRoomGroup_Response>(Arena*);
template<> ::CChatRoom_RenameChatRoom_Request* Arena::CreateMaybeMessage<::CChatRoom_RenameChatRoom_Request>(Arena*);
template<> ::CChatRoom_RenameChatRoom_Response* Arena::CreateMaybeMessage<::CChatRoom_RenameChatRoom_Response>(Arena*);
template<> ::CChatRoom_RenameRole_Request* Arena::CreateMaybeMessage<::CChatRoom_RenameRole_Request>(Arena*);
template<> ::CChatRoom_RenameRole_Response* Arena::CreateMaybeMessage<::CChatRoom_RenameRole_Response>(Arena*);
template<> ::CChatRoom_ReorderChatRoom_Request* Arena::CreateMaybeMessage<::CChatRoom_ReorderChatRoom_Request>(Arena*);
template<> ::CChatRoom_ReorderChatRoom_Response* Arena::CreateMaybeMessage<::CChatRoom_ReorderChatRoom_Response>(Arena*);
template<> ::CChatRoom_ReorderRole_Request* Arena::CreateMaybeMessage<::CChatRoom_ReorderRole_Request>(Arena*);
template<> ::CChatRoom_ReorderRole_Response* Arena::CreateMaybeMessage<::CChatRoom_ReorderRole_Response>(Arena*);
template<> ::CChatRoom_ReplaceRoleActions_Request* Arena::CreateMaybeMessage<::CChatRoom_ReplaceRoleActions_Request>(Arena*);
template<> ::CChatRoom_ReplaceRoleActions_Response* Arena::CreateMaybeMessage<::CChatRoom_ReplaceRoleActions_Response>(Arena*);
template<> ::CChatRoom_RevokeInvite_Request* Arena::CreateMaybeMessage<::CChatRoom_RevokeInvite_Request>(Arena*);
template<> ::CChatRoom_RevokeInvite_Response* Arena::CreateMaybeMessage<::CChatRoom_RevokeInvite_Response>(Arena*);
template<> ::CChatRoom_SaveChatRoomGroup_Request* Arena::CreateMaybeMessage<::CChatRoom_SaveChatRoomGroup_Request>(Arena*);
template<> ::CChatRoom_SaveChatRoomGroup_Response* Arena::CreateMaybeMessage<::CChatRoom_SaveChatRoomGroup_Response>(Arena*);
template<> ::CChatRoom_SearchMembers_Request* Arena::CreateMaybeMessage<::CChatRoom_SearchMembers_Request>(Arena*);
template<> ::CChatRoom_SearchMembers_Response* Arena::CreateMaybeMessage<::CChatRoom_SearchMembers_Response>(Arena*);
template<> ::CChatRoom_SearchMembers_Response_MemberMatch* Arena::CreateMaybeMessage<::CChatRoom_SearchMembers_Response_MemberMatch>(Arena*);
template<> ::CChatRoom_SendChatMessage_Request* Arena::CreateMaybeMessage<::CChatRoom_SendChatMessage_Request>(Arena*);
template<> ::CChatRoom_SendChatMessage_Response* Arena::CreateMaybeMessage<::CChatRoom_SendChatMessage_Response>(Arena*);
template<> ::CChatRoom_SetAppChatRoomGroupForceActive_Request* Arena::CreateMaybeMessage<::CChatRoom_SetAppChatRoomGroupForceActive_Request>(Arena*);
template<> ::CChatRoom_SetAppChatRoomGroupForceActive_Response* Arena::CreateMaybeMessage<::CChatRoom_SetAppChatRoomGroupForceActive_Response>(Arena*);
template<> ::CChatRoom_SetAppChatRoomGroupStopForceActive_Notification* Arena::CreateMaybeMessage<::CChatRoom_SetAppChatRoomGroupStopForceActive_Notification>(Arena*);
template<> ::CChatRoom_SetChatRoomGroupAvatar_Request* Arena::CreateMaybeMessage<::CChatRoom_SetChatRoomGroupAvatar_Request>(Arena*);
template<> ::CChatRoom_SetChatRoomGroupAvatar_Response* Arena::CreateMaybeMessage<::CChatRoom_SetChatRoomGroupAvatar_Response>(Arena*);
template<> ::CChatRoom_SetChatRoomGroupTagline_Request* Arena::CreateMaybeMessage<::CChatRoom_SetChatRoomGroupTagline_Request>(Arena*);
template<> ::CChatRoom_SetChatRoomGroupTagline_Response* Arena::CreateMaybeMessage<::CChatRoom_SetChatRoomGroupTagline_Response>(Arena*);
template<> ::CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* Arena::CreateMaybeMessage<::CChatRoom_SetChatRoomGroupWatchingBroadcast_Request>(Arena*);
template<> ::CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* Arena::CreateMaybeMessage<::CChatRoom_SetChatRoomGroupWatchingBroadcast_Response>(Arena*);
template<> ::CChatRoom_SetSessionActiveChatRoomGroups_Request* Arena::CreateMaybeMessage<::CChatRoom_SetSessionActiveChatRoomGroups_Request>(Arena*);
template<> ::CChatRoom_SetSessionActiveChatRoomGroups_Response* Arena::CreateMaybeMessage<::CChatRoom_SetSessionActiveChatRoomGroups_Response>(Arena*);
template<> ::CChatRoom_SetUserBanState_Request* Arena::CreateMaybeMessage<::CChatRoom_SetUserBanState_Request>(Arena*);
template<> ::CChatRoom_SetUserBanState_Response* Arena::CreateMaybeMessage<::CChatRoom_SetUserBanState_Response>(Arena*);
template<> ::CChatRoom_SetUserChatGroupPreferences_Request* Arena::CreateMaybeMessage<::CChatRoom_SetUserChatGroupPreferences_Request>(Arena*);
template<> ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* Arena::CreateMaybeMessage<::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences>(Arena*);
template<> ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* Arena::CreateMaybeMessage<::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences>(Arena*);
template<> ::CChatRoom_SetUserChatGroupPreferences_Response* Arena::CreateMaybeMessage<::CChatRoom_SetUserChatGroupPreferences_Response>(Arena*);
template<> ::CChatRoom_UpdateMemberListView_Notification* Arena::CreateMaybeMessage<::CChatRoom_UpdateMemberListView_Notification>(Arena*);
template<> ::CChatRoom_UpdateMessageReaction_Request* Arena::CreateMaybeMessage<::CChatRoom_UpdateMessageReaction_Request>(Arena*);
template<> ::CChatRoom_UpdateMessageReaction_Response* Arena::CreateMaybeMessage<::CChatRoom_UpdateMessageReaction_Response>(Arena*);
template<> ::CChatUsability_ClientUsabilityMetrics_Notification* Arena::CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification>(Arena*);
template<> ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* Arena::CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_Metrics>(Arena*);
template<> ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* Arena::CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_Settings>(Arena*);
template<> ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* Arena::CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_UIState>(Arena*);
template<> ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* Arena::CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState>(Arena*);
template<> ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* Arena::CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings>(Arena*);
template<> ::CChatUsability_RequestClientUsabilityMetrics_Notification* Arena::CreateMaybeMessage<::CChatUsability_RequestClientUsabilityMetrics_Notification>(Arena*);
template<> ::CChat_RequestFriendPersonaStates_Request* Arena::CreateMaybeMessage<::CChat_RequestFriendPersonaStates_Request>(Arena*);
template<> ::CChat_RequestFriendPersonaStates_Response* Arena::CreateMaybeMessage<::CChat_RequestFriendPersonaStates_Response>(Arena*);
template<> ::CClanChatRooms_GetClanChatRoomInfo_Request* Arena::CreateMaybeMessage<::CClanChatRooms_GetClanChatRoomInfo_Request>(Arena*);
template<> ::CClanChatRooms_GetClanChatRoomInfo_Response* Arena::CreateMaybeMessage<::CClanChatRooms_GetClanChatRoomInfo_Response>(Arena*);
template<> ::CClanChatRooms_SetClanChatRoomPrivate_Request* Arena::CreateMaybeMessage<::CClanChatRooms_SetClanChatRoomPrivate_Request>(Arena*);
template<> ::CClanChatRooms_SetClanChatRoomPrivate_Response* Arena::CreateMaybeMessage<::CClanChatRooms_SetClanChatRoomPrivate_Response>(Arena*);
template<> ::CUserChatRoomGroupState* Arena::CreateMaybeMessage<::CUserChatRoomGroupState>(Arena*);
template<> ::CUserChatRoomState* Arena::CreateMaybeMessage<::CUserChatRoomState>(Arena*);
template<> ::ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* Arena::CreateMaybeMessage<::ChatRoomClient_NotifyChatGroupUserStateChanged_Notification>(Arena*);
template<> ::ChatRoomClient_NotifyChatRoomDisconnect_Notification* Arena::CreateMaybeMessage<::ChatRoomClient_NotifyChatRoomDisconnect_Notification>(Arena*);
template<> ::ServerMessage* Arena::CreateMaybeMessage<::ServerMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum EChatRoomJoinState : int {
  k_EChatRoomJoinState_Default = 0,
  k_EChatRoomJoinState_None = 1,
  k_EChatRoomJoinState_Joined = 2,
  k_EChatRoomJoinState_TestInvalid = 99
};
bool EChatRoomJoinState_IsValid(int value);
constexpr EChatRoomJoinState EChatRoomJoinState_MIN = k_EChatRoomJoinState_Default;
constexpr EChatRoomJoinState EChatRoomJoinState_MAX = k_EChatRoomJoinState_TestInvalid;
constexpr int EChatRoomJoinState_ARRAYSIZE = EChatRoomJoinState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EChatRoomJoinState_descriptor();
template<typename T>
inline const std::string& EChatRoomJoinState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EChatRoomJoinState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EChatRoomJoinState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EChatRoomJoinState_descriptor(), enum_t_value);
}
inline bool EChatRoomJoinState_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EChatRoomJoinState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EChatRoomJoinState>(
    EChatRoomJoinState_descriptor(), name, value);
}
enum EChatRoomGroupRank : int {
  k_EChatRoomGroupRank_Default = 0,
  k_EChatRoomGroupRank_Viewer = 10,
  k_EChatRoomGroupRank_Guest = 15,
  k_EChatRoomGroupRank_Member = 20,
  k_EChatRoomGroupRank_Moderator = 30,
  k_EChatRoomGroupRank_Officer = 40,
  k_EChatRoomGroupRank_Owner = 50,
  k_EChatRoomGroupRank_TestInvalid = 99
};
bool EChatRoomGroupRank_IsValid(int value);
constexpr EChatRoomGroupRank EChatRoomGroupRank_MIN = k_EChatRoomGroupRank_Default;
constexpr EChatRoomGroupRank EChatRoomGroupRank_MAX = k_EChatRoomGroupRank_TestInvalid;
constexpr int EChatRoomGroupRank_ARRAYSIZE = EChatRoomGroupRank_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EChatRoomGroupRank_descriptor();
template<typename T>
inline const std::string& EChatRoomGroupRank_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EChatRoomGroupRank>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EChatRoomGroupRank_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EChatRoomGroupRank_descriptor(), enum_t_value);
}
inline bool EChatRoomGroupRank_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EChatRoomGroupRank* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EChatRoomGroupRank>(
    EChatRoomGroupRank_descriptor(), name, value);
}
enum EChatRoomNotificationLevel : int {
  k_EChatroomNotificationLevel_Invalid = 0,
  k_EChatroomNotificationLevel_None = 1,
  k_EChatroomNotificationLevel_MentionMe = 2,
  k_EChatroomNotificationLevel_MentionAll = 3,
  k_EChatroomNotificationLevel_AllMessages = 4
};
bool EChatRoomNotificationLevel_IsValid(int value);
constexpr EChatRoomNotificationLevel EChatRoomNotificationLevel_MIN = k_EChatroomNotificationLevel_Invalid;
constexpr EChatRoomNotificationLevel EChatRoomNotificationLevel_MAX = k_EChatroomNotificationLevel_AllMessages;
constexpr int EChatRoomNotificationLevel_ARRAYSIZE = EChatRoomNotificationLevel_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EChatRoomNotificationLevel_descriptor();
template<typename T>
inline const std::string& EChatRoomNotificationLevel_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EChatRoomNotificationLevel>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EChatRoomNotificationLevel_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EChatRoomNotificationLevel_descriptor(), enum_t_value);
}
inline bool EChatRoomNotificationLevel_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EChatRoomNotificationLevel* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EChatRoomNotificationLevel>(
    EChatRoomNotificationLevel_descriptor(), name, value);
}
enum EChatRoomServerMessage : int {
  k_EChatRoomServerMsg_Invalid = 0,
  k_EChatRoomServerMsg_RenameChatRoom = 1,
  k_EChatRoomServerMsg_Joined = 2,
  k_EChatRoomServerMsg_Parted = 3,
  k_EChatRoomServerMsg_Kicked = 4,
  k_EChatRoomServerMsg_Invited = 5,
  k_EChatRoomServerMsg_InviteDismissed = 8,
  k_EChatRoomServerMsg_ChatRoomTaglineChanged = 9,
  k_EChatRoomServerMsg_ChatRoomAvatarChanged = 10,
  k_EChatRoomServerMsg_AppCustom = 11
};
bool EChatRoomServerMessage_IsValid(int value);
constexpr EChatRoomServerMessage EChatRoomServerMessage_MIN = k_EChatRoomServerMsg_Invalid;
constexpr EChatRoomServerMessage EChatRoomServerMessage_MAX = k_EChatRoomServerMsg_AppCustom;
constexpr int EChatRoomServerMessage_ARRAYSIZE = EChatRoomServerMessage_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EChatRoomServerMessage_descriptor();
template<typename T>
inline const std::string& EChatRoomServerMessage_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EChatRoomServerMessage>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EChatRoomServerMessage_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EChatRoomServerMessage_descriptor(), enum_t_value);
}
inline bool EChatRoomServerMessage_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EChatRoomServerMessage* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EChatRoomServerMessage>(
    EChatRoomServerMessage_descriptor(), name, value);
}
enum EChatRoomMessageReactionType : int {
  k_EChatRoomMessageReactionType_Invalid = 0,
  k_EChatRoomMessageReactionType_Emoticon = 1,
  k_EChatRoomMessageReactionType_Sticker = 2
};
bool EChatRoomMessageReactionType_IsValid(int value);
constexpr EChatRoomMessageReactionType EChatRoomMessageReactionType_MIN = k_EChatRoomMessageReactionType_Invalid;
constexpr EChatRoomMessageReactionType EChatRoomMessageReactionType_MAX = k_EChatRoomMessageReactionType_Sticker;
constexpr int EChatRoomMessageReactionType_ARRAYSIZE = EChatRoomMessageReactionType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EChatRoomMessageReactionType_descriptor();
template<typename T>
inline const std::string& EChatRoomMessageReactionType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EChatRoomMessageReactionType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EChatRoomMessageReactionType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EChatRoomMessageReactionType_descriptor(), enum_t_value);
}
inline bool EChatRoomMessageReactionType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EChatRoomMessageReactionType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EChatRoomMessageReactionType>(
    EChatRoomMessageReactionType_descriptor(), name, value);
}
enum EChatRoomMemberStateChange : int {
  k_EChatRoomMemberStateChange_Invalid = 0,
  k_EChatRoomMemberStateChange_Joined = 1,
  k_EChatRoomMemberStateChange_Parted = 2,
  k_EChatRoomMemberStateChange_Kicked = 3,
  k_EChatRoomMemberStateChange_Invited = 4,
  k_EChatRoomMemberStateChange_RankChanged = 7,
  k_EChatRoomMemberStateChange_InviteDismissed = 8,
  k_EChatRoomMemberStateChange_Muted = 9,
  k_EChatRoomMemberStateChange_Banned = 10,
  k_EChatRoomMemberStateChange_RolesChanged = 12
};
bool EChatRoomMemberStateChange_IsValid(int value);
constexpr EChatRoomMemberStateChange EChatRoomMemberStateChange_MIN = k_EChatRoomMemberStateChange_Invalid;
constexpr EChatRoomMemberStateChange EChatRoomMemberStateChange_MAX = k_EChatRoomMemberStateChange_RolesChanged;
constexpr int EChatRoomMemberStateChange_ARRAYSIZE = EChatRoomMemberStateChange_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EChatRoomMemberStateChange_descriptor();
template<typename T>
inline const std::string& EChatRoomMemberStateChange_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EChatRoomMemberStateChange>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EChatRoomMemberStateChange_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EChatRoomMemberStateChange_descriptor(), enum_t_value);
}
inline bool EChatRoomMemberStateChange_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EChatRoomMemberStateChange* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EChatRoomMemberStateChange>(
    EChatRoomMemberStateChange_descriptor(), name, value);
}
// ===================================================================

class CChat_RequestFriendPersonaStates_Request final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChat_RequestFriendPersonaStates_Request) */ {
 public:
  inline CChat_RequestFriendPersonaStates_Request() : CChat_RequestFriendPersonaStates_Request(nullptr) {}
  explicit constexpr CChat_RequestFriendPersonaStates_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChat_RequestFriendPersonaStates_Request(const CChat_RequestFriendPersonaStates_Request& from);
  CChat_RequestFriendPersonaStates_Request(CChat_RequestFriendPersonaStates_Request&& from) noexcept
    : CChat_RequestFriendPersonaStates_Request() {
    *this = ::std::move(from);
  }

  inline CChat_RequestFriendPersonaStates_Request& operator=(const CChat_RequestFriendPersonaStates_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChat_RequestFriendPersonaStates_Request& operator=(CChat_RequestFriendPersonaStates_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChat_RequestFriendPersonaStates_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChat_RequestFriendPersonaStates_Request* internal_default_instance() {
    return reinterpret_cast<const CChat_RequestFriendPersonaStates_Request*>(
               &_CChat_RequestFriendPersonaStates_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CChat_RequestFriendPersonaStates_Request& a, CChat_RequestFriendPersonaStates_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChat_RequestFriendPersonaStates_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChat_RequestFriendPersonaStates_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChat_RequestFriendPersonaStates_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChat_RequestFriendPersonaStates_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChat_RequestFriendPersonaStates_Request& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChat_RequestFriendPersonaStates_Request& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChat_RequestFriendPersonaStates_Request";
  }
  protected:
  explicit CChat_RequestFriendPersonaStates_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChat_RequestFriendPersonaStates_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChat_RequestFriendPersonaStates_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChat_RequestFriendPersonaStates_Response) */ {
 public:
  inline CChat_RequestFriendPersonaStates_Response() : CChat_RequestFriendPersonaStates_Response(nullptr) {}
  explicit constexpr CChat_RequestFriendPersonaStates_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChat_RequestFriendPersonaStates_Response(const CChat_RequestFriendPersonaStates_Response& from);
  CChat_RequestFriendPersonaStates_Response(CChat_RequestFriendPersonaStates_Response&& from) noexcept
    : CChat_RequestFriendPersonaStates_Response() {
    *this = ::std::move(from);
  }

  inline CChat_RequestFriendPersonaStates_Response& operator=(const CChat_RequestFriendPersonaStates_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChat_RequestFriendPersonaStates_Response& operator=(CChat_RequestFriendPersonaStates_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChat_RequestFriendPersonaStates_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChat_RequestFriendPersonaStates_Response* internal_default_instance() {
    return reinterpret_cast<const CChat_RequestFriendPersonaStates_Response*>(
               &_CChat_RequestFriendPersonaStates_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CChat_RequestFriendPersonaStates_Response& a, CChat_RequestFriendPersonaStates_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChat_RequestFriendPersonaStates_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChat_RequestFriendPersonaStates_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChat_RequestFriendPersonaStates_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChat_RequestFriendPersonaStates_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChat_RequestFriendPersonaStates_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChat_RequestFriendPersonaStates_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChat_RequestFriendPersonaStates_Response";
  }
  protected:
  explicit CChat_RequestFriendPersonaStates_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChat_RequestFriendPersonaStates_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_CreateChatRoomGroup_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateChatRoomGroup_Request) */ {
 public:
  inline CChatRoom_CreateChatRoomGroup_Request() : CChatRoom_CreateChatRoomGroup_Request(nullptr) {}
  ~CChatRoom_CreateChatRoomGroup_Request() override;
  explicit constexpr CChatRoom_CreateChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_CreateChatRoomGroup_Request(const CChatRoom_CreateChatRoomGroup_Request& from);
  CChatRoom_CreateChatRoomGroup_Request(CChatRoom_CreateChatRoomGroup_Request&& from) noexcept
    : CChatRoom_CreateChatRoomGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateChatRoomGroup_Request& operator=(const CChatRoom_CreateChatRoomGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_CreateChatRoomGroup_Request& operator=(CChatRoom_CreateChatRoomGroup_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_CreateChatRoomGroup_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_CreateChatRoomGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateChatRoomGroup_Request*>(
               &_CChatRoom_CreateChatRoomGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CChatRoom_CreateChatRoomGroup_Request& a, CChatRoom_CreateChatRoomGroup_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_CreateChatRoomGroup_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_CreateChatRoomGroup_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_CreateChatRoomGroup_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_CreateChatRoomGroup_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_CreateChatRoomGroup_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_CreateChatRoomGroup_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateChatRoomGroup_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_CreateChatRoomGroup_Request";
  }
  protected:
  explicit CChatRoom_CreateChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidInviteesFieldNumber = 4,
    kNameFieldNumber = 3,
    kSteamidPartnerFieldNumber = 1,
    kSteamidInvitedFieldNumber = 2,
    kWatchingBroadcastChannelIdFieldNumber = 7,
    kWatchingBroadcastAccountidFieldNumber = 6,
  };
  // repeated fixed64 steamid_invitees = 4;
  int steamid_invitees_size() const;
  private:
  int _internal_steamid_invitees_size() const;
  public:
  void clear_steamid_invitees();
  private:
  uint64_t _internal_steamid_invitees(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_steamid_invitees() const;
  void _internal_add_steamid_invitees(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_steamid_invitees();
  public:
  uint64_t steamid_invitees(int index) const;
  void set_steamid_invitees(int index, uint64_t value);
  void add_steamid_invitees(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      steamid_invitees() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_steamid_invitees();

  // optional string name = 3;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional fixed64 steamid_partner = 1;
  bool has_steamid_partner() const;
  private:
  bool _internal_has_steamid_partner() const;
  public:
  void clear_steamid_partner();
  uint64_t steamid_partner() const;
  void set_steamid_partner(uint64_t value);
  private:
  uint64_t _internal_steamid_partner() const;
  void _internal_set_steamid_partner(uint64_t value);
  public:

  // optional fixed64 steamid_invited = 2;
  bool has_steamid_invited() const;
  private:
  bool _internal_has_steamid_invited() const;
  public:
  void clear_steamid_invited();
  uint64_t steamid_invited() const;
  void set_steamid_invited(uint64_t value);
  private:
  uint64_t _internal_steamid_invited() const;
  void _internal_set_steamid_invited(uint64_t value);
  public:

  // optional uint64 watching_broadcast_channel_id = 7;
  bool has_watching_broadcast_channel_id() const;
  private:
  bool _internal_has_watching_broadcast_channel_id() const;
  public:
  void clear_watching_broadcast_channel_id();
  uint64_t watching_broadcast_channel_id() const;
  void set_watching_broadcast_channel_id(uint64_t value);
  private:
  uint64_t _internal_watching_broadcast_channel_id() const;
  void _internal_set_watching_broadcast_channel_id(uint64_t value);
  public:

  // optional uint32 watching_broadcast_accountid = 6;
  bool has_watching_broadcast_accountid() const;
  private:
  bool _internal_has_watching_broadcast_accountid() const;
  public:
  void clear_watching_broadcast_accountid();
  uint32_t watching_broadcast_accountid() const;
  void set_watching_broadcast_accountid(uint32_t value);
  private:
  uint32_t _internal_watching_broadcast_accountid() const;
  void _internal_set_watching_broadcast_accountid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateChatRoomGroup_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > steamid_invitees_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  uint64_t steamid_partner_;
  uint64_t steamid_invited_;
  uint64_t watching_broadcast_channel_id_;
  uint32_t watching_broadcast_accountid_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRole final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRole) */ {
 public:
  inline CChatRole() : CChatRole(nullptr) {}
  ~CChatRole() override;
  explicit constexpr CChatRole(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRole(const CChatRole& from);
  CChatRole(CChatRole&& from) noexcept
    : CChatRole() {
    *this = ::std::move(from);
  }

  inline CChatRole& operator=(const CChatRole& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRole& operator=(CChatRole&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRole& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRole* internal_default_instance() {
    return reinterpret_cast<const CChatRole*>(
               &_CChatRole_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CChatRole& a, CChatRole& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRole* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRole* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRole* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRole>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRole& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRole& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRole* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRole";
  }
  protected:
  explicit CChatRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kRoleIdFieldNumber = 1,
    kOrdinalFieldNumber = 3,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint64 role_id = 1;
  bool has_role_id() const;
  private:
  bool _internal_has_role_id() const;
  public:
  void clear_role_id();
  uint64_t role_id() const;
  void set_role_id(uint64_t value);
  private:
  uint64_t _internal_role_id() const;
  void _internal_set_role_id(uint64_t value);
  public:

  // optional uint32 ordinal = 3;
  bool has_ordinal() const;
  private:
  bool _internal_has_ordinal() const;
  public:
  void clear_ordinal();
  uint32_t ordinal() const;
  void set_ordinal(uint32_t value);
  private:
  uint32_t _internal_ordinal() const;
  void _internal_set_ordinal(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRole)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  uint64_t role_id_;
  uint32_t ordinal_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoleActions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoleActions) */ {
 public:
  inline CChatRoleActions() : CChatRoleActions(nullptr) {}
  ~CChatRoleActions() override;
  explicit constexpr CChatRoleActions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoleActions(const CChatRoleActions& from);
  CChatRoleActions(CChatRoleActions&& from) noexcept
    : CChatRoleActions() {
    *this = ::std::move(from);
  }

  inline CChatRoleActions& operator=(const CChatRoleActions& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoleActions& operator=(CChatRoleActions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoleActions& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoleActions* internal_default_instance() {
    return reinterpret_cast<const CChatRoleActions*>(
               &_CChatRoleActions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CChatRoleActions& a, CChatRoleActions& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoleActions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoleActions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoleActions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoleActions>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoleActions& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoleActions& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoleActions* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoleActions";
  }
  protected:
  explicit CChatRoleActions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIdFieldNumber = 1,
    kCanCreateRenameDeleteChannelFieldNumber = 2,
    kCanKickFieldNumber = 3,
    kCanBanFieldNumber = 4,
    kCanInviteFieldNumber = 5,
    kCanChangeTaglineAvatarNameFieldNumber = 6,
    kCanChatFieldNumber = 7,
    kCanViewHistoryFieldNumber = 8,
    kCanChangeGroupRolesFieldNumber = 9,
    kCanChangeUserRolesFieldNumber = 10,
    kCanMentionAllFieldNumber = 11,
    kCanSetWatchingBroadcastFieldNumber = 12,
  };
  // optional uint64 role_id = 1;
  bool has_role_id() const;
  private:
  bool _internal_has_role_id() const;
  public:
  void clear_role_id();
  uint64_t role_id() const;
  void set_role_id(uint64_t value);
  private:
  uint64_t _internal_role_id() const;
  void _internal_set_role_id(uint64_t value);
  public:

  // optional bool can_create_rename_delete_channel = 2;
  bool has_can_create_rename_delete_channel() const;
  private:
  bool _internal_has_can_create_rename_delete_channel() const;
  public:
  void clear_can_create_rename_delete_channel();
  bool can_create_rename_delete_channel() const;
  void set_can_create_rename_delete_channel(bool value);
  private:
  bool _internal_can_create_rename_delete_channel() const;
  void _internal_set_can_create_rename_delete_channel(bool value);
  public:

  // optional bool can_kick = 3;
  bool has_can_kick() const;
  private:
  bool _internal_has_can_kick() const;
  public:
  void clear_can_kick();
  bool can_kick() const;
  void set_can_kick(bool value);
  private:
  bool _internal_can_kick() const;
  void _internal_set_can_kick(bool value);
  public:

  // optional bool can_ban = 4;
  bool has_can_ban() const;
  private:
  bool _internal_has_can_ban() const;
  public:
  void clear_can_ban();
  bool can_ban() const;
  void set_can_ban(bool value);
  private:
  bool _internal_can_ban() const;
  void _internal_set_can_ban(bool value);
  public:

  // optional bool can_invite = 5;
  bool has_can_invite() const;
  private:
  bool _internal_has_can_invite() const;
  public:
  void clear_can_invite();
  bool can_invite() const;
  void set_can_invite(bool value);
  private:
  bool _internal_can_invite() const;
  void _internal_set_can_invite(bool value);
  public:

  // optional bool can_change_tagline_avatar_name = 6;
  bool has_can_change_tagline_avatar_name() const;
  private:
  bool _internal_has_can_change_tagline_avatar_name() const;
  public:
  void clear_can_change_tagline_avatar_name();
  bool can_change_tagline_avatar_name() const;
  void set_can_change_tagline_avatar_name(bool value);
  private:
  bool _internal_can_change_tagline_avatar_name() const;
  void _internal_set_can_change_tagline_avatar_name(bool value);
  public:

  // optional bool can_chat = 7;
  bool has_can_chat() const;
  private:
  bool _internal_has_can_chat() const;
  public:
  void clear_can_chat();
  bool can_chat() const;
  void set_can_chat(bool value);
  private:
  bool _internal_can_chat() const;
  void _internal_set_can_chat(bool value);
  public:

  // optional bool can_view_history = 8;
  bool has_can_view_history() const;
  private:
  bool _internal_has_can_view_history() const;
  public:
  void clear_can_view_history();
  bool can_view_history() const;
  void set_can_view_history(bool value);
  private:
  bool _internal_can_view_history() const;
  void _internal_set_can_view_history(bool value);
  public:

  // optional bool can_change_group_roles = 9;
  bool has_can_change_group_roles() const;
  private:
  bool _internal_has_can_change_group_roles() const;
  public:
  void clear_can_change_group_roles();
  bool can_change_group_roles() const;
  void set_can_change_group_roles(bool value);
  private:
  bool _internal_can_change_group_roles() const;
  void _internal_set_can_change_group_roles(bool value);
  public:

  // optional bool can_change_user_roles = 10;
  bool has_can_change_user_roles() const;
  private:
  bool _internal_has_can_change_user_roles() const;
  public:
  void clear_can_change_user_roles();
  bool can_change_user_roles() const;
  void set_can_change_user_roles(bool value);
  private:
  bool _internal_can_change_user_roles() const;
  void _internal_set_can_change_user_roles(bool value);
  public:

  // optional bool can_mention_all = 11;
  bool has_can_mention_all() const;
  private:
  bool _internal_has_can_mention_all() const;
  public:
  void clear_can_mention_all();
  bool can_mention_all() const;
  void set_can_mention_all(bool value);
  private:
  bool _internal_can_mention_all() const;
  void _internal_set_can_mention_all(bool value);
  public:

  // optional bool can_set_watching_broadcast = 12;
  bool has_can_set_watching_broadcast() const;
  private:
  bool _internal_has_can_set_watching_broadcast() const;
  public:
  void clear_can_set_watching_broadcast();
  bool can_set_watching_broadcast() const;
  void set_can_set_watching_broadcast(bool value);
  private:
  bool _internal_can_set_watching_broadcast() const;
  void _internal_set_can_set_watching_broadcast(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoleActions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t role_id_;
  bool can_create_rename_delete_channel_;
  bool can_kick_;
  bool can_ban_;
  bool can_invite_;
  bool can_change_tagline_avatar_name_;
  bool can_chat_;
  bool can_view_history_;
  bool can_change_group_roles_;
  bool can_change_user_roles_;
  bool can_mention_all_;
  bool can_set_watching_broadcast_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatPartyBeacon final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatPartyBeacon) */ {
 public:
  inline CChatPartyBeacon() : CChatPartyBeacon(nullptr) {}
  ~CChatPartyBeacon() override;
  explicit constexpr CChatPartyBeacon(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatPartyBeacon(const CChatPartyBeacon& from);
  CChatPartyBeacon(CChatPartyBeacon&& from) noexcept
    : CChatPartyBeacon() {
    *this = ::std::move(from);
  }

  inline CChatPartyBeacon& operator=(const CChatPartyBeacon& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatPartyBeacon& operator=(CChatPartyBeacon&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatPartyBeacon& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatPartyBeacon* internal_default_instance() {
    return reinterpret_cast<const CChatPartyBeacon*>(
               &_CChatPartyBeacon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CChatPartyBeacon& a, CChatPartyBeacon& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatPartyBeacon* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatPartyBeacon* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatPartyBeacon* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatPartyBeacon>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatPartyBeacon& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatPartyBeacon& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatPartyBeacon* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatPartyBeacon";
  }
  protected:
  explicit CChatPartyBeacon(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameMetadataFieldNumber = 4,
    kSteamidOwnerFieldNumber = 2,
    kBeaconIdFieldNumber = 3,
    kAppIdFieldNumber = 1,
  };
  // optional string game_metadata = 4;
  bool has_game_metadata() const;
  private:
  bool _internal_has_game_metadata() const;
  public:
  void clear_game_metadata();
  const std::string& game_metadata() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_game_metadata(ArgT0&& arg0, ArgT... args);
  std::string* mutable_game_metadata();
  PROTOBUF_NODISCARD std::string* release_game_metadata();
  void set_allocated_game_metadata(std::string* game_metadata);
  private:
  const std::string& _internal_game_metadata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_game_metadata(const std::string& value);
  std::string* _internal_mutable_game_metadata();
  public:

  // optional fixed64 steamid_owner = 2;
  bool has_steamid_owner() const;
  private:
  bool _internal_has_steamid_owner() const;
  public:
  void clear_steamid_owner();
  uint64_t steamid_owner() const;
  void set_steamid_owner(uint64_t value);
  private:
  uint64_t _internal_steamid_owner() const;
  void _internal_set_steamid_owner(uint64_t value);
  public:

  // optional fixed64 beacon_id = 3;
  bool has_beacon_id() const;
  private:
  bool _internal_has_beacon_id() const;
  public:
  void clear_beacon_id();
  uint64_t beacon_id() const;
  void set_beacon_id(uint64_t value);
  private:
  uint64_t _internal_beacon_id() const;
  void _internal_set_beacon_id(uint64_t value);
  public:

  // optional uint32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  uint32_t app_id() const;
  void set_app_id(uint32_t value);
  private:
  uint32_t _internal_app_id() const;
  void _internal_set_app_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatPartyBeacon)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr game_metadata_;
  uint64_t steamid_owner_;
  uint64_t beacon_id_;
  uint32_t app_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoomGroupHeaderState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoomGroupHeaderState) */ {
 public:
  inline CChatRoomGroupHeaderState() : CChatRoomGroupHeaderState(nullptr) {}
  ~CChatRoomGroupHeaderState() override;
  explicit constexpr CChatRoomGroupHeaderState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoomGroupHeaderState(const CChatRoomGroupHeaderState& from);
  CChatRoomGroupHeaderState(CChatRoomGroupHeaderState&& from) noexcept
    : CChatRoomGroupHeaderState() {
    *this = ::std::move(from);
  }

  inline CChatRoomGroupHeaderState& operator=(const CChatRoomGroupHeaderState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoomGroupHeaderState& operator=(CChatRoomGroupHeaderState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoomGroupHeaderState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoomGroupHeaderState* internal_default_instance() {
    return reinterpret_cast<const CChatRoomGroupHeaderState*>(
               &_CChatRoomGroupHeaderState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CChatRoomGroupHeaderState& a, CChatRoomGroupHeaderState& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoomGroupHeaderState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoomGroupHeaderState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoomGroupHeaderState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoomGroupHeaderState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoomGroupHeaderState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoomGroupHeaderState& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomGroupHeaderState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoomGroupHeaderState";
  }
  protected:
  explicit CChatRoomGroupHeaderState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRolesFieldNumber = 18,
    kRoleActionsFieldNumber = 19,
    kPartyBeaconsFieldNumber = 22,
    kChatNameFieldNumber = 2,
    kTaglineFieldNumber = 15,
    kAvatarShaFieldNumber = 16,
    kAvatarUgcUrlFieldNumber = 25,
    kChatGroupIdFieldNumber = 1,
    kClanidFieldNumber = 13,
    kAccountidOwnerFieldNumber = 14,
    kDefaultRoleIdFieldNumber = 17,
    kDisabledFieldNumber = 26,
    kWatchingBroadcastAccountidFieldNumber = 20,
    kAppidFieldNumber = 21,
    kWatchingBroadcastChannelIdFieldNumber = 23,
    kActiveMinigameIdFieldNumber = 24,
  };
  // repeated .CChatRole roles = 18;
  int roles_size() const;
  private:
  int _internal_roles_size() const;
  public:
  void clear_roles();
  ::CChatRole* mutable_roles(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRole >*
      mutable_roles();
  private:
  const ::CChatRole& _internal_roles(int index) const;
  ::CChatRole* _internal_add_roles();
  public:
  const ::CChatRole& roles(int index) const;
  ::CChatRole* add_roles();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRole >&
      roles() const;

  // repeated .CChatRoleActions role_actions = 19;
  int role_actions_size() const;
  private:
  int _internal_role_actions_size() const;
  public:
  void clear_role_actions();
  ::CChatRoleActions* mutable_role_actions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions >*
      mutable_role_actions();
  private:
  const ::CChatRoleActions& _internal_role_actions(int index) const;
  ::CChatRoleActions* _internal_add_role_actions();
  public:
  const ::CChatRoleActions& role_actions(int index) const;
  ::CChatRoleActions* add_role_actions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions >&
      role_actions() const;

  // repeated .CChatPartyBeacon party_beacons = 22;
  int party_beacons_size() const;
  private:
  int _internal_party_beacons_size() const;
  public:
  void clear_party_beacons();
  ::CChatPartyBeacon* mutable_party_beacons(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatPartyBeacon >*
      mutable_party_beacons();
  private:
  const ::CChatPartyBeacon& _internal_party_beacons(int index) const;
  ::CChatPartyBeacon* _internal_add_party_beacons();
  public:
  const ::CChatPartyBeacon& party_beacons(int index) const;
  ::CChatPartyBeacon* add_party_beacons();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatPartyBeacon >&
      party_beacons() const;

  // optional string chat_name = 2;
  bool has_chat_name() const;
  private:
  bool _internal_has_chat_name() const;
  public:
  void clear_chat_name();
  const std::string& chat_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_chat_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_chat_name();
  PROTOBUF_NODISCARD std::string* release_chat_name();
  void set_allocated_chat_name(std::string* chat_name);
  private:
  const std::string& _internal_chat_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chat_name(const std::string& value);
  std::string* _internal_mutable_chat_name();
  public:

  // optional string tagline = 15;
  bool has_tagline() const;
  private:
  bool _internal_has_tagline() const;
  public:
  void clear_tagline();
  const std::string& tagline() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_tagline(ArgT0&& arg0, ArgT... args);
  std::string* mutable_tagline();
  PROTOBUF_NODISCARD std::string* release_tagline();
  void set_allocated_tagline(std::string* tagline);
  private:
  const std::string& _internal_tagline() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tagline(const std::string& value);
  std::string* _internal_mutable_tagline();
  public:

  // optional bytes avatar_sha = 16;
  bool has_avatar_sha() const;
  private:
  bool _internal_has_avatar_sha() const;
  public:
  void clear_avatar_sha();
  const std::string& avatar_sha() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_avatar_sha(ArgT0&& arg0, ArgT... args);
  std::string* mutable_avatar_sha();
  PROTOBUF_NODISCARD std::string* release_avatar_sha();
  void set_allocated_avatar_sha(std::string* avatar_sha);
  private:
  const std::string& _internal_avatar_sha() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_avatar_sha(const std::string& value);
  std::string* _internal_mutable_avatar_sha();
  public:

  // optional string avatar_ugc_url = 25;
  bool has_avatar_ugc_url() const;
  private:
  bool _internal_has_avatar_ugc_url() const;
  public:
  void clear_avatar_ugc_url();
  const std::string& avatar_ugc_url() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_avatar_ugc_url(ArgT0&& arg0, ArgT... args);
  std::string* mutable_avatar_ugc_url();
  PROTOBUF_NODISCARD std::string* release_avatar_ugc_url();
  void set_allocated_avatar_ugc_url(std::string* avatar_ugc_url);
  private:
  const std::string& _internal_avatar_ugc_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_avatar_ugc_url(const std::string& value);
  std::string* _internal_mutable_avatar_ugc_url();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint32 clanid = 13;
  bool has_clanid() const;
  private:
  bool _internal_has_clanid() const;
  public:
  void clear_clanid();
  uint32_t clanid() const;
  void set_clanid(uint32_t value);
  private:
  uint32_t _internal_clanid() const;
  void _internal_set_clanid(uint32_t value);
  public:

  // optional uint32 accountid_owner = 14;
  bool has_accountid_owner() const;
  private:
  bool _internal_has_accountid_owner() const;
  public:
  void clear_accountid_owner();
  uint32_t accountid_owner() const;
  void set_accountid_owner(uint32_t value);
  private:
  uint32_t _internal_accountid_owner() const;
  void _internal_set_accountid_owner(uint32_t value);
  public:

  // optional uint64 default_role_id = 17;
  bool has_default_role_id() const;
  private:
  bool _internal_has_default_role_id() const;
  public:
  void clear_default_role_id();
  uint64_t default_role_id() const;
  void set_default_role_id(uint64_t value);
  private:
  uint64_t _internal_default_role_id() const;
  void _internal_set_default_role_id(uint64_t value);
  public:

  // optional bool disabled = 26;
  bool has_disabled() const;
  private:
  bool _internal_has_disabled() const;
  public:
  void clear_disabled();
  bool disabled() const;
  void set_disabled(bool value);
  private:
  bool _internal_disabled() const;
  void _internal_set_disabled(bool value);
  public:

  // optional uint32 watching_broadcast_accountid = 20;
  bool has_watching_broadcast_accountid() const;
  private:
  bool _internal_has_watching_broadcast_accountid() const;
  public:
  void clear_watching_broadcast_accountid();
  uint32_t watching_broadcast_accountid() const;
  void set_watching_broadcast_accountid(uint32_t value);
  private:
  uint32_t _internal_watching_broadcast_accountid() const;
  void _internal_set_watching_broadcast_accountid(uint32_t value);
  public:

  // optional uint32 appid = 21;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  uint32_t appid() const;
  void set_appid(uint32_t value);
  private:
  uint32_t _internal_appid() const;
  void _internal_set_appid(uint32_t value);
  public:

  // optional uint64 watching_broadcast_channel_id = 23;
  bool has_watching_broadcast_channel_id() const;
  private:
  bool _internal_has_watching_broadcast_channel_id() const;
  public:
  void clear_watching_broadcast_channel_id();
  uint64_t watching_broadcast_channel_id() const;
  void set_watching_broadcast_channel_id(uint64_t value);
  private:
  uint64_t _internal_watching_broadcast_channel_id() const;
  void _internal_set_watching_broadcast_channel_id(uint64_t value);
  public:

  // optional uint64 active_minigame_id = 24;
  bool has_active_minigame_id() const;
  private:
  bool _internal_has_active_minigame_id() const;
  public:
  void clear_active_minigame_id();
  uint64_t active_minigame_id() const;
  void set_active_minigame_id(uint64_t value);
  private:
  uint64_t _internal_active_minigame_id() const;
  void _internal_set_active_minigame_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoomGroupHeaderState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRole > roles_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions > role_actions_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatPartyBeacon > party_beacons_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr chat_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tagline_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_sha_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_ugc_url_;
  uint64_t chat_group_id_;
  uint32_t clanid_;
  uint32_t accountid_owner_;
  uint64_t default_role_id_;
  bool disabled_;
  uint32_t watching_broadcast_accountid_;
  uint32_t appid_;
  uint64_t watching_broadcast_channel_id_;
  uint64_t active_minigame_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoomMember final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoomMember) */ {
 public:
  inline CChatRoomMember() : CChatRoomMember(nullptr) {}
  ~CChatRoomMember() override;
  explicit constexpr CChatRoomMember(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoomMember(const CChatRoomMember& from);
  CChatRoomMember(CChatRoomMember&& from) noexcept
    : CChatRoomMember() {
    *this = ::std::move(from);
  }

  inline CChatRoomMember& operator=(const CChatRoomMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoomMember& operator=(CChatRoomMember&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoomMember& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoomMember* internal_default_instance() {
    return reinterpret_cast<const CChatRoomMember*>(
               &_CChatRoomMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CChatRoomMember& a, CChatRoomMember& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoomMember* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoomMember* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoomMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoomMember>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoomMember& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoomMember& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomMember* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoomMember";
  }
  protected:
  explicit CChatRoomMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIdsFieldNumber = 7,
    kAccountidFieldNumber = 1,
    kStateFieldNumber = 3,
    kRankFieldNumber = 4,
    kTimeKickExpireFieldNumber = 6,
  };
  // repeated uint64 role_ids = 7;
  int role_ids_size() const;
  private:
  int _internal_role_ids_size() const;
  public:
  void clear_role_ids();
  private:
  uint64_t _internal_role_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_role_ids() const;
  void _internal_add_role_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_role_ids();
  public:
  uint64_t role_ids(int index) const;
  void set_role_ids(int index, uint64_t value);
  void add_role_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      role_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_role_ids();

  // optional uint32 accountid = 1;
  bool has_accountid() const;
  private:
  bool _internal_has_accountid() const;
  public:
  void clear_accountid();
  uint32_t accountid() const;
  void set_accountid(uint32_t value);
  private:
  uint32_t _internal_accountid() const;
  void _internal_set_accountid(uint32_t value);
  public:

  // optional .EChatRoomJoinState state = 3 [default = k_EChatRoomJoinState_Default];
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::EChatRoomJoinState state() const;
  void set_state(::EChatRoomJoinState value);
  private:
  ::EChatRoomJoinState _internal_state() const;
  void _internal_set_state(::EChatRoomJoinState value);
  public:

  // optional .EChatRoomGroupRank rank = 4 [default = k_EChatRoomGroupRank_Default];
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  ::EChatRoomGroupRank rank() const;
  void set_rank(::EChatRoomGroupRank value);
  private:
  ::EChatRoomGroupRank _internal_rank() const;
  void _internal_set_rank(::EChatRoomGroupRank value);
  public:

  // optional uint32 time_kick_expire = 6;
  bool has_time_kick_expire() const;
  private:
  bool _internal_has_time_kick_expire() const;
  public:
  void clear_time_kick_expire();
  uint32_t time_kick_expire() const;
  void set_time_kick_expire(uint32_t value);
  private:
  uint32_t _internal_time_kick_expire() const;
  void _internal_set_time_kick_expire(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoomMember)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > role_ids_;
  uint32_t accountid_;
  int state_;
  int rank_;
  uint32_t time_kick_expire_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoomState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoomState) */ {
 public:
  inline CChatRoomState() : CChatRoomState(nullptr) {}
  ~CChatRoomState() override;
  explicit constexpr CChatRoomState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoomState(const CChatRoomState& from);
  CChatRoomState(CChatRoomState&& from) noexcept
    : CChatRoomState() {
    *this = ::std::move(from);
  }

  inline CChatRoomState& operator=(const CChatRoomState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoomState& operator=(CChatRoomState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoomState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoomState* internal_default_instance() {
    return reinterpret_cast<const CChatRoomState*>(
               &_CChatRoomState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CChatRoomState& a, CChatRoomState& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoomState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoomState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoomState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoomState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoomState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoomState& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoomState";
  }
  protected:
  explicit CChatRoomState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMembersInVoiceFieldNumber = 4,
    kChatNameFieldNumber = 2,
    kLastMessageFieldNumber = 7,
    kChatIdFieldNumber = 1,
    kVoiceAllowedFieldNumber = 3,
    kTimeLastMessageFieldNumber = 5,
    kSortOrderFieldNumber = 6,
    kAccountidLastMessageFieldNumber = 8,
  };
  // repeated uint32 members_in_voice = 4;
  int members_in_voice_size() const;
  private:
  int _internal_members_in_voice_size() const;
  public:
  void clear_members_in_voice();
  private:
  uint32_t _internal_members_in_voice(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_members_in_voice() const;
  void _internal_add_members_in_voice(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_members_in_voice();
  public:
  uint32_t members_in_voice(int index) const;
  void set_members_in_voice(int index, uint32_t value);
  void add_members_in_voice(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      members_in_voice() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_members_in_voice();

  // optional string chat_name = 2;
  bool has_chat_name() const;
  private:
  bool _internal_has_chat_name() const;
  public:
  void clear_chat_name();
  const std::string& chat_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_chat_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_chat_name();
  PROTOBUF_NODISCARD std::string* release_chat_name();
  void set_allocated_chat_name(std::string* chat_name);
  private:
  const std::string& _internal_chat_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chat_name(const std::string& value);
  std::string* _internal_mutable_chat_name();
  public:

  // optional string last_message = 7;
  bool has_last_message() const;
  private:
  bool _internal_has_last_message() const;
  public:
  void clear_last_message();
  const std::string& last_message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_last_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_last_message();
  PROTOBUF_NODISCARD std::string* release_last_message();
  void set_allocated_last_message(std::string* last_message);
  private:
  const std::string& _internal_last_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_message(const std::string& value);
  std::string* _internal_mutable_last_message();
  public:

  // optional uint64 chat_id = 1;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional bool voice_allowed = 3;
  bool has_voice_allowed() const;
  private:
  bool _internal_has_voice_allowed() const;
  public:
  void clear_voice_allowed();
  bool voice_allowed() const;
  void set_voice_allowed(bool value);
  private:
  bool _internal_voice_allowed() const;
  void _internal_set_voice_allowed(bool value);
  public:

  // optional uint32 time_last_message = 5;
  bool has_time_last_message() const;
  private:
  bool _internal_has_time_last_message() const;
  public:
  void clear_time_last_message();
  uint32_t time_last_message() const;
  void set_time_last_message(uint32_t value);
  private:
  uint32_t _internal_time_last_message() const;
  void _internal_set_time_last_message(uint32_t value);
  public:

  // optional uint32 sort_order = 6;
  bool has_sort_order() const;
  private:
  bool _internal_has_sort_order() const;
  public:
  void clear_sort_order();
  uint32_t sort_order() const;
  void set_sort_order(uint32_t value);
  private:
  uint32_t _internal_sort_order() const;
  void _internal_set_sort_order(uint32_t value);
  public:

  // optional uint32 accountid_last_message = 8;
  bool has_accountid_last_message() const;
  private:
  bool _internal_has_accountid_last_message() const;
  public:
  void clear_accountid_last_message();
  uint32_t accountid_last_message() const;
  void set_accountid_last_message(uint32_t value);
  private:
  uint32_t _internal_accountid_last_message() const;
  void _internal_set_accountid_last_message(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoomState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > members_in_voice_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr chat_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_message_;
  uint64_t chat_id_;
  bool voice_allowed_;
  uint32_t time_last_message_;
  uint32_t sort_order_;
  uint32_t accountid_last_message_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoomGroupState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoomGroupState) */ {
 public:
  inline CChatRoomGroupState() : CChatRoomGroupState(nullptr) {}
  ~CChatRoomGroupState() override;
  explicit constexpr CChatRoomGroupState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoomGroupState(const CChatRoomGroupState& from);
  CChatRoomGroupState(CChatRoomGroupState&& from) noexcept
    : CChatRoomGroupState() {
    *this = ::std::move(from);
  }

  inline CChatRoomGroupState& operator=(const CChatRoomGroupState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoomGroupState& operator=(CChatRoomGroupState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoomGroupState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoomGroupState* internal_default_instance() {
    return reinterpret_cast<const CChatRoomGroupState*>(
               &_CChatRoomGroupState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CChatRoomGroupState& a, CChatRoomGroupState& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoomGroupState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoomGroupState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoomGroupState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoomGroupState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoomGroupState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoomGroupState& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomGroupState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoomGroupState";
  }
  protected:
  explicit CChatRoomGroupState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMembersFieldNumber = 2,
    kChatRoomsFieldNumber = 5,
    kKickedFieldNumber = 7,
    kHeaderStateFieldNumber = 1,
    kDefaultChatIdFieldNumber = 4,
  };
  // repeated .CChatRoomMember members = 2;
  int members_size() const;
  private:
  int _internal_members_size() const;
  public:
  void clear_members();
  ::CChatRoomMember* mutable_members(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomMember >*
      mutable_members();
  private:
  const ::CChatRoomMember& _internal_members(int index) const;
  ::CChatRoomMember* _internal_add_members();
  public:
  const ::CChatRoomMember& members(int index) const;
  ::CChatRoomMember* add_members();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomMember >&
      members() const;

  // repeated .CChatRoomState chat_rooms = 5;
  int chat_rooms_size() const;
  private:
  int _internal_chat_rooms_size() const;
  public:
  void clear_chat_rooms();
  ::CChatRoomState* mutable_chat_rooms(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState >*
      mutable_chat_rooms();
  private:
  const ::CChatRoomState& _internal_chat_rooms(int index) const;
  ::CChatRoomState* _internal_add_chat_rooms();
  public:
  const ::CChatRoomState& chat_rooms(int index) const;
  ::CChatRoomState* add_chat_rooms();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState >&
      chat_rooms() const;

  // repeated .CChatRoomMember kicked = 7;
  int kicked_size() const;
  private:
  int _internal_kicked_size() const;
  public:
  void clear_kicked();
  ::CChatRoomMember* mutable_kicked(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomMember >*
      mutable_kicked();
  private:
  const ::CChatRoomMember& _internal_kicked(int index) const;
  ::CChatRoomMember* _internal_add_kicked();
  public:
  const ::CChatRoomMember& kicked(int index) const;
  ::CChatRoomMember* add_kicked();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomMember >&
      kicked() const;

  // optional .CChatRoomGroupHeaderState header_state = 1;
  bool has_header_state() const;
  private:
  bool _internal_has_header_state() const;
  public:
  void clear_header_state();
  const ::CChatRoomGroupHeaderState& header_state() const;
  PROTOBUF_NODISCARD ::CChatRoomGroupHeaderState* release_header_state();
  ::CChatRoomGroupHeaderState* mutable_header_state();
  void set_allocated_header_state(::CChatRoomGroupHeaderState* header_state);
  private:
  const ::CChatRoomGroupHeaderState& _internal_header_state() const;
  ::CChatRoomGroupHeaderState* _internal_mutable_header_state();
  public:
  void unsafe_arena_set_allocated_header_state(
      ::CChatRoomGroupHeaderState* header_state);
  ::CChatRoomGroupHeaderState* unsafe_arena_release_header_state();

  // optional uint64 default_chat_id = 4;
  bool has_default_chat_id() const;
  private:
  bool _internal_has_default_chat_id() const;
  public:
  void clear_default_chat_id();
  uint64_t default_chat_id() const;
  void set_default_chat_id(uint64_t value);
  private:
  uint64_t _internal_default_chat_id() const;
  void _internal_set_default_chat_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoomGroupState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomMember > members_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState > chat_rooms_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomMember > kicked_;
  ::CChatRoomGroupHeaderState* header_state_;
  uint64_t default_chat_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CUserChatRoomState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CUserChatRoomState) */ {
 public:
  inline CUserChatRoomState() : CUserChatRoomState(nullptr) {}
  ~CUserChatRoomState() override;
  explicit constexpr CUserChatRoomState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CUserChatRoomState(const CUserChatRoomState& from);
  CUserChatRoomState(CUserChatRoomState&& from) noexcept
    : CUserChatRoomState() {
    *this = ::std::move(from);
  }

  inline CUserChatRoomState& operator=(const CUserChatRoomState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CUserChatRoomState& operator=(CUserChatRoomState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CUserChatRoomState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CUserChatRoomState* internal_default_instance() {
    return reinterpret_cast<const CUserChatRoomState*>(
               &_CUserChatRoomState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CUserChatRoomState& a, CUserChatRoomState& b) {
    a.Swap(&b);
  }
  inline void Swap(CUserChatRoomState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CUserChatRoomState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CUserChatRoomState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CUserChatRoomState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CUserChatRoomState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CUserChatRoomState& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserChatRoomState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CUserChatRoomState";
  }
  protected:
  explicit CUserChatRoomState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatIdFieldNumber = 1,
    kTimeJoinedFieldNumber = 2,
    kTimeLastAckFieldNumber = 3,
    kDesktopNotificationLevelFieldNumber = 4,
    kMobileNotificationLevelFieldNumber = 5,
    kTimeLastMentionFieldNumber = 6,
    kUnreadIndicatorMutedFieldNumber = 7,
    kTimeFirstUnreadFieldNumber = 8,
  };
  // optional uint64 chat_id = 1;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional uint32 time_joined = 2;
  bool has_time_joined() const;
  private:
  bool _internal_has_time_joined() const;
  public:
  void clear_time_joined();
  uint32_t time_joined() const;
  void set_time_joined(uint32_t value);
  private:
  uint32_t _internal_time_joined() const;
  void _internal_set_time_joined(uint32_t value);
  public:

  // optional uint32 time_last_ack = 3;
  bool has_time_last_ack() const;
  private:
  bool _internal_has_time_last_ack() const;
  public:
  void clear_time_last_ack();
  uint32_t time_last_ack() const;
  void set_time_last_ack(uint32_t value);
  private:
  uint32_t _internal_time_last_ack() const;
  void _internal_set_time_last_ack(uint32_t value);
  public:

  // optional .EChatRoomNotificationLevel desktop_notification_level = 4 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_desktop_notification_level() const;
  private:
  bool _internal_has_desktop_notification_level() const;
  public:
  void clear_desktop_notification_level();
  ::EChatRoomNotificationLevel desktop_notification_level() const;
  void set_desktop_notification_level(::EChatRoomNotificationLevel value);
  private:
  ::EChatRoomNotificationLevel _internal_desktop_notification_level() const;
  void _internal_set_desktop_notification_level(::EChatRoomNotificationLevel value);
  public:

  // optional .EChatRoomNotificationLevel mobile_notification_level = 5 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_mobile_notification_level() const;
  private:
  bool _internal_has_mobile_notification_level() const;
  public:
  void clear_mobile_notification_level();
  ::EChatRoomNotificationLevel mobile_notification_level() const;
  void set_mobile_notification_level(::EChatRoomNotificationLevel value);
  private:
  ::EChatRoomNotificationLevel _internal_mobile_notification_level() const;
  void _internal_set_mobile_notification_level(::EChatRoomNotificationLevel value);
  public:

  // optional uint32 time_last_mention = 6;
  bool has_time_last_mention() const;
  private:
  bool _internal_has_time_last_mention() const;
  public:
  void clear_time_last_mention();
  uint32_t time_last_mention() const;
  void set_time_last_mention(uint32_t value);
  private:
  uint32_t _internal_time_last_mention() const;
  void _internal_set_time_last_mention(uint32_t value);
  public:

  // optional bool unread_indicator_muted = 7 [default = false];
  bool has_unread_indicator_muted() const;
  private:
  bool _internal_has_unread_indicator_muted() const;
  public:
  void clear_unread_indicator_muted();
  bool unread_indicator_muted() const;
  void set_unread_indicator_muted(bool value);
  private:
  bool _internal_unread_indicator_muted() const;
  void _internal_set_unread_indicator_muted(bool value);
  public:

  // optional uint32 time_first_unread = 8;
  bool has_time_first_unread() const;
  private:
  bool _internal_has_time_first_unread() const;
  public:
  void clear_time_first_unread();
  uint32_t time_first_unread() const;
  void set_time_first_unread(uint32_t value);
  private:
  uint32_t _internal_time_first_unread() const;
  void _internal_set_time_first_unread(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CUserChatRoomState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_id_;
  uint32_t time_joined_;
  uint32_t time_last_ack_;
  int desktop_notification_level_;
  int mobile_notification_level_;
  uint32_t time_last_mention_;
  bool unread_indicator_muted_;
  uint32_t time_first_unread_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CUserChatRoomGroupState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CUserChatRoomGroupState) */ {
 public:
  inline CUserChatRoomGroupState() : CUserChatRoomGroupState(nullptr) {}
  ~CUserChatRoomGroupState() override;
  explicit constexpr CUserChatRoomGroupState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CUserChatRoomGroupState(const CUserChatRoomGroupState& from);
  CUserChatRoomGroupState(CUserChatRoomGroupState&& from) noexcept
    : CUserChatRoomGroupState() {
    *this = ::std::move(from);
  }

  inline CUserChatRoomGroupState& operator=(const CUserChatRoomGroupState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CUserChatRoomGroupState& operator=(CUserChatRoomGroupState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CUserChatRoomGroupState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CUserChatRoomGroupState* internal_default_instance() {
    return reinterpret_cast<const CUserChatRoomGroupState*>(
               &_CUserChatRoomGroupState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CUserChatRoomGroupState& a, CUserChatRoomGroupState& b) {
    a.Swap(&b);
  }
  inline void Swap(CUserChatRoomGroupState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CUserChatRoomGroupState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CUserChatRoomGroupState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CUserChatRoomGroupState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CUserChatRoomGroupState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CUserChatRoomGroupState& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserChatRoomGroupState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CUserChatRoomGroupState";
  }
  protected:
  explicit CUserChatRoomGroupState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserChatRoomStateFieldNumber = 3,
    kChatGroupIdFieldNumber = 1,
    kTimeJoinedFieldNumber = 2,
    kDesktopNotificationLevelFieldNumber = 4,
    kMobileNotificationLevelFieldNumber = 5,
    kTimeLastGroupAckFieldNumber = 6,
    kUnreadIndicatorMutedFieldNumber = 7,
  };
  // repeated .CUserChatRoomState user_chat_room_state = 3;
  int user_chat_room_state_size() const;
  private:
  int _internal_user_chat_room_state_size() const;
  public:
  void clear_user_chat_room_state();
  ::CUserChatRoomState* mutable_user_chat_room_state(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CUserChatRoomState >*
      mutable_user_chat_room_state();
  private:
  const ::CUserChatRoomState& _internal_user_chat_room_state(int index) const;
  ::CUserChatRoomState* _internal_add_user_chat_room_state();
  public:
  const ::CUserChatRoomState& user_chat_room_state(int index) const;
  ::CUserChatRoomState* add_user_chat_room_state();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CUserChatRoomState >&
      user_chat_room_state() const;

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint32 time_joined = 2;
  bool has_time_joined() const;
  private:
  bool _internal_has_time_joined() const;
  public:
  void clear_time_joined();
  uint32_t time_joined() const;
  void set_time_joined(uint32_t value);
  private:
  uint32_t _internal_time_joined() const;
  void _internal_set_time_joined(uint32_t value);
  public:

  // optional .EChatRoomNotificationLevel desktop_notification_level = 4 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_desktop_notification_level() const;
  private:
  bool _internal_has_desktop_notification_level() const;
  public:
  void clear_desktop_notification_level();
  ::EChatRoomNotificationLevel desktop_notification_level() const;
  void set_desktop_notification_level(::EChatRoomNotificationLevel value);
  private:
  ::EChatRoomNotificationLevel _internal_desktop_notification_level() const;
  void _internal_set_desktop_notification_level(::EChatRoomNotificationLevel value);
  public:

  // optional .EChatRoomNotificationLevel mobile_notification_level = 5 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_mobile_notification_level() const;
  private:
  bool _internal_has_mobile_notification_level() const;
  public:
  void clear_mobile_notification_level();
  ::EChatRoomNotificationLevel mobile_notification_level() const;
  void set_mobile_notification_level(::EChatRoomNotificationLevel value);
  private:
  ::EChatRoomNotificationLevel _internal_mobile_notification_level() const;
  void _internal_set_mobile_notification_level(::EChatRoomNotificationLevel value);
  public:

  // optional uint32 time_last_group_ack = 6;
  bool has_time_last_group_ack() const;
  private:
  bool _internal_has_time_last_group_ack() const;
  public:
  void clear_time_last_group_ack();
  uint32_t time_last_group_ack() const;
  void set_time_last_group_ack(uint32_t value);
  private:
  uint32_t _internal_time_last_group_ack() const;
  void _internal_set_time_last_group_ack(uint32_t value);
  public:

  // optional bool unread_indicator_muted = 7 [default = false];
  bool has_unread_indicator_muted() const;
  private:
  bool _internal_has_unread_indicator_muted() const;
  public:
  void clear_unread_indicator_muted();
  bool unread_indicator_muted() const;
  void set_unread_indicator_muted(bool value);
  private:
  bool _internal_unread_indicator_muted() const;
  void _internal_set_unread_indicator_muted(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CUserChatRoomGroupState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CUserChatRoomState > user_chat_room_state_;
  uint64_t chat_group_id_;
  uint32_t time_joined_;
  int desktop_notification_level_;
  int mobile_notification_level_;
  uint32_t time_last_group_ack_;
  bool unread_indicator_muted_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_CreateChatRoomGroup_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateChatRoomGroup_Response) */ {
 public:
  inline CChatRoom_CreateChatRoomGroup_Response() : CChatRoom_CreateChatRoomGroup_Response(nullptr) {}
  ~CChatRoom_CreateChatRoomGroup_Response() override;
  explicit constexpr CChatRoom_CreateChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_CreateChatRoomGroup_Response(const CChatRoom_CreateChatRoomGroup_Response& from);
  CChatRoom_CreateChatRoomGroup_Response(CChatRoom_CreateChatRoomGroup_Response&& from) noexcept
    : CChatRoom_CreateChatRoomGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateChatRoomGroup_Response& operator=(const CChatRoom_CreateChatRoomGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_CreateChatRoomGroup_Response& operator=(CChatRoom_CreateChatRoomGroup_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_CreateChatRoomGroup_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_CreateChatRoomGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateChatRoomGroup_Response*>(
               &_CChatRoom_CreateChatRoomGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CChatRoom_CreateChatRoomGroup_Response& a, CChatRoom_CreateChatRoomGroup_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_CreateChatRoomGroup_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_CreateChatRoomGroup_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_CreateChatRoomGroup_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_CreateChatRoomGroup_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_CreateChatRoomGroup_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_CreateChatRoomGroup_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateChatRoomGroup_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_CreateChatRoomGroup_Response";
  }
  protected:
  explicit CChatRoom_CreateChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 2,
    kUserChatStateFieldNumber = 3,
    kChatGroupIdFieldNumber = 1,
  };
  // optional .CChatRoomGroupState state = 2;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  const ::CChatRoomGroupState& state() const;
  PROTOBUF_NODISCARD ::CChatRoomGroupState* release_state();
  ::CChatRoomGroupState* mutable_state();
  void set_allocated_state(::CChatRoomGroupState* state);
  private:
  const ::CChatRoomGroupState& _internal_state() const;
  ::CChatRoomGroupState* _internal_mutable_state();
  public:
  void unsafe_arena_set_allocated_state(
      ::CChatRoomGroupState* state);
  ::CChatRoomGroupState* unsafe_arena_release_state();

  // optional .CUserChatRoomGroupState user_chat_state = 3;
  bool has_user_chat_state() const;
  private:
  bool _internal_has_user_chat_state() const;
  public:
  void clear_user_chat_state();
  const ::CUserChatRoomGroupState& user_chat_state() const;
  PROTOBUF_NODISCARD ::CUserChatRoomGroupState* release_user_chat_state();
  ::CUserChatRoomGroupState* mutable_user_chat_state();
  void set_allocated_user_chat_state(::CUserChatRoomGroupState* user_chat_state);
  private:
  const ::CUserChatRoomGroupState& _internal_user_chat_state() const;
  ::CUserChatRoomGroupState* _internal_mutable_user_chat_state();
  public:
  void unsafe_arena_set_allocated_user_chat_state(
      ::CUserChatRoomGroupState* user_chat_state);
  ::CUserChatRoomGroupState* unsafe_arena_release_user_chat_state();

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateChatRoomGroup_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CChatRoomGroupState* state_;
  ::CUserChatRoomGroupState* user_chat_state_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SaveChatRoomGroup_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SaveChatRoomGroup_Request) */ {
 public:
  inline CChatRoom_SaveChatRoomGroup_Request() : CChatRoom_SaveChatRoomGroup_Request(nullptr) {}
  ~CChatRoom_SaveChatRoomGroup_Request() override;
  explicit constexpr CChatRoom_SaveChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SaveChatRoomGroup_Request(const CChatRoom_SaveChatRoomGroup_Request& from);
  CChatRoom_SaveChatRoomGroup_Request(CChatRoom_SaveChatRoomGroup_Request&& from) noexcept
    : CChatRoom_SaveChatRoomGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SaveChatRoomGroup_Request& operator=(const CChatRoom_SaveChatRoomGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SaveChatRoomGroup_Request& operator=(CChatRoom_SaveChatRoomGroup_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SaveChatRoomGroup_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SaveChatRoomGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SaveChatRoomGroup_Request*>(
               &_CChatRoom_SaveChatRoomGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CChatRoom_SaveChatRoomGroup_Request& a, CChatRoom_SaveChatRoomGroup_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SaveChatRoomGroup_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SaveChatRoomGroup_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SaveChatRoomGroup_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SaveChatRoomGroup_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SaveChatRoomGroup_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SaveChatRoomGroup_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SaveChatRoomGroup_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SaveChatRoomGroup_Request";
  }
  protected:
  explicit CChatRoom_SaveChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kChatGroupIdFieldNumber = 1,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SaveChatRoomGroup_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SaveChatRoomGroup_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_SaveChatRoomGroup_Response) */ {
 public:
  inline CChatRoom_SaveChatRoomGroup_Response() : CChatRoom_SaveChatRoomGroup_Response(nullptr) {}
  explicit constexpr CChatRoom_SaveChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SaveChatRoomGroup_Response(const CChatRoom_SaveChatRoomGroup_Response& from);
  CChatRoom_SaveChatRoomGroup_Response(CChatRoom_SaveChatRoomGroup_Response&& from) noexcept
    : CChatRoom_SaveChatRoomGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SaveChatRoomGroup_Response& operator=(const CChatRoom_SaveChatRoomGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SaveChatRoomGroup_Response& operator=(CChatRoom_SaveChatRoomGroup_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SaveChatRoomGroup_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SaveChatRoomGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SaveChatRoomGroup_Response*>(
               &_CChatRoom_SaveChatRoomGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CChatRoom_SaveChatRoomGroup_Response& a, CChatRoom_SaveChatRoomGroup_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SaveChatRoomGroup_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SaveChatRoomGroup_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SaveChatRoomGroup_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SaveChatRoomGroup_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_SaveChatRoomGroup_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_SaveChatRoomGroup_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SaveChatRoomGroup_Response";
  }
  protected:
  explicit CChatRoom_SaveChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_SaveChatRoomGroup_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_RenameChatRoomGroup_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_RenameChatRoomGroup_Request) */ {
 public:
  inline CChatRoom_RenameChatRoomGroup_Request() : CChatRoom_RenameChatRoomGroup_Request(nullptr) {}
  ~CChatRoom_RenameChatRoomGroup_Request() override;
  explicit constexpr CChatRoom_RenameChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_RenameChatRoomGroup_Request(const CChatRoom_RenameChatRoomGroup_Request& from);
  CChatRoom_RenameChatRoomGroup_Request(CChatRoom_RenameChatRoomGroup_Request&& from) noexcept
    : CChatRoom_RenameChatRoomGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RenameChatRoomGroup_Request& operator=(const CChatRoom_RenameChatRoomGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_RenameChatRoomGroup_Request& operator=(CChatRoom_RenameChatRoomGroup_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_RenameChatRoomGroup_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_RenameChatRoomGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RenameChatRoomGroup_Request*>(
               &_CChatRoom_RenameChatRoomGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CChatRoom_RenameChatRoomGroup_Request& a, CChatRoom_RenameChatRoomGroup_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_RenameChatRoomGroup_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_RenameChatRoomGroup_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_RenameChatRoomGroup_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_RenameChatRoomGroup_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_RenameChatRoomGroup_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_RenameChatRoomGroup_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_RenameChatRoomGroup_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_RenameChatRoomGroup_Request";
  }
  protected:
  explicit CChatRoom_RenameChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kChatGroupIdFieldNumber = 1,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_RenameChatRoomGroup_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_RenameChatRoomGroup_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_RenameChatRoomGroup_Response) */ {
 public:
  inline CChatRoom_RenameChatRoomGroup_Response() : CChatRoom_RenameChatRoomGroup_Response(nullptr) {}
  ~CChatRoom_RenameChatRoomGroup_Response() override;
  explicit constexpr CChatRoom_RenameChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_RenameChatRoomGroup_Response(const CChatRoom_RenameChatRoomGroup_Response& from);
  CChatRoom_RenameChatRoomGroup_Response(CChatRoom_RenameChatRoomGroup_Response&& from) noexcept
    : CChatRoom_RenameChatRoomGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RenameChatRoomGroup_Response& operator=(const CChatRoom_RenameChatRoomGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_RenameChatRoomGroup_Response& operator=(CChatRoom_RenameChatRoomGroup_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_RenameChatRoomGroup_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_RenameChatRoomGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RenameChatRoomGroup_Response*>(
               &_CChatRoom_RenameChatRoomGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CChatRoom_RenameChatRoomGroup_Response& a, CChatRoom_RenameChatRoomGroup_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_RenameChatRoomGroup_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_RenameChatRoomGroup_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_RenameChatRoomGroup_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_RenameChatRoomGroup_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_RenameChatRoomGroup_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_RenameChatRoomGroup_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_RenameChatRoomGroup_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_RenameChatRoomGroup_Response";
  }
  protected:
  explicit CChatRoom_RenameChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_RenameChatRoomGroup_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetChatRoomGroupTagline_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetChatRoomGroupTagline_Request) */ {
 public:
  inline CChatRoom_SetChatRoomGroupTagline_Request() : CChatRoom_SetChatRoomGroupTagline_Request(nullptr) {}
  ~CChatRoom_SetChatRoomGroupTagline_Request() override;
  explicit constexpr CChatRoom_SetChatRoomGroupTagline_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetChatRoomGroupTagline_Request(const CChatRoom_SetChatRoomGroupTagline_Request& from);
  CChatRoom_SetChatRoomGroupTagline_Request(CChatRoom_SetChatRoomGroupTagline_Request&& from) noexcept
    : CChatRoom_SetChatRoomGroupTagline_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetChatRoomGroupTagline_Request& operator=(const CChatRoom_SetChatRoomGroupTagline_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetChatRoomGroupTagline_Request& operator=(CChatRoom_SetChatRoomGroupTagline_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetChatRoomGroupTagline_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetChatRoomGroupTagline_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetChatRoomGroupTagline_Request*>(
               &_CChatRoom_SetChatRoomGroupTagline_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CChatRoom_SetChatRoomGroupTagline_Request& a, CChatRoom_SetChatRoomGroupTagline_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetChatRoomGroupTagline_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetChatRoomGroupTagline_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetChatRoomGroupTagline_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupTagline_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SetChatRoomGroupTagline_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SetChatRoomGroupTagline_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetChatRoomGroupTagline_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetChatRoomGroupTagline_Request";
  }
  protected:
  explicit CChatRoom_SetChatRoomGroupTagline_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTaglineFieldNumber = 2,
    kChatGroupIdFieldNumber = 1,
  };
  // optional string tagline = 2;
  bool has_tagline() const;
  private:
  bool _internal_has_tagline() const;
  public:
  void clear_tagline();
  const std::string& tagline() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_tagline(ArgT0&& arg0, ArgT... args);
  std::string* mutable_tagline();
  PROTOBUF_NODISCARD std::string* release_tagline();
  void set_allocated_tagline(std::string* tagline);
  private:
  const std::string& _internal_tagline() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tagline(const std::string& value);
  std::string* _internal_mutable_tagline();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SetChatRoomGroupTagline_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tagline_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetChatRoomGroupTagline_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_SetChatRoomGroupTagline_Response) */ {
 public:
  inline CChatRoom_SetChatRoomGroupTagline_Response() : CChatRoom_SetChatRoomGroupTagline_Response(nullptr) {}
  explicit constexpr CChatRoom_SetChatRoomGroupTagline_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetChatRoomGroupTagline_Response(const CChatRoom_SetChatRoomGroupTagline_Response& from);
  CChatRoom_SetChatRoomGroupTagline_Response(CChatRoom_SetChatRoomGroupTagline_Response&& from) noexcept
    : CChatRoom_SetChatRoomGroupTagline_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetChatRoomGroupTagline_Response& operator=(const CChatRoom_SetChatRoomGroupTagline_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetChatRoomGroupTagline_Response& operator=(CChatRoom_SetChatRoomGroupTagline_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetChatRoomGroupTagline_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetChatRoomGroupTagline_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetChatRoomGroupTagline_Response*>(
               &_CChatRoom_SetChatRoomGroupTagline_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CChatRoom_SetChatRoomGroupTagline_Response& a, CChatRoom_SetChatRoomGroupTagline_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetChatRoomGroupTagline_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetChatRoomGroupTagline_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetChatRoomGroupTagline_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupTagline_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_SetChatRoomGroupTagline_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_SetChatRoomGroupTagline_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetChatRoomGroupTagline_Response";
  }
  protected:
  explicit CChatRoom_SetChatRoomGroupTagline_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_SetChatRoomGroupTagline_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetChatRoomGroupAvatar_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetChatRoomGroupAvatar_Request) */ {
 public:
  inline CChatRoom_SetChatRoomGroupAvatar_Request() : CChatRoom_SetChatRoomGroupAvatar_Request(nullptr) {}
  ~CChatRoom_SetChatRoomGroupAvatar_Request() override;
  explicit constexpr CChatRoom_SetChatRoomGroupAvatar_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetChatRoomGroupAvatar_Request(const CChatRoom_SetChatRoomGroupAvatar_Request& from);
  CChatRoom_SetChatRoomGroupAvatar_Request(CChatRoom_SetChatRoomGroupAvatar_Request&& from) noexcept
    : CChatRoom_SetChatRoomGroupAvatar_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetChatRoomGroupAvatar_Request& operator=(const CChatRoom_SetChatRoomGroupAvatar_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetChatRoomGroupAvatar_Request& operator=(CChatRoom_SetChatRoomGroupAvatar_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetChatRoomGroupAvatar_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetChatRoomGroupAvatar_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetChatRoomGroupAvatar_Request*>(
               &_CChatRoom_SetChatRoomGroupAvatar_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CChatRoom_SetChatRoomGroupAvatar_Request& a, CChatRoom_SetChatRoomGroupAvatar_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetChatRoomGroupAvatar_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetChatRoomGroupAvatar_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetChatRoomGroupAvatar_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupAvatar_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SetChatRoomGroupAvatar_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SetChatRoomGroupAvatar_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetChatRoomGroupAvatar_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetChatRoomGroupAvatar_Request";
  }
  protected:
  explicit CChatRoom_SetChatRoomGroupAvatar_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAvatarShaFieldNumber = 2,
    kChatGroupIdFieldNumber = 1,
  };
  // optional bytes avatar_sha = 2;
  bool has_avatar_sha() const;
  private:
  bool _internal_has_avatar_sha() const;
  public:
  void clear_avatar_sha();
  const std::string& avatar_sha() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_avatar_sha(ArgT0&& arg0, ArgT... args);
  std::string* mutable_avatar_sha();
  PROTOBUF_NODISCARD std::string* release_avatar_sha();
  void set_allocated_avatar_sha(std::string* avatar_sha);
  private:
  const std::string& _internal_avatar_sha() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_avatar_sha(const std::string& value);
  std::string* _internal_mutable_avatar_sha();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SetChatRoomGroupAvatar_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_sha_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetChatRoomGroupAvatar_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_SetChatRoomGroupAvatar_Response) */ {
 public:
  inline CChatRoom_SetChatRoomGroupAvatar_Response() : CChatRoom_SetChatRoomGroupAvatar_Response(nullptr) {}
  explicit constexpr CChatRoom_SetChatRoomGroupAvatar_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetChatRoomGroupAvatar_Response(const CChatRoom_SetChatRoomGroupAvatar_Response& from);
  CChatRoom_SetChatRoomGroupAvatar_Response(CChatRoom_SetChatRoomGroupAvatar_Response&& from) noexcept
    : CChatRoom_SetChatRoomGroupAvatar_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetChatRoomGroupAvatar_Response& operator=(const CChatRoom_SetChatRoomGroupAvatar_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetChatRoomGroupAvatar_Response& operator=(CChatRoom_SetChatRoomGroupAvatar_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetChatRoomGroupAvatar_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetChatRoomGroupAvatar_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetChatRoomGroupAvatar_Response*>(
               &_CChatRoom_SetChatRoomGroupAvatar_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CChatRoom_SetChatRoomGroupAvatar_Response& a, CChatRoom_SetChatRoomGroupAvatar_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetChatRoomGroupAvatar_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetChatRoomGroupAvatar_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetChatRoomGroupAvatar_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupAvatar_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_SetChatRoomGroupAvatar_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_SetChatRoomGroupAvatar_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetChatRoomGroupAvatar_Response";
  }
  protected:
  explicit CChatRoom_SetChatRoomGroupAvatar_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_SetChatRoomGroupAvatar_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetChatRoomGroupWatchingBroadcast_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetChatRoomGroupWatchingBroadcast_Request) */ {
 public:
  inline CChatRoom_SetChatRoomGroupWatchingBroadcast_Request() : CChatRoom_SetChatRoomGroupWatchingBroadcast_Request(nullptr) {}
  ~CChatRoom_SetChatRoomGroupWatchingBroadcast_Request() override;
  explicit constexpr CChatRoom_SetChatRoomGroupWatchingBroadcast_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetChatRoomGroupWatchingBroadcast_Request(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& from);
  CChatRoom_SetChatRoomGroupWatchingBroadcast_Request(CChatRoom_SetChatRoomGroupWatchingBroadcast_Request&& from) noexcept
    : CChatRoom_SetChatRoomGroupWatchingBroadcast_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& operator=(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& operator=(CChatRoom_SetChatRoomGroupWatchingBroadcast_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetChatRoomGroupWatchingBroadcast_Request*>(
               &_CChatRoom_SetChatRoomGroupWatchingBroadcast_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& a, CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupWatchingBroadcast_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetChatRoomGroupWatchingBroadcast_Request";
  }
  protected:
  explicit CChatRoom_SetChatRoomGroupWatchingBroadcast_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kWatchingBroadcastChannelIdFieldNumber = 3,
    kWatchingBroadcastAccountidFieldNumber = 2,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 watching_broadcast_channel_id = 3;
  bool has_watching_broadcast_channel_id() const;
  private:
  bool _internal_has_watching_broadcast_channel_id() const;
  public:
  void clear_watching_broadcast_channel_id();
  uint64_t watching_broadcast_channel_id() const;
  void set_watching_broadcast_channel_id(uint64_t value);
  private:
  uint64_t _internal_watching_broadcast_channel_id() const;
  void _internal_set_watching_broadcast_channel_id(uint64_t value);
  public:

  // optional uint32 watching_broadcast_accountid = 2;
  bool has_watching_broadcast_accountid() const;
  private:
  bool _internal_has_watching_broadcast_accountid() const;
  public:
  void clear_watching_broadcast_accountid();
  uint32_t watching_broadcast_accountid() const;
  void set_watching_broadcast_accountid(uint32_t value);
  private:
  uint32_t _internal_watching_broadcast_accountid() const;
  void _internal_set_watching_broadcast_accountid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SetChatRoomGroupWatchingBroadcast_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t watching_broadcast_channel_id_;
  uint32_t watching_broadcast_accountid_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetChatRoomGroupWatchingBroadcast_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_SetChatRoomGroupWatchingBroadcast_Response) */ {
 public:
  inline CChatRoom_SetChatRoomGroupWatchingBroadcast_Response() : CChatRoom_SetChatRoomGroupWatchingBroadcast_Response(nullptr) {}
  explicit constexpr CChatRoom_SetChatRoomGroupWatchingBroadcast_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetChatRoomGroupWatchingBroadcast_Response(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& from);
  CChatRoom_SetChatRoomGroupWatchingBroadcast_Response(CChatRoom_SetChatRoomGroupWatchingBroadcast_Response&& from) noexcept
    : CChatRoom_SetChatRoomGroupWatchingBroadcast_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& operator=(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& operator=(CChatRoom_SetChatRoomGroupWatchingBroadcast_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetChatRoomGroupWatchingBroadcast_Response*>(
               &_CChatRoom_SetChatRoomGroupWatchingBroadcast_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& a, CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetChatRoomGroupWatchingBroadcast_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_SetChatRoomGroupWatchingBroadcast_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetChatRoomGroupWatchingBroadcast_Response";
  }
  protected:
  explicit CChatRoom_SetChatRoomGroupWatchingBroadcast_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_SetChatRoomGroupWatchingBroadcast_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_JoinMiniGameForChatRoomGroup_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_JoinMiniGameForChatRoomGroup_Request) */ {
 public:
  inline CChatRoom_JoinMiniGameForChatRoomGroup_Request() : CChatRoom_JoinMiniGameForChatRoomGroup_Request(nullptr) {}
  ~CChatRoom_JoinMiniGameForChatRoomGroup_Request() override;
  explicit constexpr CChatRoom_JoinMiniGameForChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_JoinMiniGameForChatRoomGroup_Request(const CChatRoom_JoinMiniGameForChatRoomGroup_Request& from);
  CChatRoom_JoinMiniGameForChatRoomGroup_Request(CChatRoom_JoinMiniGameForChatRoomGroup_Request&& from) noexcept
    : CChatRoom_JoinMiniGameForChatRoomGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_JoinMiniGameForChatRoomGroup_Request& operator=(const CChatRoom_JoinMiniGameForChatRoomGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_JoinMiniGameForChatRoomGroup_Request& operator=(CChatRoom_JoinMiniGameForChatRoomGroup_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_JoinMiniGameForChatRoomGroup_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_JoinMiniGameForChatRoomGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_JoinMiniGameForChatRoomGroup_Request*>(
               &_CChatRoom_JoinMiniGameForChatRoomGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CChatRoom_JoinMiniGameForChatRoomGroup_Request& a, CChatRoom_JoinMiniGameForChatRoomGroup_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_JoinMiniGameForChatRoomGroup_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_JoinMiniGameForChatRoomGroup_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_JoinMiniGameForChatRoomGroup_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_JoinMiniGameForChatRoomGroup_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_JoinMiniGameForChatRoomGroup_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_JoinMiniGameForChatRoomGroup_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_JoinMiniGameForChatRoomGroup_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_JoinMiniGameForChatRoomGroup_Request";
  }
  protected:
  explicit CChatRoom_JoinMiniGameForChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_JoinMiniGameForChatRoomGroup_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_JoinMiniGameForChatRoomGroup_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_JoinMiniGameForChatRoomGroup_Response) */ {
 public:
  inline CChatRoom_JoinMiniGameForChatRoomGroup_Response() : CChatRoom_JoinMiniGameForChatRoomGroup_Response(nullptr) {}
  ~CChatRoom_JoinMiniGameForChatRoomGroup_Response() override;
  explicit constexpr CChatRoom_JoinMiniGameForChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_JoinMiniGameForChatRoomGroup_Response(const CChatRoom_JoinMiniGameForChatRoomGroup_Response& from);
  CChatRoom_JoinMiniGameForChatRoomGroup_Response(CChatRoom_JoinMiniGameForChatRoomGroup_Response&& from) noexcept
    : CChatRoom_JoinMiniGameForChatRoomGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_JoinMiniGameForChatRoomGroup_Response& operator=(const CChatRoom_JoinMiniGameForChatRoomGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_JoinMiniGameForChatRoomGroup_Response& operator=(CChatRoom_JoinMiniGameForChatRoomGroup_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_JoinMiniGameForChatRoomGroup_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_JoinMiniGameForChatRoomGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_JoinMiniGameForChatRoomGroup_Response*>(
               &_CChatRoom_JoinMiniGameForChatRoomGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CChatRoom_JoinMiniGameForChatRoomGroup_Response& a, CChatRoom_JoinMiniGameForChatRoomGroup_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_JoinMiniGameForChatRoomGroup_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_JoinMiniGameForChatRoomGroup_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_JoinMiniGameForChatRoomGroup_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_JoinMiniGameForChatRoomGroup_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_JoinMiniGameForChatRoomGroup_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_JoinMiniGameForChatRoomGroup_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_JoinMiniGameForChatRoomGroup_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_JoinMiniGameForChatRoomGroup_Response";
  }
  protected:
  explicit CChatRoom_JoinMiniGameForChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinigameIdFieldNumber = 1,
  };
  // optional uint64 minigame_id = 1;
  bool has_minigame_id() const;
  private:
  bool _internal_has_minigame_id() const;
  public:
  void clear_minigame_id();
  uint64_t minigame_id() const;
  void set_minigame_id(uint64_t value);
  private:
  uint64_t _internal_minigame_id() const;
  void _internal_set_minigame_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_JoinMiniGameForChatRoomGroup_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t minigame_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_EndMiniGameForChatRoomGroup_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_EndMiniGameForChatRoomGroup_Request) */ {
 public:
  inline CChatRoom_EndMiniGameForChatRoomGroup_Request() : CChatRoom_EndMiniGameForChatRoomGroup_Request(nullptr) {}
  ~CChatRoom_EndMiniGameForChatRoomGroup_Request() override;
  explicit constexpr CChatRoom_EndMiniGameForChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_EndMiniGameForChatRoomGroup_Request(const CChatRoom_EndMiniGameForChatRoomGroup_Request& from);
  CChatRoom_EndMiniGameForChatRoomGroup_Request(CChatRoom_EndMiniGameForChatRoomGroup_Request&& from) noexcept
    : CChatRoom_EndMiniGameForChatRoomGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_EndMiniGameForChatRoomGroup_Request& operator=(const CChatRoom_EndMiniGameForChatRoomGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_EndMiniGameForChatRoomGroup_Request& operator=(CChatRoom_EndMiniGameForChatRoomGroup_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_EndMiniGameForChatRoomGroup_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_EndMiniGameForChatRoomGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_EndMiniGameForChatRoomGroup_Request*>(
               &_CChatRoom_EndMiniGameForChatRoomGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CChatRoom_EndMiniGameForChatRoomGroup_Request& a, CChatRoom_EndMiniGameForChatRoomGroup_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_EndMiniGameForChatRoomGroup_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_EndMiniGameForChatRoomGroup_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_EndMiniGameForChatRoomGroup_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_EndMiniGameForChatRoomGroup_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_EndMiniGameForChatRoomGroup_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_EndMiniGameForChatRoomGroup_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_EndMiniGameForChatRoomGroup_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_EndMiniGameForChatRoomGroup_Request";
  }
  protected:
  explicit CChatRoom_EndMiniGameForChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
    kMinigameIdFieldNumber = 3,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional uint64 minigame_id = 3;
  bool has_minigame_id() const;
  private:
  bool _internal_has_minigame_id() const;
  public:
  void clear_minigame_id();
  uint64_t minigame_id() const;
  void set_minigame_id(uint64_t value);
  private:
  uint64_t _internal_minigame_id() const;
  void _internal_set_minigame_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_EndMiniGameForChatRoomGroup_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  uint64_t minigame_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_EndMiniGameForChatRoomGroup_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_EndMiniGameForChatRoomGroup_Response) */ {
 public:
  inline CChatRoom_EndMiniGameForChatRoomGroup_Response() : CChatRoom_EndMiniGameForChatRoomGroup_Response(nullptr) {}
  explicit constexpr CChatRoom_EndMiniGameForChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_EndMiniGameForChatRoomGroup_Response(const CChatRoom_EndMiniGameForChatRoomGroup_Response& from);
  CChatRoom_EndMiniGameForChatRoomGroup_Response(CChatRoom_EndMiniGameForChatRoomGroup_Response&& from) noexcept
    : CChatRoom_EndMiniGameForChatRoomGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_EndMiniGameForChatRoomGroup_Response& operator=(const CChatRoom_EndMiniGameForChatRoomGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_EndMiniGameForChatRoomGroup_Response& operator=(CChatRoom_EndMiniGameForChatRoomGroup_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_EndMiniGameForChatRoomGroup_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_EndMiniGameForChatRoomGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_EndMiniGameForChatRoomGroup_Response*>(
               &_CChatRoom_EndMiniGameForChatRoomGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CChatRoom_EndMiniGameForChatRoomGroup_Response& a, CChatRoom_EndMiniGameForChatRoomGroup_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_EndMiniGameForChatRoomGroup_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_EndMiniGameForChatRoomGroup_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_EndMiniGameForChatRoomGroup_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_EndMiniGameForChatRoomGroup_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_EndMiniGameForChatRoomGroup_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_EndMiniGameForChatRoomGroup_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_EndMiniGameForChatRoomGroup_Response";
  }
  protected:
  explicit CChatRoom_EndMiniGameForChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_EndMiniGameForChatRoomGroup_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_MuteUser_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_MuteUser_Request) */ {
 public:
  inline CChatRoom_MuteUser_Request() : CChatRoom_MuteUser_Request(nullptr) {}
  ~CChatRoom_MuteUser_Request() override;
  explicit constexpr CChatRoom_MuteUser_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_MuteUser_Request(const CChatRoom_MuteUser_Request& from);
  CChatRoom_MuteUser_Request(CChatRoom_MuteUser_Request&& from) noexcept
    : CChatRoom_MuteUser_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_MuteUser_Request& operator=(const CChatRoom_MuteUser_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_MuteUser_Request& operator=(CChatRoom_MuteUser_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_MuteUser_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_MuteUser_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_MuteUser_Request*>(
               &_CChatRoom_MuteUser_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CChatRoom_MuteUser_Request& a, CChatRoom_MuteUser_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_MuteUser_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_MuteUser_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_MuteUser_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_MuteUser_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_MuteUser_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_MuteUser_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_MuteUser_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_MuteUser_Request";
  }
  protected:
  explicit CChatRoom_MuteUser_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kSteamidFieldNumber = 2,
    kExpirationFieldNumber = 3,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  uint64_t steamid() const;
  void set_steamid(uint64_t value);
  private:
  uint64_t _internal_steamid() const;
  void _internal_set_steamid(uint64_t value);
  public:

  // optional int32 expiration = 3;
  bool has_expiration() const;
  private:
  bool _internal_has_expiration() const;
  public:
  void clear_expiration();
  int32_t expiration() const;
  void set_expiration(int32_t value);
  private:
  int32_t _internal_expiration() const;
  void _internal_set_expiration(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_MuteUser_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t steamid_;
  int32_t expiration_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_MuteUser_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_MuteUser_Response) */ {
 public:
  inline CChatRoom_MuteUser_Response() : CChatRoom_MuteUser_Response(nullptr) {}
  explicit constexpr CChatRoom_MuteUser_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_MuteUser_Response(const CChatRoom_MuteUser_Response& from);
  CChatRoom_MuteUser_Response(CChatRoom_MuteUser_Response&& from) noexcept
    : CChatRoom_MuteUser_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_MuteUser_Response& operator=(const CChatRoom_MuteUser_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_MuteUser_Response& operator=(CChatRoom_MuteUser_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_MuteUser_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_MuteUser_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_MuteUser_Response*>(
               &_CChatRoom_MuteUser_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CChatRoom_MuteUser_Response& a, CChatRoom_MuteUser_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_MuteUser_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_MuteUser_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_MuteUser_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_MuteUser_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_MuteUser_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_MuteUser_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_MuteUser_Response";
  }
  protected:
  explicit CChatRoom_MuteUser_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_MuteUser_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_KickUser_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_KickUser_Request) */ {
 public:
  inline CChatRoom_KickUser_Request() : CChatRoom_KickUser_Request(nullptr) {}
  ~CChatRoom_KickUser_Request() override;
  explicit constexpr CChatRoom_KickUser_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_KickUser_Request(const CChatRoom_KickUser_Request& from);
  CChatRoom_KickUser_Request(CChatRoom_KickUser_Request&& from) noexcept
    : CChatRoom_KickUser_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_KickUser_Request& operator=(const CChatRoom_KickUser_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_KickUser_Request& operator=(CChatRoom_KickUser_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_KickUser_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_KickUser_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_KickUser_Request*>(
               &_CChatRoom_KickUser_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CChatRoom_KickUser_Request& a, CChatRoom_KickUser_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_KickUser_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_KickUser_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_KickUser_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_KickUser_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_KickUser_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_KickUser_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_KickUser_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_KickUser_Request";
  }
  protected:
  explicit CChatRoom_KickUser_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kSteamidFieldNumber = 2,
    kExpirationFieldNumber = 3,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  uint64_t steamid() const;
  void set_steamid(uint64_t value);
  private:
  uint64_t _internal_steamid() const;
  void _internal_set_steamid(uint64_t value);
  public:

  // optional int32 expiration = 3;
  bool has_expiration() const;
  private:
  bool _internal_has_expiration() const;
  public:
  void clear_expiration();
  int32_t expiration() const;
  void set_expiration(int32_t value);
  private:
  int32_t _internal_expiration() const;
  void _internal_set_expiration(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_KickUser_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t steamid_;
  int32_t expiration_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_KickUser_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_KickUser_Response) */ {
 public:
  inline CChatRoom_KickUser_Response() : CChatRoom_KickUser_Response(nullptr) {}
  explicit constexpr CChatRoom_KickUser_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_KickUser_Response(const CChatRoom_KickUser_Response& from);
  CChatRoom_KickUser_Response(CChatRoom_KickUser_Response&& from) noexcept
    : CChatRoom_KickUser_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_KickUser_Response& operator=(const CChatRoom_KickUser_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_KickUser_Response& operator=(CChatRoom_KickUser_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_KickUser_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_KickUser_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_KickUser_Response*>(
               &_CChatRoom_KickUser_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CChatRoom_KickUser_Response& a, CChatRoom_KickUser_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_KickUser_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_KickUser_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_KickUser_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_KickUser_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_KickUser_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_KickUser_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_KickUser_Response";
  }
  protected:
  explicit CChatRoom_KickUser_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_KickUser_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetUserBanState_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetUserBanState_Request) */ {
 public:
  inline CChatRoom_SetUserBanState_Request() : CChatRoom_SetUserBanState_Request(nullptr) {}
  ~CChatRoom_SetUserBanState_Request() override;
  explicit constexpr CChatRoom_SetUserBanState_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetUserBanState_Request(const CChatRoom_SetUserBanState_Request& from);
  CChatRoom_SetUserBanState_Request(CChatRoom_SetUserBanState_Request&& from) noexcept
    : CChatRoom_SetUserBanState_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetUserBanState_Request& operator=(const CChatRoom_SetUserBanState_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetUserBanState_Request& operator=(CChatRoom_SetUserBanState_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetUserBanState_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetUserBanState_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetUserBanState_Request*>(
               &_CChatRoom_SetUserBanState_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CChatRoom_SetUserBanState_Request& a, CChatRoom_SetUserBanState_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetUserBanState_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetUserBanState_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetUserBanState_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetUserBanState_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SetUserBanState_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SetUserBanState_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetUserBanState_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetUserBanState_Request";
  }
  protected:
  explicit CChatRoom_SetUserBanState_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kSteamidFieldNumber = 2,
    kBanStateFieldNumber = 3,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  uint64_t steamid() const;
  void set_steamid(uint64_t value);
  private:
  uint64_t _internal_steamid() const;
  void _internal_set_steamid(uint64_t value);
  public:

  // optional bool ban_state = 3;
  bool has_ban_state() const;
  private:
  bool _internal_has_ban_state() const;
  public:
  void clear_ban_state();
  bool ban_state() const;
  void set_ban_state(bool value);
  private:
  bool _internal_ban_state() const;
  void _internal_set_ban_state(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SetUserBanState_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t steamid_;
  bool ban_state_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetUserBanState_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_SetUserBanState_Response) */ {
 public:
  inline CChatRoom_SetUserBanState_Response() : CChatRoom_SetUserBanState_Response(nullptr) {}
  explicit constexpr CChatRoom_SetUserBanState_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetUserBanState_Response(const CChatRoom_SetUserBanState_Response& from);
  CChatRoom_SetUserBanState_Response(CChatRoom_SetUserBanState_Response&& from) noexcept
    : CChatRoom_SetUserBanState_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetUserBanState_Response& operator=(const CChatRoom_SetUserBanState_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetUserBanState_Response& operator=(CChatRoom_SetUserBanState_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetUserBanState_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetUserBanState_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetUserBanState_Response*>(
               &_CChatRoom_SetUserBanState_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CChatRoom_SetUserBanState_Response& a, CChatRoom_SetUserBanState_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetUserBanState_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetUserBanState_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetUserBanState_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetUserBanState_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_SetUserBanState_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_SetUserBanState_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetUserBanState_Response";
  }
  protected:
  explicit CChatRoom_SetUserBanState_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_SetUserBanState_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_RevokeInvite_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_RevokeInvite_Request) */ {
 public:
  inline CChatRoom_RevokeInvite_Request() : CChatRoom_RevokeInvite_Request(nullptr) {}
  ~CChatRoom_RevokeInvite_Request() override;
  explicit constexpr CChatRoom_RevokeInvite_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_RevokeInvite_Request(const CChatRoom_RevokeInvite_Request& from);
  CChatRoom_RevokeInvite_Request(CChatRoom_RevokeInvite_Request&& from) noexcept
    : CChatRoom_RevokeInvite_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RevokeInvite_Request& operator=(const CChatRoom_RevokeInvite_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_RevokeInvite_Request& operator=(CChatRoom_RevokeInvite_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_RevokeInvite_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_RevokeInvite_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RevokeInvite_Request*>(
               &_CChatRoom_RevokeInvite_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CChatRoom_RevokeInvite_Request& a, CChatRoom_RevokeInvite_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_RevokeInvite_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_RevokeInvite_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_RevokeInvite_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_RevokeInvite_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_RevokeInvite_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_RevokeInvite_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_RevokeInvite_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_RevokeInvite_Request";
  }
  protected:
  explicit CChatRoom_RevokeInvite_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kSteamidFieldNumber = 2,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  uint64_t steamid() const;
  void set_steamid(uint64_t value);
  private:
  uint64_t _internal_steamid() const;
  void _internal_set_steamid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_RevokeInvite_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t steamid_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_RevokeInvite_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_RevokeInvite_Response) */ {
 public:
  inline CChatRoom_RevokeInvite_Response() : CChatRoom_RevokeInvite_Response(nullptr) {}
  explicit constexpr CChatRoom_RevokeInvite_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_RevokeInvite_Response(const CChatRoom_RevokeInvite_Response& from);
  CChatRoom_RevokeInvite_Response(CChatRoom_RevokeInvite_Response&& from) noexcept
    : CChatRoom_RevokeInvite_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RevokeInvite_Response& operator=(const CChatRoom_RevokeInvite_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_RevokeInvite_Response& operator=(CChatRoom_RevokeInvite_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_RevokeInvite_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_RevokeInvite_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RevokeInvite_Response*>(
               &_CChatRoom_RevokeInvite_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CChatRoom_RevokeInvite_Response& a, CChatRoom_RevokeInvite_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_RevokeInvite_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_RevokeInvite_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_RevokeInvite_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_RevokeInvite_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_RevokeInvite_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_RevokeInvite_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_RevokeInvite_Response";
  }
  protected:
  explicit CChatRoom_RevokeInvite_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_RevokeInvite_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_CreateRole_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateRole_Request) */ {
 public:
  inline CChatRoom_CreateRole_Request() : CChatRoom_CreateRole_Request(nullptr) {}
  ~CChatRoom_CreateRole_Request() override;
  explicit constexpr CChatRoom_CreateRole_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_CreateRole_Request(const CChatRoom_CreateRole_Request& from);
  CChatRoom_CreateRole_Request(CChatRoom_CreateRole_Request&& from) noexcept
    : CChatRoom_CreateRole_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateRole_Request& operator=(const CChatRoom_CreateRole_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_CreateRole_Request& operator=(CChatRoom_CreateRole_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_CreateRole_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_CreateRole_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateRole_Request*>(
               &_CChatRoom_CreateRole_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CChatRoom_CreateRole_Request& a, CChatRoom_CreateRole_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_CreateRole_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_CreateRole_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_CreateRole_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_CreateRole_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_CreateRole_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_CreateRole_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateRole_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_CreateRole_Request";
  }
  protected:
  explicit CChatRoom_CreateRole_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kChatGroupIdFieldNumber = 1,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateRole_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_CreateRole_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateRole_Response) */ {
 public:
  inline CChatRoom_CreateRole_Response() : CChatRoom_CreateRole_Response(nullptr) {}
  ~CChatRoom_CreateRole_Response() override;
  explicit constexpr CChatRoom_CreateRole_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_CreateRole_Response(const CChatRoom_CreateRole_Response& from);
  CChatRoom_CreateRole_Response(CChatRoom_CreateRole_Response&& from) noexcept
    : CChatRoom_CreateRole_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateRole_Response& operator=(const CChatRoom_CreateRole_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_CreateRole_Response& operator=(CChatRoom_CreateRole_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_CreateRole_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_CreateRole_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateRole_Response*>(
               &_CChatRoom_CreateRole_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CChatRoom_CreateRole_Response& a, CChatRoom_CreateRole_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_CreateRole_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_CreateRole_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_CreateRole_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_CreateRole_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_CreateRole_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_CreateRole_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateRole_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_CreateRole_Response";
  }
  protected:
  explicit CChatRoom_CreateRole_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionsFieldNumber = 2,
  };
  // optional .CChatRoleActions actions = 2;
  bool has_actions() const;
  private:
  bool _internal_has_actions() const;
  public:
  void clear_actions();
  const ::CChatRoleActions& actions() const;
  PROTOBUF_NODISCARD ::CChatRoleActions* release_actions();
  ::CChatRoleActions* mutable_actions();
  void set_allocated_actions(::CChatRoleActions* actions);
  private:
  const ::CChatRoleActions& _internal_actions() const;
  ::CChatRoleActions* _internal_mutable_actions();
  public:
  void unsafe_arena_set_allocated_actions(
      ::CChatRoleActions* actions);
  ::CChatRoleActions* unsafe_arena_release_actions();

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateRole_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CChatRoleActions* actions_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetRoles_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetRoles_Request) */ {
 public:
  inline CChatRoom_GetRoles_Request() : CChatRoom_GetRoles_Request(nullptr) {}
  ~CChatRoom_GetRoles_Request() override;
  explicit constexpr CChatRoom_GetRoles_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetRoles_Request(const CChatRoom_GetRoles_Request& from);
  CChatRoom_GetRoles_Request(CChatRoom_GetRoles_Request&& from) noexcept
    : CChatRoom_GetRoles_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetRoles_Request& operator=(const CChatRoom_GetRoles_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetRoles_Request& operator=(CChatRoom_GetRoles_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetRoles_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetRoles_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetRoles_Request*>(
               &_CChatRoom_GetRoles_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CChatRoom_GetRoles_Request& a, CChatRoom_GetRoles_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetRoles_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetRoles_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetRoles_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetRoles_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetRoles_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetRoles_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetRoles_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetRoles_Request";
  }
  protected:
  explicit CChatRoom_GetRoles_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetRoles_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetRoles_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetRoles_Response) */ {
 public:
  inline CChatRoom_GetRoles_Response() : CChatRoom_GetRoles_Response(nullptr) {}
  ~CChatRoom_GetRoles_Response() override;
  explicit constexpr CChatRoom_GetRoles_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetRoles_Response(const CChatRoom_GetRoles_Response& from);
  CChatRoom_GetRoles_Response(CChatRoom_GetRoles_Response&& from) noexcept
    : CChatRoom_GetRoles_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetRoles_Response& operator=(const CChatRoom_GetRoles_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetRoles_Response& operator=(CChatRoom_GetRoles_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetRoles_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetRoles_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetRoles_Response*>(
               &_CChatRoom_GetRoles_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CChatRoom_GetRoles_Response& a, CChatRoom_GetRoles_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetRoles_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetRoles_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetRoles_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetRoles_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetRoles_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetRoles_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetRoles_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetRoles_Response";
  }
  protected:
  explicit CChatRoom_GetRoles_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRolesFieldNumber = 1,
  };
  // repeated .CChatRole roles = 1;
  int roles_size() const;
  private:
  int _internal_roles_size() const;
  public:
  void clear_roles();
  ::CChatRole* mutable_roles(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRole >*
      mutable_roles();
  private:
  const ::CChatRole& _internal_roles(int index) const;
  ::CChatRole* _internal_add_roles();
  public:
  const ::CChatRole& roles(int index) const;
  ::CChatRole* add_roles();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRole >&
      roles() const;

  // @@protoc_insertion_point(class_scope:CChatRoom_GetRoles_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRole > roles_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_RenameRole_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_RenameRole_Request) */ {
 public:
  inline CChatRoom_RenameRole_Request() : CChatRoom_RenameRole_Request(nullptr) {}
  ~CChatRoom_RenameRole_Request() override;
  explicit constexpr CChatRoom_RenameRole_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_RenameRole_Request(const CChatRoom_RenameRole_Request& from);
  CChatRoom_RenameRole_Request(CChatRoom_RenameRole_Request&& from) noexcept
    : CChatRoom_RenameRole_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RenameRole_Request& operator=(const CChatRoom_RenameRole_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_RenameRole_Request& operator=(CChatRoom_RenameRole_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_RenameRole_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_RenameRole_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RenameRole_Request*>(
               &_CChatRoom_RenameRole_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CChatRoom_RenameRole_Request& a, CChatRoom_RenameRole_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_RenameRole_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_RenameRole_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_RenameRole_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_RenameRole_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_RenameRole_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_RenameRole_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_RenameRole_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_RenameRole_Request";
  }
  protected:
  explicit CChatRoom_RenameRole_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kChatGroupIdFieldNumber = 1,
    kRoleIdFieldNumber = 2,
  };
  // optional string name = 3;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 role_id = 2;
  bool has_role_id() const;
  private:
  bool _internal_has_role_id() const;
  public:
  void clear_role_id();
  uint64_t role_id() const;
  void set_role_id(uint64_t value);
  private:
  uint64_t _internal_role_id() const;
  void _internal_set_role_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_RenameRole_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  uint64_t chat_group_id_;
  uint64_t role_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_RenameRole_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_RenameRole_Response) */ {
 public:
  inline CChatRoom_RenameRole_Response() : CChatRoom_RenameRole_Response(nullptr) {}
  explicit constexpr CChatRoom_RenameRole_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_RenameRole_Response(const CChatRoom_RenameRole_Response& from);
  CChatRoom_RenameRole_Response(CChatRoom_RenameRole_Response&& from) noexcept
    : CChatRoom_RenameRole_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RenameRole_Response& operator=(const CChatRoom_RenameRole_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_RenameRole_Response& operator=(CChatRoom_RenameRole_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_RenameRole_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_RenameRole_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RenameRole_Response*>(
               &_CChatRoom_RenameRole_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CChatRoom_RenameRole_Response& a, CChatRoom_RenameRole_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_RenameRole_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_RenameRole_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_RenameRole_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_RenameRole_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_RenameRole_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_RenameRole_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_RenameRole_Response";
  }
  protected:
  explicit CChatRoom_RenameRole_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_RenameRole_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_ReorderRole_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ReorderRole_Request) */ {
 public:
  inline CChatRoom_ReorderRole_Request() : CChatRoom_ReorderRole_Request(nullptr) {}
  ~CChatRoom_ReorderRole_Request() override;
  explicit constexpr CChatRoom_ReorderRole_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_ReorderRole_Request(const CChatRoom_ReorderRole_Request& from);
  CChatRoom_ReorderRole_Request(CChatRoom_ReorderRole_Request&& from) noexcept
    : CChatRoom_ReorderRole_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ReorderRole_Request& operator=(const CChatRoom_ReorderRole_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_ReorderRole_Request& operator=(CChatRoom_ReorderRole_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_ReorderRole_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_ReorderRole_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ReorderRole_Request*>(
               &_CChatRoom_ReorderRole_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CChatRoom_ReorderRole_Request& a, CChatRoom_ReorderRole_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_ReorderRole_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_ReorderRole_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_ReorderRole_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_ReorderRole_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_ReorderRole_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_ReorderRole_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ReorderRole_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_ReorderRole_Request";
  }
  protected:
  explicit CChatRoom_ReorderRole_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kRoleIdFieldNumber = 2,
    kOrdinalFieldNumber = 3,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 role_id = 2;
  bool has_role_id() const;
  private:
  bool _internal_has_role_id() const;
  public:
  void clear_role_id();
  uint64_t role_id() const;
  void set_role_id(uint64_t value);
  private:
  uint64_t _internal_role_id() const;
  void _internal_set_role_id(uint64_t value);
  public:

  // optional uint32 ordinal = 3;
  bool has_ordinal() const;
  private:
  bool _internal_has_ordinal() const;
  public:
  void clear_ordinal();
  uint32_t ordinal() const;
  void set_ordinal(uint32_t value);
  private:
  uint32_t _internal_ordinal() const;
  void _internal_set_ordinal(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_ReorderRole_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t role_id_;
  uint32_t ordinal_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_ReorderRole_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_ReorderRole_Response) */ {
 public:
  inline CChatRoom_ReorderRole_Response() : CChatRoom_ReorderRole_Response(nullptr) {}
  explicit constexpr CChatRoom_ReorderRole_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_ReorderRole_Response(const CChatRoom_ReorderRole_Response& from);
  CChatRoom_ReorderRole_Response(CChatRoom_ReorderRole_Response&& from) noexcept
    : CChatRoom_ReorderRole_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ReorderRole_Response& operator=(const CChatRoom_ReorderRole_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_ReorderRole_Response& operator=(CChatRoom_ReorderRole_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_ReorderRole_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_ReorderRole_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ReorderRole_Response*>(
               &_CChatRoom_ReorderRole_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CChatRoom_ReorderRole_Response& a, CChatRoom_ReorderRole_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_ReorderRole_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_ReorderRole_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_ReorderRole_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_ReorderRole_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_ReorderRole_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_ReorderRole_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_ReorderRole_Response";
  }
  protected:
  explicit CChatRoom_ReorderRole_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_ReorderRole_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteRole_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteRole_Request) */ {
 public:
  inline CChatRoom_DeleteRole_Request() : CChatRoom_DeleteRole_Request(nullptr) {}
  ~CChatRoom_DeleteRole_Request() override;
  explicit constexpr CChatRoom_DeleteRole_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_DeleteRole_Request(const CChatRoom_DeleteRole_Request& from);
  CChatRoom_DeleteRole_Request(CChatRoom_DeleteRole_Request&& from) noexcept
    : CChatRoom_DeleteRole_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteRole_Request& operator=(const CChatRoom_DeleteRole_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_DeleteRole_Request& operator=(CChatRoom_DeleteRole_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_DeleteRole_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_DeleteRole_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteRole_Request*>(
               &_CChatRoom_DeleteRole_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(CChatRoom_DeleteRole_Request& a, CChatRoom_DeleteRole_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_DeleteRole_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_DeleteRole_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_DeleteRole_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_DeleteRole_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_DeleteRole_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_DeleteRole_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteRole_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_DeleteRole_Request";
  }
  protected:
  explicit CChatRoom_DeleteRole_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kRoleIdFieldNumber = 2,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 role_id = 2;
  bool has_role_id() const;
  private:
  bool _internal_has_role_id() const;
  public:
  void clear_role_id();
  uint64_t role_id() const;
  void set_role_id(uint64_t value);
  private:
  uint64_t _internal_role_id() const;
  void _internal_set_role_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteRole_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t role_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteRole_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteRole_Response) */ {
 public:
  inline CChatRoom_DeleteRole_Response() : CChatRoom_DeleteRole_Response(nullptr) {}
  explicit constexpr CChatRoom_DeleteRole_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_DeleteRole_Response(const CChatRoom_DeleteRole_Response& from);
  CChatRoom_DeleteRole_Response(CChatRoom_DeleteRole_Response&& from) noexcept
    : CChatRoom_DeleteRole_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteRole_Response& operator=(const CChatRoom_DeleteRole_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_DeleteRole_Response& operator=(CChatRoom_DeleteRole_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_DeleteRole_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_DeleteRole_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteRole_Response*>(
               &_CChatRoom_DeleteRole_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(CChatRoom_DeleteRole_Response& a, CChatRoom_DeleteRole_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_DeleteRole_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_DeleteRole_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_DeleteRole_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_DeleteRole_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_DeleteRole_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_DeleteRole_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_DeleteRole_Response";
  }
  protected:
  explicit CChatRoom_DeleteRole_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteRole_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetRoleActions_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetRoleActions_Request) */ {
 public:
  inline CChatRoom_GetRoleActions_Request() : CChatRoom_GetRoleActions_Request(nullptr) {}
  ~CChatRoom_GetRoleActions_Request() override;
  explicit constexpr CChatRoom_GetRoleActions_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetRoleActions_Request(const CChatRoom_GetRoleActions_Request& from);
  CChatRoom_GetRoleActions_Request(CChatRoom_GetRoleActions_Request&& from) noexcept
    : CChatRoom_GetRoleActions_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetRoleActions_Request& operator=(const CChatRoom_GetRoleActions_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetRoleActions_Request& operator=(CChatRoom_GetRoleActions_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetRoleActions_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetRoleActions_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetRoleActions_Request*>(
               &_CChatRoom_GetRoleActions_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(CChatRoom_GetRoleActions_Request& a, CChatRoom_GetRoleActions_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetRoleActions_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetRoleActions_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetRoleActions_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetRoleActions_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetRoleActions_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetRoleActions_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetRoleActions_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetRoleActions_Request";
  }
  protected:
  explicit CChatRoom_GetRoleActions_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kRoleIdFieldNumber = 2,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 role_id = 2;
  bool has_role_id() const;
  private:
  bool _internal_has_role_id() const;
  public:
  void clear_role_id();
  uint64_t role_id() const;
  void set_role_id(uint64_t value);
  private:
  uint64_t _internal_role_id() const;
  void _internal_set_role_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetRoleActions_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t role_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetRoleActions_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetRoleActions_Response) */ {
 public:
  inline CChatRoom_GetRoleActions_Response() : CChatRoom_GetRoleActions_Response(nullptr) {}
  ~CChatRoom_GetRoleActions_Response() override;
  explicit constexpr CChatRoom_GetRoleActions_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetRoleActions_Response(const CChatRoom_GetRoleActions_Response& from);
  CChatRoom_GetRoleActions_Response(CChatRoom_GetRoleActions_Response&& from) noexcept
    : CChatRoom_GetRoleActions_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetRoleActions_Response& operator=(const CChatRoom_GetRoleActions_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetRoleActions_Response& operator=(CChatRoom_GetRoleActions_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetRoleActions_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetRoleActions_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetRoleActions_Response*>(
               &_CChatRoom_GetRoleActions_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(CChatRoom_GetRoleActions_Response& a, CChatRoom_GetRoleActions_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetRoleActions_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetRoleActions_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetRoleActions_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetRoleActions_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetRoleActions_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetRoleActions_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetRoleActions_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetRoleActions_Response";
  }
  protected:
  explicit CChatRoom_GetRoleActions_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionsFieldNumber = 1,
  };
  // repeated .CChatRoleActions actions = 1;
  int actions_size() const;
  private:
  int _internal_actions_size() const;
  public:
  void clear_actions();
  ::CChatRoleActions* mutable_actions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions >*
      mutable_actions();
  private:
  const ::CChatRoleActions& _internal_actions(int index) const;
  ::CChatRoleActions* _internal_add_actions();
  public:
  const ::CChatRoleActions& actions(int index) const;
  ::CChatRoleActions* add_actions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions >&
      actions() const;

  // @@protoc_insertion_point(class_scope:CChatRoom_GetRoleActions_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions > actions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_ReplaceRoleActions_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ReplaceRoleActions_Request) */ {
 public:
  inline CChatRoom_ReplaceRoleActions_Request() : CChatRoom_ReplaceRoleActions_Request(nullptr) {}
  ~CChatRoom_ReplaceRoleActions_Request() override;
  explicit constexpr CChatRoom_ReplaceRoleActions_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_ReplaceRoleActions_Request(const CChatRoom_ReplaceRoleActions_Request& from);
  CChatRoom_ReplaceRoleActions_Request(CChatRoom_ReplaceRoleActions_Request&& from) noexcept
    : CChatRoom_ReplaceRoleActions_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ReplaceRoleActions_Request& operator=(const CChatRoom_ReplaceRoleActions_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_ReplaceRoleActions_Request& operator=(CChatRoom_ReplaceRoleActions_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_ReplaceRoleActions_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_ReplaceRoleActions_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ReplaceRoleActions_Request*>(
               &_CChatRoom_ReplaceRoleActions_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(CChatRoom_ReplaceRoleActions_Request& a, CChatRoom_ReplaceRoleActions_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_ReplaceRoleActions_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_ReplaceRoleActions_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_ReplaceRoleActions_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_ReplaceRoleActions_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_ReplaceRoleActions_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_ReplaceRoleActions_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ReplaceRoleActions_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_ReplaceRoleActions_Request";
  }
  protected:
  explicit CChatRoom_ReplaceRoleActions_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionsFieldNumber = 4,
    kChatGroupIdFieldNumber = 1,
    kRoleIdFieldNumber = 2,
  };
  // optional .CChatRoleActions actions = 4;
  bool has_actions() const;
  private:
  bool _internal_has_actions() const;
  public:
  void clear_actions();
  const ::CChatRoleActions& actions() const;
  PROTOBUF_NODISCARD ::CChatRoleActions* release_actions();
  ::CChatRoleActions* mutable_actions();
  void set_allocated_actions(::CChatRoleActions* actions);
  private:
  const ::CChatRoleActions& _internal_actions() const;
  ::CChatRoleActions* _internal_mutable_actions();
  public:
  void unsafe_arena_set_allocated_actions(
      ::CChatRoleActions* actions);
  ::CChatRoleActions* unsafe_arena_release_actions();

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 role_id = 2;
  bool has_role_id() const;
  private:
  bool _internal_has_role_id() const;
  public:
  void clear_role_id();
  uint64_t role_id() const;
  void set_role_id(uint64_t value);
  private:
  uint64_t _internal_role_id() const;
  void _internal_set_role_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_ReplaceRoleActions_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CChatRoleActions* actions_;
  uint64_t chat_group_id_;
  uint64_t role_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_ReplaceRoleActions_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_ReplaceRoleActions_Response) */ {
 public:
  inline CChatRoom_ReplaceRoleActions_Response() : CChatRoom_ReplaceRoleActions_Response(nullptr) {}
  explicit constexpr CChatRoom_ReplaceRoleActions_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_ReplaceRoleActions_Response(const CChatRoom_ReplaceRoleActions_Response& from);
  CChatRoom_ReplaceRoleActions_Response(CChatRoom_ReplaceRoleActions_Response&& from) noexcept
    : CChatRoom_ReplaceRoleActions_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ReplaceRoleActions_Response& operator=(const CChatRoom_ReplaceRoleActions_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_ReplaceRoleActions_Response& operator=(CChatRoom_ReplaceRoleActions_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_ReplaceRoleActions_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_ReplaceRoleActions_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ReplaceRoleActions_Response*>(
               &_CChatRoom_ReplaceRoleActions_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(CChatRoom_ReplaceRoleActions_Response& a, CChatRoom_ReplaceRoleActions_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_ReplaceRoleActions_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_ReplaceRoleActions_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_ReplaceRoleActions_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_ReplaceRoleActions_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_ReplaceRoleActions_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_ReplaceRoleActions_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_ReplaceRoleActions_Response";
  }
  protected:
  explicit CChatRoom_ReplaceRoleActions_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_ReplaceRoleActions_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_AddRoleToUser_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_AddRoleToUser_Request) */ {
 public:
  inline CChatRoom_AddRoleToUser_Request() : CChatRoom_AddRoleToUser_Request(nullptr) {}
  ~CChatRoom_AddRoleToUser_Request() override;
  explicit constexpr CChatRoom_AddRoleToUser_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_AddRoleToUser_Request(const CChatRoom_AddRoleToUser_Request& from);
  CChatRoom_AddRoleToUser_Request(CChatRoom_AddRoleToUser_Request&& from) noexcept
    : CChatRoom_AddRoleToUser_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_AddRoleToUser_Request& operator=(const CChatRoom_AddRoleToUser_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_AddRoleToUser_Request& operator=(CChatRoom_AddRoleToUser_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_AddRoleToUser_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_AddRoleToUser_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_AddRoleToUser_Request*>(
               &_CChatRoom_AddRoleToUser_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(CChatRoom_AddRoleToUser_Request& a, CChatRoom_AddRoleToUser_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_AddRoleToUser_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_AddRoleToUser_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_AddRoleToUser_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_AddRoleToUser_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_AddRoleToUser_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_AddRoleToUser_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_AddRoleToUser_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_AddRoleToUser_Request";
  }
  protected:
  explicit CChatRoom_AddRoleToUser_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kRoleIdFieldNumber = 3,
    kSteamidFieldNumber = 4,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 role_id = 3;
  bool has_role_id() const;
  private:
  bool _internal_has_role_id() const;
  public:
  void clear_role_id();
  uint64_t role_id() const;
  void set_role_id(uint64_t value);
  private:
  uint64_t _internal_role_id() const;
  void _internal_set_role_id(uint64_t value);
  public:

  // optional fixed64 steamid = 4;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  uint64_t steamid() const;
  void set_steamid(uint64_t value);
  private:
  uint64_t _internal_steamid() const;
  void _internal_set_steamid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_AddRoleToUser_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t role_id_;
  uint64_t steamid_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_AddRoleToUser_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_AddRoleToUser_Response) */ {
 public:
  inline CChatRoom_AddRoleToUser_Response() : CChatRoom_AddRoleToUser_Response(nullptr) {}
  explicit constexpr CChatRoom_AddRoleToUser_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_AddRoleToUser_Response(const CChatRoom_AddRoleToUser_Response& from);
  CChatRoom_AddRoleToUser_Response(CChatRoom_AddRoleToUser_Response&& from) noexcept
    : CChatRoom_AddRoleToUser_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_AddRoleToUser_Response& operator=(const CChatRoom_AddRoleToUser_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_AddRoleToUser_Response& operator=(CChatRoom_AddRoleToUser_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_AddRoleToUser_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_AddRoleToUser_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_AddRoleToUser_Response*>(
               &_CChatRoom_AddRoleToUser_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(CChatRoom_AddRoleToUser_Response& a, CChatRoom_AddRoleToUser_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_AddRoleToUser_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_AddRoleToUser_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_AddRoleToUser_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_AddRoleToUser_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_AddRoleToUser_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_AddRoleToUser_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_AddRoleToUser_Response";
  }
  protected:
  explicit CChatRoom_AddRoleToUser_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_AddRoleToUser_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetRolesForUser_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetRolesForUser_Request) */ {
 public:
  inline CChatRoom_GetRolesForUser_Request() : CChatRoom_GetRolesForUser_Request(nullptr) {}
  ~CChatRoom_GetRolesForUser_Request() override;
  explicit constexpr CChatRoom_GetRolesForUser_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetRolesForUser_Request(const CChatRoom_GetRolesForUser_Request& from);
  CChatRoom_GetRolesForUser_Request(CChatRoom_GetRolesForUser_Request&& from) noexcept
    : CChatRoom_GetRolesForUser_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetRolesForUser_Request& operator=(const CChatRoom_GetRolesForUser_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetRolesForUser_Request& operator=(CChatRoom_GetRolesForUser_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetRolesForUser_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetRolesForUser_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetRolesForUser_Request*>(
               &_CChatRoom_GetRolesForUser_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(CChatRoom_GetRolesForUser_Request& a, CChatRoom_GetRolesForUser_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetRolesForUser_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetRolesForUser_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetRolesForUser_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetRolesForUser_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetRolesForUser_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetRolesForUser_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetRolesForUser_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetRolesForUser_Request";
  }
  protected:
  explicit CChatRoom_GetRolesForUser_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kSteamidFieldNumber = 3,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional fixed64 steamid = 3;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  uint64_t steamid() const;
  void set_steamid(uint64_t value);
  private:
  uint64_t _internal_steamid() const;
  void _internal_set_steamid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetRolesForUser_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t steamid_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetRolesForUser_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetRolesForUser_Response) */ {
 public:
  inline CChatRoom_GetRolesForUser_Response() : CChatRoom_GetRolesForUser_Response(nullptr) {}
  ~CChatRoom_GetRolesForUser_Response() override;
  explicit constexpr CChatRoom_GetRolesForUser_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetRolesForUser_Response(const CChatRoom_GetRolesForUser_Response& from);
  CChatRoom_GetRolesForUser_Response(CChatRoom_GetRolesForUser_Response&& from) noexcept
    : CChatRoom_GetRolesForUser_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetRolesForUser_Response& operator=(const CChatRoom_GetRolesForUser_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetRolesForUser_Response& operator=(CChatRoom_GetRolesForUser_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetRolesForUser_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetRolesForUser_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetRolesForUser_Response*>(
               &_CChatRoom_GetRolesForUser_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(CChatRoom_GetRolesForUser_Response& a, CChatRoom_GetRolesForUser_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetRolesForUser_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetRolesForUser_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetRolesForUser_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetRolesForUser_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetRolesForUser_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetRolesForUser_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetRolesForUser_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetRolesForUser_Response";
  }
  protected:
  explicit CChatRoom_GetRolesForUser_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIdsFieldNumber = 1,
  };
  // repeated uint64 role_ids = 1;
  int role_ids_size() const;
  private:
  int _internal_role_ids_size() const;
  public:
  void clear_role_ids();
  private:
  uint64_t _internal_role_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_role_ids() const;
  void _internal_add_role_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_role_ids();
  public:
  uint64_t role_ids(int index) const;
  void set_role_ids(int index, uint64_t value);
  void add_role_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      role_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_role_ids();

  // @@protoc_insertion_point(class_scope:CChatRoom_GetRolesForUser_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > role_ids_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteRoleFromUser_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteRoleFromUser_Request) */ {
 public:
  inline CChatRoom_DeleteRoleFromUser_Request() : CChatRoom_DeleteRoleFromUser_Request(nullptr) {}
  ~CChatRoom_DeleteRoleFromUser_Request() override;
  explicit constexpr CChatRoom_DeleteRoleFromUser_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_DeleteRoleFromUser_Request(const CChatRoom_DeleteRoleFromUser_Request& from);
  CChatRoom_DeleteRoleFromUser_Request(CChatRoom_DeleteRoleFromUser_Request&& from) noexcept
    : CChatRoom_DeleteRoleFromUser_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteRoleFromUser_Request& operator=(const CChatRoom_DeleteRoleFromUser_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_DeleteRoleFromUser_Request& operator=(CChatRoom_DeleteRoleFromUser_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_DeleteRoleFromUser_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_DeleteRoleFromUser_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteRoleFromUser_Request*>(
               &_CChatRoom_DeleteRoleFromUser_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(CChatRoom_DeleteRoleFromUser_Request& a, CChatRoom_DeleteRoleFromUser_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_DeleteRoleFromUser_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_DeleteRoleFromUser_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_DeleteRoleFromUser_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_DeleteRoleFromUser_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_DeleteRoleFromUser_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_DeleteRoleFromUser_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteRoleFromUser_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_DeleteRoleFromUser_Request";
  }
  protected:
  explicit CChatRoom_DeleteRoleFromUser_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kRoleIdFieldNumber = 3,
    kSteamidFieldNumber = 4,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 role_id = 3;
  bool has_role_id() const;
  private:
  bool _internal_has_role_id() const;
  public:
  void clear_role_id();
  uint64_t role_id() const;
  void set_role_id(uint64_t value);
  private:
  uint64_t _internal_role_id() const;
  void _internal_set_role_id(uint64_t value);
  public:

  // optional fixed64 steamid = 4;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  uint64_t steamid() const;
  void set_steamid(uint64_t value);
  private:
  uint64_t _internal_steamid() const;
  void _internal_set_steamid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteRoleFromUser_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t role_id_;
  uint64_t steamid_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteRoleFromUser_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteRoleFromUser_Response) */ {
 public:
  inline CChatRoom_DeleteRoleFromUser_Response() : CChatRoom_DeleteRoleFromUser_Response(nullptr) {}
  explicit constexpr CChatRoom_DeleteRoleFromUser_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_DeleteRoleFromUser_Response(const CChatRoom_DeleteRoleFromUser_Response& from);
  CChatRoom_DeleteRoleFromUser_Response(CChatRoom_DeleteRoleFromUser_Response&& from) noexcept
    : CChatRoom_DeleteRoleFromUser_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteRoleFromUser_Response& operator=(const CChatRoom_DeleteRoleFromUser_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_DeleteRoleFromUser_Response& operator=(CChatRoom_DeleteRoleFromUser_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_DeleteRoleFromUser_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_DeleteRoleFromUser_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteRoleFromUser_Response*>(
               &_CChatRoom_DeleteRoleFromUser_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(CChatRoom_DeleteRoleFromUser_Response& a, CChatRoom_DeleteRoleFromUser_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_DeleteRoleFromUser_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_DeleteRoleFromUser_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_DeleteRoleFromUser_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_DeleteRoleFromUser_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_DeleteRoleFromUser_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_DeleteRoleFromUser_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_DeleteRoleFromUser_Response";
  }
  protected:
  explicit CChatRoom_DeleteRoleFromUser_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteRoleFromUser_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_JoinChatRoomGroup_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_JoinChatRoomGroup_Request) */ {
 public:
  inline CChatRoom_JoinChatRoomGroup_Request() : CChatRoom_JoinChatRoomGroup_Request(nullptr) {}
  ~CChatRoom_JoinChatRoomGroup_Request() override;
  explicit constexpr CChatRoom_JoinChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_JoinChatRoomGroup_Request(const CChatRoom_JoinChatRoomGroup_Request& from);
  CChatRoom_JoinChatRoomGroup_Request(CChatRoom_JoinChatRoomGroup_Request&& from) noexcept
    : CChatRoom_JoinChatRoomGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_JoinChatRoomGroup_Request& operator=(const CChatRoom_JoinChatRoomGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_JoinChatRoomGroup_Request& operator=(CChatRoom_JoinChatRoomGroup_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_JoinChatRoomGroup_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_JoinChatRoomGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_JoinChatRoomGroup_Request*>(
               &_CChatRoom_JoinChatRoomGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(CChatRoom_JoinChatRoomGroup_Request& a, CChatRoom_JoinChatRoomGroup_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_JoinChatRoomGroup_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_JoinChatRoomGroup_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_JoinChatRoomGroup_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_JoinChatRoomGroup_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_JoinChatRoomGroup_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_JoinChatRoomGroup_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_JoinChatRoomGroup_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_JoinChatRoomGroup_Request";
  }
  protected:
  explicit CChatRoom_JoinChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInviteCodeFieldNumber = 2,
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 3,
  };
  // optional string invite_code = 2;
  bool has_invite_code() const;
  private:
  bool _internal_has_invite_code() const;
  public:
  void clear_invite_code();
  const std::string& invite_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_invite_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_invite_code();
  PROTOBUF_NODISCARD std::string* release_invite_code();
  void set_allocated_invite_code(std::string* invite_code);
  private:
  const std::string& _internal_invite_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_invite_code(const std::string& value);
  std::string* _internal_mutable_invite_code();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 3;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_JoinChatRoomGroup_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr invite_code_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_JoinChatRoomGroup_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_JoinChatRoomGroup_Response) */ {
 public:
  inline CChatRoom_JoinChatRoomGroup_Response() : CChatRoom_JoinChatRoomGroup_Response(nullptr) {}
  ~CChatRoom_JoinChatRoomGroup_Response() override;
  explicit constexpr CChatRoom_JoinChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_JoinChatRoomGroup_Response(const CChatRoom_JoinChatRoomGroup_Response& from);
  CChatRoom_JoinChatRoomGroup_Response(CChatRoom_JoinChatRoomGroup_Response&& from) noexcept
    : CChatRoom_JoinChatRoomGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_JoinChatRoomGroup_Response& operator=(const CChatRoom_JoinChatRoomGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_JoinChatRoomGroup_Response& operator=(CChatRoom_JoinChatRoomGroup_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_JoinChatRoomGroup_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_JoinChatRoomGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_JoinChatRoomGroup_Response*>(
               &_CChatRoom_JoinChatRoomGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(CChatRoom_JoinChatRoomGroup_Response& a, CChatRoom_JoinChatRoomGroup_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_JoinChatRoomGroup_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_JoinChatRoomGroup_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_JoinChatRoomGroup_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_JoinChatRoomGroup_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_JoinChatRoomGroup_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_JoinChatRoomGroup_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_JoinChatRoomGroup_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_JoinChatRoomGroup_Response";
  }
  protected:
  explicit CChatRoom_JoinChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 1,
    kUserChatStateFieldNumber = 3,
    kJoinChatIdFieldNumber = 4,
    kTimeExpireFieldNumber = 5,
  };
  // optional .CChatRoomGroupState state = 1;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  const ::CChatRoomGroupState& state() const;
  PROTOBUF_NODISCARD ::CChatRoomGroupState* release_state();
  ::CChatRoomGroupState* mutable_state();
  void set_allocated_state(::CChatRoomGroupState* state);
  private:
  const ::CChatRoomGroupState& _internal_state() const;
  ::CChatRoomGroupState* _internal_mutable_state();
  public:
  void unsafe_arena_set_allocated_state(
      ::CChatRoomGroupState* state);
  ::CChatRoomGroupState* unsafe_arena_release_state();

  // optional .CUserChatRoomGroupState user_chat_state = 3;
  bool has_user_chat_state() const;
  private:
  bool _internal_has_user_chat_state() const;
  public:
  void clear_user_chat_state();
  const ::CUserChatRoomGroupState& user_chat_state() const;
  PROTOBUF_NODISCARD ::CUserChatRoomGroupState* release_user_chat_state();
  ::CUserChatRoomGroupState* mutable_user_chat_state();
  void set_allocated_user_chat_state(::CUserChatRoomGroupState* user_chat_state);
  private:
  const ::CUserChatRoomGroupState& _internal_user_chat_state() const;
  ::CUserChatRoomGroupState* _internal_mutable_user_chat_state();
  public:
  void unsafe_arena_set_allocated_user_chat_state(
      ::CUserChatRoomGroupState* user_chat_state);
  ::CUserChatRoomGroupState* unsafe_arena_release_user_chat_state();

  // optional uint64 join_chat_id = 4;
  bool has_join_chat_id() const;
  private:
  bool _internal_has_join_chat_id() const;
  public:
  void clear_join_chat_id();
  uint64_t join_chat_id() const;
  void set_join_chat_id(uint64_t value);
  private:
  uint64_t _internal_join_chat_id() const;
  void _internal_set_join_chat_id(uint64_t value);
  public:

  // optional uint32 time_expire = 5;
  bool has_time_expire() const;
  private:
  bool _internal_has_time_expire() const;
  public:
  void clear_time_expire();
  uint32_t time_expire() const;
  void set_time_expire(uint32_t value);
  private:
  uint32_t _internal_time_expire() const;
  void _internal_set_time_expire(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_JoinChatRoomGroup_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CChatRoomGroupState* state_;
  ::CUserChatRoomGroupState* user_chat_state_;
  uint64_t join_chat_id_;
  uint32_t time_expire_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_InviteFriendToChatRoomGroup_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_InviteFriendToChatRoomGroup_Request) */ {
 public:
  inline CChatRoom_InviteFriendToChatRoomGroup_Request() : CChatRoom_InviteFriendToChatRoomGroup_Request(nullptr) {}
  ~CChatRoom_InviteFriendToChatRoomGroup_Request() override;
  explicit constexpr CChatRoom_InviteFriendToChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_InviteFriendToChatRoomGroup_Request(const CChatRoom_InviteFriendToChatRoomGroup_Request& from);
  CChatRoom_InviteFriendToChatRoomGroup_Request(CChatRoom_InviteFriendToChatRoomGroup_Request&& from) noexcept
    : CChatRoom_InviteFriendToChatRoomGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_InviteFriendToChatRoomGroup_Request& operator=(const CChatRoom_InviteFriendToChatRoomGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_InviteFriendToChatRoomGroup_Request& operator=(CChatRoom_InviteFriendToChatRoomGroup_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_InviteFriendToChatRoomGroup_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_InviteFriendToChatRoomGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_InviteFriendToChatRoomGroup_Request*>(
               &_CChatRoom_InviteFriendToChatRoomGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(CChatRoom_InviteFriendToChatRoomGroup_Request& a, CChatRoom_InviteFriendToChatRoomGroup_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_InviteFriendToChatRoomGroup_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_InviteFriendToChatRoomGroup_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_InviteFriendToChatRoomGroup_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_InviteFriendToChatRoomGroup_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_InviteFriendToChatRoomGroup_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_InviteFriendToChatRoomGroup_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_InviteFriendToChatRoomGroup_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_InviteFriendToChatRoomGroup_Request";
  }
  protected:
  explicit CChatRoom_InviteFriendToChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kSteamidFieldNumber = 2,
    kChatIdFieldNumber = 3,
    kSkipFriendsuiCheckFieldNumber = 4,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  uint64_t steamid() const;
  void set_steamid(uint64_t value);
  private:
  uint64_t _internal_steamid() const;
  void _internal_set_steamid(uint64_t value);
  public:

  // optional uint64 chat_id = 3;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional bool skip_friendsui_check = 4;
  bool has_skip_friendsui_check() const;
  private:
  bool _internal_has_skip_friendsui_check() const;
  public:
  void clear_skip_friendsui_check();
  bool skip_friendsui_check() const;
  void set_skip_friendsui_check(bool value);
  private:
  bool _internal_skip_friendsui_check() const;
  void _internal_set_skip_friendsui_check(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_InviteFriendToChatRoomGroup_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t steamid_;
  uint64_t chat_id_;
  bool skip_friendsui_check_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_InviteFriendToChatRoomGroup_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_InviteFriendToChatRoomGroup_Response) */ {
 public:
  inline CChatRoom_InviteFriendToChatRoomGroup_Response() : CChatRoom_InviteFriendToChatRoomGroup_Response(nullptr) {}
  explicit constexpr CChatRoom_InviteFriendToChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_InviteFriendToChatRoomGroup_Response(const CChatRoom_InviteFriendToChatRoomGroup_Response& from);
  CChatRoom_InviteFriendToChatRoomGroup_Response(CChatRoom_InviteFriendToChatRoomGroup_Response&& from) noexcept
    : CChatRoom_InviteFriendToChatRoomGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_InviteFriendToChatRoomGroup_Response& operator=(const CChatRoom_InviteFriendToChatRoomGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_InviteFriendToChatRoomGroup_Response& operator=(CChatRoom_InviteFriendToChatRoomGroup_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_InviteFriendToChatRoomGroup_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_InviteFriendToChatRoomGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_InviteFriendToChatRoomGroup_Response*>(
               &_CChatRoom_InviteFriendToChatRoomGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(CChatRoom_InviteFriendToChatRoomGroup_Response& a, CChatRoom_InviteFriendToChatRoomGroup_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_InviteFriendToChatRoomGroup_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_InviteFriendToChatRoomGroup_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_InviteFriendToChatRoomGroup_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_InviteFriendToChatRoomGroup_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_InviteFriendToChatRoomGroup_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_InviteFriendToChatRoomGroup_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_InviteFriendToChatRoomGroup_Response";
  }
  protected:
  explicit CChatRoom_InviteFriendToChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_InviteFriendToChatRoomGroup_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_LeaveChatRoomGroup_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_LeaveChatRoomGroup_Request) */ {
 public:
  inline CChatRoom_LeaveChatRoomGroup_Request() : CChatRoom_LeaveChatRoomGroup_Request(nullptr) {}
  ~CChatRoom_LeaveChatRoomGroup_Request() override;
  explicit constexpr CChatRoom_LeaveChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_LeaveChatRoomGroup_Request(const CChatRoom_LeaveChatRoomGroup_Request& from);
  CChatRoom_LeaveChatRoomGroup_Request(CChatRoom_LeaveChatRoomGroup_Request&& from) noexcept
    : CChatRoom_LeaveChatRoomGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_LeaveChatRoomGroup_Request& operator=(const CChatRoom_LeaveChatRoomGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_LeaveChatRoomGroup_Request& operator=(CChatRoom_LeaveChatRoomGroup_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_LeaveChatRoomGroup_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_LeaveChatRoomGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_LeaveChatRoomGroup_Request*>(
               &_CChatRoom_LeaveChatRoomGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(CChatRoom_LeaveChatRoomGroup_Request& a, CChatRoom_LeaveChatRoomGroup_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_LeaveChatRoomGroup_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_LeaveChatRoomGroup_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_LeaveChatRoomGroup_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_LeaveChatRoomGroup_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_LeaveChatRoomGroup_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_LeaveChatRoomGroup_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_LeaveChatRoomGroup_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_LeaveChatRoomGroup_Request";
  }
  protected:
  explicit CChatRoom_LeaveChatRoomGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_LeaveChatRoomGroup_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_LeaveChatRoomGroup_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_LeaveChatRoomGroup_Response) */ {
 public:
  inline CChatRoom_LeaveChatRoomGroup_Response() : CChatRoom_LeaveChatRoomGroup_Response(nullptr) {}
  explicit constexpr CChatRoom_LeaveChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_LeaveChatRoomGroup_Response(const CChatRoom_LeaveChatRoomGroup_Response& from);
  CChatRoom_LeaveChatRoomGroup_Response(CChatRoom_LeaveChatRoomGroup_Response&& from) noexcept
    : CChatRoom_LeaveChatRoomGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_LeaveChatRoomGroup_Response& operator=(const CChatRoom_LeaveChatRoomGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_LeaveChatRoomGroup_Response& operator=(CChatRoom_LeaveChatRoomGroup_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_LeaveChatRoomGroup_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_LeaveChatRoomGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_LeaveChatRoomGroup_Response*>(
               &_CChatRoom_LeaveChatRoomGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(CChatRoom_LeaveChatRoomGroup_Response& a, CChatRoom_LeaveChatRoomGroup_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_LeaveChatRoomGroup_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_LeaveChatRoomGroup_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_LeaveChatRoomGroup_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_LeaveChatRoomGroup_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_LeaveChatRoomGroup_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_LeaveChatRoomGroup_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_LeaveChatRoomGroup_Response";
  }
  protected:
  explicit CChatRoom_LeaveChatRoomGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_LeaveChatRoomGroup_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_CreateChatRoom_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateChatRoom_Request) */ {
 public:
  inline CChatRoom_CreateChatRoom_Request() : CChatRoom_CreateChatRoom_Request(nullptr) {}
  ~CChatRoom_CreateChatRoom_Request() override;
  explicit constexpr CChatRoom_CreateChatRoom_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_CreateChatRoom_Request(const CChatRoom_CreateChatRoom_Request& from);
  CChatRoom_CreateChatRoom_Request(CChatRoom_CreateChatRoom_Request&& from) noexcept
    : CChatRoom_CreateChatRoom_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateChatRoom_Request& operator=(const CChatRoom_CreateChatRoom_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_CreateChatRoom_Request& operator=(CChatRoom_CreateChatRoom_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_CreateChatRoom_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_CreateChatRoom_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateChatRoom_Request*>(
               &_CChatRoom_CreateChatRoom_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(CChatRoom_CreateChatRoom_Request& a, CChatRoom_CreateChatRoom_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_CreateChatRoom_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_CreateChatRoom_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_CreateChatRoom_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_CreateChatRoom_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_CreateChatRoom_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_CreateChatRoom_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateChatRoom_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_CreateChatRoom_Request";
  }
  protected:
  explicit CChatRoom_CreateChatRoom_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kChatGroupIdFieldNumber = 1,
    kAllowVoiceFieldNumber = 3,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional bool allow_voice = 3;
  bool has_allow_voice() const;
  private:
  bool _internal_has_allow_voice() const;
  public:
  void clear_allow_voice();
  bool allow_voice() const;
  void set_allow_voice(bool value);
  private:
  bool _internal_allow_voice() const;
  void _internal_set_allow_voice(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateChatRoom_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  uint64_t chat_group_id_;
  bool allow_voice_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_CreateChatRoom_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateChatRoom_Response) */ {
 public:
  inline CChatRoom_CreateChatRoom_Response() : CChatRoom_CreateChatRoom_Response(nullptr) {}
  ~CChatRoom_CreateChatRoom_Response() override;
  explicit constexpr CChatRoom_CreateChatRoom_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_CreateChatRoom_Response(const CChatRoom_CreateChatRoom_Response& from);
  CChatRoom_CreateChatRoom_Response(CChatRoom_CreateChatRoom_Response&& from) noexcept
    : CChatRoom_CreateChatRoom_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateChatRoom_Response& operator=(const CChatRoom_CreateChatRoom_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_CreateChatRoom_Response& operator=(CChatRoom_CreateChatRoom_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_CreateChatRoom_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_CreateChatRoom_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateChatRoom_Response*>(
               &_CChatRoom_CreateChatRoom_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(CChatRoom_CreateChatRoom_Response& a, CChatRoom_CreateChatRoom_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_CreateChatRoom_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_CreateChatRoom_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_CreateChatRoom_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_CreateChatRoom_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_CreateChatRoom_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_CreateChatRoom_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateChatRoom_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_CreateChatRoom_Response";
  }
  protected:
  explicit CChatRoom_CreateChatRoom_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatRoomFieldNumber = 1,
  };
  // optional .CChatRoomState chat_room = 1;
  bool has_chat_room() const;
  private:
  bool _internal_has_chat_room() const;
  public:
  void clear_chat_room();
  const ::CChatRoomState& chat_room() const;
  PROTOBUF_NODISCARD ::CChatRoomState* release_chat_room();
  ::CChatRoomState* mutable_chat_room();
  void set_allocated_chat_room(::CChatRoomState* chat_room);
  private:
  const ::CChatRoomState& _internal_chat_room() const;
  ::CChatRoomState* _internal_mutable_chat_room();
  public:
  void unsafe_arena_set_allocated_chat_room(
      ::CChatRoomState* chat_room);
  ::CChatRoomState* unsafe_arena_release_chat_room();

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateChatRoom_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CChatRoomState* chat_room_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteChatRoom_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteChatRoom_Request) */ {
 public:
  inline CChatRoom_DeleteChatRoom_Request() : CChatRoom_DeleteChatRoom_Request(nullptr) {}
  ~CChatRoom_DeleteChatRoom_Request() override;
  explicit constexpr CChatRoom_DeleteChatRoom_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_DeleteChatRoom_Request(const CChatRoom_DeleteChatRoom_Request& from);
  CChatRoom_DeleteChatRoom_Request(CChatRoom_DeleteChatRoom_Request&& from) noexcept
    : CChatRoom_DeleteChatRoom_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteChatRoom_Request& operator=(const CChatRoom_DeleteChatRoom_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_DeleteChatRoom_Request& operator=(CChatRoom_DeleteChatRoom_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_DeleteChatRoom_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_DeleteChatRoom_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteChatRoom_Request*>(
               &_CChatRoom_DeleteChatRoom_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(CChatRoom_DeleteChatRoom_Request& a, CChatRoom_DeleteChatRoom_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_DeleteChatRoom_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_DeleteChatRoom_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_DeleteChatRoom_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatRoom_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_DeleteChatRoom_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_DeleteChatRoom_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteChatRoom_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_DeleteChatRoom_Request";
  }
  protected:
  explicit CChatRoom_DeleteChatRoom_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteChatRoom_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteChatRoom_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteChatRoom_Response) */ {
 public:
  inline CChatRoom_DeleteChatRoom_Response() : CChatRoom_DeleteChatRoom_Response(nullptr) {}
  explicit constexpr CChatRoom_DeleteChatRoom_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_DeleteChatRoom_Response(const CChatRoom_DeleteChatRoom_Response& from);
  CChatRoom_DeleteChatRoom_Response(CChatRoom_DeleteChatRoom_Response&& from) noexcept
    : CChatRoom_DeleteChatRoom_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteChatRoom_Response& operator=(const CChatRoom_DeleteChatRoom_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_DeleteChatRoom_Response& operator=(CChatRoom_DeleteChatRoom_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_DeleteChatRoom_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_DeleteChatRoom_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteChatRoom_Response*>(
               &_CChatRoom_DeleteChatRoom_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(CChatRoom_DeleteChatRoom_Response& a, CChatRoom_DeleteChatRoom_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_DeleteChatRoom_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_DeleteChatRoom_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_DeleteChatRoom_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatRoom_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_DeleteChatRoom_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_DeleteChatRoom_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_DeleteChatRoom_Response";
  }
  protected:
  explicit CChatRoom_DeleteChatRoom_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteChatRoom_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_RenameChatRoom_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_RenameChatRoom_Request) */ {
 public:
  inline CChatRoom_RenameChatRoom_Request() : CChatRoom_RenameChatRoom_Request(nullptr) {}
  ~CChatRoom_RenameChatRoom_Request() override;
  explicit constexpr CChatRoom_RenameChatRoom_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_RenameChatRoom_Request(const CChatRoom_RenameChatRoom_Request& from);
  CChatRoom_RenameChatRoom_Request(CChatRoom_RenameChatRoom_Request&& from) noexcept
    : CChatRoom_RenameChatRoom_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RenameChatRoom_Request& operator=(const CChatRoom_RenameChatRoom_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_RenameChatRoom_Request& operator=(CChatRoom_RenameChatRoom_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_RenameChatRoom_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_RenameChatRoom_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RenameChatRoom_Request*>(
               &_CChatRoom_RenameChatRoom_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(CChatRoom_RenameChatRoom_Request& a, CChatRoom_RenameChatRoom_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_RenameChatRoom_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_RenameChatRoom_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_RenameChatRoom_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_RenameChatRoom_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_RenameChatRoom_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_RenameChatRoom_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_RenameChatRoom_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_RenameChatRoom_Request";
  }
  protected:
  explicit CChatRoom_RenameChatRoom_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
  };
  // optional string name = 3;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_RenameChatRoom_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_RenameChatRoom_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_RenameChatRoom_Response) */ {
 public:
  inline CChatRoom_RenameChatRoom_Response() : CChatRoom_RenameChatRoom_Response(nullptr) {}
  explicit constexpr CChatRoom_RenameChatRoom_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_RenameChatRoom_Response(const CChatRoom_RenameChatRoom_Response& from);
  CChatRoom_RenameChatRoom_Response(CChatRoom_RenameChatRoom_Response&& from) noexcept
    : CChatRoom_RenameChatRoom_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_RenameChatRoom_Response& operator=(const CChatRoom_RenameChatRoom_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_RenameChatRoom_Response& operator=(CChatRoom_RenameChatRoom_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_RenameChatRoom_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_RenameChatRoom_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_RenameChatRoom_Response*>(
               &_CChatRoom_RenameChatRoom_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(CChatRoom_RenameChatRoom_Response& a, CChatRoom_RenameChatRoom_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_RenameChatRoom_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_RenameChatRoom_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_RenameChatRoom_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_RenameChatRoom_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_RenameChatRoom_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_RenameChatRoom_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_RenameChatRoom_Response";
  }
  protected:
  explicit CChatRoom_RenameChatRoom_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_RenameChatRoom_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_ReorderChatRoom_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ReorderChatRoom_Request) */ {
 public:
  inline CChatRoom_ReorderChatRoom_Request() : CChatRoom_ReorderChatRoom_Request(nullptr) {}
  ~CChatRoom_ReorderChatRoom_Request() override;
  explicit constexpr CChatRoom_ReorderChatRoom_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_ReorderChatRoom_Request(const CChatRoom_ReorderChatRoom_Request& from);
  CChatRoom_ReorderChatRoom_Request(CChatRoom_ReorderChatRoom_Request&& from) noexcept
    : CChatRoom_ReorderChatRoom_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ReorderChatRoom_Request& operator=(const CChatRoom_ReorderChatRoom_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_ReorderChatRoom_Request& operator=(CChatRoom_ReorderChatRoom_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_ReorderChatRoom_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_ReorderChatRoom_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ReorderChatRoom_Request*>(
               &_CChatRoom_ReorderChatRoom_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(CChatRoom_ReorderChatRoom_Request& a, CChatRoom_ReorderChatRoom_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_ReorderChatRoom_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_ReorderChatRoom_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_ReorderChatRoom_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_ReorderChatRoom_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_ReorderChatRoom_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_ReorderChatRoom_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ReorderChatRoom_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_ReorderChatRoom_Request";
  }
  protected:
  explicit CChatRoom_ReorderChatRoom_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
    kMoveAfterChatIdFieldNumber = 3,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional uint64 move_after_chat_id = 3;
  bool has_move_after_chat_id() const;
  private:
  bool _internal_has_move_after_chat_id() const;
  public:
  void clear_move_after_chat_id();
  uint64_t move_after_chat_id() const;
  void set_move_after_chat_id(uint64_t value);
  private:
  uint64_t _internal_move_after_chat_id() const;
  void _internal_set_move_after_chat_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_ReorderChatRoom_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  uint64_t move_after_chat_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_ReorderChatRoom_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_ReorderChatRoom_Response) */ {
 public:
  inline CChatRoom_ReorderChatRoom_Response() : CChatRoom_ReorderChatRoom_Response(nullptr) {}
  explicit constexpr CChatRoom_ReorderChatRoom_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_ReorderChatRoom_Response(const CChatRoom_ReorderChatRoom_Response& from);
  CChatRoom_ReorderChatRoom_Response(CChatRoom_ReorderChatRoom_Response&& from) noexcept
    : CChatRoom_ReorderChatRoom_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ReorderChatRoom_Response& operator=(const CChatRoom_ReorderChatRoom_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_ReorderChatRoom_Response& operator=(CChatRoom_ReorderChatRoom_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_ReorderChatRoom_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_ReorderChatRoom_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ReorderChatRoom_Response*>(
               &_CChatRoom_ReorderChatRoom_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(CChatRoom_ReorderChatRoom_Response& a, CChatRoom_ReorderChatRoom_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_ReorderChatRoom_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_ReorderChatRoom_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_ReorderChatRoom_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_ReorderChatRoom_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_ReorderChatRoom_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_ReorderChatRoom_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_ReorderChatRoom_Response";
  }
  protected:
  explicit CChatRoom_ReorderChatRoom_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_ReorderChatRoom_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SendChatMessage_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SendChatMessage_Request) */ {
 public:
  inline CChatRoom_SendChatMessage_Request() : CChatRoom_SendChatMessage_Request(nullptr) {}
  ~CChatRoom_SendChatMessage_Request() override;
  explicit constexpr CChatRoom_SendChatMessage_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SendChatMessage_Request(const CChatRoom_SendChatMessage_Request& from);
  CChatRoom_SendChatMessage_Request(CChatRoom_SendChatMessage_Request&& from) noexcept
    : CChatRoom_SendChatMessage_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SendChatMessage_Request& operator=(const CChatRoom_SendChatMessage_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SendChatMessage_Request& operator=(CChatRoom_SendChatMessage_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SendChatMessage_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SendChatMessage_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SendChatMessage_Request*>(
               &_CChatRoom_SendChatMessage_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(CChatRoom_SendChatMessage_Request& a, CChatRoom_SendChatMessage_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SendChatMessage_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SendChatMessage_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SendChatMessage_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SendChatMessage_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SendChatMessage_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SendChatMessage_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SendChatMessage_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SendChatMessage_Request";
  }
  protected:
  explicit CChatRoom_SendChatMessage_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 3,
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
    kEchoToSenderFieldNumber = 4,
  };
  // optional string message = 3;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional bool echo_to_sender = 4;
  bool has_echo_to_sender() const;
  private:
  bool _internal_has_echo_to_sender() const;
  public:
  void clear_echo_to_sender();
  bool echo_to_sender() const;
  void set_echo_to_sender(bool value);
  private:
  bool _internal_echo_to_sender() const;
  void _internal_set_echo_to_sender(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SendChatMessage_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  bool echo_to_sender_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SendChatMessage_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SendChatMessage_Response) */ {
 public:
  inline CChatRoom_SendChatMessage_Response() : CChatRoom_SendChatMessage_Response(nullptr) {}
  ~CChatRoom_SendChatMessage_Response() override;
  explicit constexpr CChatRoom_SendChatMessage_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SendChatMessage_Response(const CChatRoom_SendChatMessage_Response& from);
  CChatRoom_SendChatMessage_Response(CChatRoom_SendChatMessage_Response&& from) noexcept
    : CChatRoom_SendChatMessage_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SendChatMessage_Response& operator=(const CChatRoom_SendChatMessage_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SendChatMessage_Response& operator=(CChatRoom_SendChatMessage_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SendChatMessage_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SendChatMessage_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SendChatMessage_Response*>(
               &_CChatRoom_SendChatMessage_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(CChatRoom_SendChatMessage_Response& a, CChatRoom_SendChatMessage_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SendChatMessage_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SendChatMessage_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SendChatMessage_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SendChatMessage_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SendChatMessage_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SendChatMessage_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SendChatMessage_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SendChatMessage_Response";
  }
  protected:
  explicit CChatRoom_SendChatMessage_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModifiedMessageFieldNumber = 1,
    kMessageWithoutBbCodeFieldNumber = 4,
    kServerTimestampFieldNumber = 2,
    kOrdinalFieldNumber = 3,
  };
  // optional string modified_message = 1;
  bool has_modified_message() const;
  private:
  bool _internal_has_modified_message() const;
  public:
  void clear_modified_message();
  const std::string& modified_message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_modified_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_modified_message();
  PROTOBUF_NODISCARD std::string* release_modified_message();
  void set_allocated_modified_message(std::string* modified_message);
  private:
  const std::string& _internal_modified_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_modified_message(const std::string& value);
  std::string* _internal_mutable_modified_message();
  public:

  // optional string message_without_bb_code = 4;
  bool has_message_without_bb_code() const;
  private:
  bool _internal_has_message_without_bb_code() const;
  public:
  void clear_message_without_bb_code();
  const std::string& message_without_bb_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message_without_bb_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message_without_bb_code();
  PROTOBUF_NODISCARD std::string* release_message_without_bb_code();
  void set_allocated_message_without_bb_code(std::string* message_without_bb_code);
  private:
  const std::string& _internal_message_without_bb_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message_without_bb_code(const std::string& value);
  std::string* _internal_mutable_message_without_bb_code();
  public:

  // optional uint32 server_timestamp = 2;
  bool has_server_timestamp() const;
  private:
  bool _internal_has_server_timestamp() const;
  public:
  void clear_server_timestamp();
  uint32_t server_timestamp() const;
  void set_server_timestamp(uint32_t value);
  private:
  uint32_t _internal_server_timestamp() const;
  void _internal_set_server_timestamp(uint32_t value);
  public:

  // optional uint32 ordinal = 3;
  bool has_ordinal() const;
  private:
  bool _internal_has_ordinal() const;
  public:
  void clear_ordinal();
  uint32_t ordinal() const;
  void set_ordinal(uint32_t value);
  private:
  uint32_t _internal_ordinal() const;
  void _internal_set_ordinal(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SendChatMessage_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr modified_message_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_without_bb_code_;
  uint32_t server_timestamp_;
  uint32_t ordinal_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_JoinVoiceChat_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_JoinVoiceChat_Request) */ {
 public:
  inline CChatRoom_JoinVoiceChat_Request() : CChatRoom_JoinVoiceChat_Request(nullptr) {}
  ~CChatRoom_JoinVoiceChat_Request() override;
  explicit constexpr CChatRoom_JoinVoiceChat_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_JoinVoiceChat_Request(const CChatRoom_JoinVoiceChat_Request& from);
  CChatRoom_JoinVoiceChat_Request(CChatRoom_JoinVoiceChat_Request&& from) noexcept
    : CChatRoom_JoinVoiceChat_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_JoinVoiceChat_Request& operator=(const CChatRoom_JoinVoiceChat_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_JoinVoiceChat_Request& operator=(CChatRoom_JoinVoiceChat_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_JoinVoiceChat_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_JoinVoiceChat_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_JoinVoiceChat_Request*>(
               &_CChatRoom_JoinVoiceChat_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(CChatRoom_JoinVoiceChat_Request& a, CChatRoom_JoinVoiceChat_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_JoinVoiceChat_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_JoinVoiceChat_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_JoinVoiceChat_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_JoinVoiceChat_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_JoinVoiceChat_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_JoinVoiceChat_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_JoinVoiceChat_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_JoinVoiceChat_Request";
  }
  protected:
  explicit CChatRoom_JoinVoiceChat_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_JoinVoiceChat_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_JoinVoiceChat_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_JoinVoiceChat_Response) */ {
 public:
  inline CChatRoom_JoinVoiceChat_Response() : CChatRoom_JoinVoiceChat_Response(nullptr) {}
  ~CChatRoom_JoinVoiceChat_Response() override;
  explicit constexpr CChatRoom_JoinVoiceChat_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_JoinVoiceChat_Response(const CChatRoom_JoinVoiceChat_Response& from);
  CChatRoom_JoinVoiceChat_Response(CChatRoom_JoinVoiceChat_Response&& from) noexcept
    : CChatRoom_JoinVoiceChat_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_JoinVoiceChat_Response& operator=(const CChatRoom_JoinVoiceChat_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_JoinVoiceChat_Response& operator=(CChatRoom_JoinVoiceChat_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_JoinVoiceChat_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_JoinVoiceChat_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_JoinVoiceChat_Response*>(
               &_CChatRoom_JoinVoiceChat_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(CChatRoom_JoinVoiceChat_Response& a, CChatRoom_JoinVoiceChat_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_JoinVoiceChat_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_JoinVoiceChat_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_JoinVoiceChat_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_JoinVoiceChat_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_JoinVoiceChat_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_JoinVoiceChat_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_JoinVoiceChat_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_JoinVoiceChat_Response";
  }
  protected:
  explicit CChatRoom_JoinVoiceChat_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVoiceChatidFieldNumber = 1,
  };
  // optional uint64 voice_chatid = 1;
  bool has_voice_chatid() const;
  private:
  bool _internal_has_voice_chatid() const;
  public:
  void clear_voice_chatid();
  uint64_t voice_chatid() const;
  void set_voice_chatid(uint64_t value);
  private:
  uint64_t _internal_voice_chatid() const;
  void _internal_set_voice_chatid(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_JoinVoiceChat_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t voice_chatid_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_LeaveVoiceChat_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_LeaveVoiceChat_Request) */ {
 public:
  inline CChatRoom_LeaveVoiceChat_Request() : CChatRoom_LeaveVoiceChat_Request(nullptr) {}
  ~CChatRoom_LeaveVoiceChat_Request() override;
  explicit constexpr CChatRoom_LeaveVoiceChat_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_LeaveVoiceChat_Request(const CChatRoom_LeaveVoiceChat_Request& from);
  CChatRoom_LeaveVoiceChat_Request(CChatRoom_LeaveVoiceChat_Request&& from) noexcept
    : CChatRoom_LeaveVoiceChat_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_LeaveVoiceChat_Request& operator=(const CChatRoom_LeaveVoiceChat_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_LeaveVoiceChat_Request& operator=(CChatRoom_LeaveVoiceChat_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_LeaveVoiceChat_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_LeaveVoiceChat_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_LeaveVoiceChat_Request*>(
               &_CChatRoom_LeaveVoiceChat_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(CChatRoom_LeaveVoiceChat_Request& a, CChatRoom_LeaveVoiceChat_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_LeaveVoiceChat_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_LeaveVoiceChat_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_LeaveVoiceChat_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_LeaveVoiceChat_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_LeaveVoiceChat_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_LeaveVoiceChat_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_LeaveVoiceChat_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_LeaveVoiceChat_Request";
  }
  protected:
  explicit CChatRoom_LeaveVoiceChat_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_LeaveVoiceChat_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_LeaveVoiceChat_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_LeaveVoiceChat_Response) */ {
 public:
  inline CChatRoom_LeaveVoiceChat_Response() : CChatRoom_LeaveVoiceChat_Response(nullptr) {}
  explicit constexpr CChatRoom_LeaveVoiceChat_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_LeaveVoiceChat_Response(const CChatRoom_LeaveVoiceChat_Response& from);
  CChatRoom_LeaveVoiceChat_Response(CChatRoom_LeaveVoiceChat_Response&& from) noexcept
    : CChatRoom_LeaveVoiceChat_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_LeaveVoiceChat_Response& operator=(const CChatRoom_LeaveVoiceChat_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_LeaveVoiceChat_Response& operator=(CChatRoom_LeaveVoiceChat_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_LeaveVoiceChat_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_LeaveVoiceChat_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_LeaveVoiceChat_Response*>(
               &_CChatRoom_LeaveVoiceChat_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(CChatRoom_LeaveVoiceChat_Response& a, CChatRoom_LeaveVoiceChat_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_LeaveVoiceChat_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_LeaveVoiceChat_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_LeaveVoiceChat_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_LeaveVoiceChat_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_LeaveVoiceChat_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_LeaveVoiceChat_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_LeaveVoiceChat_Response";
  }
  protected:
  explicit CChatRoom_LeaveVoiceChat_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_LeaveVoiceChat_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetMessageHistory_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetMessageHistory_Request) */ {
 public:
  inline CChatRoom_GetMessageHistory_Request() : CChatRoom_GetMessageHistory_Request(nullptr) {}
  ~CChatRoom_GetMessageHistory_Request() override;
  explicit constexpr CChatRoom_GetMessageHistory_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetMessageHistory_Request(const CChatRoom_GetMessageHistory_Request& from);
  CChatRoom_GetMessageHistory_Request(CChatRoom_GetMessageHistory_Request&& from) noexcept
    : CChatRoom_GetMessageHistory_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetMessageHistory_Request& operator=(const CChatRoom_GetMessageHistory_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetMessageHistory_Request& operator=(CChatRoom_GetMessageHistory_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetMessageHistory_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetMessageHistory_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetMessageHistory_Request*>(
               &_CChatRoom_GetMessageHistory_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(CChatRoom_GetMessageHistory_Request& a, CChatRoom_GetMessageHistory_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetMessageHistory_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetMessageHistory_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetMessageHistory_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetMessageHistory_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetMessageHistory_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetMessageHistory_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetMessageHistory_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetMessageHistory_Request";
  }
  protected:
  explicit CChatRoom_GetMessageHistory_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
    kLastTimeFieldNumber = 3,
    kLastOrdinalFieldNumber = 4,
    kStartTimeFieldNumber = 5,
    kStartOrdinalFieldNumber = 6,
    kMaxCountFieldNumber = 7,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional uint32 last_time = 3;
  bool has_last_time() const;
  private:
  bool _internal_has_last_time() const;
  public:
  void clear_last_time();
  uint32_t last_time() const;
  void set_last_time(uint32_t value);
  private:
  uint32_t _internal_last_time() const;
  void _internal_set_last_time(uint32_t value);
  public:

  // optional uint32 last_ordinal = 4;
  bool has_last_ordinal() const;
  private:
  bool _internal_has_last_ordinal() const;
  public:
  void clear_last_ordinal();
  uint32_t last_ordinal() const;
  void set_last_ordinal(uint32_t value);
  private:
  uint32_t _internal_last_ordinal() const;
  void _internal_set_last_ordinal(uint32_t value);
  public:

  // optional uint32 start_time = 5;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  uint32_t start_time() const;
  void set_start_time(uint32_t value);
  private:
  uint32_t _internal_start_time() const;
  void _internal_set_start_time(uint32_t value);
  public:

  // optional uint32 start_ordinal = 6;
  bool has_start_ordinal() const;
  private:
  bool _internal_has_start_ordinal() const;
  public:
  void clear_start_ordinal();
  uint32_t start_ordinal() const;
  void set_start_ordinal(uint32_t value);
  private:
  uint32_t _internal_start_ordinal() const;
  void _internal_set_start_ordinal(uint32_t value);
  public:

  // optional uint32 max_count = 7;
  bool has_max_count() const;
  private:
  bool _internal_has_max_count() const;
  public:
  void clear_max_count();
  uint32_t max_count() const;
  void set_max_count(uint32_t value);
  private:
  uint32_t _internal_max_count() const;
  void _internal_set_max_count(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetMessageHistory_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  uint32_t last_time_;
  uint32_t last_ordinal_;
  uint32_t start_time_;
  uint32_t start_ordinal_;
  uint32_t max_count_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class ServerMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMessage) */ {
 public:
  inline ServerMessage() : ServerMessage(nullptr) {}
  ~ServerMessage() override;
  explicit constexpr ServerMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMessage(const ServerMessage& from);
  ServerMessage(ServerMessage&& from) noexcept
    : ServerMessage() {
    *this = ::std::move(from);
  }

  inline ServerMessage& operator=(const ServerMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMessage& operator=(ServerMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerMessage* internal_default_instance() {
    return reinterpret_cast<const ServerMessage*>(
               &_ServerMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(ServerMessage& a, ServerMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ServerMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMessage";
  }
  protected:
  explicit ServerMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStringParamFieldNumber = 2,
    kMessageFieldNumber = 1,
    kAccountidParamFieldNumber = 3,
  };
  // optional string string_param = 2;
  bool has_string_param() const;
  private:
  bool _internal_has_string_param() const;
  public:
  void clear_string_param();
  const std::string& string_param() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_string_param(ArgT0&& arg0, ArgT... args);
  std::string* mutable_string_param();
  PROTOBUF_NODISCARD std::string* release_string_param();
  void set_allocated_string_param(std::string* string_param);
  private:
  const std::string& _internal_string_param() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_string_param(const std::string& value);
  std::string* _internal_mutable_string_param();
  public:

  // optional .EChatRoomServerMessage message = 1 [default = k_EChatRoomServerMsg_Invalid];
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  ::EChatRoomServerMessage message() const;
  void set_message(::EChatRoomServerMessage value);
  private:
  ::EChatRoomServerMessage _internal_message() const;
  void _internal_set_message(::EChatRoomServerMessage value);
  public:

  // optional uint32 accountid_param = 3;
  bool has_accountid_param() const;
  private:
  bool _internal_has_accountid_param() const;
  public:
  void clear_accountid_param();
  uint32_t accountid_param() const;
  void set_accountid_param(uint32_t value);
  private:
  uint32_t _internal_accountid_param() const;
  void _internal_set_accountid_param(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_param_;
  int message_;
  uint32_t accountid_param_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction) */ {
 public:
  inline CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction() : CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction(nullptr) {}
  ~CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction() override;
  explicit constexpr CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction(const CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction& from);
  CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction(CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction&& from) noexcept
    : CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction& operator=(const CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction& operator=(CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction*>(
               &_CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction& a, CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction";
  }
  protected:
  explicit CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReactionFieldNumber = 2,
    kReactionTypeFieldNumber = 1,
    kNumReactorsFieldNumber = 3,
    kHasUserReactedFieldNumber = 4,
  };
  // optional string reaction = 2;
  bool has_reaction() const;
  private:
  bool _internal_has_reaction() const;
  public:
  void clear_reaction();
  const std::string& reaction() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_reaction(ArgT0&& arg0, ArgT... args);
  std::string* mutable_reaction();
  PROTOBUF_NODISCARD std::string* release_reaction();
  void set_allocated_reaction(std::string* reaction);
  private:
  const std::string& _internal_reaction() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reaction(const std::string& value);
  std::string* _internal_mutable_reaction();
  public:

  // optional .EChatRoomMessageReactionType reaction_type = 1 [default = k_EChatRoomMessageReactionType_Invalid];
  bool has_reaction_type() const;
  private:
  bool _internal_has_reaction_type() const;
  public:
  void clear_reaction_type();
  ::EChatRoomMessageReactionType reaction_type() const;
  void set_reaction_type(::EChatRoomMessageReactionType value);
  private:
  ::EChatRoomMessageReactionType _internal_reaction_type() const;
  void _internal_set_reaction_type(::EChatRoomMessageReactionType value);
  public:

  // optional uint32 num_reactors = 3;
  bool has_num_reactors() const;
  private:
  bool _internal_has_num_reactors() const;
  public:
  void clear_num_reactors();
  uint32_t num_reactors() const;
  void set_num_reactors(uint32_t value);
  private:
  uint32_t _internal_num_reactors() const;
  void _internal_set_num_reactors(uint32_t value);
  public:

  // optional bool has_user_reacted = 4;
  bool has_has_user_reacted() const;
  private:
  bool _internal_has_has_user_reacted() const;
  public:
  void clear_has_user_reacted();
  bool has_user_reacted() const;
  void set_has_user_reacted(bool value);
  private:
  bool _internal_has_user_reacted() const;
  void _internal_set_has_user_reacted(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reaction_;
  int reaction_type_;
  uint32_t num_reactors_;
  bool has_user_reacted_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetMessageHistory_Response_ChatMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetMessageHistory_Response.ChatMessage) */ {
 public:
  inline CChatRoom_GetMessageHistory_Response_ChatMessage() : CChatRoom_GetMessageHistory_Response_ChatMessage(nullptr) {}
  ~CChatRoom_GetMessageHistory_Response_ChatMessage() override;
  explicit constexpr CChatRoom_GetMessageHistory_Response_ChatMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetMessageHistory_Response_ChatMessage(const CChatRoom_GetMessageHistory_Response_ChatMessage& from);
  CChatRoom_GetMessageHistory_Response_ChatMessage(CChatRoom_GetMessageHistory_Response_ChatMessage&& from) noexcept
    : CChatRoom_GetMessageHistory_Response_ChatMessage() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetMessageHistory_Response_ChatMessage& operator=(const CChatRoom_GetMessageHistory_Response_ChatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetMessageHistory_Response_ChatMessage& operator=(CChatRoom_GetMessageHistory_Response_ChatMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetMessageHistory_Response_ChatMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetMessageHistory_Response_ChatMessage* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetMessageHistory_Response_ChatMessage*>(
               &_CChatRoom_GetMessageHistory_Response_ChatMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(CChatRoom_GetMessageHistory_Response_ChatMessage& a, CChatRoom_GetMessageHistory_Response_ChatMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetMessageHistory_Response_ChatMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetMessageHistory_Response_ChatMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetMessageHistory_Response_ChatMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetMessageHistory_Response_ChatMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetMessageHistory_Response_ChatMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetMessageHistory_Response_ChatMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetMessageHistory_Response_ChatMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetMessageHistory_Response.ChatMessage";
  }
  protected:
  explicit CChatRoom_GetMessageHistory_Response_ChatMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction MessageReaction;

  // accessors -------------------------------------------------------

  enum : int {
    kReactionsFieldNumber = 7,
    kMessageFieldNumber = 3,
    kServerMessageFieldNumber = 5,
    kSenderFieldNumber = 1,
    kServerTimestampFieldNumber = 2,
    kOrdinalFieldNumber = 4,
    kDeletedFieldNumber = 6,
  };
  // repeated .CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction reactions = 7;
  int reactions_size() const;
  private:
  int _internal_reactions_size() const;
  public:
  void clear_reactions();
  ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction* mutable_reactions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction >*
      mutable_reactions();
  private:
  const ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction& _internal_reactions(int index) const;
  ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction* _internal_add_reactions();
  public:
  const ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction& reactions(int index) const;
  ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction* add_reactions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction >&
      reactions() const;

  // optional string message = 3;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional .ServerMessage server_message = 5;
  bool has_server_message() const;
  private:
  bool _internal_has_server_message() const;
  public:
  void clear_server_message();
  const ::ServerMessage& server_message() const;
  PROTOBUF_NODISCARD ::ServerMessage* release_server_message();
  ::ServerMessage* mutable_server_message();
  void set_allocated_server_message(::ServerMessage* server_message);
  private:
  const ::ServerMessage& _internal_server_message() const;
  ::ServerMessage* _internal_mutable_server_message();
  public:
  void unsafe_arena_set_allocated_server_message(
      ::ServerMessage* server_message);
  ::ServerMessage* unsafe_arena_release_server_message();

  // optional uint32 sender = 1;
  bool has_sender() const;
  private:
  bool _internal_has_sender() const;
  public:
  void clear_sender();
  uint32_t sender() const;
  void set_sender(uint32_t value);
  private:
  uint32_t _internal_sender() const;
  void _internal_set_sender(uint32_t value);
  public:

  // optional uint32 server_timestamp = 2;
  bool has_server_timestamp() const;
  private:
  bool _internal_has_server_timestamp() const;
  public:
  void clear_server_timestamp();
  uint32_t server_timestamp() const;
  void set_server_timestamp(uint32_t value);
  private:
  uint32_t _internal_server_timestamp() const;
  void _internal_set_server_timestamp(uint32_t value);
  public:

  // optional uint32 ordinal = 4;
  bool has_ordinal() const;
  private:
  bool _internal_has_ordinal() const;
  public:
  void clear_ordinal();
  uint32_t ordinal() const;
  void set_ordinal(uint32_t value);
  private:
  uint32_t _internal_ordinal() const;
  void _internal_set_ordinal(uint32_t value);
  public:

  // optional bool deleted = 6;
  bool has_deleted() const;
  private:
  bool _internal_has_deleted() const;
  public:
  void clear_deleted();
  bool deleted() const;
  void set_deleted(bool value);
  private:
  bool _internal_deleted() const;
  void _internal_set_deleted(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetMessageHistory_Response.ChatMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction > reactions_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::ServerMessage* server_message_;
  uint32_t sender_;
  uint32_t server_timestamp_;
  uint32_t ordinal_;
  bool deleted_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetMessageHistory_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetMessageHistory_Response) */ {
 public:
  inline CChatRoom_GetMessageHistory_Response() : CChatRoom_GetMessageHistory_Response(nullptr) {}
  ~CChatRoom_GetMessageHistory_Response() override;
  explicit constexpr CChatRoom_GetMessageHistory_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetMessageHistory_Response(const CChatRoom_GetMessageHistory_Response& from);
  CChatRoom_GetMessageHistory_Response(CChatRoom_GetMessageHistory_Response&& from) noexcept
    : CChatRoom_GetMessageHistory_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetMessageHistory_Response& operator=(const CChatRoom_GetMessageHistory_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetMessageHistory_Response& operator=(CChatRoom_GetMessageHistory_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetMessageHistory_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetMessageHistory_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetMessageHistory_Response*>(
               &_CChatRoom_GetMessageHistory_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(CChatRoom_GetMessageHistory_Response& a, CChatRoom_GetMessageHistory_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetMessageHistory_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetMessageHistory_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetMessageHistory_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetMessageHistory_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetMessageHistory_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetMessageHistory_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetMessageHistory_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetMessageHistory_Response";
  }
  protected:
  explicit CChatRoom_GetMessageHistory_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoom_GetMessageHistory_Response_ChatMessage ChatMessage;

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 1,
    kMoreAvailableFieldNumber = 4,
  };
  // repeated .CChatRoom_GetMessageHistory_Response.ChatMessage messages = 1;
  int messages_size() const;
  private:
  int _internal_messages_size() const;
  public:
  void clear_messages();
  ::CChatRoom_GetMessageHistory_Response_ChatMessage* mutable_messages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage >*
      mutable_messages();
  private:
  const ::CChatRoom_GetMessageHistory_Response_ChatMessage& _internal_messages(int index) const;
  ::CChatRoom_GetMessageHistory_Response_ChatMessage* _internal_add_messages();
  public:
  const ::CChatRoom_GetMessageHistory_Response_ChatMessage& messages(int index) const;
  ::CChatRoom_GetMessageHistory_Response_ChatMessage* add_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage >&
      messages() const;

  // optional bool more_available = 4;
  bool has_more_available() const;
  private:
  bool _internal_has_more_available() const;
  public:
  void clear_more_available();
  bool more_available() const;
  void set_more_available(bool value);
  private:
  bool _internal_more_available() const;
  void _internal_set_more_available(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetMessageHistory_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage > messages_;
  bool more_available_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetMyChatRoomGroups_Request final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_GetMyChatRoomGroups_Request) */ {
 public:
  inline CChatRoom_GetMyChatRoomGroups_Request() : CChatRoom_GetMyChatRoomGroups_Request(nullptr) {}
  explicit constexpr CChatRoom_GetMyChatRoomGroups_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetMyChatRoomGroups_Request(const CChatRoom_GetMyChatRoomGroups_Request& from);
  CChatRoom_GetMyChatRoomGroups_Request(CChatRoom_GetMyChatRoomGroups_Request&& from) noexcept
    : CChatRoom_GetMyChatRoomGroups_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetMyChatRoomGroups_Request& operator=(const CChatRoom_GetMyChatRoomGroups_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetMyChatRoomGroups_Request& operator=(CChatRoom_GetMyChatRoomGroups_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetMyChatRoomGroups_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetMyChatRoomGroups_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetMyChatRoomGroups_Request*>(
               &_CChatRoom_GetMyChatRoomGroups_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(CChatRoom_GetMyChatRoomGroups_Request& a, CChatRoom_GetMyChatRoomGroups_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetMyChatRoomGroups_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetMyChatRoomGroups_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetMyChatRoomGroups_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetMyChatRoomGroups_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_GetMyChatRoomGroups_Request& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_GetMyChatRoomGroups_Request& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetMyChatRoomGroups_Request";
  }
  protected:
  explicit CChatRoom_GetMyChatRoomGroups_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_GetMyChatRoomGroups_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetChatRoomGroupSummary_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetChatRoomGroupSummary_Response) */ {
 public:
  inline CChatRoom_GetChatRoomGroupSummary_Response() : CChatRoom_GetChatRoomGroupSummary_Response(nullptr) {}
  ~CChatRoom_GetChatRoomGroupSummary_Response() override;
  explicit constexpr CChatRoom_GetChatRoomGroupSummary_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetChatRoomGroupSummary_Response(const CChatRoom_GetChatRoomGroupSummary_Response& from);
  CChatRoom_GetChatRoomGroupSummary_Response(CChatRoom_GetChatRoomGroupSummary_Response&& from) noexcept
    : CChatRoom_GetChatRoomGroupSummary_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetChatRoomGroupSummary_Response& operator=(const CChatRoom_GetChatRoomGroupSummary_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetChatRoomGroupSummary_Response& operator=(CChatRoom_GetChatRoomGroupSummary_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetChatRoomGroupSummary_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetChatRoomGroupSummary_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetChatRoomGroupSummary_Response*>(
               &_CChatRoom_GetChatRoomGroupSummary_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  friend void swap(CChatRoom_GetChatRoomGroupSummary_Response& a, CChatRoom_GetChatRoomGroupSummary_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetChatRoomGroupSummary_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetChatRoomGroupSummary_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetChatRoomGroupSummary_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetChatRoomGroupSummary_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetChatRoomGroupSummary_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetChatRoomGroupSummary_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetChatRoomGroupSummary_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetChatRoomGroupSummary_Response";
  }
  protected:
  explicit CChatRoom_GetChatRoomGroupSummary_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatRoomsFieldNumber = 6,
    kTopMembersFieldNumber = 10,
    kRoleIdsFieldNumber = 14,
    kRoleActionsFieldNumber = 15,
    kPartyBeaconsFieldNumber = 18,
    kChatGroupNameFieldNumber = 2,
    kChatGroupTaglineFieldNumber = 8,
    kChatGroupAvatarShaFieldNumber = 11,
    kAvatarUgcUrlFieldNumber = 21,
    kChatGroupIdFieldNumber = 1,
    kActiveMemberCountFieldNumber = 3,
    kActiveVoiceMemberCountFieldNumber = 4,
    kDefaultChatIdFieldNumber = 5,
    kClanidFieldNumber = 7,
    kAccountidOwnerFieldNumber = 9,
    kDefaultRoleIdFieldNumber = 13,
    kRankFieldNumber = 12,
    kWatchingBroadcastAccountidFieldNumber = 16,
    kWatchingBroadcastChannelIdFieldNumber = 19,
    kAppidFieldNumber = 17,
    kDisabledFieldNumber = 22,
    kActiveMinigameIdFieldNumber = 20,
  };
  // repeated .CChatRoomState chat_rooms = 6;
  int chat_rooms_size() const;
  private:
  int _internal_chat_rooms_size() const;
  public:
  void clear_chat_rooms();
  ::CChatRoomState* mutable_chat_rooms(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState >*
      mutable_chat_rooms();
  private:
  const ::CChatRoomState& _internal_chat_rooms(int index) const;
  ::CChatRoomState* _internal_add_chat_rooms();
  public:
  const ::CChatRoomState& chat_rooms(int index) const;
  ::CChatRoomState* add_chat_rooms();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState >&
      chat_rooms() const;

  // repeated uint32 top_members = 10;
  int top_members_size() const;
  private:
  int _internal_top_members_size() const;
  public:
  void clear_top_members();
  private:
  uint32_t _internal_top_members(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_top_members() const;
  void _internal_add_top_members(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_top_members();
  public:
  uint32_t top_members(int index) const;
  void set_top_members(int index, uint32_t value);
  void add_top_members(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      top_members() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_top_members();

  // repeated uint64 role_ids = 14;
  int role_ids_size() const;
  private:
  int _internal_role_ids_size() const;
  public:
  void clear_role_ids();
  private:
  uint64_t _internal_role_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_role_ids() const;
  void _internal_add_role_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_role_ids();
  public:
  uint64_t role_ids(int index) const;
  void set_role_ids(int index, uint64_t value);
  void add_role_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      role_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_role_ids();

  // repeated .CChatRoleActions role_actions = 15;
  int role_actions_size() const;
  private:
  int _internal_role_actions_size() const;
  public:
  void clear_role_actions();
  ::CChatRoleActions* mutable_role_actions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions >*
      mutable_role_actions();
  private:
  const ::CChatRoleActions& _internal_role_actions(int index) const;
  ::CChatRoleActions* _internal_add_role_actions();
  public:
  const ::CChatRoleActions& role_actions(int index) const;
  ::CChatRoleActions* add_role_actions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions >&
      role_actions() const;

  // repeated .CChatPartyBeacon party_beacons = 18;
  int party_beacons_size() const;
  private:
  int _internal_party_beacons_size() const;
  public:
  void clear_party_beacons();
  ::CChatPartyBeacon* mutable_party_beacons(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatPartyBeacon >*
      mutable_party_beacons();
  private:
  const ::CChatPartyBeacon& _internal_party_beacons(int index) const;
  ::CChatPartyBeacon* _internal_add_party_beacons();
  public:
  const ::CChatPartyBeacon& party_beacons(int index) const;
  ::CChatPartyBeacon* add_party_beacons();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatPartyBeacon >&
      party_beacons() const;

  // optional string chat_group_name = 2;
  bool has_chat_group_name() const;
  private:
  bool _internal_has_chat_group_name() const;
  public:
  void clear_chat_group_name();
  const std::string& chat_group_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_chat_group_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_chat_group_name();
  PROTOBUF_NODISCARD std::string* release_chat_group_name();
  void set_allocated_chat_group_name(std::string* chat_group_name);
  private:
  const std::string& _internal_chat_group_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chat_group_name(const std::string& value);
  std::string* _internal_mutable_chat_group_name();
  public:

  // optional string chat_group_tagline = 8;
  bool has_chat_group_tagline() const;
  private:
  bool _internal_has_chat_group_tagline() const;
  public:
  void clear_chat_group_tagline();
  const std::string& chat_group_tagline() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_chat_group_tagline(ArgT0&& arg0, ArgT... args);
  std::string* mutable_chat_group_tagline();
  PROTOBUF_NODISCARD std::string* release_chat_group_tagline();
  void set_allocated_chat_group_tagline(std::string* chat_group_tagline);
  private:
  const std::string& _internal_chat_group_tagline() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chat_group_tagline(const std::string& value);
  std::string* _internal_mutable_chat_group_tagline();
  public:

  // optional bytes chat_group_avatar_sha = 11;
  bool has_chat_group_avatar_sha() const;
  private:
  bool _internal_has_chat_group_avatar_sha() const;
  public:
  void clear_chat_group_avatar_sha();
  const std::string& chat_group_avatar_sha() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_chat_group_avatar_sha(ArgT0&& arg0, ArgT... args);
  std::string* mutable_chat_group_avatar_sha();
  PROTOBUF_NODISCARD std::string* release_chat_group_avatar_sha();
  void set_allocated_chat_group_avatar_sha(std::string* chat_group_avatar_sha);
  private:
  const std::string& _internal_chat_group_avatar_sha() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chat_group_avatar_sha(const std::string& value);
  std::string* _internal_mutable_chat_group_avatar_sha();
  public:

  // optional string avatar_ugc_url = 21;
  bool has_avatar_ugc_url() const;
  private:
  bool _internal_has_avatar_ugc_url() const;
  public:
  void clear_avatar_ugc_url();
  const std::string& avatar_ugc_url() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_avatar_ugc_url(ArgT0&& arg0, ArgT... args);
  std::string* mutable_avatar_ugc_url();
  PROTOBUF_NODISCARD std::string* release_avatar_ugc_url();
  void set_allocated_avatar_ugc_url(std::string* avatar_ugc_url);
  private:
  const std::string& _internal_avatar_ugc_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_avatar_ugc_url(const std::string& value);
  std::string* _internal_mutable_avatar_ugc_url();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint32 active_member_count = 3;
  bool has_active_member_count() const;
  private:
  bool _internal_has_active_member_count() const;
  public:
  void clear_active_member_count();
  uint32_t active_member_count() const;
  void set_active_member_count(uint32_t value);
  private:
  uint32_t _internal_active_member_count() const;
  void _internal_set_active_member_count(uint32_t value);
  public:

  // optional uint32 active_voice_member_count = 4;
  bool has_active_voice_member_count() const;
  private:
  bool _internal_has_active_voice_member_count() const;
  public:
  void clear_active_voice_member_count();
  uint32_t active_voice_member_count() const;
  void set_active_voice_member_count(uint32_t value);
  private:
  uint32_t _internal_active_voice_member_count() const;
  void _internal_set_active_voice_member_count(uint32_t value);
  public:

  // optional uint64 default_chat_id = 5;
  bool has_default_chat_id() const;
  private:
  bool _internal_has_default_chat_id() const;
  public:
  void clear_default_chat_id();
  uint64_t default_chat_id() const;
  void set_default_chat_id(uint64_t value);
  private:
  uint64_t _internal_default_chat_id() const;
  void _internal_set_default_chat_id(uint64_t value);
  public:

  // optional uint32 clanid = 7;
  bool has_clanid() const;
  private:
  bool _internal_has_clanid() const;
  public:
  void clear_clanid();
  uint32_t clanid() const;
  void set_clanid(uint32_t value);
  private:
  uint32_t _internal_clanid() const;
  void _internal_set_clanid(uint32_t value);
  public:

  // optional uint32 accountid_owner = 9;
  bool has_accountid_owner() const;
  private:
  bool _internal_has_accountid_owner() const;
  public:
  void clear_accountid_owner();
  uint32_t accountid_owner() const;
  void set_accountid_owner(uint32_t value);
  private:
  uint32_t _internal_accountid_owner() const;
  void _internal_set_accountid_owner(uint32_t value);
  public:

  // optional uint64 default_role_id = 13;
  bool has_default_role_id() const;
  private:
  bool _internal_has_default_role_id() const;
  public:
  void clear_default_role_id();
  uint64_t default_role_id() const;
  void set_default_role_id(uint64_t value);
  private:
  uint64_t _internal_default_role_id() const;
  void _internal_set_default_role_id(uint64_t value);
  public:

  // optional .EChatRoomGroupRank rank = 12 [default = k_EChatRoomGroupRank_Default];
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  ::EChatRoomGroupRank rank() const;
  void set_rank(::EChatRoomGroupRank value);
  private:
  ::EChatRoomGroupRank _internal_rank() const;
  void _internal_set_rank(::EChatRoomGroupRank value);
  public:

  // optional uint32 watching_broadcast_accountid = 16;
  bool has_watching_broadcast_accountid() const;
  private:
  bool _internal_has_watching_broadcast_accountid() const;
  public:
  void clear_watching_broadcast_accountid();
  uint32_t watching_broadcast_accountid() const;
  void set_watching_broadcast_accountid(uint32_t value);
  private:
  uint32_t _internal_watching_broadcast_accountid() const;
  void _internal_set_watching_broadcast_accountid(uint32_t value);
  public:

  // optional uint64 watching_broadcast_channel_id = 19;
  bool has_watching_broadcast_channel_id() const;
  private:
  bool _internal_has_watching_broadcast_channel_id() const;
  public:
  void clear_watching_broadcast_channel_id();
  uint64_t watching_broadcast_channel_id() const;
  void set_watching_broadcast_channel_id(uint64_t value);
  private:
  uint64_t _internal_watching_broadcast_channel_id() const;
  void _internal_set_watching_broadcast_channel_id(uint64_t value);
  public:

  // optional uint32 appid = 17;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  uint32_t appid() const;
  void set_appid(uint32_t value);
  private:
  uint32_t _internal_appid() const;
  void _internal_set_appid(uint32_t value);
  public:

  // optional bool disabled = 22;
  bool has_disabled() const;
  private:
  bool _internal_has_disabled() const;
  public:
  void clear_disabled();
  bool disabled() const;
  void set_disabled(bool value);
  private:
  bool _internal_disabled() const;
  void _internal_set_disabled(bool value);
  public:

  // optional uint64 active_minigame_id = 20;
  bool has_active_minigame_id() const;
  private:
  bool _internal_has_active_minigame_id() const;
  public:
  void clear_active_minigame_id();
  uint64_t active_minigame_id() const;
  void set_active_minigame_id(uint64_t value);
  private:
  uint64_t _internal_active_minigame_id() const;
  void _internal_set_active_minigame_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetChatRoomGroupSummary_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState > chat_rooms_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > top_members_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > role_ids_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions > role_actions_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatPartyBeacon > party_beacons_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr chat_group_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr chat_group_tagline_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr chat_group_avatar_sha_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_ugc_url_;
  uint64_t chat_group_id_;
  uint32_t active_member_count_;
  uint32_t active_voice_member_count_;
  uint64_t default_chat_id_;
  uint32_t clanid_;
  uint32_t accountid_owner_;
  uint64_t default_role_id_;
  int rank_;
  uint32_t watching_broadcast_accountid_;
  uint64_t watching_broadcast_channel_id_;
  uint32_t appid_;
  bool disabled_;
  uint64_t active_minigame_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoomSummaryPair final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoomSummaryPair) */ {
 public:
  inline CChatRoomSummaryPair() : CChatRoomSummaryPair(nullptr) {}
  ~CChatRoomSummaryPair() override;
  explicit constexpr CChatRoomSummaryPair(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoomSummaryPair(const CChatRoomSummaryPair& from);
  CChatRoomSummaryPair(CChatRoomSummaryPair&& from) noexcept
    : CChatRoomSummaryPair() {
    *this = ::std::move(from);
  }

  inline CChatRoomSummaryPair& operator=(const CChatRoomSummaryPair& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoomSummaryPair& operator=(CChatRoomSummaryPair&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoomSummaryPair& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoomSummaryPair* internal_default_instance() {
    return reinterpret_cast<const CChatRoomSummaryPair*>(
               &_CChatRoomSummaryPair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  friend void swap(CChatRoomSummaryPair& a, CChatRoomSummaryPair& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoomSummaryPair* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoomSummaryPair* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoomSummaryPair* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoomSummaryPair>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoomSummaryPair& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoomSummaryPair& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomSummaryPair* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoomSummaryPair";
  }
  protected:
  explicit CChatRoomSummaryPair(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserChatGroupStateFieldNumber = 1,
    kGroupSummaryFieldNumber = 2,
  };
  // optional .CUserChatRoomGroupState user_chat_group_state = 1;
  bool has_user_chat_group_state() const;
  private:
  bool _internal_has_user_chat_group_state() const;
  public:
  void clear_user_chat_group_state();
  const ::CUserChatRoomGroupState& user_chat_group_state() const;
  PROTOBUF_NODISCARD ::CUserChatRoomGroupState* release_user_chat_group_state();
  ::CUserChatRoomGroupState* mutable_user_chat_group_state();
  void set_allocated_user_chat_group_state(::CUserChatRoomGroupState* user_chat_group_state);
  private:
  const ::CUserChatRoomGroupState& _internal_user_chat_group_state() const;
  ::CUserChatRoomGroupState* _internal_mutable_user_chat_group_state();
  public:
  void unsafe_arena_set_allocated_user_chat_group_state(
      ::CUserChatRoomGroupState* user_chat_group_state);
  ::CUserChatRoomGroupState* unsafe_arena_release_user_chat_group_state();

  // optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 2;
  bool has_group_summary() const;
  private:
  bool _internal_has_group_summary() const;
  public:
  void clear_group_summary();
  const ::CChatRoom_GetChatRoomGroupSummary_Response& group_summary() const;
  PROTOBUF_NODISCARD ::CChatRoom_GetChatRoomGroupSummary_Response* release_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* mutable_group_summary();
  void set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary);
  private:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& _internal_group_summary() const;
  ::CChatRoom_GetChatRoomGroupSummary_Response* _internal_mutable_group_summary();
  public:
  void unsafe_arena_set_allocated_group_summary(
      ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary);
  ::CChatRoom_GetChatRoomGroupSummary_Response* unsafe_arena_release_group_summary();

  // @@protoc_insertion_point(class_scope:CChatRoomSummaryPair)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CUserChatRoomGroupState* user_chat_group_state_;
  ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetMyChatRoomGroups_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetMyChatRoomGroups_Response) */ {
 public:
  inline CChatRoom_GetMyChatRoomGroups_Response() : CChatRoom_GetMyChatRoomGroups_Response(nullptr) {}
  ~CChatRoom_GetMyChatRoomGroups_Response() override;
  explicit constexpr CChatRoom_GetMyChatRoomGroups_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetMyChatRoomGroups_Response(const CChatRoom_GetMyChatRoomGroups_Response& from);
  CChatRoom_GetMyChatRoomGroups_Response(CChatRoom_GetMyChatRoomGroups_Response&& from) noexcept
    : CChatRoom_GetMyChatRoomGroups_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetMyChatRoomGroups_Response& operator=(const CChatRoom_GetMyChatRoomGroups_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetMyChatRoomGroups_Response& operator=(CChatRoom_GetMyChatRoomGroups_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetMyChatRoomGroups_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetMyChatRoomGroups_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetMyChatRoomGroups_Response*>(
               &_CChatRoom_GetMyChatRoomGroups_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  friend void swap(CChatRoom_GetMyChatRoomGroups_Response& a, CChatRoom_GetMyChatRoomGroups_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetMyChatRoomGroups_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetMyChatRoomGroups_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetMyChatRoomGroups_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetMyChatRoomGroups_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetMyChatRoomGroups_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetMyChatRoomGroups_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetMyChatRoomGroups_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetMyChatRoomGroups_Response";
  }
  protected:
  explicit CChatRoom_GetMyChatRoomGroups_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatRoomGroupsFieldNumber = 1,
  };
  // repeated .CChatRoomSummaryPair chat_room_groups = 1;
  int chat_room_groups_size() const;
  private:
  int _internal_chat_room_groups_size() const;
  public:
  void clear_chat_room_groups();
  ::CChatRoomSummaryPair* mutable_chat_room_groups(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomSummaryPair >*
      mutable_chat_room_groups();
  private:
  const ::CChatRoomSummaryPair& _internal_chat_room_groups(int index) const;
  ::CChatRoomSummaryPair* _internal_add_chat_room_groups();
  public:
  const ::CChatRoomSummaryPair& chat_room_groups(int index) const;
  ::CChatRoomSummaryPair* add_chat_room_groups();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomSummaryPair >&
      chat_room_groups() const;

  // @@protoc_insertion_point(class_scope:CChatRoom_GetMyChatRoomGroups_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomSummaryPair > chat_room_groups_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetChatRoomGroupState_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetChatRoomGroupState_Request) */ {
 public:
  inline CChatRoom_GetChatRoomGroupState_Request() : CChatRoom_GetChatRoomGroupState_Request(nullptr) {}
  ~CChatRoom_GetChatRoomGroupState_Request() override;
  explicit constexpr CChatRoom_GetChatRoomGroupState_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetChatRoomGroupState_Request(const CChatRoom_GetChatRoomGroupState_Request& from);
  CChatRoom_GetChatRoomGroupState_Request(CChatRoom_GetChatRoomGroupState_Request&& from) noexcept
    : CChatRoom_GetChatRoomGroupState_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetChatRoomGroupState_Request& operator=(const CChatRoom_GetChatRoomGroupState_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetChatRoomGroupState_Request& operator=(CChatRoom_GetChatRoomGroupState_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetChatRoomGroupState_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetChatRoomGroupState_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetChatRoomGroupState_Request*>(
               &_CChatRoom_GetChatRoomGroupState_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  friend void swap(CChatRoom_GetChatRoomGroupState_Request& a, CChatRoom_GetChatRoomGroupState_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetChatRoomGroupState_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetChatRoomGroupState_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetChatRoomGroupState_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetChatRoomGroupState_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetChatRoomGroupState_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetChatRoomGroupState_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetChatRoomGroupState_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetChatRoomGroupState_Request";
  }
  protected:
  explicit CChatRoom_GetChatRoomGroupState_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetChatRoomGroupState_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetChatRoomGroupState_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetChatRoomGroupState_Response) */ {
 public:
  inline CChatRoom_GetChatRoomGroupState_Response() : CChatRoom_GetChatRoomGroupState_Response(nullptr) {}
  ~CChatRoom_GetChatRoomGroupState_Response() override;
  explicit constexpr CChatRoom_GetChatRoomGroupState_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetChatRoomGroupState_Response(const CChatRoom_GetChatRoomGroupState_Response& from);
  CChatRoom_GetChatRoomGroupState_Response(CChatRoom_GetChatRoomGroupState_Response&& from) noexcept
    : CChatRoom_GetChatRoomGroupState_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetChatRoomGroupState_Response& operator=(const CChatRoom_GetChatRoomGroupState_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetChatRoomGroupState_Response& operator=(CChatRoom_GetChatRoomGroupState_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetChatRoomGroupState_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetChatRoomGroupState_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetChatRoomGroupState_Response*>(
               &_CChatRoom_GetChatRoomGroupState_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  friend void swap(CChatRoom_GetChatRoomGroupState_Response& a, CChatRoom_GetChatRoomGroupState_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetChatRoomGroupState_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetChatRoomGroupState_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetChatRoomGroupState_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetChatRoomGroupState_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetChatRoomGroupState_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetChatRoomGroupState_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetChatRoomGroupState_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetChatRoomGroupState_Response";
  }
  protected:
  explicit CChatRoom_GetChatRoomGroupState_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 1,
  };
  // optional .CChatRoomGroupState state = 1;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  const ::CChatRoomGroupState& state() const;
  PROTOBUF_NODISCARD ::CChatRoomGroupState* release_state();
  ::CChatRoomGroupState* mutable_state();
  void set_allocated_state(::CChatRoomGroupState* state);
  private:
  const ::CChatRoomGroupState& _internal_state() const;
  ::CChatRoomGroupState* _internal_mutable_state();
  public:
  void unsafe_arena_set_allocated_state(
      ::CChatRoomGroupState* state);
  ::CChatRoomGroupState* unsafe_arena_release_state();

  // @@protoc_insertion_point(class_scope:CChatRoom_GetChatRoomGroupState_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CChatRoomGroupState* state_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetChatRoomGroupSummary_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetChatRoomGroupSummary_Request) */ {
 public:
  inline CChatRoom_GetChatRoomGroupSummary_Request() : CChatRoom_GetChatRoomGroupSummary_Request(nullptr) {}
  ~CChatRoom_GetChatRoomGroupSummary_Request() override;
  explicit constexpr CChatRoom_GetChatRoomGroupSummary_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetChatRoomGroupSummary_Request(const CChatRoom_GetChatRoomGroupSummary_Request& from);
  CChatRoom_GetChatRoomGroupSummary_Request(CChatRoom_GetChatRoomGroupSummary_Request&& from) noexcept
    : CChatRoom_GetChatRoomGroupSummary_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetChatRoomGroupSummary_Request& operator=(const CChatRoom_GetChatRoomGroupSummary_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetChatRoomGroupSummary_Request& operator=(CChatRoom_GetChatRoomGroupSummary_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetChatRoomGroupSummary_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetChatRoomGroupSummary_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetChatRoomGroupSummary_Request*>(
               &_CChatRoom_GetChatRoomGroupSummary_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  friend void swap(CChatRoom_GetChatRoomGroupSummary_Request& a, CChatRoom_GetChatRoomGroupSummary_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetChatRoomGroupSummary_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetChatRoomGroupSummary_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetChatRoomGroupSummary_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetChatRoomGroupSummary_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetChatRoomGroupSummary_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetChatRoomGroupSummary_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetChatRoomGroupSummary_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetChatRoomGroupSummary_Request";
  }
  protected:
  explicit CChatRoom_GetChatRoomGroupSummary_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetChatRoomGroupSummary_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetAppChatRoomGroupForceActive_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetAppChatRoomGroupForceActive_Request) */ {
 public:
  inline CChatRoom_SetAppChatRoomGroupForceActive_Request() : CChatRoom_SetAppChatRoomGroupForceActive_Request(nullptr) {}
  ~CChatRoom_SetAppChatRoomGroupForceActive_Request() override;
  explicit constexpr CChatRoom_SetAppChatRoomGroupForceActive_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetAppChatRoomGroupForceActive_Request(const CChatRoom_SetAppChatRoomGroupForceActive_Request& from);
  CChatRoom_SetAppChatRoomGroupForceActive_Request(CChatRoom_SetAppChatRoomGroupForceActive_Request&& from) noexcept
    : CChatRoom_SetAppChatRoomGroupForceActive_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetAppChatRoomGroupForceActive_Request& operator=(const CChatRoom_SetAppChatRoomGroupForceActive_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetAppChatRoomGroupForceActive_Request& operator=(CChatRoom_SetAppChatRoomGroupForceActive_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetAppChatRoomGroupForceActive_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetAppChatRoomGroupForceActive_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetAppChatRoomGroupForceActive_Request*>(
               &_CChatRoom_SetAppChatRoomGroupForceActive_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  friend void swap(CChatRoom_SetAppChatRoomGroupForceActive_Request& a, CChatRoom_SetAppChatRoomGroupForceActive_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetAppChatRoomGroupForceActive_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetAppChatRoomGroupForceActive_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetAppChatRoomGroupForceActive_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetAppChatRoomGroupForceActive_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SetAppChatRoomGroupForceActive_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SetAppChatRoomGroupForceActive_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetAppChatRoomGroupForceActive_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetAppChatRoomGroupForceActive_Request";
  }
  protected:
  explicit CChatRoom_SetAppChatRoomGroupForceActive_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kRequestingAppIdFieldNumber = 2,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint32 requesting_app_id = 2;
  bool has_requesting_app_id() const;
  private:
  bool _internal_has_requesting_app_id() const;
  public:
  void clear_requesting_app_id();
  uint32_t requesting_app_id() const;
  void set_requesting_app_id(uint32_t value);
  private:
  uint32_t _internal_requesting_app_id() const;
  void _internal_set_requesting_app_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SetAppChatRoomGroupForceActive_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint32_t requesting_app_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetAppChatRoomGroupForceActive_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetAppChatRoomGroupForceActive_Response) */ {
 public:
  inline CChatRoom_SetAppChatRoomGroupForceActive_Response() : CChatRoom_SetAppChatRoomGroupForceActive_Response(nullptr) {}
  ~CChatRoom_SetAppChatRoomGroupForceActive_Response() override;
  explicit constexpr CChatRoom_SetAppChatRoomGroupForceActive_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetAppChatRoomGroupForceActive_Response(const CChatRoom_SetAppChatRoomGroupForceActive_Response& from);
  CChatRoom_SetAppChatRoomGroupForceActive_Response(CChatRoom_SetAppChatRoomGroupForceActive_Response&& from) noexcept
    : CChatRoom_SetAppChatRoomGroupForceActive_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetAppChatRoomGroupForceActive_Response& operator=(const CChatRoom_SetAppChatRoomGroupForceActive_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetAppChatRoomGroupForceActive_Response& operator=(CChatRoom_SetAppChatRoomGroupForceActive_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetAppChatRoomGroupForceActive_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetAppChatRoomGroupForceActive_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetAppChatRoomGroupForceActive_Response*>(
               &_CChatRoom_SetAppChatRoomGroupForceActive_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  friend void swap(CChatRoom_SetAppChatRoomGroupForceActive_Response& a, CChatRoom_SetAppChatRoomGroupForceActive_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetAppChatRoomGroupForceActive_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetAppChatRoomGroupForceActive_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetAppChatRoomGroupForceActive_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetAppChatRoomGroupForceActive_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SetAppChatRoomGroupForceActive_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SetAppChatRoomGroupForceActive_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetAppChatRoomGroupForceActive_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetAppChatRoomGroupForceActive_Response";
  }
  protected:
  explicit CChatRoom_SetAppChatRoomGroupForceActive_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountsInChannelFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated uint32 accounts_in_channel = 2;
  int accounts_in_channel_size() const;
  private:
  int _internal_accounts_in_channel_size() const;
  public:
  void clear_accounts_in_channel();
  private:
  uint32_t _internal_accounts_in_channel(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_accounts_in_channel() const;
  void _internal_add_accounts_in_channel(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_accounts_in_channel();
  public:
  uint32_t accounts_in_channel(int index) const;
  void set_accounts_in_channel(int index, uint32_t value);
  void add_accounts_in_channel(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      accounts_in_channel() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_accounts_in_channel();

  // optional uint32 result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  uint32_t result() const;
  void set_result(uint32_t value);
  private:
  uint32_t _internal_result() const;
  void _internal_set_result(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SetAppChatRoomGroupForceActive_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > accounts_in_channel_;
  uint32_t result_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetAppChatRoomGroupStopForceActive_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetAppChatRoomGroupStopForceActive_Notification) */ {
 public:
  inline CChatRoom_SetAppChatRoomGroupStopForceActive_Notification() : CChatRoom_SetAppChatRoomGroupStopForceActive_Notification(nullptr) {}
  ~CChatRoom_SetAppChatRoomGroupStopForceActive_Notification() override;
  explicit constexpr CChatRoom_SetAppChatRoomGroupStopForceActive_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetAppChatRoomGroupStopForceActive_Notification(const CChatRoom_SetAppChatRoomGroupStopForceActive_Notification& from);
  CChatRoom_SetAppChatRoomGroupStopForceActive_Notification(CChatRoom_SetAppChatRoomGroupStopForceActive_Notification&& from) noexcept
    : CChatRoom_SetAppChatRoomGroupStopForceActive_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetAppChatRoomGroupStopForceActive_Notification& operator=(const CChatRoom_SetAppChatRoomGroupStopForceActive_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetAppChatRoomGroupStopForceActive_Notification& operator=(CChatRoom_SetAppChatRoomGroupStopForceActive_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetAppChatRoomGroupStopForceActive_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetAppChatRoomGroupStopForceActive_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetAppChatRoomGroupStopForceActive_Notification*>(
               &_CChatRoom_SetAppChatRoomGroupStopForceActive_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  friend void swap(CChatRoom_SetAppChatRoomGroupStopForceActive_Notification& a, CChatRoom_SetAppChatRoomGroupStopForceActive_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetAppChatRoomGroupStopForceActive_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetAppChatRoomGroupStopForceActive_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetAppChatRoomGroupStopForceActive_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetAppChatRoomGroupStopForceActive_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SetAppChatRoomGroupStopForceActive_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SetAppChatRoomGroupStopForceActive_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetAppChatRoomGroupStopForceActive_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetAppChatRoomGroupStopForceActive_Notification";
  }
  protected:
  explicit CChatRoom_SetAppChatRoomGroupStopForceActive_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kRequestingAppIdFieldNumber = 2,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint32 requesting_app_id = 2;
  bool has_requesting_app_id() const;
  private:
  bool _internal_has_requesting_app_id() const;
  public:
  void clear_requesting_app_id();
  uint32_t requesting_app_id() const;
  void set_requesting_app_id(uint32_t value);
  private:
  uint32_t _internal_requesting_app_id() const;
  void _internal_set_requesting_app_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SetAppChatRoomGroupStopForceActive_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint32_t requesting_app_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_AckChatMessage_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_AckChatMessage_Notification) */ {
 public:
  inline CChatRoom_AckChatMessage_Notification() : CChatRoom_AckChatMessage_Notification(nullptr) {}
  ~CChatRoom_AckChatMessage_Notification() override;
  explicit constexpr CChatRoom_AckChatMessage_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_AckChatMessage_Notification(const CChatRoom_AckChatMessage_Notification& from);
  CChatRoom_AckChatMessage_Notification(CChatRoom_AckChatMessage_Notification&& from) noexcept
    : CChatRoom_AckChatMessage_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_AckChatMessage_Notification& operator=(const CChatRoom_AckChatMessage_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_AckChatMessage_Notification& operator=(CChatRoom_AckChatMessage_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_AckChatMessage_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_AckChatMessage_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_AckChatMessage_Notification*>(
               &_CChatRoom_AckChatMessage_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  friend void swap(CChatRoom_AckChatMessage_Notification& a, CChatRoom_AckChatMessage_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_AckChatMessage_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_AckChatMessage_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_AckChatMessage_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_AckChatMessage_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_AckChatMessage_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_AckChatMessage_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_AckChatMessage_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_AckChatMessage_Notification";
  }
  protected:
  explicit CChatRoom_AckChatMessage_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
    kTimestampFieldNumber = 3,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  uint32_t timestamp() const;
  void set_timestamp(uint32_t value);
  private:
  uint32_t _internal_timestamp() const;
  void _internal_set_timestamp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_AckChatMessage_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  uint32_t timestamp_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_CreateInviteLink_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateInviteLink_Request) */ {
 public:
  inline CChatRoom_CreateInviteLink_Request() : CChatRoom_CreateInviteLink_Request(nullptr) {}
  ~CChatRoom_CreateInviteLink_Request() override;
  explicit constexpr CChatRoom_CreateInviteLink_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_CreateInviteLink_Request(const CChatRoom_CreateInviteLink_Request& from);
  CChatRoom_CreateInviteLink_Request(CChatRoom_CreateInviteLink_Request&& from) noexcept
    : CChatRoom_CreateInviteLink_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateInviteLink_Request& operator=(const CChatRoom_CreateInviteLink_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_CreateInviteLink_Request& operator=(CChatRoom_CreateInviteLink_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_CreateInviteLink_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_CreateInviteLink_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateInviteLink_Request*>(
               &_CChatRoom_CreateInviteLink_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  friend void swap(CChatRoom_CreateInviteLink_Request& a, CChatRoom_CreateInviteLink_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_CreateInviteLink_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_CreateInviteLink_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_CreateInviteLink_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_CreateInviteLink_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_CreateInviteLink_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_CreateInviteLink_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateInviteLink_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_CreateInviteLink_Request";
  }
  protected:
  explicit CChatRoom_CreateInviteLink_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 3,
    kSecondsValidFieldNumber = 2,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 3;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional uint32 seconds_valid = 2;
  bool has_seconds_valid() const;
  private:
  bool _internal_has_seconds_valid() const;
  public:
  void clear_seconds_valid();
  uint32_t seconds_valid() const;
  void set_seconds_valid(uint32_t value);
  private:
  uint32_t _internal_seconds_valid() const;
  void _internal_set_seconds_valid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateInviteLink_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  uint32_t seconds_valid_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_CreateInviteLink_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_CreateInviteLink_Response) */ {
 public:
  inline CChatRoom_CreateInviteLink_Response() : CChatRoom_CreateInviteLink_Response(nullptr) {}
  ~CChatRoom_CreateInviteLink_Response() override;
  explicit constexpr CChatRoom_CreateInviteLink_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_CreateInviteLink_Response(const CChatRoom_CreateInviteLink_Response& from);
  CChatRoom_CreateInviteLink_Response(CChatRoom_CreateInviteLink_Response&& from) noexcept
    : CChatRoom_CreateInviteLink_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_CreateInviteLink_Response& operator=(const CChatRoom_CreateInviteLink_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_CreateInviteLink_Response& operator=(CChatRoom_CreateInviteLink_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_CreateInviteLink_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_CreateInviteLink_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_CreateInviteLink_Response*>(
               &_CChatRoom_CreateInviteLink_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  friend void swap(CChatRoom_CreateInviteLink_Response& a, CChatRoom_CreateInviteLink_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_CreateInviteLink_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_CreateInviteLink_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_CreateInviteLink_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_CreateInviteLink_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_CreateInviteLink_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_CreateInviteLink_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_CreateInviteLink_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_CreateInviteLink_Response";
  }
  protected:
  explicit CChatRoom_CreateInviteLink_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInviteCodeFieldNumber = 1,
    kSecondsValidFieldNumber = 2,
  };
  // optional string invite_code = 1;
  bool has_invite_code() const;
  private:
  bool _internal_has_invite_code() const;
  public:
  void clear_invite_code();
  const std::string& invite_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_invite_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_invite_code();
  PROTOBUF_NODISCARD std::string* release_invite_code();
  void set_allocated_invite_code(std::string* invite_code);
  private:
  const std::string& _internal_invite_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_invite_code(const std::string& value);
  std::string* _internal_mutable_invite_code();
  public:

  // optional uint32 seconds_valid = 2;
  bool has_seconds_valid() const;
  private:
  bool _internal_has_seconds_valid() const;
  public:
  void clear_seconds_valid();
  uint32_t seconds_valid() const;
  void set_seconds_valid(uint32_t value);
  private:
  uint32_t _internal_seconds_valid() const;
  void _internal_set_seconds_valid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_CreateInviteLink_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr invite_code_;
  uint32_t seconds_valid_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteLinkInfo_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteLinkInfo_Request) */ {
 public:
  inline CChatRoom_GetInviteLinkInfo_Request() : CChatRoom_GetInviteLinkInfo_Request(nullptr) {}
  ~CChatRoom_GetInviteLinkInfo_Request() override;
  explicit constexpr CChatRoom_GetInviteLinkInfo_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetInviteLinkInfo_Request(const CChatRoom_GetInviteLinkInfo_Request& from);
  CChatRoom_GetInviteLinkInfo_Request(CChatRoom_GetInviteLinkInfo_Request&& from) noexcept
    : CChatRoom_GetInviteLinkInfo_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteLinkInfo_Request& operator=(const CChatRoom_GetInviteLinkInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetInviteLinkInfo_Request& operator=(CChatRoom_GetInviteLinkInfo_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetInviteLinkInfo_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetInviteLinkInfo_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteLinkInfo_Request*>(
               &_CChatRoom_GetInviteLinkInfo_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  friend void swap(CChatRoom_GetInviteLinkInfo_Request& a, CChatRoom_GetInviteLinkInfo_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetInviteLinkInfo_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetInviteLinkInfo_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetInviteLinkInfo_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinkInfo_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetInviteLinkInfo_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetInviteLinkInfo_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteLinkInfo_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetInviteLinkInfo_Request";
  }
  protected:
  explicit CChatRoom_GetInviteLinkInfo_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInviteCodeFieldNumber = 1,
  };
  // optional string invite_code = 1;
  bool has_invite_code() const;
  private:
  bool _internal_has_invite_code() const;
  public:
  void clear_invite_code();
  const std::string& invite_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_invite_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_invite_code();
  PROTOBUF_NODISCARD std::string* release_invite_code();
  void set_allocated_invite_code(std::string* invite_code);
  private:
  const std::string& _internal_invite_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_invite_code(const std::string& value);
  std::string* _internal_mutable_invite_code();
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteLinkInfo_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr invite_code_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteLinkInfo_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteLinkInfo_Response) */ {
 public:
  inline CChatRoom_GetInviteLinkInfo_Response() : CChatRoom_GetInviteLinkInfo_Response(nullptr) {}
  ~CChatRoom_GetInviteLinkInfo_Response() override;
  explicit constexpr CChatRoom_GetInviteLinkInfo_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetInviteLinkInfo_Response(const CChatRoom_GetInviteLinkInfo_Response& from);
  CChatRoom_GetInviteLinkInfo_Response(CChatRoom_GetInviteLinkInfo_Response&& from) noexcept
    : CChatRoom_GetInviteLinkInfo_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteLinkInfo_Response& operator=(const CChatRoom_GetInviteLinkInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetInviteLinkInfo_Response& operator=(CChatRoom_GetInviteLinkInfo_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetInviteLinkInfo_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetInviteLinkInfo_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteLinkInfo_Response*>(
               &_CChatRoom_GetInviteLinkInfo_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  friend void swap(CChatRoom_GetInviteLinkInfo_Response& a, CChatRoom_GetInviteLinkInfo_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetInviteLinkInfo_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetInviteLinkInfo_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetInviteLinkInfo_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinkInfo_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetInviteLinkInfo_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetInviteLinkInfo_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteLinkInfo_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetInviteLinkInfo_Response";
  }
  protected:
  explicit CChatRoom_GetInviteLinkInfo_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGroupSummaryFieldNumber = 8,
    kUserChatGroupStateFieldNumber = 9,
    kSteamidSenderFieldNumber = 3,
    kChatIdFieldNumber = 6,
    kTimeExpiresFieldNumber = 4,
    kTimeKickExpireFieldNumber = 10,
    kBannedFieldNumber = 11,
  };
  // optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 8;
  bool has_group_summary() const;
  private:
  bool _internal_has_group_summary() const;
  public:
  void clear_group_summary();
  const ::CChatRoom_GetChatRoomGroupSummary_Response& group_summary() const;
  PROTOBUF_NODISCARD ::CChatRoom_GetChatRoomGroupSummary_Response* release_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* mutable_group_summary();
  void set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary);
  private:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& _internal_group_summary() const;
  ::CChatRoom_GetChatRoomGroupSummary_Response* _internal_mutable_group_summary();
  public:
  void unsafe_arena_set_allocated_group_summary(
      ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary);
  ::CChatRoom_GetChatRoomGroupSummary_Response* unsafe_arena_release_group_summary();

  // optional .CUserChatRoomGroupState user_chat_group_state = 9;
  bool has_user_chat_group_state() const;
  private:
  bool _internal_has_user_chat_group_state() const;
  public:
  void clear_user_chat_group_state();
  const ::CUserChatRoomGroupState& user_chat_group_state() const;
  PROTOBUF_NODISCARD ::CUserChatRoomGroupState* release_user_chat_group_state();
  ::CUserChatRoomGroupState* mutable_user_chat_group_state();
  void set_allocated_user_chat_group_state(::CUserChatRoomGroupState* user_chat_group_state);
  private:
  const ::CUserChatRoomGroupState& _internal_user_chat_group_state() const;
  ::CUserChatRoomGroupState* _internal_mutable_user_chat_group_state();
  public:
  void unsafe_arena_set_allocated_user_chat_group_state(
      ::CUserChatRoomGroupState* user_chat_group_state);
  ::CUserChatRoomGroupState* unsafe_arena_release_user_chat_group_state();

  // optional fixed64 steamid_sender = 3;
  bool has_steamid_sender() const;
  private:
  bool _internal_has_steamid_sender() const;
  public:
  void clear_steamid_sender();
  uint64_t steamid_sender() const;
  void set_steamid_sender(uint64_t value);
  private:
  uint64_t _internal_steamid_sender() const;
  void _internal_set_steamid_sender(uint64_t value);
  public:

  // optional uint64 chat_id = 6;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional uint32 time_expires = 4;
  bool has_time_expires() const;
  private:
  bool _internal_has_time_expires() const;
  public:
  void clear_time_expires();
  uint32_t time_expires() const;
  void set_time_expires(uint32_t value);
  private:
  uint32_t _internal_time_expires() const;
  void _internal_set_time_expires(uint32_t value);
  public:

  // optional uint32 time_kick_expire = 10;
  bool has_time_kick_expire() const;
  private:
  bool _internal_has_time_kick_expire() const;
  public:
  void clear_time_kick_expire();
  uint32_t time_kick_expire() const;
  void set_time_kick_expire(uint32_t value);
  private:
  uint32_t _internal_time_kick_expire() const;
  void _internal_set_time_kick_expire(uint32_t value);
  public:

  // optional bool banned = 11;
  bool has_banned() const;
  private:
  bool _internal_has_banned() const;
  public:
  void clear_banned();
  bool banned() const;
  void set_banned(bool value);
  private:
  bool _internal_banned() const;
  void _internal_set_banned(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteLinkInfo_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary_;
  ::CUserChatRoomGroupState* user_chat_group_state_;
  uint64_t steamid_sender_;
  uint64_t chat_id_;
  uint32_t time_expires_;
  uint32_t time_kick_expire_;
  bool banned_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteInfo_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteInfo_Request) */ {
 public:
  inline CChatRoom_GetInviteInfo_Request() : CChatRoom_GetInviteInfo_Request(nullptr) {}
  ~CChatRoom_GetInviteInfo_Request() override;
  explicit constexpr CChatRoom_GetInviteInfo_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetInviteInfo_Request(const CChatRoom_GetInviteInfo_Request& from);
  CChatRoom_GetInviteInfo_Request(CChatRoom_GetInviteInfo_Request&& from) noexcept
    : CChatRoom_GetInviteInfo_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteInfo_Request& operator=(const CChatRoom_GetInviteInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetInviteInfo_Request& operator=(CChatRoom_GetInviteInfo_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetInviteInfo_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetInviteInfo_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteInfo_Request*>(
               &_CChatRoom_GetInviteInfo_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  friend void swap(CChatRoom_GetInviteInfo_Request& a, CChatRoom_GetInviteInfo_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetInviteInfo_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetInviteInfo_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetInviteInfo_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteInfo_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetInviteInfo_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetInviteInfo_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteInfo_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetInviteInfo_Request";
  }
  protected:
  explicit CChatRoom_GetInviteInfo_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInviteCodeFieldNumber = 4,
    kSteamidInviteeFieldNumber = 1,
    kChatGroupIdFieldNumber = 2,
    kChatIdFieldNumber = 3,
  };
  // optional string invite_code = 4;
  bool has_invite_code() const;
  private:
  bool _internal_has_invite_code() const;
  public:
  void clear_invite_code();
  const std::string& invite_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_invite_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_invite_code();
  PROTOBUF_NODISCARD std::string* release_invite_code();
  void set_allocated_invite_code(std::string* invite_code);
  private:
  const std::string& _internal_invite_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_invite_code(const std::string& value);
  std::string* _internal_mutable_invite_code();
  public:

  // optional fixed64 steamid_invitee = 1;
  bool has_steamid_invitee() const;
  private:
  bool _internal_has_steamid_invitee() const;
  public:
  void clear_steamid_invitee();
  uint64_t steamid_invitee() const;
  void set_steamid_invitee(uint64_t value);
  private:
  uint64_t _internal_steamid_invitee() const;
  void _internal_set_steamid_invitee(uint64_t value);
  public:

  // optional uint64 chat_group_id = 2;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 3;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteInfo_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr invite_code_;
  uint64_t steamid_invitee_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteInfo_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteInfo_Response) */ {
 public:
  inline CChatRoom_GetInviteInfo_Response() : CChatRoom_GetInviteInfo_Response(nullptr) {}
  ~CChatRoom_GetInviteInfo_Response() override;
  explicit constexpr CChatRoom_GetInviteInfo_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetInviteInfo_Response(const CChatRoom_GetInviteInfo_Response& from);
  CChatRoom_GetInviteInfo_Response(CChatRoom_GetInviteInfo_Response&& from) noexcept
    : CChatRoom_GetInviteInfo_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteInfo_Response& operator=(const CChatRoom_GetInviteInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetInviteInfo_Response& operator=(CChatRoom_GetInviteInfo_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetInviteInfo_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetInviteInfo_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteInfo_Response*>(
               &_CChatRoom_GetInviteInfo_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  friend void swap(CChatRoom_GetInviteInfo_Response& a, CChatRoom_GetInviteInfo_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetInviteInfo_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetInviteInfo_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetInviteInfo_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteInfo_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetInviteInfo_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetInviteInfo_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteInfo_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetInviteInfo_Response";
  }
  protected:
  explicit CChatRoom_GetInviteInfo_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGroupSummaryFieldNumber = 1,
    kTimeKickExpireFieldNumber = 2,
    kBannedFieldNumber = 3,
  };
  // optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 1;
  bool has_group_summary() const;
  private:
  bool _internal_has_group_summary() const;
  public:
  void clear_group_summary();
  const ::CChatRoom_GetChatRoomGroupSummary_Response& group_summary() const;
  PROTOBUF_NODISCARD ::CChatRoom_GetChatRoomGroupSummary_Response* release_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* mutable_group_summary();
  void set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary);
  private:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& _internal_group_summary() const;
  ::CChatRoom_GetChatRoomGroupSummary_Response* _internal_mutable_group_summary();
  public:
  void unsafe_arena_set_allocated_group_summary(
      ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary);
  ::CChatRoom_GetChatRoomGroupSummary_Response* unsafe_arena_release_group_summary();

  // optional uint32 time_kick_expire = 2;
  bool has_time_kick_expire() const;
  private:
  bool _internal_has_time_kick_expire() const;
  public:
  void clear_time_kick_expire();
  uint32_t time_kick_expire() const;
  void set_time_kick_expire(uint32_t value);
  private:
  uint32_t _internal_time_kick_expire() const;
  void _internal_set_time_kick_expire(uint32_t value);
  public:

  // optional bool banned = 3;
  bool has_banned() const;
  private:
  bool _internal_has_banned() const;
  public:
  void clear_banned();
  bool banned() const;
  void set_banned(bool value);
  private:
  bool _internal_banned() const;
  void _internal_set_banned(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteInfo_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary_;
  uint32_t time_kick_expire_;
  bool banned_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteLinksForGroup_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteLinksForGroup_Request) */ {
 public:
  inline CChatRoom_GetInviteLinksForGroup_Request() : CChatRoom_GetInviteLinksForGroup_Request(nullptr) {}
  ~CChatRoom_GetInviteLinksForGroup_Request() override;
  explicit constexpr CChatRoom_GetInviteLinksForGroup_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetInviteLinksForGroup_Request(const CChatRoom_GetInviteLinksForGroup_Request& from);
  CChatRoom_GetInviteLinksForGroup_Request(CChatRoom_GetInviteLinksForGroup_Request&& from) noexcept
    : CChatRoom_GetInviteLinksForGroup_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteLinksForGroup_Request& operator=(const CChatRoom_GetInviteLinksForGroup_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetInviteLinksForGroup_Request& operator=(CChatRoom_GetInviteLinksForGroup_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetInviteLinksForGroup_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetInviteLinksForGroup_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteLinksForGroup_Request*>(
               &_CChatRoom_GetInviteLinksForGroup_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  friend void swap(CChatRoom_GetInviteLinksForGroup_Request& a, CChatRoom_GetInviteLinksForGroup_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetInviteLinksForGroup_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetInviteLinksForGroup_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetInviteLinksForGroup_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinksForGroup_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetInviteLinksForGroup_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetInviteLinksForGroup_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteLinksForGroup_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetInviteLinksForGroup_Request";
  }
  protected:
  explicit CChatRoom_GetInviteLinksForGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteLinksForGroup_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteLinksForGroup_Response_LinkInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo) */ {
 public:
  inline CChatRoom_GetInviteLinksForGroup_Response_LinkInfo() : CChatRoom_GetInviteLinksForGroup_Response_LinkInfo(nullptr) {}
  ~CChatRoom_GetInviteLinksForGroup_Response_LinkInfo() override;
  explicit constexpr CChatRoom_GetInviteLinksForGroup_Response_LinkInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetInviteLinksForGroup_Response_LinkInfo(const CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& from);
  CChatRoom_GetInviteLinksForGroup_Response_LinkInfo(CChatRoom_GetInviteLinksForGroup_Response_LinkInfo&& from) noexcept
    : CChatRoom_GetInviteLinksForGroup_Response_LinkInfo() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& operator=(const CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& operator=(CChatRoom_GetInviteLinksForGroup_Response_LinkInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteLinksForGroup_Response_LinkInfo*>(
               &_CChatRoom_GetInviteLinksForGroup_Response_LinkInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  friend void swap(CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& a, CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinksForGroup_Response_LinkInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetInviteLinksForGroup_Response.LinkInfo";
  }
  protected:
  explicit CChatRoom_GetInviteLinksForGroup_Response_LinkInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInviteCodeFieldNumber = 1,
    kSteamidCreatorFieldNumber = 2,
    kChatIdFieldNumber = 4,
    kTimeExpiresFieldNumber = 3,
  };
  // optional string invite_code = 1;
  bool has_invite_code() const;
  private:
  bool _internal_has_invite_code() const;
  public:
  void clear_invite_code();
  const std::string& invite_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_invite_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_invite_code();
  PROTOBUF_NODISCARD std::string* release_invite_code();
  void set_allocated_invite_code(std::string* invite_code);
  private:
  const std::string& _internal_invite_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_invite_code(const std::string& value);
  std::string* _internal_mutable_invite_code();
  public:

  // optional fixed64 steamid_creator = 2;
  bool has_steamid_creator() const;
  private:
  bool _internal_has_steamid_creator() const;
  public:
  void clear_steamid_creator();
  uint64_t steamid_creator() const;
  void set_steamid_creator(uint64_t value);
  private:
  uint64_t _internal_steamid_creator() const;
  void _internal_set_steamid_creator(uint64_t value);
  public:

  // optional uint64 chat_id = 4;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional uint32 time_expires = 3;
  bool has_time_expires() const;
  private:
  bool _internal_has_time_expires() const;
  public:
  void clear_time_expires();
  uint32_t time_expires() const;
  void set_time_expires(uint32_t value);
  private:
  uint32_t _internal_time_expires() const;
  void _internal_set_time_expires(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr invite_code_;
  uint64_t steamid_creator_;
  uint64_t chat_id_;
  uint32_t time_expires_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteLinksForGroup_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteLinksForGroup_Response) */ {
 public:
  inline CChatRoom_GetInviteLinksForGroup_Response() : CChatRoom_GetInviteLinksForGroup_Response(nullptr) {}
  ~CChatRoom_GetInviteLinksForGroup_Response() override;
  explicit constexpr CChatRoom_GetInviteLinksForGroup_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetInviteLinksForGroup_Response(const CChatRoom_GetInviteLinksForGroup_Response& from);
  CChatRoom_GetInviteLinksForGroup_Response(CChatRoom_GetInviteLinksForGroup_Response&& from) noexcept
    : CChatRoom_GetInviteLinksForGroup_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteLinksForGroup_Response& operator=(const CChatRoom_GetInviteLinksForGroup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetInviteLinksForGroup_Response& operator=(CChatRoom_GetInviteLinksForGroup_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetInviteLinksForGroup_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetInviteLinksForGroup_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteLinksForGroup_Response*>(
               &_CChatRoom_GetInviteLinksForGroup_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  friend void swap(CChatRoom_GetInviteLinksForGroup_Response& a, CChatRoom_GetInviteLinksForGroup_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetInviteLinksForGroup_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetInviteLinksForGroup_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetInviteLinksForGroup_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteLinksForGroup_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetInviteLinksForGroup_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetInviteLinksForGroup_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteLinksForGroup_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetInviteLinksForGroup_Response";
  }
  protected:
  explicit CChatRoom_GetInviteLinksForGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoom_GetInviteLinksForGroup_Response_LinkInfo LinkInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kInviteLinksFieldNumber = 1,
  };
  // repeated .CChatRoom_GetInviteLinksForGroup_Response.LinkInfo invite_links = 1;
  int invite_links_size() const;
  private:
  int _internal_invite_links_size() const;
  public:
  void clear_invite_links();
  ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* mutable_invite_links(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo >*
      mutable_invite_links();
  private:
  const ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& _internal_invite_links(int index) const;
  ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* _internal_add_invite_links();
  public:
  const ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& invite_links(int index) const;
  ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* add_invite_links();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo >&
      invite_links() const;

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteLinksForGroup_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo > invite_links_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetBanList_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetBanList_Request) */ {
 public:
  inline CChatRoom_GetBanList_Request() : CChatRoom_GetBanList_Request(nullptr) {}
  ~CChatRoom_GetBanList_Request() override;
  explicit constexpr CChatRoom_GetBanList_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetBanList_Request(const CChatRoom_GetBanList_Request& from);
  CChatRoom_GetBanList_Request(CChatRoom_GetBanList_Request&& from) noexcept
    : CChatRoom_GetBanList_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetBanList_Request& operator=(const CChatRoom_GetBanList_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetBanList_Request& operator=(CChatRoom_GetBanList_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetBanList_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetBanList_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetBanList_Request*>(
               &_CChatRoom_GetBanList_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  friend void swap(CChatRoom_GetBanList_Request& a, CChatRoom_GetBanList_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetBanList_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetBanList_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetBanList_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetBanList_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetBanList_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetBanList_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetBanList_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetBanList_Request";
  }
  protected:
  explicit CChatRoom_GetBanList_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetBanList_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetBanList_Response_BanInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetBanList_Response.BanInfo) */ {
 public:
  inline CChatRoom_GetBanList_Response_BanInfo() : CChatRoom_GetBanList_Response_BanInfo(nullptr) {}
  ~CChatRoom_GetBanList_Response_BanInfo() override;
  explicit constexpr CChatRoom_GetBanList_Response_BanInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetBanList_Response_BanInfo(const CChatRoom_GetBanList_Response_BanInfo& from);
  CChatRoom_GetBanList_Response_BanInfo(CChatRoom_GetBanList_Response_BanInfo&& from) noexcept
    : CChatRoom_GetBanList_Response_BanInfo() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetBanList_Response_BanInfo& operator=(const CChatRoom_GetBanList_Response_BanInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetBanList_Response_BanInfo& operator=(CChatRoom_GetBanList_Response_BanInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetBanList_Response_BanInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetBanList_Response_BanInfo* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetBanList_Response_BanInfo*>(
               &_CChatRoom_GetBanList_Response_BanInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  friend void swap(CChatRoom_GetBanList_Response_BanInfo& a, CChatRoom_GetBanList_Response_BanInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetBanList_Response_BanInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetBanList_Response_BanInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetBanList_Response_BanInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetBanList_Response_BanInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetBanList_Response_BanInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetBanList_Response_BanInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetBanList_Response_BanInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetBanList_Response.BanInfo";
  }
  protected:
  explicit CChatRoom_GetBanList_Response_BanInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBanReasonFieldNumber = 4,
    kAccountidFieldNumber = 1,
    kAccountidActorFieldNumber = 2,
    kTimeBannedFieldNumber = 3,
  };
  // optional string ban_reason = 4;
  bool has_ban_reason() const;
  private:
  bool _internal_has_ban_reason() const;
  public:
  void clear_ban_reason();
  const std::string& ban_reason() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_ban_reason(ArgT0&& arg0, ArgT... args);
  std::string* mutable_ban_reason();
  PROTOBUF_NODISCARD std::string* release_ban_reason();
  void set_allocated_ban_reason(std::string* ban_reason);
  private:
  const std::string& _internal_ban_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ban_reason(const std::string& value);
  std::string* _internal_mutable_ban_reason();
  public:

  // optional uint32 accountid = 1;
  bool has_accountid() const;
  private:
  bool _internal_has_accountid() const;
  public:
  void clear_accountid();
  uint32_t accountid() const;
  void set_accountid(uint32_t value);
  private:
  uint32_t _internal_accountid() const;
  void _internal_set_accountid(uint32_t value);
  public:

  // optional uint32 accountid_actor = 2;
  bool has_accountid_actor() const;
  private:
  bool _internal_has_accountid_actor() const;
  public:
  void clear_accountid_actor();
  uint32_t accountid_actor() const;
  void set_accountid_actor(uint32_t value);
  private:
  uint32_t _internal_accountid_actor() const;
  void _internal_set_accountid_actor(uint32_t value);
  public:

  // optional uint32 time_banned = 3;
  bool has_time_banned() const;
  private:
  bool _internal_has_time_banned() const;
  public:
  void clear_time_banned();
  uint32_t time_banned() const;
  void set_time_banned(uint32_t value);
  private:
  uint32_t _internal_time_banned() const;
  void _internal_set_time_banned(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetBanList_Response.BanInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ban_reason_;
  uint32_t accountid_;
  uint32_t accountid_actor_;
  uint32_t time_banned_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetBanList_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetBanList_Response) */ {
 public:
  inline CChatRoom_GetBanList_Response() : CChatRoom_GetBanList_Response(nullptr) {}
  ~CChatRoom_GetBanList_Response() override;
  explicit constexpr CChatRoom_GetBanList_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetBanList_Response(const CChatRoom_GetBanList_Response& from);
  CChatRoom_GetBanList_Response(CChatRoom_GetBanList_Response&& from) noexcept
    : CChatRoom_GetBanList_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetBanList_Response& operator=(const CChatRoom_GetBanList_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetBanList_Response& operator=(CChatRoom_GetBanList_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetBanList_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetBanList_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetBanList_Response*>(
               &_CChatRoom_GetBanList_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  friend void swap(CChatRoom_GetBanList_Response& a, CChatRoom_GetBanList_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetBanList_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetBanList_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetBanList_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetBanList_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetBanList_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetBanList_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetBanList_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetBanList_Response";
  }
  protected:
  explicit CChatRoom_GetBanList_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoom_GetBanList_Response_BanInfo BanInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kBansFieldNumber = 1,
  };
  // repeated .CChatRoom_GetBanList_Response.BanInfo bans = 1;
  int bans_size() const;
  private:
  int _internal_bans_size() const;
  public:
  void clear_bans();
  ::CChatRoom_GetBanList_Response_BanInfo* mutable_bans(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetBanList_Response_BanInfo >*
      mutable_bans();
  private:
  const ::CChatRoom_GetBanList_Response_BanInfo& _internal_bans(int index) const;
  ::CChatRoom_GetBanList_Response_BanInfo* _internal_add_bans();
  public:
  const ::CChatRoom_GetBanList_Response_BanInfo& bans(int index) const;
  ::CChatRoom_GetBanList_Response_BanInfo* add_bans();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetBanList_Response_BanInfo >&
      bans() const;

  // @@protoc_insertion_point(class_scope:CChatRoom_GetBanList_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetBanList_Response_BanInfo > bans_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteList_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteList_Request) */ {
 public:
  inline CChatRoom_GetInviteList_Request() : CChatRoom_GetInviteList_Request(nullptr) {}
  ~CChatRoom_GetInviteList_Request() override;
  explicit constexpr CChatRoom_GetInviteList_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetInviteList_Request(const CChatRoom_GetInviteList_Request& from);
  CChatRoom_GetInviteList_Request(CChatRoom_GetInviteList_Request&& from) noexcept
    : CChatRoom_GetInviteList_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteList_Request& operator=(const CChatRoom_GetInviteList_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetInviteList_Request& operator=(CChatRoom_GetInviteList_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetInviteList_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetInviteList_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteList_Request*>(
               &_CChatRoom_GetInviteList_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  friend void swap(CChatRoom_GetInviteList_Request& a, CChatRoom_GetInviteList_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetInviteList_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetInviteList_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetInviteList_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteList_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetInviteList_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetInviteList_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteList_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetInviteList_Request";
  }
  protected:
  explicit CChatRoom_GetInviteList_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdFieldNumber = 1,
  };
  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteList_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoomGroupInvite final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoomGroupInvite) */ {
 public:
  inline CChatRoomGroupInvite() : CChatRoomGroupInvite(nullptr) {}
  ~CChatRoomGroupInvite() override;
  explicit constexpr CChatRoomGroupInvite(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoomGroupInvite(const CChatRoomGroupInvite& from);
  CChatRoomGroupInvite(CChatRoomGroupInvite&& from) noexcept
    : CChatRoomGroupInvite() {
    *this = ::std::move(from);
  }

  inline CChatRoomGroupInvite& operator=(const CChatRoomGroupInvite& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoomGroupInvite& operator=(CChatRoomGroupInvite&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoomGroupInvite& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoomGroupInvite* internal_default_instance() {
    return reinterpret_cast<const CChatRoomGroupInvite*>(
               &_CChatRoomGroupInvite_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  friend void swap(CChatRoomGroupInvite& a, CChatRoomGroupInvite& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoomGroupInvite* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoomGroupInvite* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoomGroupInvite* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoomGroupInvite>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoomGroupInvite& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoomGroupInvite& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomGroupInvite* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoomGroupInvite";
  }
  protected:
  explicit CChatRoomGroupInvite(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountidFieldNumber = 1,
    kAccountidActorFieldNumber = 2,
    kTimeInvitedFieldNumber = 3,
  };
  // optional uint32 accountid = 1;
  bool has_accountid() const;
  private:
  bool _internal_has_accountid() const;
  public:
  void clear_accountid();
  uint32_t accountid() const;
  void set_accountid(uint32_t value);
  private:
  uint32_t _internal_accountid() const;
  void _internal_set_accountid(uint32_t value);
  public:

  // optional uint32 accountid_actor = 2;
  bool has_accountid_actor() const;
  private:
  bool _internal_has_accountid_actor() const;
  public:
  void clear_accountid_actor();
  uint32_t accountid_actor() const;
  void set_accountid_actor(uint32_t value);
  private:
  uint32_t _internal_accountid_actor() const;
  void _internal_set_accountid_actor(uint32_t value);
  public:

  // optional uint32 time_invited = 3;
  bool has_time_invited() const;
  private:
  bool _internal_has_time_invited() const;
  public:
  void clear_time_invited();
  uint32_t time_invited() const;
  void set_time_invited(uint32_t value);
  private:
  uint32_t _internal_time_invited() const;
  void _internal_set_time_invited(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoomGroupInvite)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t accountid_;
  uint32_t accountid_actor_;
  uint32_t time_invited_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetInviteList_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetInviteList_Response) */ {
 public:
  inline CChatRoom_GetInviteList_Response() : CChatRoom_GetInviteList_Response(nullptr) {}
  ~CChatRoom_GetInviteList_Response() override;
  explicit constexpr CChatRoom_GetInviteList_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetInviteList_Response(const CChatRoom_GetInviteList_Response& from);
  CChatRoom_GetInviteList_Response(CChatRoom_GetInviteList_Response&& from) noexcept
    : CChatRoom_GetInviteList_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetInviteList_Response& operator=(const CChatRoom_GetInviteList_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetInviteList_Response& operator=(CChatRoom_GetInviteList_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetInviteList_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetInviteList_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetInviteList_Response*>(
               &_CChatRoom_GetInviteList_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  friend void swap(CChatRoom_GetInviteList_Response& a, CChatRoom_GetInviteList_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetInviteList_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetInviteList_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetInviteList_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetInviteList_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetInviteList_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetInviteList_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetInviteList_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetInviteList_Response";
  }
  protected:
  explicit CChatRoom_GetInviteList_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInvitesFieldNumber = 1,
  };
  // repeated .CChatRoomGroupInvite invites = 1;
  int invites_size() const;
  private:
  int _internal_invites_size() const;
  public:
  void clear_invites();
  ::CChatRoomGroupInvite* mutable_invites(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomGroupInvite >*
      mutable_invites();
  private:
  const ::CChatRoomGroupInvite& _internal_invites(int index) const;
  ::CChatRoomGroupInvite* _internal_add_invites();
  public:
  const ::CChatRoomGroupInvite& invites(int index) const;
  ::CChatRoomGroupInvite* add_invites();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomGroupInvite >&
      invites() const;

  // @@protoc_insertion_point(class_scope:CChatRoom_GetInviteList_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomGroupInvite > invites_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteInviteLink_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteInviteLink_Request) */ {
 public:
  inline CChatRoom_DeleteInviteLink_Request() : CChatRoom_DeleteInviteLink_Request(nullptr) {}
  ~CChatRoom_DeleteInviteLink_Request() override;
  explicit constexpr CChatRoom_DeleteInviteLink_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_DeleteInviteLink_Request(const CChatRoom_DeleteInviteLink_Request& from);
  CChatRoom_DeleteInviteLink_Request(CChatRoom_DeleteInviteLink_Request&& from) noexcept
    : CChatRoom_DeleteInviteLink_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteInviteLink_Request& operator=(const CChatRoom_DeleteInviteLink_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_DeleteInviteLink_Request& operator=(CChatRoom_DeleteInviteLink_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_DeleteInviteLink_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_DeleteInviteLink_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteInviteLink_Request*>(
               &_CChatRoom_DeleteInviteLink_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  friend void swap(CChatRoom_DeleteInviteLink_Request& a, CChatRoom_DeleteInviteLink_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_DeleteInviteLink_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_DeleteInviteLink_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_DeleteInviteLink_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_DeleteInviteLink_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_DeleteInviteLink_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_DeleteInviteLink_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteInviteLink_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_DeleteInviteLink_Request";
  }
  protected:
  explicit CChatRoom_DeleteInviteLink_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInviteCodeFieldNumber = 2,
    kChatGroupIdFieldNumber = 1,
  };
  // optional string invite_code = 2;
  bool has_invite_code() const;
  private:
  bool _internal_has_invite_code() const;
  public:
  void clear_invite_code();
  const std::string& invite_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_invite_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_invite_code();
  PROTOBUF_NODISCARD std::string* release_invite_code();
  void set_allocated_invite_code(std::string* invite_code);
  private:
  const std::string& _internal_invite_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_invite_code(const std::string& value);
  std::string* _internal_mutable_invite_code();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteInviteLink_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr invite_code_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteInviteLink_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteInviteLink_Response) */ {
 public:
  inline CChatRoom_DeleteInviteLink_Response() : CChatRoom_DeleteInviteLink_Response(nullptr) {}
  explicit constexpr CChatRoom_DeleteInviteLink_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_DeleteInviteLink_Response(const CChatRoom_DeleteInviteLink_Response& from);
  CChatRoom_DeleteInviteLink_Response(CChatRoom_DeleteInviteLink_Response&& from) noexcept
    : CChatRoom_DeleteInviteLink_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteInviteLink_Response& operator=(const CChatRoom_DeleteInviteLink_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_DeleteInviteLink_Response& operator=(CChatRoom_DeleteInviteLink_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_DeleteInviteLink_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_DeleteInviteLink_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteInviteLink_Response*>(
               &_CChatRoom_DeleteInviteLink_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  friend void swap(CChatRoom_DeleteInviteLink_Response& a, CChatRoom_DeleteInviteLink_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_DeleteInviteLink_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_DeleteInviteLink_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_DeleteInviteLink_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_DeleteInviteLink_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_DeleteInviteLink_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_DeleteInviteLink_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_DeleteInviteLink_Response";
  }
  protected:
  explicit CChatRoom_DeleteInviteLink_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteInviteLink_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetSessionActiveChatRoomGroups_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetSessionActiveChatRoomGroups_Request) */ {
 public:
  inline CChatRoom_SetSessionActiveChatRoomGroups_Request() : CChatRoom_SetSessionActiveChatRoomGroups_Request(nullptr) {}
  ~CChatRoom_SetSessionActiveChatRoomGroups_Request() override;
  explicit constexpr CChatRoom_SetSessionActiveChatRoomGroups_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetSessionActiveChatRoomGroups_Request(const CChatRoom_SetSessionActiveChatRoomGroups_Request& from);
  CChatRoom_SetSessionActiveChatRoomGroups_Request(CChatRoom_SetSessionActiveChatRoomGroups_Request&& from) noexcept
    : CChatRoom_SetSessionActiveChatRoomGroups_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetSessionActiveChatRoomGroups_Request& operator=(const CChatRoom_SetSessionActiveChatRoomGroups_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetSessionActiveChatRoomGroups_Request& operator=(CChatRoom_SetSessionActiveChatRoomGroups_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetSessionActiveChatRoomGroups_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetSessionActiveChatRoomGroups_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetSessionActiveChatRoomGroups_Request*>(
               &_CChatRoom_SetSessionActiveChatRoomGroups_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  friend void swap(CChatRoom_SetSessionActiveChatRoomGroups_Request& a, CChatRoom_SetSessionActiveChatRoomGroups_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetSessionActiveChatRoomGroups_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetSessionActiveChatRoomGroups_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetSessionActiveChatRoomGroups_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetSessionActiveChatRoomGroups_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SetSessionActiveChatRoomGroups_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SetSessionActiveChatRoomGroups_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetSessionActiveChatRoomGroups_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetSessionActiveChatRoomGroups_Request";
  }
  protected:
  explicit CChatRoom_SetSessionActiveChatRoomGroups_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdsFieldNumber = 1,
    kChatGroupsDataRequestedFieldNumber = 2,
    kVirtualizeMembersThresholdFieldNumber = 3,
  };
  // repeated uint64 chat_group_ids = 1;
  int chat_group_ids_size() const;
  private:
  int _internal_chat_group_ids_size() const;
  public:
  void clear_chat_group_ids();
  private:
  uint64_t _internal_chat_group_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_chat_group_ids() const;
  void _internal_add_chat_group_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_chat_group_ids();
  public:
  uint64_t chat_group_ids(int index) const;
  void set_chat_group_ids(int index, uint64_t value);
  void add_chat_group_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      chat_group_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_chat_group_ids();

  // repeated uint64 chat_groups_data_requested = 2;
  int chat_groups_data_requested_size() const;
  private:
  int _internal_chat_groups_data_requested_size() const;
  public:
  void clear_chat_groups_data_requested();
  private:
  uint64_t _internal_chat_groups_data_requested(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_chat_groups_data_requested() const;
  void _internal_add_chat_groups_data_requested(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_chat_groups_data_requested();
  public:
  uint64_t chat_groups_data_requested(int index) const;
  void set_chat_groups_data_requested(int index, uint64_t value);
  void add_chat_groups_data_requested(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      chat_groups_data_requested() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_chat_groups_data_requested();

  // optional int32 virtualize_members_threshold = 3 [(.description) = "If a chat room has more members than this threshold, we will opt in to a virtualized list"];
  bool has_virtualize_members_threshold() const;
  private:
  bool _internal_has_virtualize_members_threshold() const;
  public:
  void clear_virtualize_members_threshold();
  int32_t virtualize_members_threshold() const;
  void set_virtualize_members_threshold(int32_t value);
  private:
  int32_t _internal_virtualize_members_threshold() const;
  void _internal_set_virtualize_members_threshold(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SetSessionActiveChatRoomGroups_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > chat_group_ids_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > chat_groups_data_requested_;
  int32_t virtualize_members_threshold_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetSessionActiveChatRoomGroups_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetSessionActiveChatRoomGroups_Response) */ {
 public:
  inline CChatRoom_SetSessionActiveChatRoomGroups_Response() : CChatRoom_SetSessionActiveChatRoomGroups_Response(nullptr) {}
  ~CChatRoom_SetSessionActiveChatRoomGroups_Response() override;
  explicit constexpr CChatRoom_SetSessionActiveChatRoomGroups_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetSessionActiveChatRoomGroups_Response(const CChatRoom_SetSessionActiveChatRoomGroups_Response& from);
  CChatRoom_SetSessionActiveChatRoomGroups_Response(CChatRoom_SetSessionActiveChatRoomGroups_Response&& from) noexcept
    : CChatRoom_SetSessionActiveChatRoomGroups_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetSessionActiveChatRoomGroups_Response& operator=(const CChatRoom_SetSessionActiveChatRoomGroups_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetSessionActiveChatRoomGroups_Response& operator=(CChatRoom_SetSessionActiveChatRoomGroups_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetSessionActiveChatRoomGroups_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetSessionActiveChatRoomGroups_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetSessionActiveChatRoomGroups_Response*>(
               &_CChatRoom_SetSessionActiveChatRoomGroups_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  friend void swap(CChatRoom_SetSessionActiveChatRoomGroups_Response& a, CChatRoom_SetSessionActiveChatRoomGroups_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetSessionActiveChatRoomGroups_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetSessionActiveChatRoomGroups_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetSessionActiveChatRoomGroups_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetSessionActiveChatRoomGroups_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SetSessionActiveChatRoomGroups_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SetSessionActiveChatRoomGroups_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetSessionActiveChatRoomGroups_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetSessionActiveChatRoomGroups_Response";
  }
  protected:
  explicit CChatRoom_SetSessionActiveChatRoomGroups_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatStatesFieldNumber = 1,
    kVirtualizeMembersChatGroupIdsFieldNumber = 2,
  };
  // repeated .CChatRoomGroupState chat_states = 1;
  int chat_states_size() const;
  private:
  int _internal_chat_states_size() const;
  public:
  void clear_chat_states();
  ::CChatRoomGroupState* mutable_chat_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomGroupState >*
      mutable_chat_states();
  private:
  const ::CChatRoomGroupState& _internal_chat_states(int index) const;
  ::CChatRoomGroupState* _internal_add_chat_states();
  public:
  const ::CChatRoomGroupState& chat_states(int index) const;
  ::CChatRoomGroupState* add_chat_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomGroupState >&
      chat_states() const;

  // repeated uint64 virtualize_members_chat_group_ids = 2;
  int virtualize_members_chat_group_ids_size() const;
  private:
  int _internal_virtualize_members_chat_group_ids_size() const;
  public:
  void clear_virtualize_members_chat_group_ids();
  private:
  uint64_t _internal_virtualize_members_chat_group_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_virtualize_members_chat_group_ids() const;
  void _internal_add_virtualize_members_chat_group_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_virtualize_members_chat_group_ids();
  public:
  uint64_t virtualize_members_chat_group_ids(int index) const;
  void set_virtualize_members_chat_group_ids(int index, uint64_t value);
  void add_virtualize_members_chat_group_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      virtualize_members_chat_group_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_virtualize_members_chat_group_ids();

  // @@protoc_insertion_point(class_scope:CChatRoom_SetSessionActiveChatRoomGroups_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomGroupState > chat_states_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > virtualize_members_chat_group_ids_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences) */ {
 public:
  inline CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences() : CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences(nullptr) {}
  ~CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences() override;
  explicit constexpr CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences(const CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& from);
  CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences(CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences&& from) noexcept
    : CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& operator=(const CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& operator=(CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences*>(
               &_CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  friend void swap(CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& a, CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences";
  }
  protected:
  explicit CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDesktopNotificationLevelFieldNumber = 1,
    kMobileNotificationLevelFieldNumber = 2,
    kUnreadIndicatorMutedFieldNumber = 3,
  };
  // optional .EChatRoomNotificationLevel desktop_notification_level = 1 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_desktop_notification_level() const;
  private:
  bool _internal_has_desktop_notification_level() const;
  public:
  void clear_desktop_notification_level();
  ::EChatRoomNotificationLevel desktop_notification_level() const;
  void set_desktop_notification_level(::EChatRoomNotificationLevel value);
  private:
  ::EChatRoomNotificationLevel _internal_desktop_notification_level() const;
  void _internal_set_desktop_notification_level(::EChatRoomNotificationLevel value);
  public:

  // optional .EChatRoomNotificationLevel mobile_notification_level = 2 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_mobile_notification_level() const;
  private:
  bool _internal_has_mobile_notification_level() const;
  public:
  void clear_mobile_notification_level();
  ::EChatRoomNotificationLevel mobile_notification_level() const;
  void set_mobile_notification_level(::EChatRoomNotificationLevel value);
  private:
  ::EChatRoomNotificationLevel _internal_mobile_notification_level() const;
  void _internal_set_mobile_notification_level(::EChatRoomNotificationLevel value);
  public:

  // optional bool unread_indicator_muted = 3;
  bool has_unread_indicator_muted() const;
  private:
  bool _internal_has_unread_indicator_muted() const;
  public:
  void clear_unread_indicator_muted();
  bool unread_indicator_muted() const;
  void set_unread_indicator_muted(bool value);
  private:
  bool _internal_unread_indicator_muted() const;
  void _internal_set_unread_indicator_muted(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int desktop_notification_level_;
  int mobile_notification_level_;
  bool unread_indicator_muted_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences) */ {
 public:
  inline CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences() : CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences(nullptr) {}
  ~CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences() override;
  explicit constexpr CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences(const CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& from);
  CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences(CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences&& from) noexcept
    : CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& operator=(const CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& operator=(CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences*>(
               &_CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  friend void swap(CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& a, CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences";
  }
  protected:
  explicit CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatIdFieldNumber = 1,
    kDesktopNotificationLevelFieldNumber = 2,
    kMobileNotificationLevelFieldNumber = 3,
    kUnreadIndicatorMutedFieldNumber = 4,
  };
  // optional uint64 chat_id = 1;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional .EChatRoomNotificationLevel desktop_notification_level = 2 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_desktop_notification_level() const;
  private:
  bool _internal_has_desktop_notification_level() const;
  public:
  void clear_desktop_notification_level();
  ::EChatRoomNotificationLevel desktop_notification_level() const;
  void set_desktop_notification_level(::EChatRoomNotificationLevel value);
  private:
  ::EChatRoomNotificationLevel _internal_desktop_notification_level() const;
  void _internal_set_desktop_notification_level(::EChatRoomNotificationLevel value);
  public:

  // optional .EChatRoomNotificationLevel mobile_notification_level = 3 [default = k_EChatroomNotificationLevel_Invalid];
  bool has_mobile_notification_level() const;
  private:
  bool _internal_has_mobile_notification_level() const;
  public:
  void clear_mobile_notification_level();
  ::EChatRoomNotificationLevel mobile_notification_level() const;
  void set_mobile_notification_level(::EChatRoomNotificationLevel value);
  private:
  ::EChatRoomNotificationLevel _internal_mobile_notification_level() const;
  void _internal_set_mobile_notification_level(::EChatRoomNotificationLevel value);
  public:

  // optional bool unread_indicator_muted = 4;
  bool has_unread_indicator_muted() const;
  private:
  bool _internal_has_unread_indicator_muted() const;
  public:
  void clear_unread_indicator_muted();
  bool unread_indicator_muted() const;
  void set_unread_indicator_muted(bool value);
  private:
  bool _internal_unread_indicator_muted() const;
  void _internal_set_unread_indicator_muted(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_id_;
  int desktop_notification_level_;
  int mobile_notification_level_;
  bool unread_indicator_muted_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetUserChatGroupPreferences_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SetUserChatGroupPreferences_Request) */ {
 public:
  inline CChatRoom_SetUserChatGroupPreferences_Request() : CChatRoom_SetUserChatGroupPreferences_Request(nullptr) {}
  ~CChatRoom_SetUserChatGroupPreferences_Request() override;
  explicit constexpr CChatRoom_SetUserChatGroupPreferences_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetUserChatGroupPreferences_Request(const CChatRoom_SetUserChatGroupPreferences_Request& from);
  CChatRoom_SetUserChatGroupPreferences_Request(CChatRoom_SetUserChatGroupPreferences_Request&& from) noexcept
    : CChatRoom_SetUserChatGroupPreferences_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetUserChatGroupPreferences_Request& operator=(const CChatRoom_SetUserChatGroupPreferences_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetUserChatGroupPreferences_Request& operator=(CChatRoom_SetUserChatGroupPreferences_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetUserChatGroupPreferences_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetUserChatGroupPreferences_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetUserChatGroupPreferences_Request*>(
               &_CChatRoom_SetUserChatGroupPreferences_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  friend void swap(CChatRoom_SetUserChatGroupPreferences_Request& a, CChatRoom_SetUserChatGroupPreferences_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetUserChatGroupPreferences_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetUserChatGroupPreferences_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetUserChatGroupPreferences_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetUserChatGroupPreferences_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SetUserChatGroupPreferences_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SetUserChatGroupPreferences_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SetUserChatGroupPreferences_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetUserChatGroupPreferences_Request";
  }
  protected:
  explicit CChatRoom_SetUserChatGroupPreferences_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences ChatGroupPreferences;
  typedef CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences ChatRoomPreferences;

  // accessors -------------------------------------------------------

  enum : int {
    kChatRoomPreferencesFieldNumber = 3,
    kChatGroupPreferencesFieldNumber = 2,
    kChatGroupIdFieldNumber = 1,
  };
  // repeated .CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences chat_room_preferences = 3;
  int chat_room_preferences_size() const;
  private:
  int _internal_chat_room_preferences_size() const;
  public:
  void clear_chat_room_preferences();
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* mutable_chat_room_preferences(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences >*
      mutable_chat_room_preferences();
  private:
  const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& _internal_chat_room_preferences(int index) const;
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* _internal_add_chat_room_preferences();
  public:
  const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& chat_room_preferences(int index) const;
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* add_chat_room_preferences();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences >&
      chat_room_preferences() const;

  // optional .CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences chat_group_preferences = 2;
  bool has_chat_group_preferences() const;
  private:
  bool _internal_has_chat_group_preferences() const;
  public:
  void clear_chat_group_preferences();
  const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& chat_group_preferences() const;
  PROTOBUF_NODISCARD ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* release_chat_group_preferences();
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* mutable_chat_group_preferences();
  void set_allocated_chat_group_preferences(::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* chat_group_preferences);
  private:
  const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& _internal_chat_group_preferences() const;
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* _internal_mutable_chat_group_preferences();
  public:
  void unsafe_arena_set_allocated_chat_group_preferences(
      ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* chat_group_preferences);
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* unsafe_arena_release_chat_group_preferences();

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SetUserChatGroupPreferences_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences > chat_room_preferences_;
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* chat_group_preferences_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SetUserChatGroupPreferences_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_SetUserChatGroupPreferences_Response) */ {
 public:
  inline CChatRoom_SetUserChatGroupPreferences_Response() : CChatRoom_SetUserChatGroupPreferences_Response(nullptr) {}
  explicit constexpr CChatRoom_SetUserChatGroupPreferences_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SetUserChatGroupPreferences_Response(const CChatRoom_SetUserChatGroupPreferences_Response& from);
  CChatRoom_SetUserChatGroupPreferences_Response(CChatRoom_SetUserChatGroupPreferences_Response&& from) noexcept
    : CChatRoom_SetUserChatGroupPreferences_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SetUserChatGroupPreferences_Response& operator=(const CChatRoom_SetUserChatGroupPreferences_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SetUserChatGroupPreferences_Response& operator=(CChatRoom_SetUserChatGroupPreferences_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SetUserChatGroupPreferences_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SetUserChatGroupPreferences_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SetUserChatGroupPreferences_Response*>(
               &_CChatRoom_SetUserChatGroupPreferences_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  friend void swap(CChatRoom_SetUserChatGroupPreferences_Response& a, CChatRoom_SetUserChatGroupPreferences_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SetUserChatGroupPreferences_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SetUserChatGroupPreferences_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SetUserChatGroupPreferences_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SetUserChatGroupPreferences_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_SetUserChatGroupPreferences_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_SetUserChatGroupPreferences_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SetUserChatGroupPreferences_Response";
  }
  protected:
  explicit CChatRoom_SetUserChatGroupPreferences_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_SetUserChatGroupPreferences_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteChatMessages_Request_Message final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteChatMessages_Request.Message) */ {
 public:
  inline CChatRoom_DeleteChatMessages_Request_Message() : CChatRoom_DeleteChatMessages_Request_Message(nullptr) {}
  ~CChatRoom_DeleteChatMessages_Request_Message() override;
  explicit constexpr CChatRoom_DeleteChatMessages_Request_Message(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_DeleteChatMessages_Request_Message(const CChatRoom_DeleteChatMessages_Request_Message& from);
  CChatRoom_DeleteChatMessages_Request_Message(CChatRoom_DeleteChatMessages_Request_Message&& from) noexcept
    : CChatRoom_DeleteChatMessages_Request_Message() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteChatMessages_Request_Message& operator=(const CChatRoom_DeleteChatMessages_Request_Message& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_DeleteChatMessages_Request_Message& operator=(CChatRoom_DeleteChatMessages_Request_Message&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_DeleteChatMessages_Request_Message& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_DeleteChatMessages_Request_Message* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteChatMessages_Request_Message*>(
               &_CChatRoom_DeleteChatMessages_Request_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  friend void swap(CChatRoom_DeleteChatMessages_Request_Message& a, CChatRoom_DeleteChatMessages_Request_Message& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_DeleteChatMessages_Request_Message* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_DeleteChatMessages_Request_Message* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_DeleteChatMessages_Request_Message* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatMessages_Request_Message>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_DeleteChatMessages_Request_Message& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_DeleteChatMessages_Request_Message& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteChatMessages_Request_Message* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_DeleteChatMessages_Request.Message";
  }
  protected:
  explicit CChatRoom_DeleteChatMessages_Request_Message(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerTimestampFieldNumber = 1,
    kOrdinalFieldNumber = 2,
  };
  // optional uint32 server_timestamp = 1;
  bool has_server_timestamp() const;
  private:
  bool _internal_has_server_timestamp() const;
  public:
  void clear_server_timestamp();
  uint32_t server_timestamp() const;
  void set_server_timestamp(uint32_t value);
  private:
  uint32_t _internal_server_timestamp() const;
  void _internal_set_server_timestamp(uint32_t value);
  public:

  // optional uint32 ordinal = 2;
  bool has_ordinal() const;
  private:
  bool _internal_has_ordinal() const;
  public:
  void clear_ordinal();
  uint32_t ordinal() const;
  void set_ordinal(uint32_t value);
  private:
  uint32_t _internal_ordinal() const;
  void _internal_set_ordinal(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteChatMessages_Request.Message)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t server_timestamp_;
  uint32_t ordinal_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteChatMessages_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteChatMessages_Request) */ {
 public:
  inline CChatRoom_DeleteChatMessages_Request() : CChatRoom_DeleteChatMessages_Request(nullptr) {}
  ~CChatRoom_DeleteChatMessages_Request() override;
  explicit constexpr CChatRoom_DeleteChatMessages_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_DeleteChatMessages_Request(const CChatRoom_DeleteChatMessages_Request& from);
  CChatRoom_DeleteChatMessages_Request(CChatRoom_DeleteChatMessages_Request&& from) noexcept
    : CChatRoom_DeleteChatMessages_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteChatMessages_Request& operator=(const CChatRoom_DeleteChatMessages_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_DeleteChatMessages_Request& operator=(CChatRoom_DeleteChatMessages_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_DeleteChatMessages_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_DeleteChatMessages_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteChatMessages_Request*>(
               &_CChatRoom_DeleteChatMessages_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  friend void swap(CChatRoom_DeleteChatMessages_Request& a, CChatRoom_DeleteChatMessages_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_DeleteChatMessages_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_DeleteChatMessages_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_DeleteChatMessages_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatMessages_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_DeleteChatMessages_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_DeleteChatMessages_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_DeleteChatMessages_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_DeleteChatMessages_Request";
  }
  protected:
  explicit CChatRoom_DeleteChatMessages_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoom_DeleteChatMessages_Request_Message Message;

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 3,
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
  };
  // repeated .CChatRoom_DeleteChatMessages_Request.Message messages = 3;
  int messages_size() const;
  private:
  int _internal_messages_size() const;
  public:
  void clear_messages();
  ::CChatRoom_DeleteChatMessages_Request_Message* mutable_messages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_DeleteChatMessages_Request_Message >*
      mutable_messages();
  private:
  const ::CChatRoom_DeleteChatMessages_Request_Message& _internal_messages(int index) const;
  ::CChatRoom_DeleteChatMessages_Request_Message* _internal_add_messages();
  public:
  const ::CChatRoom_DeleteChatMessages_Request_Message& messages(int index) const;
  ::CChatRoom_DeleteChatMessages_Request_Message* add_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_DeleteChatMessages_Request_Message >&
      messages() const;

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteChatMessages_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_DeleteChatMessages_Request_Message > messages_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_DeleteChatMessages_Response final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CChatRoom_DeleteChatMessages_Response) */ {
 public:
  inline CChatRoom_DeleteChatMessages_Response() : CChatRoom_DeleteChatMessages_Response(nullptr) {}
  explicit constexpr CChatRoom_DeleteChatMessages_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_DeleteChatMessages_Response(const CChatRoom_DeleteChatMessages_Response& from);
  CChatRoom_DeleteChatMessages_Response(CChatRoom_DeleteChatMessages_Response&& from) noexcept
    : CChatRoom_DeleteChatMessages_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_DeleteChatMessages_Response& operator=(const CChatRoom_DeleteChatMessages_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_DeleteChatMessages_Response& operator=(CChatRoom_DeleteChatMessages_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_DeleteChatMessages_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_DeleteChatMessages_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_DeleteChatMessages_Response*>(
               &_CChatRoom_DeleteChatMessages_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    116;

  friend void swap(CChatRoom_DeleteChatMessages_Response& a, CChatRoom_DeleteChatMessages_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_DeleteChatMessages_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_DeleteChatMessages_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_DeleteChatMessages_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_DeleteChatMessages_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CChatRoom_DeleteChatMessages_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CChatRoom_DeleteChatMessages_Response& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_DeleteChatMessages_Response";
  }
  protected:
  explicit CChatRoom_DeleteChatMessages_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CChatRoom_DeleteChatMessages_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_UpdateMemberListView_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_UpdateMemberListView_Notification) */ {
 public:
  inline CChatRoom_UpdateMemberListView_Notification() : CChatRoom_UpdateMemberListView_Notification(nullptr) {}
  ~CChatRoom_UpdateMemberListView_Notification() override;
  explicit constexpr CChatRoom_UpdateMemberListView_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_UpdateMemberListView_Notification(const CChatRoom_UpdateMemberListView_Notification& from);
  CChatRoom_UpdateMemberListView_Notification(CChatRoom_UpdateMemberListView_Notification&& from) noexcept
    : CChatRoom_UpdateMemberListView_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_UpdateMemberListView_Notification& operator=(const CChatRoom_UpdateMemberListView_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_UpdateMemberListView_Notification& operator=(CChatRoom_UpdateMemberListView_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_UpdateMemberListView_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_UpdateMemberListView_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_UpdateMemberListView_Notification*>(
               &_CChatRoom_UpdateMemberListView_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    117;

  friend void swap(CChatRoom_UpdateMemberListView_Notification& a, CChatRoom_UpdateMemberListView_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_UpdateMemberListView_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_UpdateMemberListView_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_UpdateMemberListView_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_UpdateMemberListView_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_UpdateMemberListView_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_UpdateMemberListView_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_UpdateMemberListView_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_UpdateMemberListView_Notification";
  }
  protected:
  explicit CChatRoom_UpdateMemberListView_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPersonaSubscribeAccountidsFieldNumber = 7,
    kPersonaUnsubscribeAccountidsFieldNumber = 8,
    kChatGroupIdFieldNumber = 1,
    kViewIdFieldNumber = 2,
    kStartFieldNumber = 3,
    kEndFieldNumber = 4,
    kClientChangenumberFieldNumber = 5,
    kDeleteViewFieldNumber = 6,
  };
  // repeated int32 persona_subscribe_accountids = 7;
  int persona_subscribe_accountids_size() const;
  private:
  int _internal_persona_subscribe_accountids_size() const;
  public:
  void clear_persona_subscribe_accountids();
  private:
  int32_t _internal_persona_subscribe_accountids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_persona_subscribe_accountids() const;
  void _internal_add_persona_subscribe_accountids(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_persona_subscribe_accountids();
  public:
  int32_t persona_subscribe_accountids(int index) const;
  void set_persona_subscribe_accountids(int index, int32_t value);
  void add_persona_subscribe_accountids(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      persona_subscribe_accountids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_persona_subscribe_accountids();

  // repeated int32 persona_unsubscribe_accountids = 8;
  int persona_unsubscribe_accountids_size() const;
  private:
  int _internal_persona_unsubscribe_accountids_size() const;
  public:
  void clear_persona_unsubscribe_accountids();
  private:
  int32_t _internal_persona_unsubscribe_accountids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_persona_unsubscribe_accountids() const;
  void _internal_add_persona_unsubscribe_accountids(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_persona_unsubscribe_accountids();
  public:
  int32_t persona_unsubscribe_accountids(int index) const;
  void set_persona_unsubscribe_accountids(int index, int32_t value);
  void add_persona_unsubscribe_accountids(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      persona_unsubscribe_accountids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_persona_unsubscribe_accountids();

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 view_id = 2 [(.description) = "Client-generated ID.  Should send the same value on all requests for the same view"];
  bool has_view_id() const;
  private:
  bool _internal_has_view_id() const;
  public:
  void clear_view_id();
  uint64_t view_id() const;
  void set_view_id(uint64_t value);
  private:
  uint64_t _internal_view_id() const;
  void _internal_set_view_id(uint64_t value);
  public:

  // optional int32 start = 3;
  bool has_start() const;
  private:
  bool _internal_has_start() const;
  public:
  void clear_start();
  int32_t start() const;
  void set_start(int32_t value);
  private:
  int32_t _internal_start() const;
  void _internal_set_start(int32_t value);
  public:

  // optional int32 end = 4;
  bool has_end() const;
  private:
  bool _internal_has_end() const;
  public:
  void clear_end();
  int32_t end() const;
  void set_end(int32_t value);
  private:
  int32_t _internal_end() const;
  void _internal_set_end(int32_t value);
  public:

  // optional int32 client_changenumber = 5 [(.description) = "Any updates from this call on will have this changenumber present.  Can be used to guarantee in-order updates."];
  bool has_client_changenumber() const;
  private:
  bool _internal_has_client_changenumber() const;
  public:
  void clear_client_changenumber();
  int32_t client_changenumber() const;
  void set_client_changenumber(int32_t value);
  private:
  int32_t _internal_client_changenumber() const;
  void _internal_set_client_changenumber(int32_t value);
  public:

  // optional bool delete_view = 6 [(.description) = "Indicates this view has been deleted."];
  bool has_delete_view() const;
  private:
  bool _internal_has_delete_view() const;
  public:
  void clear_delete_view();
  bool delete_view() const;
  void set_delete_view(bool value);
  private:
  bool _internal_delete_view() const;
  void _internal_set_delete_view(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_UpdateMemberListView_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > persona_subscribe_accountids_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > persona_unsubscribe_accountids_;
  uint64_t chat_group_id_;
  uint64_t view_id_;
  int32_t start_;
  int32_t end_;
  int32_t client_changenumber_;
  bool delete_view_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SearchMembers_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SearchMembers_Request) */ {
 public:
  inline CChatRoom_SearchMembers_Request() : CChatRoom_SearchMembers_Request(nullptr) {}
  ~CChatRoom_SearchMembers_Request() override;
  explicit constexpr CChatRoom_SearchMembers_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SearchMembers_Request(const CChatRoom_SearchMembers_Request& from);
  CChatRoom_SearchMembers_Request(CChatRoom_SearchMembers_Request&& from) noexcept
    : CChatRoom_SearchMembers_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SearchMembers_Request& operator=(const CChatRoom_SearchMembers_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SearchMembers_Request& operator=(CChatRoom_SearchMembers_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SearchMembers_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SearchMembers_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SearchMembers_Request*>(
               &_CChatRoom_SearchMembers_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    118;

  friend void swap(CChatRoom_SearchMembers_Request& a, CChatRoom_SearchMembers_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SearchMembers_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SearchMembers_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SearchMembers_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SearchMembers_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SearchMembers_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SearchMembers_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SearchMembers_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SearchMembers_Request";
  }
  protected:
  explicit CChatRoom_SearchMembers_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSearchTextFieldNumber = 3,
    kChatGroupIdFieldNumber = 1,
    kSearchIdFieldNumber = 2,
    kMaxResultsFieldNumber = 4,
  };
  // optional string search_text = 3;
  bool has_search_text() const;
  private:
  bool _internal_has_search_text() const;
  public:
  void clear_search_text();
  const std::string& search_text() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_search_text(ArgT0&& arg0, ArgT... args);
  std::string* mutable_search_text();
  PROTOBUF_NODISCARD std::string* release_search_text();
  void set_allocated_search_text(std::string* search_text);
  private:
  const std::string& _internal_search_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_search_text(const std::string& value);
  std::string* _internal_mutable_search_text();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 search_id = 2 [(.description) = "Client-supplied id.  For find-as-you-type searches, as search narrows the server will not return persona states previously returned for a given searchid."];
  bool has_search_id() const;
  private:
  bool _internal_has_search_id() const;
  public:
  void clear_search_id();
  uint64_t search_id() const;
  void set_search_id(uint64_t value);
  private:
  uint64_t _internal_search_id() const;
  void _internal_set_search_id(uint64_t value);
  public:

  // optional int32 max_results = 4;
  bool has_max_results() const;
  private:
  bool _internal_has_max_results() const;
  public:
  void clear_max_results();
  int32_t max_results() const;
  void set_max_results(int32_t value);
  private:
  int32_t _internal_max_results() const;
  void _internal_set_max_results(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SearchMembers_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr search_text_;
  uint64_t chat_group_id_;
  uint64_t search_id_;
  int32_t max_results_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SearchMembers_Response_MemberMatch final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SearchMembers_Response.MemberMatch) */ {
 public:
  inline CChatRoom_SearchMembers_Response_MemberMatch() : CChatRoom_SearchMembers_Response_MemberMatch(nullptr) {}
  ~CChatRoom_SearchMembers_Response_MemberMatch() override;
  explicit constexpr CChatRoom_SearchMembers_Response_MemberMatch(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SearchMembers_Response_MemberMatch(const CChatRoom_SearchMembers_Response_MemberMatch& from);
  CChatRoom_SearchMembers_Response_MemberMatch(CChatRoom_SearchMembers_Response_MemberMatch&& from) noexcept
    : CChatRoom_SearchMembers_Response_MemberMatch() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SearchMembers_Response_MemberMatch& operator=(const CChatRoom_SearchMembers_Response_MemberMatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SearchMembers_Response_MemberMatch& operator=(CChatRoom_SearchMembers_Response_MemberMatch&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SearchMembers_Response_MemberMatch& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SearchMembers_Response_MemberMatch* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SearchMembers_Response_MemberMatch*>(
               &_CChatRoom_SearchMembers_Response_MemberMatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    119;

  friend void swap(CChatRoom_SearchMembers_Response_MemberMatch& a, CChatRoom_SearchMembers_Response_MemberMatch& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SearchMembers_Response_MemberMatch* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SearchMembers_Response_MemberMatch* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SearchMembers_Response_MemberMatch* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SearchMembers_Response_MemberMatch>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SearchMembers_Response_MemberMatch& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SearchMembers_Response_MemberMatch& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SearchMembers_Response_MemberMatch* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SearchMembers_Response.MemberMatch";
  }
  protected:
  explicit CChatRoom_SearchMembers_Response_MemberMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPersonaFieldNumber = 2,
    kAccountidFieldNumber = 1,
  };
  // optional .CMsgClientPersonaState.Friend persona = 2;
  bool has_persona() const;
  private:
  bool _internal_has_persona() const;
  public:
  void clear_persona();
  const ::CMsgClientPersonaState_Friend& persona() const;
  PROTOBUF_NODISCARD ::CMsgClientPersonaState_Friend* release_persona();
  ::CMsgClientPersonaState_Friend* mutable_persona();
  void set_allocated_persona(::CMsgClientPersonaState_Friend* persona);
  private:
  const ::CMsgClientPersonaState_Friend& _internal_persona() const;
  ::CMsgClientPersonaState_Friend* _internal_mutable_persona();
  public:
  void unsafe_arena_set_allocated_persona(
      ::CMsgClientPersonaState_Friend* persona);
  ::CMsgClientPersonaState_Friend* unsafe_arena_release_persona();

  // optional int32 accountid = 1;
  bool has_accountid() const;
  private:
  bool _internal_has_accountid() const;
  public:
  void clear_accountid();
  int32_t accountid() const;
  void set_accountid(int32_t value);
  private:
  int32_t _internal_accountid() const;
  void _internal_set_accountid(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SearchMembers_Response.MemberMatch)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgClientPersonaState_Friend* persona_;
  int32_t accountid_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_SearchMembers_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_SearchMembers_Response) */ {
 public:
  inline CChatRoom_SearchMembers_Response() : CChatRoom_SearchMembers_Response(nullptr) {}
  ~CChatRoom_SearchMembers_Response() override;
  explicit constexpr CChatRoom_SearchMembers_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_SearchMembers_Response(const CChatRoom_SearchMembers_Response& from);
  CChatRoom_SearchMembers_Response(CChatRoom_SearchMembers_Response&& from) noexcept
    : CChatRoom_SearchMembers_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_SearchMembers_Response& operator=(const CChatRoom_SearchMembers_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_SearchMembers_Response& operator=(CChatRoom_SearchMembers_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_SearchMembers_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_SearchMembers_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_SearchMembers_Response*>(
               &_CChatRoom_SearchMembers_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    120;

  friend void swap(CChatRoom_SearchMembers_Response& a, CChatRoom_SearchMembers_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_SearchMembers_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_SearchMembers_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_SearchMembers_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_SearchMembers_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_SearchMembers_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_SearchMembers_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_SearchMembers_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_SearchMembers_Response";
  }
  protected:
  explicit CChatRoom_SearchMembers_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoom_SearchMembers_Response_MemberMatch MemberMatch;

  // accessors -------------------------------------------------------

  enum : int {
    kMatchingMembersFieldNumber = 1,
    kStatusFlagsFieldNumber = 2,
  };
  // repeated .CChatRoom_SearchMembers_Response.MemberMatch matching_members = 1;
  int matching_members_size() const;
  private:
  int _internal_matching_members_size() const;
  public:
  void clear_matching_members();
  ::CChatRoom_SearchMembers_Response_MemberMatch* mutable_matching_members(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_SearchMembers_Response_MemberMatch >*
      mutable_matching_members();
  private:
  const ::CChatRoom_SearchMembers_Response_MemberMatch& _internal_matching_members(int index) const;
  ::CChatRoom_SearchMembers_Response_MemberMatch* _internal_add_matching_members();
  public:
  const ::CChatRoom_SearchMembers_Response_MemberMatch& matching_members(int index) const;
  ::CChatRoom_SearchMembers_Response_MemberMatch* add_matching_members();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_SearchMembers_Response_MemberMatch >&
      matching_members() const;

  // optional uint32 status_flags = 2;
  bool has_status_flags() const;
  private:
  bool _internal_has_status_flags() const;
  public:
  void clear_status_flags();
  uint32_t status_flags() const;
  void set_status_flags(uint32_t value);
  private:
  uint32_t _internal_status_flags() const;
  void _internal_set_status_flags(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_SearchMembers_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_SearchMembers_Response_MemberMatch > matching_members_;
  uint32_t status_flags_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_UpdateMessageReaction_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_UpdateMessageReaction_Request) */ {
 public:
  inline CChatRoom_UpdateMessageReaction_Request() : CChatRoom_UpdateMessageReaction_Request(nullptr) {}
  ~CChatRoom_UpdateMessageReaction_Request() override;
  explicit constexpr CChatRoom_UpdateMessageReaction_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_UpdateMessageReaction_Request(const CChatRoom_UpdateMessageReaction_Request& from);
  CChatRoom_UpdateMessageReaction_Request(CChatRoom_UpdateMessageReaction_Request&& from) noexcept
    : CChatRoom_UpdateMessageReaction_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_UpdateMessageReaction_Request& operator=(const CChatRoom_UpdateMessageReaction_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_UpdateMessageReaction_Request& operator=(CChatRoom_UpdateMessageReaction_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_UpdateMessageReaction_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_UpdateMessageReaction_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_UpdateMessageReaction_Request*>(
               &_CChatRoom_UpdateMessageReaction_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    121;

  friend void swap(CChatRoom_UpdateMessageReaction_Request& a, CChatRoom_UpdateMessageReaction_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_UpdateMessageReaction_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_UpdateMessageReaction_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_UpdateMessageReaction_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_UpdateMessageReaction_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_UpdateMessageReaction_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_UpdateMessageReaction_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_UpdateMessageReaction_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_UpdateMessageReaction_Request";
  }
  protected:
  explicit CChatRoom_UpdateMessageReaction_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReactionFieldNumber = 6,
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
    kServerTimestampFieldNumber = 3,
    kOrdinalFieldNumber = 4,
    kReactionTypeFieldNumber = 5,
    kIsAddFieldNumber = 7,
  };
  // optional string reaction = 6;
  bool has_reaction() const;
  private:
  bool _internal_has_reaction() const;
  public:
  void clear_reaction();
  const std::string& reaction() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_reaction(ArgT0&& arg0, ArgT... args);
  std::string* mutable_reaction();
  PROTOBUF_NODISCARD std::string* release_reaction();
  void set_allocated_reaction(std::string* reaction);
  private:
  const std::string& _internal_reaction() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reaction(const std::string& value);
  std::string* _internal_mutable_reaction();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional uint32 server_timestamp = 3;
  bool has_server_timestamp() const;
  private:
  bool _internal_has_server_timestamp() const;
  public:
  void clear_server_timestamp();
  uint32_t server_timestamp() const;
  void set_server_timestamp(uint32_t value);
  private:
  uint32_t _internal_server_timestamp() const;
  void _internal_set_server_timestamp(uint32_t value);
  public:

  // optional uint32 ordinal = 4;
  bool has_ordinal() const;
  private:
  bool _internal_has_ordinal() const;
  public:
  void clear_ordinal();
  uint32_t ordinal() const;
  void set_ordinal(uint32_t value);
  private:
  uint32_t _internal_ordinal() const;
  void _internal_set_ordinal(uint32_t value);
  public:

  // optional .EChatRoomMessageReactionType reaction_type = 5 [default = k_EChatRoomMessageReactionType_Invalid];
  bool has_reaction_type() const;
  private:
  bool _internal_has_reaction_type() const;
  public:
  void clear_reaction_type();
  ::EChatRoomMessageReactionType reaction_type() const;
  void set_reaction_type(::EChatRoomMessageReactionType value);
  private:
  ::EChatRoomMessageReactionType _internal_reaction_type() const;
  void _internal_set_reaction_type(::EChatRoomMessageReactionType value);
  public:

  // optional bool is_add = 7;
  bool has_is_add() const;
  private:
  bool _internal_has_is_add() const;
  public:
  void clear_is_add();
  bool is_add() const;
  void set_is_add(bool value);
  private:
  bool _internal_is_add() const;
  void _internal_set_is_add(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_UpdateMessageReaction_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reaction_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  uint32_t server_timestamp_;
  uint32_t ordinal_;
  int reaction_type_;
  bool is_add_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_UpdateMessageReaction_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_UpdateMessageReaction_Response) */ {
 public:
  inline CChatRoom_UpdateMessageReaction_Response() : CChatRoom_UpdateMessageReaction_Response(nullptr) {}
  ~CChatRoom_UpdateMessageReaction_Response() override;
  explicit constexpr CChatRoom_UpdateMessageReaction_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_UpdateMessageReaction_Response(const CChatRoom_UpdateMessageReaction_Response& from);
  CChatRoom_UpdateMessageReaction_Response(CChatRoom_UpdateMessageReaction_Response&& from) noexcept
    : CChatRoom_UpdateMessageReaction_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_UpdateMessageReaction_Response& operator=(const CChatRoom_UpdateMessageReaction_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_UpdateMessageReaction_Response& operator=(CChatRoom_UpdateMessageReaction_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_UpdateMessageReaction_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_UpdateMessageReaction_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_UpdateMessageReaction_Response*>(
               &_CChatRoom_UpdateMessageReaction_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    122;

  friend void swap(CChatRoom_UpdateMessageReaction_Response& a, CChatRoom_UpdateMessageReaction_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_UpdateMessageReaction_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_UpdateMessageReaction_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_UpdateMessageReaction_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_UpdateMessageReaction_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_UpdateMessageReaction_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_UpdateMessageReaction_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_UpdateMessageReaction_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_UpdateMessageReaction_Response";
  }
  protected:
  explicit CChatRoom_UpdateMessageReaction_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumReactorsFieldNumber = 1,
  };
  // optional uint32 num_reactors = 1;
  bool has_num_reactors() const;
  private:
  bool _internal_has_num_reactors() const;
  public:
  void clear_num_reactors();
  uint32_t num_reactors() const;
  void set_num_reactors(uint32_t value);
  private:
  uint32_t _internal_num_reactors() const;
  void _internal_set_num_reactors(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_UpdateMessageReaction_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t num_reactors_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetMessageReactionReactors_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetMessageReactionReactors_Request) */ {
 public:
  inline CChatRoom_GetMessageReactionReactors_Request() : CChatRoom_GetMessageReactionReactors_Request(nullptr) {}
  ~CChatRoom_GetMessageReactionReactors_Request() override;
  explicit constexpr CChatRoom_GetMessageReactionReactors_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetMessageReactionReactors_Request(const CChatRoom_GetMessageReactionReactors_Request& from);
  CChatRoom_GetMessageReactionReactors_Request(CChatRoom_GetMessageReactionReactors_Request&& from) noexcept
    : CChatRoom_GetMessageReactionReactors_Request() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetMessageReactionReactors_Request& operator=(const CChatRoom_GetMessageReactionReactors_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetMessageReactionReactors_Request& operator=(CChatRoom_GetMessageReactionReactors_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetMessageReactionReactors_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetMessageReactionReactors_Request* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetMessageReactionReactors_Request*>(
               &_CChatRoom_GetMessageReactionReactors_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    123;

  friend void swap(CChatRoom_GetMessageReactionReactors_Request& a, CChatRoom_GetMessageReactionReactors_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetMessageReactionReactors_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetMessageReactionReactors_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetMessageReactionReactors_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetMessageReactionReactors_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetMessageReactionReactors_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetMessageReactionReactors_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetMessageReactionReactors_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetMessageReactionReactors_Request";
  }
  protected:
  explicit CChatRoom_GetMessageReactionReactors_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReactionFieldNumber = 6,
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
    kServerTimestampFieldNumber = 3,
    kOrdinalFieldNumber = 4,
    kReactionTypeFieldNumber = 5,
    kLimitFieldNumber = 7,
  };
  // optional string reaction = 6;
  bool has_reaction() const;
  private:
  bool _internal_has_reaction() const;
  public:
  void clear_reaction();
  const std::string& reaction() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_reaction(ArgT0&& arg0, ArgT... args);
  std::string* mutable_reaction();
  PROTOBUF_NODISCARD std::string* release_reaction();
  void set_allocated_reaction(std::string* reaction);
  private:
  const std::string& _internal_reaction() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reaction(const std::string& value);
  std::string* _internal_mutable_reaction();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional uint32 server_timestamp = 3;
  bool has_server_timestamp() const;
  private:
  bool _internal_has_server_timestamp() const;
  public:
  void clear_server_timestamp();
  uint32_t server_timestamp() const;
  void set_server_timestamp(uint32_t value);
  private:
  uint32_t _internal_server_timestamp() const;
  void _internal_set_server_timestamp(uint32_t value);
  public:

  // optional uint32 ordinal = 4;
  bool has_ordinal() const;
  private:
  bool _internal_has_ordinal() const;
  public:
  void clear_ordinal();
  uint32_t ordinal() const;
  void set_ordinal(uint32_t value);
  private:
  uint32_t _internal_ordinal() const;
  void _internal_set_ordinal(uint32_t value);
  public:

  // optional .EChatRoomMessageReactionType reaction_type = 5 [default = k_EChatRoomMessageReactionType_Invalid];
  bool has_reaction_type() const;
  private:
  bool _internal_has_reaction_type() const;
  public:
  void clear_reaction_type();
  ::EChatRoomMessageReactionType reaction_type() const;
  void set_reaction_type(::EChatRoomMessageReactionType value);
  private:
  ::EChatRoomMessageReactionType _internal_reaction_type() const;
  void _internal_set_reaction_type(::EChatRoomMessageReactionType value);
  public:

  // optional uint32 limit = 7;
  bool has_limit() const;
  private:
  bool _internal_has_limit() const;
  public:
  void clear_limit();
  uint32_t limit() const;
  void set_limit(uint32_t value);
  private:
  uint32_t _internal_limit() const;
  void _internal_set_limit(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_GetMessageReactionReactors_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reaction_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  uint32_t server_timestamp_;
  uint32_t ordinal_;
  int reaction_type_;
  uint32_t limit_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_GetMessageReactionReactors_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_GetMessageReactionReactors_Response) */ {
 public:
  inline CChatRoom_GetMessageReactionReactors_Response() : CChatRoom_GetMessageReactionReactors_Response(nullptr) {}
  ~CChatRoom_GetMessageReactionReactors_Response() override;
  explicit constexpr CChatRoom_GetMessageReactionReactors_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_GetMessageReactionReactors_Response(const CChatRoom_GetMessageReactionReactors_Response& from);
  CChatRoom_GetMessageReactionReactors_Response(CChatRoom_GetMessageReactionReactors_Response&& from) noexcept
    : CChatRoom_GetMessageReactionReactors_Response() {
    *this = ::std::move(from);
  }

  inline CChatRoom_GetMessageReactionReactors_Response& operator=(const CChatRoom_GetMessageReactionReactors_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_GetMessageReactionReactors_Response& operator=(CChatRoom_GetMessageReactionReactors_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_GetMessageReactionReactors_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_GetMessageReactionReactors_Response* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_GetMessageReactionReactors_Response*>(
               &_CChatRoom_GetMessageReactionReactors_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    124;

  friend void swap(CChatRoom_GetMessageReactionReactors_Response& a, CChatRoom_GetMessageReactionReactors_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_GetMessageReactionReactors_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_GetMessageReactionReactors_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_GetMessageReactionReactors_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_GetMessageReactionReactors_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_GetMessageReactionReactors_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_GetMessageReactionReactors_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_GetMessageReactionReactors_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_GetMessageReactionReactors_Response";
  }
  protected:
  explicit CChatRoom_GetMessageReactionReactors_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReactorsFieldNumber = 1,
  };
  // repeated uint32 reactors = 1;
  int reactors_size() const;
  private:
  int _internal_reactors_size() const;
  public:
  void clear_reactors();
  private:
  uint32_t _internal_reactors(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_reactors() const;
  void _internal_add_reactors(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_reactors();
  public:
  uint32_t reactors(int index) const;
  void set_reactors(int index, uint32_t value);
  void add_reactors(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      reactors() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_reactors();

  // @@protoc_insertion_point(class_scope:CChatRoom_GetMessageReactionReactors_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > reactors_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CClanChatRooms_GetClanChatRoomInfo_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CClanChatRooms_GetClanChatRoomInfo_Request) */ {
 public:
  inline CClanChatRooms_GetClanChatRoomInfo_Request() : CClanChatRooms_GetClanChatRoomInfo_Request(nullptr) {}
  ~CClanChatRooms_GetClanChatRoomInfo_Request() override;
  explicit constexpr CClanChatRooms_GetClanChatRoomInfo_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CClanChatRooms_GetClanChatRoomInfo_Request(const CClanChatRooms_GetClanChatRoomInfo_Request& from);
  CClanChatRooms_GetClanChatRoomInfo_Request(CClanChatRooms_GetClanChatRoomInfo_Request&& from) noexcept
    : CClanChatRooms_GetClanChatRoomInfo_Request() {
    *this = ::std::move(from);
  }

  inline CClanChatRooms_GetClanChatRoomInfo_Request& operator=(const CClanChatRooms_GetClanChatRoomInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CClanChatRooms_GetClanChatRoomInfo_Request& operator=(CClanChatRooms_GetClanChatRoomInfo_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CClanChatRooms_GetClanChatRoomInfo_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CClanChatRooms_GetClanChatRoomInfo_Request* internal_default_instance() {
    return reinterpret_cast<const CClanChatRooms_GetClanChatRoomInfo_Request*>(
               &_CClanChatRooms_GetClanChatRoomInfo_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    125;

  friend void swap(CClanChatRooms_GetClanChatRoomInfo_Request& a, CClanChatRooms_GetClanChatRoomInfo_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CClanChatRooms_GetClanChatRoomInfo_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CClanChatRooms_GetClanChatRoomInfo_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CClanChatRooms_GetClanChatRoomInfo_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CClanChatRooms_GetClanChatRoomInfo_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CClanChatRooms_GetClanChatRoomInfo_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CClanChatRooms_GetClanChatRoomInfo_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClanChatRooms_GetClanChatRoomInfo_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CClanChatRooms_GetClanChatRoomInfo_Request";
  }
  protected:
  explicit CClanChatRooms_GetClanChatRoomInfo_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidFieldNumber = 1,
    kAutocreateFieldNumber = 2,
  };
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  uint64_t steamid() const;
  void set_steamid(uint64_t value);
  private:
  uint64_t _internal_steamid() const;
  void _internal_set_steamid(uint64_t value);
  public:

  // optional bool autocreate = 2 [default = true, (.description) = "Create a default chat room if none has been created before."];
  bool has_autocreate() const;
  private:
  bool _internal_has_autocreate() const;
  public:
  void clear_autocreate();
  bool autocreate() const;
  void set_autocreate(bool value);
  private:
  bool _internal_autocreate() const;
  void _internal_set_autocreate(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CClanChatRooms_GetClanChatRoomInfo_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t steamid_;
  bool autocreate_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CClanChatRooms_GetClanChatRoomInfo_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CClanChatRooms_GetClanChatRoomInfo_Response) */ {
 public:
  inline CClanChatRooms_GetClanChatRoomInfo_Response() : CClanChatRooms_GetClanChatRoomInfo_Response(nullptr) {}
  ~CClanChatRooms_GetClanChatRoomInfo_Response() override;
  explicit constexpr CClanChatRooms_GetClanChatRoomInfo_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CClanChatRooms_GetClanChatRoomInfo_Response(const CClanChatRooms_GetClanChatRoomInfo_Response& from);
  CClanChatRooms_GetClanChatRoomInfo_Response(CClanChatRooms_GetClanChatRoomInfo_Response&& from) noexcept
    : CClanChatRooms_GetClanChatRoomInfo_Response() {
    *this = ::std::move(from);
  }

  inline CClanChatRooms_GetClanChatRoomInfo_Response& operator=(const CClanChatRooms_GetClanChatRoomInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CClanChatRooms_GetClanChatRoomInfo_Response& operator=(CClanChatRooms_GetClanChatRoomInfo_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CClanChatRooms_GetClanChatRoomInfo_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CClanChatRooms_GetClanChatRoomInfo_Response* internal_default_instance() {
    return reinterpret_cast<const CClanChatRooms_GetClanChatRoomInfo_Response*>(
               &_CClanChatRooms_GetClanChatRoomInfo_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    126;

  friend void swap(CClanChatRooms_GetClanChatRoomInfo_Response& a, CClanChatRooms_GetClanChatRoomInfo_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CClanChatRooms_GetClanChatRoomInfo_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CClanChatRooms_GetClanChatRoomInfo_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CClanChatRooms_GetClanChatRoomInfo_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CClanChatRooms_GetClanChatRoomInfo_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CClanChatRooms_GetClanChatRoomInfo_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CClanChatRooms_GetClanChatRoomInfo_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClanChatRooms_GetClanChatRoomInfo_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CClanChatRooms_GetClanChatRoomInfo_Response";
  }
  protected:
  explicit CClanChatRooms_GetClanChatRoomInfo_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupSummaryFieldNumber = 1,
  };
  // optional .CChatRoom_GetChatRoomGroupSummary_Response chat_group_summary = 1;
  bool has_chat_group_summary() const;
  private:
  bool _internal_has_chat_group_summary() const;
  public:
  void clear_chat_group_summary();
  const ::CChatRoom_GetChatRoomGroupSummary_Response& chat_group_summary() const;
  PROTOBUF_NODISCARD ::CChatRoom_GetChatRoomGroupSummary_Response* release_chat_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* mutable_chat_group_summary();
  void set_allocated_chat_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* chat_group_summary);
  private:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& _internal_chat_group_summary() const;
  ::CChatRoom_GetChatRoomGroupSummary_Response* _internal_mutable_chat_group_summary();
  public:
  void unsafe_arena_set_allocated_chat_group_summary(
      ::CChatRoom_GetChatRoomGroupSummary_Response* chat_group_summary);
  ::CChatRoom_GetChatRoomGroupSummary_Response* unsafe_arena_release_chat_group_summary();

  // @@protoc_insertion_point(class_scope:CClanChatRooms_GetClanChatRoomInfo_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CChatRoom_GetChatRoomGroupSummary_Response* chat_group_summary_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CClanChatRooms_SetClanChatRoomPrivate_Request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CClanChatRooms_SetClanChatRoomPrivate_Request) */ {
 public:
  inline CClanChatRooms_SetClanChatRoomPrivate_Request() : CClanChatRooms_SetClanChatRoomPrivate_Request(nullptr) {}
  ~CClanChatRooms_SetClanChatRoomPrivate_Request() override;
  explicit constexpr CClanChatRooms_SetClanChatRoomPrivate_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CClanChatRooms_SetClanChatRoomPrivate_Request(const CClanChatRooms_SetClanChatRoomPrivate_Request& from);
  CClanChatRooms_SetClanChatRoomPrivate_Request(CClanChatRooms_SetClanChatRoomPrivate_Request&& from) noexcept
    : CClanChatRooms_SetClanChatRoomPrivate_Request() {
    *this = ::std::move(from);
  }

  inline CClanChatRooms_SetClanChatRoomPrivate_Request& operator=(const CClanChatRooms_SetClanChatRoomPrivate_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CClanChatRooms_SetClanChatRoomPrivate_Request& operator=(CClanChatRooms_SetClanChatRoomPrivate_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CClanChatRooms_SetClanChatRoomPrivate_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CClanChatRooms_SetClanChatRoomPrivate_Request* internal_default_instance() {
    return reinterpret_cast<const CClanChatRooms_SetClanChatRoomPrivate_Request*>(
               &_CClanChatRooms_SetClanChatRoomPrivate_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    127;

  friend void swap(CClanChatRooms_SetClanChatRoomPrivate_Request& a, CClanChatRooms_SetClanChatRoomPrivate_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CClanChatRooms_SetClanChatRoomPrivate_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CClanChatRooms_SetClanChatRoomPrivate_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CClanChatRooms_SetClanChatRoomPrivate_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CClanChatRooms_SetClanChatRoomPrivate_Request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CClanChatRooms_SetClanChatRoomPrivate_Request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CClanChatRooms_SetClanChatRoomPrivate_Request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClanChatRooms_SetClanChatRoomPrivate_Request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CClanChatRooms_SetClanChatRoomPrivate_Request";
  }
  protected:
  explicit CClanChatRooms_SetClanChatRoomPrivate_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidFieldNumber = 1,
    kChatRoomPrivateFieldNumber = 2,
  };
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  uint64_t steamid() const;
  void set_steamid(uint64_t value);
  private:
  uint64_t _internal_steamid() const;
  void _internal_set_steamid(uint64_t value);
  public:

  // optional bool chat_room_private = 2;
  bool has_chat_room_private() const;
  private:
  bool _internal_has_chat_room_private() const;
  public:
  void clear_chat_room_private();
  bool chat_room_private() const;
  void set_chat_room_private(bool value);
  private:
  bool _internal_chat_room_private() const;
  void _internal_set_chat_room_private(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CClanChatRooms_SetClanChatRoomPrivate_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t steamid_;
  bool chat_room_private_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CClanChatRooms_SetClanChatRoomPrivate_Response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CClanChatRooms_SetClanChatRoomPrivate_Response) */ {
 public:
  inline CClanChatRooms_SetClanChatRoomPrivate_Response() : CClanChatRooms_SetClanChatRoomPrivate_Response(nullptr) {}
  ~CClanChatRooms_SetClanChatRoomPrivate_Response() override;
  explicit constexpr CClanChatRooms_SetClanChatRoomPrivate_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CClanChatRooms_SetClanChatRoomPrivate_Response(const CClanChatRooms_SetClanChatRoomPrivate_Response& from);
  CClanChatRooms_SetClanChatRoomPrivate_Response(CClanChatRooms_SetClanChatRoomPrivate_Response&& from) noexcept
    : CClanChatRooms_SetClanChatRoomPrivate_Response() {
    *this = ::std::move(from);
  }

  inline CClanChatRooms_SetClanChatRoomPrivate_Response& operator=(const CClanChatRooms_SetClanChatRoomPrivate_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CClanChatRooms_SetClanChatRoomPrivate_Response& operator=(CClanChatRooms_SetClanChatRoomPrivate_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CClanChatRooms_SetClanChatRoomPrivate_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CClanChatRooms_SetClanChatRoomPrivate_Response* internal_default_instance() {
    return reinterpret_cast<const CClanChatRooms_SetClanChatRoomPrivate_Response*>(
               &_CClanChatRooms_SetClanChatRoomPrivate_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    128;

  friend void swap(CClanChatRooms_SetClanChatRoomPrivate_Response& a, CClanChatRooms_SetClanChatRoomPrivate_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CClanChatRooms_SetClanChatRoomPrivate_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CClanChatRooms_SetClanChatRoomPrivate_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CClanChatRooms_SetClanChatRoomPrivate_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CClanChatRooms_SetClanChatRoomPrivate_Response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CClanChatRooms_SetClanChatRoomPrivate_Response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CClanChatRooms_SetClanChatRoomPrivate_Response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClanChatRooms_SetClanChatRoomPrivate_Response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CClanChatRooms_SetClanChatRoomPrivate_Response";
  }
  protected:
  explicit CClanChatRooms_SetClanChatRoomPrivate_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatRoomPrivateFieldNumber = 1,
  };
  // optional bool chat_room_private = 1;
  bool has_chat_room_private() const;
  private:
  bool _internal_has_chat_room_private() const;
  public:
  void clear_chat_room_private();
  bool chat_room_private() const;
  void set_chat_room_private(bool value);
  private:
  bool _internal_chat_room_private() const;
  void _internal_set_chat_room_private(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CClanChatRooms_SetClanChatRoomPrivate_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool chat_room_private_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatMentions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatMentions) */ {
 public:
  inline CChatMentions() : CChatMentions(nullptr) {}
  ~CChatMentions() override;
  explicit constexpr CChatMentions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatMentions(const CChatMentions& from);
  CChatMentions(CChatMentions&& from) noexcept
    : CChatMentions() {
    *this = ::std::move(from);
  }

  inline CChatMentions& operator=(const CChatMentions& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatMentions& operator=(CChatMentions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatMentions& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatMentions* internal_default_instance() {
    return reinterpret_cast<const CChatMentions*>(
               &_CChatMentions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    129;

  friend void swap(CChatMentions& a, CChatMentions& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatMentions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatMentions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatMentions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatMentions>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatMentions& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatMentions& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatMentions* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatMentions";
  }
  protected:
  explicit CChatMentions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMentionAccountidsFieldNumber = 3,
    kMentionAllFieldNumber = 1,
    kMentionHereFieldNumber = 2,
  };
  // repeated uint32 mention_accountids = 3;
  int mention_accountids_size() const;
  private:
  int _internal_mention_accountids_size() const;
  public:
  void clear_mention_accountids();
  private:
  uint32_t _internal_mention_accountids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_mention_accountids() const;
  void _internal_add_mention_accountids(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_mention_accountids();
  public:
  uint32_t mention_accountids(int index) const;
  void set_mention_accountids(int index, uint32_t value);
  void add_mention_accountids(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      mention_accountids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_mention_accountids();

  // optional bool mention_all = 1;
  bool has_mention_all() const;
  private:
  bool _internal_has_mention_all() const;
  public:
  void clear_mention_all();
  bool mention_all() const;
  void set_mention_all(bool value);
  private:
  bool _internal_mention_all() const;
  void _internal_set_mention_all(bool value);
  public:

  // optional bool mention_here = 2;
  bool has_mention_here() const;
  private:
  bool _internal_has_mention_here() const;
  public:
  void clear_mention_here();
  bool mention_here() const;
  void set_mention_here(bool value);
  private:
  bool _internal_mention_here() const;
  void _internal_set_mention_here(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatMentions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > mention_accountids_;
  bool mention_all_;
  bool mention_here_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_IncomingChatMessage_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_IncomingChatMessage_Notification) */ {
 public:
  inline CChatRoom_IncomingChatMessage_Notification() : CChatRoom_IncomingChatMessage_Notification(nullptr) {}
  ~CChatRoom_IncomingChatMessage_Notification() override;
  explicit constexpr CChatRoom_IncomingChatMessage_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_IncomingChatMessage_Notification(const CChatRoom_IncomingChatMessage_Notification& from);
  CChatRoom_IncomingChatMessage_Notification(CChatRoom_IncomingChatMessage_Notification&& from) noexcept
    : CChatRoom_IncomingChatMessage_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_IncomingChatMessage_Notification& operator=(const CChatRoom_IncomingChatMessage_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_IncomingChatMessage_Notification& operator=(CChatRoom_IncomingChatMessage_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_IncomingChatMessage_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_IncomingChatMessage_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_IncomingChatMessage_Notification*>(
               &_CChatRoom_IncomingChatMessage_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    130;

  friend void swap(CChatRoom_IncomingChatMessage_Notification& a, CChatRoom_IncomingChatMessage_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_IncomingChatMessage_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_IncomingChatMessage_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_IncomingChatMessage_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_IncomingChatMessage_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_IncomingChatMessage_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_IncomingChatMessage_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_IncomingChatMessage_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_IncomingChatMessage_Notification";
  }
  protected:
  explicit CChatRoom_IncomingChatMessage_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 4,
    kMessageNoBbcodeFieldNumber = 9,
    kChatNameFieldNumber = 10,
    kMentionsFieldNumber = 6,
    kServerMessageFieldNumber = 8,
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
    kSteamidSenderFieldNumber = 3,
    kTimestampFieldNumber = 5,
    kOrdinalFieldNumber = 7,
  };
  // optional string message = 4;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional string message_no_bbcode = 9;
  bool has_message_no_bbcode() const;
  private:
  bool _internal_has_message_no_bbcode() const;
  public:
  void clear_message_no_bbcode();
  const std::string& message_no_bbcode() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message_no_bbcode(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message_no_bbcode();
  PROTOBUF_NODISCARD std::string* release_message_no_bbcode();
  void set_allocated_message_no_bbcode(std::string* message_no_bbcode);
  private:
  const std::string& _internal_message_no_bbcode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message_no_bbcode(const std::string& value);
  std::string* _internal_mutable_message_no_bbcode();
  public:

  // optional string chat_name = 10 [(.description) = "A name to use for the chat, intended for notifications"];
  bool has_chat_name() const;
  private:
  bool _internal_has_chat_name() const;
  public:
  void clear_chat_name();
  const std::string& chat_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_chat_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_chat_name();
  PROTOBUF_NODISCARD std::string* release_chat_name();
  void set_allocated_chat_name(std::string* chat_name);
  private:
  const std::string& _internal_chat_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chat_name(const std::string& value);
  std::string* _internal_mutable_chat_name();
  public:

  // optional .CChatMentions mentions = 6;
  bool has_mentions() const;
  private:
  bool _internal_has_mentions() const;
  public:
  void clear_mentions();
  const ::CChatMentions& mentions() const;
  PROTOBUF_NODISCARD ::CChatMentions* release_mentions();
  ::CChatMentions* mutable_mentions();
  void set_allocated_mentions(::CChatMentions* mentions);
  private:
  const ::CChatMentions& _internal_mentions() const;
  ::CChatMentions* _internal_mutable_mentions();
  public:
  void unsafe_arena_set_allocated_mentions(
      ::CChatMentions* mentions);
  ::CChatMentions* unsafe_arena_release_mentions();

  // optional .ServerMessage server_message = 8;
  bool has_server_message() const;
  private:
  bool _internal_has_server_message() const;
  public:
  void clear_server_message();
  const ::ServerMessage& server_message() const;
  PROTOBUF_NODISCARD ::ServerMessage* release_server_message();
  ::ServerMessage* mutable_server_message();
  void set_allocated_server_message(::ServerMessage* server_message);
  private:
  const ::ServerMessage& _internal_server_message() const;
  ::ServerMessage* _internal_mutable_server_message();
  public:
  void unsafe_arena_set_allocated_server_message(
      ::ServerMessage* server_message);
  ::ServerMessage* unsafe_arena_release_server_message();

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional fixed64 steamid_sender = 3;
  bool has_steamid_sender() const;
  private:
  bool _internal_has_steamid_sender() const;
  public:
  void clear_steamid_sender();
  uint64_t steamid_sender() const;
  void set_steamid_sender(uint64_t value);
  private:
  uint64_t _internal_steamid_sender() const;
  void _internal_set_steamid_sender(uint64_t value);
  public:

  // optional uint32 timestamp = 5;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  uint32_t timestamp() const;
  void set_timestamp(uint32_t value);
  private:
  uint32_t _internal_timestamp() const;
  void _internal_set_timestamp(uint32_t value);
  public:

  // optional uint32 ordinal = 7;
  bool has_ordinal() const;
  private:
  bool _internal_has_ordinal() const;
  public:
  void clear_ordinal();
  uint32_t ordinal() const;
  void set_ordinal(uint32_t value);
  private:
  uint32_t _internal_ordinal() const;
  void _internal_set_ordinal(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_IncomingChatMessage_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_no_bbcode_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr chat_name_;
  ::CChatMentions* mentions_;
  ::ServerMessage* server_message_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  uint64_t steamid_sender_;
  uint32_t timestamp_;
  uint32_t ordinal_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_ChatMessageModified_Notification_ChatMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ChatMessageModified_Notification.ChatMessage) */ {
 public:
  inline CChatRoom_ChatMessageModified_Notification_ChatMessage() : CChatRoom_ChatMessageModified_Notification_ChatMessage(nullptr) {}
  ~CChatRoom_ChatMessageModified_Notification_ChatMessage() override;
  explicit constexpr CChatRoom_ChatMessageModified_Notification_ChatMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_ChatMessageModified_Notification_ChatMessage(const CChatRoom_ChatMessageModified_Notification_ChatMessage& from);
  CChatRoom_ChatMessageModified_Notification_ChatMessage(CChatRoom_ChatMessageModified_Notification_ChatMessage&& from) noexcept
    : CChatRoom_ChatMessageModified_Notification_ChatMessage() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ChatMessageModified_Notification_ChatMessage& operator=(const CChatRoom_ChatMessageModified_Notification_ChatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_ChatMessageModified_Notification_ChatMessage& operator=(CChatRoom_ChatMessageModified_Notification_ChatMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_ChatMessageModified_Notification_ChatMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_ChatMessageModified_Notification_ChatMessage* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ChatMessageModified_Notification_ChatMessage*>(
               &_CChatRoom_ChatMessageModified_Notification_ChatMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    131;

  friend void swap(CChatRoom_ChatMessageModified_Notification_ChatMessage& a, CChatRoom_ChatMessageModified_Notification_ChatMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_ChatMessageModified_Notification_ChatMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_ChatMessageModified_Notification_ChatMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_ChatMessageModified_Notification_ChatMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_ChatMessageModified_Notification_ChatMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_ChatMessageModified_Notification_ChatMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_ChatMessageModified_Notification_ChatMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ChatMessageModified_Notification_ChatMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_ChatMessageModified_Notification.ChatMessage";
  }
  protected:
  explicit CChatRoom_ChatMessageModified_Notification_ChatMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerTimestampFieldNumber = 1,
    kOrdinalFieldNumber = 2,
    kDeletedFieldNumber = 3,
  };
  // optional uint32 server_timestamp = 1;
  bool has_server_timestamp() const;
  private:
  bool _internal_has_server_timestamp() const;
  public:
  void clear_server_timestamp();
  uint32_t server_timestamp() const;
  void set_server_timestamp(uint32_t value);
  private:
  uint32_t _internal_server_timestamp() const;
  void _internal_set_server_timestamp(uint32_t value);
  public:

  // optional uint32 ordinal = 2;
  bool has_ordinal() const;
  private:
  bool _internal_has_ordinal() const;
  public:
  void clear_ordinal();
  uint32_t ordinal() const;
  void set_ordinal(uint32_t value);
  private:
  uint32_t _internal_ordinal() const;
  void _internal_set_ordinal(uint32_t value);
  public:

  // optional bool deleted = 3;
  bool has_deleted() const;
  private:
  bool _internal_has_deleted() const;
  public:
  void clear_deleted();
  bool deleted() const;
  void set_deleted(bool value);
  private:
  bool _internal_deleted() const;
  void _internal_set_deleted(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_ChatMessageModified_Notification.ChatMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t server_timestamp_;
  uint32_t ordinal_;
  bool deleted_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_ChatMessageModified_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ChatMessageModified_Notification) */ {
 public:
  inline CChatRoom_ChatMessageModified_Notification() : CChatRoom_ChatMessageModified_Notification(nullptr) {}
  ~CChatRoom_ChatMessageModified_Notification() override;
  explicit constexpr CChatRoom_ChatMessageModified_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_ChatMessageModified_Notification(const CChatRoom_ChatMessageModified_Notification& from);
  CChatRoom_ChatMessageModified_Notification(CChatRoom_ChatMessageModified_Notification&& from) noexcept
    : CChatRoom_ChatMessageModified_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ChatMessageModified_Notification& operator=(const CChatRoom_ChatMessageModified_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_ChatMessageModified_Notification& operator=(CChatRoom_ChatMessageModified_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_ChatMessageModified_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_ChatMessageModified_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ChatMessageModified_Notification*>(
               &_CChatRoom_ChatMessageModified_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    132;

  friend void swap(CChatRoom_ChatMessageModified_Notification& a, CChatRoom_ChatMessageModified_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_ChatMessageModified_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_ChatMessageModified_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_ChatMessageModified_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_ChatMessageModified_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_ChatMessageModified_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_ChatMessageModified_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ChatMessageModified_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_ChatMessageModified_Notification";
  }
  protected:
  explicit CChatRoom_ChatMessageModified_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoom_ChatMessageModified_Notification_ChatMessage ChatMessage;

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 3,
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
  };
  // repeated .CChatRoom_ChatMessageModified_Notification.ChatMessage messages = 3;
  int messages_size() const;
  private:
  int _internal_messages_size() const;
  public:
  void clear_messages();
  ::CChatRoom_ChatMessageModified_Notification_ChatMessage* mutable_messages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_ChatMessageModified_Notification_ChatMessage >*
      mutable_messages();
  private:
  const ::CChatRoom_ChatMessageModified_Notification_ChatMessage& _internal_messages(int index) const;
  ::CChatRoom_ChatMessageModified_Notification_ChatMessage* _internal_add_messages();
  public:
  const ::CChatRoom_ChatMessageModified_Notification_ChatMessage& messages(int index) const;
  ::CChatRoom_ChatMessageModified_Notification_ChatMessage* add_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_ChatMessageModified_Notification_ChatMessage >&
      messages() const;

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_ChatMessageModified_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_ChatMessageModified_Notification_ChatMessage > messages_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_MemberStateChange_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_MemberStateChange_Notification) */ {
 public:
  inline CChatRoom_MemberStateChange_Notification() : CChatRoom_MemberStateChange_Notification(nullptr) {}
  ~CChatRoom_MemberStateChange_Notification() override;
  explicit constexpr CChatRoom_MemberStateChange_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_MemberStateChange_Notification(const CChatRoom_MemberStateChange_Notification& from);
  CChatRoom_MemberStateChange_Notification(CChatRoom_MemberStateChange_Notification&& from) noexcept
    : CChatRoom_MemberStateChange_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_MemberStateChange_Notification& operator=(const CChatRoom_MemberStateChange_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_MemberStateChange_Notification& operator=(CChatRoom_MemberStateChange_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_MemberStateChange_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_MemberStateChange_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_MemberStateChange_Notification*>(
               &_CChatRoom_MemberStateChange_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    133;

  friend void swap(CChatRoom_MemberStateChange_Notification& a, CChatRoom_MemberStateChange_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_MemberStateChange_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_MemberStateChange_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_MemberStateChange_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_MemberStateChange_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_MemberStateChange_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_MemberStateChange_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_MemberStateChange_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_MemberStateChange_Notification";
  }
  protected:
  explicit CChatRoom_MemberStateChange_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMemberFieldNumber = 2,
    kChatGroupIdFieldNumber = 1,
    kChangeFieldNumber = 3,
  };
  // optional .CChatRoomMember member = 2;
  bool has_member() const;
  private:
  bool _internal_has_member() const;
  public:
  void clear_member();
  const ::CChatRoomMember& member() const;
  PROTOBUF_NODISCARD ::CChatRoomMember* release_member();
  ::CChatRoomMember* mutable_member();
  void set_allocated_member(::CChatRoomMember* member);
  private:
  const ::CChatRoomMember& _internal_member() const;
  ::CChatRoomMember* _internal_mutable_member();
  public:
  void unsafe_arena_set_allocated_member(
      ::CChatRoomMember* member);
  ::CChatRoomMember* unsafe_arena_release_member();

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional .EChatRoomMemberStateChange change = 3 [default = k_EChatRoomMemberStateChange_Invalid];
  bool has_change() const;
  private:
  bool _internal_has_change() const;
  public:
  void clear_change();
  ::EChatRoomMemberStateChange change() const;
  void set_change(::EChatRoomMemberStateChange value);
  private:
  ::EChatRoomMemberStateChange _internal_change() const;
  void _internal_set_change(::EChatRoomMemberStateChange value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_MemberStateChange_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CChatRoomMember* member_;
  uint64_t chat_group_id_;
  int change_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_ChatRoomHeaderState_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ChatRoomHeaderState_Notification) */ {
 public:
  inline CChatRoom_ChatRoomHeaderState_Notification() : CChatRoom_ChatRoomHeaderState_Notification(nullptr) {}
  ~CChatRoom_ChatRoomHeaderState_Notification() override;
  explicit constexpr CChatRoom_ChatRoomHeaderState_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_ChatRoomHeaderState_Notification(const CChatRoom_ChatRoomHeaderState_Notification& from);
  CChatRoom_ChatRoomHeaderState_Notification(CChatRoom_ChatRoomHeaderState_Notification&& from) noexcept
    : CChatRoom_ChatRoomHeaderState_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ChatRoomHeaderState_Notification& operator=(const CChatRoom_ChatRoomHeaderState_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_ChatRoomHeaderState_Notification& operator=(CChatRoom_ChatRoomHeaderState_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_ChatRoomHeaderState_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_ChatRoomHeaderState_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ChatRoomHeaderState_Notification*>(
               &_CChatRoom_ChatRoomHeaderState_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    134;

  friend void swap(CChatRoom_ChatRoomHeaderState_Notification& a, CChatRoom_ChatRoomHeaderState_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_ChatRoomHeaderState_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_ChatRoomHeaderState_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_ChatRoomHeaderState_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_ChatRoomHeaderState_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_ChatRoomHeaderState_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_ChatRoomHeaderState_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ChatRoomHeaderState_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_ChatRoomHeaderState_Notification";
  }
  protected:
  explicit CChatRoom_ChatRoomHeaderState_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderStateFieldNumber = 1,
  };
  // optional .CChatRoomGroupHeaderState header_state = 1;
  bool has_header_state() const;
  private:
  bool _internal_has_header_state() const;
  public:
  void clear_header_state();
  const ::CChatRoomGroupHeaderState& header_state() const;
  PROTOBUF_NODISCARD ::CChatRoomGroupHeaderState* release_header_state();
  ::CChatRoomGroupHeaderState* mutable_header_state();
  void set_allocated_header_state(::CChatRoomGroupHeaderState* header_state);
  private:
  const ::CChatRoomGroupHeaderState& _internal_header_state() const;
  ::CChatRoomGroupHeaderState* _internal_mutable_header_state();
  public:
  void unsafe_arena_set_allocated_header_state(
      ::CChatRoomGroupHeaderState* header_state);
  ::CChatRoomGroupHeaderState* unsafe_arena_release_header_state();

  // @@protoc_insertion_point(class_scope:CChatRoom_ChatRoomHeaderState_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CChatRoomGroupHeaderState* header_state_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_ChatRoomGroupRoomsChange_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_ChatRoomGroupRoomsChange_Notification) */ {
 public:
  inline CChatRoom_ChatRoomGroupRoomsChange_Notification() : CChatRoom_ChatRoomGroupRoomsChange_Notification(nullptr) {}
  ~CChatRoom_ChatRoomGroupRoomsChange_Notification() override;
  explicit constexpr CChatRoom_ChatRoomGroupRoomsChange_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_ChatRoomGroupRoomsChange_Notification(const CChatRoom_ChatRoomGroupRoomsChange_Notification& from);
  CChatRoom_ChatRoomGroupRoomsChange_Notification(CChatRoom_ChatRoomGroupRoomsChange_Notification&& from) noexcept
    : CChatRoom_ChatRoomGroupRoomsChange_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_ChatRoomGroupRoomsChange_Notification& operator=(const CChatRoom_ChatRoomGroupRoomsChange_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_ChatRoomGroupRoomsChange_Notification& operator=(CChatRoom_ChatRoomGroupRoomsChange_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_ChatRoomGroupRoomsChange_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_ChatRoomGroupRoomsChange_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_ChatRoomGroupRoomsChange_Notification*>(
               &_CChatRoom_ChatRoomGroupRoomsChange_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    135;

  friend void swap(CChatRoom_ChatRoomGroupRoomsChange_Notification& a, CChatRoom_ChatRoomGroupRoomsChange_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_ChatRoomGroupRoomsChange_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_ChatRoomGroupRoomsChange_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_ChatRoomGroupRoomsChange_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_ChatRoomGroupRoomsChange_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_ChatRoomGroupRoomsChange_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_ChatRoomGroupRoomsChange_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_ChatRoomGroupRoomsChange_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_ChatRoomGroupRoomsChange_Notification";
  }
  protected:
  explicit CChatRoom_ChatRoomGroupRoomsChange_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatRoomsFieldNumber = 3,
    kChatGroupIdFieldNumber = 1,
    kDefaultChatIdFieldNumber = 2,
  };
  // repeated .CChatRoomState chat_rooms = 3;
  int chat_rooms_size() const;
  private:
  int _internal_chat_rooms_size() const;
  public:
  void clear_chat_rooms();
  ::CChatRoomState* mutable_chat_rooms(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState >*
      mutable_chat_rooms();
  private:
  const ::CChatRoomState& _internal_chat_rooms(int index) const;
  ::CChatRoomState* _internal_add_chat_rooms();
  public:
  const ::CChatRoomState& chat_rooms(int index) const;
  ::CChatRoomState* add_chat_rooms();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState >&
      chat_rooms() const;

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 default_chat_id = 2;
  bool has_default_chat_id() const;
  private:
  bool _internal_has_default_chat_id() const;
  public:
  void clear_default_chat_id();
  uint64_t default_chat_id() const;
  void set_default_chat_id(uint64_t value);
  private:
  uint64_t _internal_default_chat_id() const;
  void _internal_set_default_chat_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_ChatRoomGroupRoomsChange_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState > chat_rooms_;
  uint64_t chat_group_id_;
  uint64_t default_chat_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification) */ {
 public:
  inline CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification() : CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification(nullptr) {}
  ~CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification() override;
  explicit constexpr CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification(const CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& from);
  CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification(CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification&& from) noexcept
    : CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& operator=(const CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& operator=(CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification*>(
               &_CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    136;

  friend void swap(CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& a, CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification";
  }
  protected:
  explicit CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatIdFieldNumber = 1,
    kChatGroupIdFieldNumber = 2,
  };
  // optional uint64 chat_id = 1;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional uint64 chat_group_id = 2;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t chat_id_;
  uint64_t chat_group_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class ChatRoomClient_NotifyChatGroupUserStateChanged_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification) */ {
 public:
  inline ChatRoomClient_NotifyChatGroupUserStateChanged_Notification() : ChatRoomClient_NotifyChatGroupUserStateChanged_Notification(nullptr) {}
  ~ChatRoomClient_NotifyChatGroupUserStateChanged_Notification() override;
  explicit constexpr ChatRoomClient_NotifyChatGroupUserStateChanged_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ChatRoomClient_NotifyChatGroupUserStateChanged_Notification(const ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& from);
  ChatRoomClient_NotifyChatGroupUserStateChanged_Notification(ChatRoomClient_NotifyChatGroupUserStateChanged_Notification&& from) noexcept
    : ChatRoomClient_NotifyChatGroupUserStateChanged_Notification() {
    *this = ::std::move(from);
  }

  inline ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& operator=(const ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& operator=(ChatRoomClient_NotifyChatGroupUserStateChanged_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* internal_default_instance() {
    return reinterpret_cast<const ChatRoomClient_NotifyChatGroupUserStateChanged_Notification*>(
               &_ChatRoomClient_NotifyChatGroupUserStateChanged_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    137;

  friend void swap(ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& a, ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChatRoomClient_NotifyChatGroupUserStateChanged_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ChatRoomClient_NotifyChatGroupUserStateChanged_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ChatRoomClient_NotifyChatGroupUserStateChanged_Notification";
  }
  protected:
  explicit ChatRoomClient_NotifyChatGroupUserStateChanged_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserChatGroupStateFieldNumber = 2,
    kGroupSummaryFieldNumber = 3,
    kChatGroupIdFieldNumber = 1,
    kUserActionFieldNumber = 4,
  };
  // optional .CUserChatRoomGroupState user_chat_group_state = 2;
  bool has_user_chat_group_state() const;
  private:
  bool _internal_has_user_chat_group_state() const;
  public:
  void clear_user_chat_group_state();
  const ::CUserChatRoomGroupState& user_chat_group_state() const;
  PROTOBUF_NODISCARD ::CUserChatRoomGroupState* release_user_chat_group_state();
  ::CUserChatRoomGroupState* mutable_user_chat_group_state();
  void set_allocated_user_chat_group_state(::CUserChatRoomGroupState* user_chat_group_state);
  private:
  const ::CUserChatRoomGroupState& _internal_user_chat_group_state() const;
  ::CUserChatRoomGroupState* _internal_mutable_user_chat_group_state();
  public:
  void unsafe_arena_set_allocated_user_chat_group_state(
      ::CUserChatRoomGroupState* user_chat_group_state);
  ::CUserChatRoomGroupState* unsafe_arena_release_user_chat_group_state();

  // optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 3;
  bool has_group_summary() const;
  private:
  bool _internal_has_group_summary() const;
  public:
  void clear_group_summary();
  const ::CChatRoom_GetChatRoomGroupSummary_Response& group_summary() const;
  PROTOBUF_NODISCARD ::CChatRoom_GetChatRoomGroupSummary_Response* release_group_summary();
  ::CChatRoom_GetChatRoomGroupSummary_Response* mutable_group_summary();
  void set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary);
  private:
  const ::CChatRoom_GetChatRoomGroupSummary_Response& _internal_group_summary() const;
  ::CChatRoom_GetChatRoomGroupSummary_Response* _internal_mutable_group_summary();
  public:
  void unsafe_arena_set_allocated_group_summary(
      ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary);
  ::CChatRoom_GetChatRoomGroupSummary_Response* unsafe_arena_release_group_summary();

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional .EChatRoomMemberStateChange user_action = 4 [default = k_EChatRoomMemberStateChange_Invalid];
  bool has_user_action() const;
  private:
  bool _internal_has_user_action() const;
  public:
  void clear_user_action();
  ::EChatRoomMemberStateChange user_action() const;
  void set_user_action(::EChatRoomMemberStateChange value);
  private:
  ::EChatRoomMemberStateChange _internal_user_action() const;
  void _internal_set_user_action(::EChatRoomMemberStateChange value);
  public:

  // @@protoc_insertion_point(class_scope:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CUserChatRoomGroupState* user_chat_group_state_;
  ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary_;
  uint64_t chat_group_id_;
  int user_action_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class ChatRoomClient_NotifyChatRoomDisconnect_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ChatRoomClient_NotifyChatRoomDisconnect_Notification) */ {
 public:
  inline ChatRoomClient_NotifyChatRoomDisconnect_Notification() : ChatRoomClient_NotifyChatRoomDisconnect_Notification(nullptr) {}
  ~ChatRoomClient_NotifyChatRoomDisconnect_Notification() override;
  explicit constexpr ChatRoomClient_NotifyChatRoomDisconnect_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ChatRoomClient_NotifyChatRoomDisconnect_Notification(const ChatRoomClient_NotifyChatRoomDisconnect_Notification& from);
  ChatRoomClient_NotifyChatRoomDisconnect_Notification(ChatRoomClient_NotifyChatRoomDisconnect_Notification&& from) noexcept
    : ChatRoomClient_NotifyChatRoomDisconnect_Notification() {
    *this = ::std::move(from);
  }

  inline ChatRoomClient_NotifyChatRoomDisconnect_Notification& operator=(const ChatRoomClient_NotifyChatRoomDisconnect_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChatRoomClient_NotifyChatRoomDisconnect_Notification& operator=(ChatRoomClient_NotifyChatRoomDisconnect_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChatRoomClient_NotifyChatRoomDisconnect_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChatRoomClient_NotifyChatRoomDisconnect_Notification* internal_default_instance() {
    return reinterpret_cast<const ChatRoomClient_NotifyChatRoomDisconnect_Notification*>(
               &_ChatRoomClient_NotifyChatRoomDisconnect_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    138;

  friend void swap(ChatRoomClient_NotifyChatRoomDisconnect_Notification& a, ChatRoomClient_NotifyChatRoomDisconnect_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(ChatRoomClient_NotifyChatRoomDisconnect_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChatRoomClient_NotifyChatRoomDisconnect_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChatRoomClient_NotifyChatRoomDisconnect_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChatRoomClient_NotifyChatRoomDisconnect_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ChatRoomClient_NotifyChatRoomDisconnect_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ChatRoomClient_NotifyChatRoomDisconnect_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChatRoomClient_NotifyChatRoomDisconnect_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ChatRoomClient_NotifyChatRoomDisconnect_Notification";
  }
  protected:
  explicit ChatRoomClient_NotifyChatRoomDisconnect_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatGroupIdsFieldNumber = 1,
  };
  // repeated uint64 chat_group_ids = 1;
  int chat_group_ids_size() const;
  private:
  int _internal_chat_group_ids_size() const;
  public:
  void clear_chat_group_ids();
  private:
  uint64_t _internal_chat_group_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_chat_group_ids() const;
  void _internal_add_chat_group_ids(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_chat_group_ids();
  public:
  uint64_t chat_group_ids(int index) const;
  void set_chat_group_ids(int index, uint64_t value);
  void add_chat_group_ids(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      chat_group_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_chat_group_ids();

  // @@protoc_insertion_point(class_scope:ChatRoomClient_NotifyChatRoomDisconnect_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > chat_group_ids_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoomMemberListView final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoomMemberListView) */ {
 public:
  inline CChatRoomMemberListView() : CChatRoomMemberListView(nullptr) {}
  ~CChatRoomMemberListView() override;
  explicit constexpr CChatRoomMemberListView(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoomMemberListView(const CChatRoomMemberListView& from);
  CChatRoomMemberListView(CChatRoomMemberListView&& from) noexcept
    : CChatRoomMemberListView() {
    *this = ::std::move(from);
  }

  inline CChatRoomMemberListView& operator=(const CChatRoomMemberListView& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoomMemberListView& operator=(CChatRoomMemberListView&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoomMemberListView& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoomMemberListView* internal_default_instance() {
    return reinterpret_cast<const CChatRoomMemberListView*>(
               &_CChatRoomMemberListView_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    139;

  friend void swap(CChatRoomMemberListView& a, CChatRoomMemberListView& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoomMemberListView* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoomMemberListView* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoomMemberListView* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoomMemberListView>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoomMemberListView& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoomMemberListView& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomMemberListView* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoomMemberListView";
  }
  protected:
  explicit CChatRoomMemberListView(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartFieldNumber = 3,
    kEndFieldNumber = 4,
    kTotalCountFieldNumber = 5,
    kClientChangenumberFieldNumber = 6,
    kServerChangenumberFieldNumber = 7,
  };
  // optional int32 start = 3;
  bool has_start() const;
  private:
  bool _internal_has_start() const;
  public:
  void clear_start();
  int32_t start() const;
  void set_start(int32_t value);
  private:
  int32_t _internal_start() const;
  void _internal_set_start(int32_t value);
  public:

  // optional int32 end = 4;
  bool has_end() const;
  private:
  bool _internal_has_end() const;
  public:
  void clear_end();
  int32_t end() const;
  void set_end(int32_t value);
  private:
  int32_t _internal_end() const;
  void _internal_set_end(int32_t value);
  public:

  // optional int32 total_count = 5;
  bool has_total_count() const;
  private:
  bool _internal_has_total_count() const;
  public:
  void clear_total_count();
  int32_t total_count() const;
  void set_total_count(int32_t value);
  private:
  int32_t _internal_total_count() const;
  void _internal_set_total_count(int32_t value);
  public:

  // optional int32 client_changenumber = 6 [(.description) = "Value sent by the client on the last UpdateMemberListView call. "];
  bool has_client_changenumber() const;
  private:
  bool _internal_has_client_changenumber() const;
  public:
  void clear_client_changenumber();
  int32_t client_changenumber() const;
  void set_client_changenumber(int32_t value);
  private:
  int32_t _internal_client_changenumber() const;
  void _internal_set_client_changenumber(int32_t value);
  public:

  // optional int32 server_changenumber = 7 [(.description) = "Value incremented by the server on each MemberListViewUpdated call. "];
  bool has_server_changenumber() const;
  private:
  bool _internal_has_server_changenumber() const;
  public:
  void clear_server_changenumber();
  int32_t server_changenumber() const;
  void set_server_changenumber(int32_t value);
  private:
  int32_t _internal_server_changenumber() const;
  void _internal_set_server_changenumber(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoomMemberListView)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int32_t start_;
  int32_t end_;
  int32_t total_count_;
  int32_t client_changenumber_;
  int32_t server_changenumber_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoomMemberSummaryCounts final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoomMemberSummaryCounts) */ {
 public:
  inline CChatRoomMemberSummaryCounts() : CChatRoomMemberSummaryCounts(nullptr) {}
  ~CChatRoomMemberSummaryCounts() override;
  explicit constexpr CChatRoomMemberSummaryCounts(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoomMemberSummaryCounts(const CChatRoomMemberSummaryCounts& from);
  CChatRoomMemberSummaryCounts(CChatRoomMemberSummaryCounts&& from) noexcept
    : CChatRoomMemberSummaryCounts() {
    *this = ::std::move(from);
  }

  inline CChatRoomMemberSummaryCounts& operator=(const CChatRoomMemberSummaryCounts& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoomMemberSummaryCounts& operator=(CChatRoomMemberSummaryCounts&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoomMemberSummaryCounts& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoomMemberSummaryCounts* internal_default_instance() {
    return reinterpret_cast<const CChatRoomMemberSummaryCounts*>(
               &_CChatRoomMemberSummaryCounts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    140;

  friend void swap(CChatRoomMemberSummaryCounts& a, CChatRoomMemberSummaryCounts& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoomMemberSummaryCounts* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoomMemberSummaryCounts* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoomMemberSummaryCounts* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoomMemberSummaryCounts>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoomMemberSummaryCounts& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoomMemberSummaryCounts& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomMemberSummaryCounts* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoomMemberSummaryCounts";
  }
  protected:
  explicit CChatRoomMemberSummaryCounts(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIngameFieldNumber = 1,
    kOnlineFieldNumber = 2,
    kOfflineFieldNumber = 3,
  };
  // optional int32 ingame = 1;
  bool has_ingame() const;
  private:
  bool _internal_has_ingame() const;
  public:
  void clear_ingame();
  int32_t ingame() const;
  void set_ingame(int32_t value);
  private:
  int32_t _internal_ingame() const;
  void _internal_set_ingame(int32_t value);
  public:

  // optional int32 online = 2;
  bool has_online() const;
  private:
  bool _internal_has_online() const;
  public:
  void clear_online();
  int32_t online() const;
  void set_online(int32_t value);
  private:
  int32_t _internal_online() const;
  void _internal_set_online(int32_t value);
  public:

  // optional int32 offline = 3;
  bool has_offline() const;
  private:
  bool _internal_has_offline() const;
  public:
  void clear_offline();
  int32_t offline() const;
  void set_offline(int32_t value);
  private:
  int32_t _internal_offline() const;
  void _internal_set_offline(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoomMemberSummaryCounts)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int32_t ingame_;
  int32_t online_;
  int32_t offline_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoomClient_MemberListViewUpdated_Notification.MemberListViewEntry) */ {
 public:
  inline CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry() : CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry(nullptr) {}
  ~CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry() override;
  explicit constexpr CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry(const CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry& from);
  CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry(CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry&& from) noexcept
    : CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry() {
    *this = ::std::move(from);
  }

  inline CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry& operator=(const CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry& operator=(CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry* internal_default_instance() {
    return reinterpret_cast<const CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry*>(
               &_CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    141;

  friend void swap(CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry& a, CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoomClient_MemberListViewUpdated_Notification.MemberListViewEntry";
  }
  protected:
  explicit CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPersonaFieldNumber = 3,
    kRankFieldNumber = 1,
    kAccountidFieldNumber = 2,
  };
  // optional .CMsgClientPersonaState.Friend persona = 3;
  bool has_persona() const;
  private:
  bool _internal_has_persona() const;
  public:
  void clear_persona();
  const ::CMsgClientPersonaState_Friend& persona() const;
  PROTOBUF_NODISCARD ::CMsgClientPersonaState_Friend* release_persona();
  ::CMsgClientPersonaState_Friend* mutable_persona();
  void set_allocated_persona(::CMsgClientPersonaState_Friend* persona);
  private:
  const ::CMsgClientPersonaState_Friend& _internal_persona() const;
  ::CMsgClientPersonaState_Friend* _internal_mutable_persona();
  public:
  void unsafe_arena_set_allocated_persona(
      ::CMsgClientPersonaState_Friend* persona);
  ::CMsgClientPersonaState_Friend* unsafe_arena_release_persona();

  // optional int32 rank = 1;
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  int32_t rank() const;
  void set_rank(int32_t value);
  private:
  int32_t _internal_rank() const;
  void _internal_set_rank(int32_t value);
  public:

  // optional uint32 accountid = 2;
  bool has_accountid() const;
  private:
  bool _internal_has_accountid() const;
  public:
  void clear_accountid();
  uint32_t accountid() const;
  void set_accountid(uint32_t value);
  private:
  uint32_t _internal_accountid() const;
  void _internal_set_accountid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoomClient_MemberListViewUpdated_Notification.MemberListViewEntry)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgClientPersonaState_Friend* persona_;
  int32_t rank_;
  uint32_t accountid_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoomClient_MemberListViewUpdated_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoomClient_MemberListViewUpdated_Notification) */ {
 public:
  inline CChatRoomClient_MemberListViewUpdated_Notification() : CChatRoomClient_MemberListViewUpdated_Notification(nullptr) {}
  ~CChatRoomClient_MemberListViewUpdated_Notification() override;
  explicit constexpr CChatRoomClient_MemberListViewUpdated_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoomClient_MemberListViewUpdated_Notification(const CChatRoomClient_MemberListViewUpdated_Notification& from);
  CChatRoomClient_MemberListViewUpdated_Notification(CChatRoomClient_MemberListViewUpdated_Notification&& from) noexcept
    : CChatRoomClient_MemberListViewUpdated_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoomClient_MemberListViewUpdated_Notification& operator=(const CChatRoomClient_MemberListViewUpdated_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoomClient_MemberListViewUpdated_Notification& operator=(CChatRoomClient_MemberListViewUpdated_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoomClient_MemberListViewUpdated_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoomClient_MemberListViewUpdated_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoomClient_MemberListViewUpdated_Notification*>(
               &_CChatRoomClient_MemberListViewUpdated_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    142;

  friend void swap(CChatRoomClient_MemberListViewUpdated_Notification& a, CChatRoomClient_MemberListViewUpdated_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoomClient_MemberListViewUpdated_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoomClient_MemberListViewUpdated_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoomClient_MemberListViewUpdated_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoomClient_MemberListViewUpdated_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoomClient_MemberListViewUpdated_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoomClient_MemberListViewUpdated_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoomClient_MemberListViewUpdated_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoomClient_MemberListViewUpdated_Notification";
  }
  protected:
  explicit CChatRoomClient_MemberListViewUpdated_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry MemberListViewEntry;

  // accessors -------------------------------------------------------

  enum : int {
    kMembersFieldNumber = 4,
    kSubscribedPersonasFieldNumber = 7,
    kViewFieldNumber = 3,
    kMemberSummaryFieldNumber = 6,
    kChatGroupIdFieldNumber = 1,
    kViewIdFieldNumber = 2,
    kStatusFlagsFieldNumber = 5,
  };
  // repeated .CChatRoomClient_MemberListViewUpdated_Notification.MemberListViewEntry members = 4;
  int members_size() const;
  private:
  int _internal_members_size() const;
  public:
  void clear_members();
  ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry* mutable_members(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry >*
      mutable_members();
  private:
  const ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry& _internal_members(int index) const;
  ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry* _internal_add_members();
  public:
  const ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry& members(int index) const;
  ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry* add_members();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry >&
      members() const;

  // repeated .CMsgClientPersonaState.Friend subscribed_personas = 7;
  int subscribed_personas_size() const;
  private:
  int _internal_subscribed_personas_size() const;
  public:
  void clear_subscribed_personas();
  ::CMsgClientPersonaState_Friend* mutable_subscribed_personas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientPersonaState_Friend >*
      mutable_subscribed_personas();
  private:
  const ::CMsgClientPersonaState_Friend& _internal_subscribed_personas(int index) const;
  ::CMsgClientPersonaState_Friend* _internal_add_subscribed_personas();
  public:
  const ::CMsgClientPersonaState_Friend& subscribed_personas(int index) const;
  ::CMsgClientPersonaState_Friend* add_subscribed_personas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientPersonaState_Friend >&
      subscribed_personas() const;

  // optional .CChatRoomMemberListView view = 3;
  bool has_view() const;
  private:
  bool _internal_has_view() const;
  public:
  void clear_view();
  const ::CChatRoomMemberListView& view() const;
  PROTOBUF_NODISCARD ::CChatRoomMemberListView* release_view();
  ::CChatRoomMemberListView* mutable_view();
  void set_allocated_view(::CChatRoomMemberListView* view);
  private:
  const ::CChatRoomMemberListView& _internal_view() const;
  ::CChatRoomMemberListView* _internal_mutable_view();
  public:
  void unsafe_arena_set_allocated_view(
      ::CChatRoomMemberListView* view);
  ::CChatRoomMemberListView* unsafe_arena_release_view();

  // optional .CChatRoomMemberSummaryCounts member_summary = 6;
  bool has_member_summary() const;
  private:
  bool _internal_has_member_summary() const;
  public:
  void clear_member_summary();
  const ::CChatRoomMemberSummaryCounts& member_summary() const;
  PROTOBUF_NODISCARD ::CChatRoomMemberSummaryCounts* release_member_summary();
  ::CChatRoomMemberSummaryCounts* mutable_member_summary();
  void set_allocated_member_summary(::CChatRoomMemberSummaryCounts* member_summary);
  private:
  const ::CChatRoomMemberSummaryCounts& _internal_member_summary() const;
  ::CChatRoomMemberSummaryCounts* _internal_mutable_member_summary();
  public:
  void unsafe_arena_set_allocated_member_summary(
      ::CChatRoomMemberSummaryCounts* member_summary);
  ::CChatRoomMemberSummaryCounts* unsafe_arena_release_member_summary();

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 view_id = 2 [(.description) = "Thew view_id supplied when the client created the view. "];
  bool has_view_id() const;
  private:
  bool _internal_has_view_id() const;
  public:
  void clear_view_id();
  uint64_t view_id() const;
  void set_view_id(uint64_t value);
  private:
  uint64_t _internal_view_id() const;
  void _internal_set_view_id(uint64_t value);
  public:

  // optional uint32 status_flags = 5;
  bool has_status_flags() const;
  private:
  bool _internal_has_status_flags() const;
  public:
  void clear_status_flags();
  uint32_t status_flags() const;
  void set_status_flags(uint32_t value);
  private:
  uint32_t _internal_status_flags() const;
  void _internal_set_status_flags(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoomClient_MemberListViewUpdated_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry > members_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientPersonaState_Friend > subscribed_personas_;
  ::CChatRoomMemberListView* view_;
  ::CChatRoomMemberSummaryCounts* member_summary_;
  uint64_t chat_group_id_;
  uint64_t view_id_;
  uint32_t status_flags_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatRoom_MessageReaction_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatRoom_MessageReaction_Notification) */ {
 public:
  inline CChatRoom_MessageReaction_Notification() : CChatRoom_MessageReaction_Notification(nullptr) {}
  ~CChatRoom_MessageReaction_Notification() override;
  explicit constexpr CChatRoom_MessageReaction_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatRoom_MessageReaction_Notification(const CChatRoom_MessageReaction_Notification& from);
  CChatRoom_MessageReaction_Notification(CChatRoom_MessageReaction_Notification&& from) noexcept
    : CChatRoom_MessageReaction_Notification() {
    *this = ::std::move(from);
  }

  inline CChatRoom_MessageReaction_Notification& operator=(const CChatRoom_MessageReaction_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatRoom_MessageReaction_Notification& operator=(CChatRoom_MessageReaction_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatRoom_MessageReaction_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatRoom_MessageReaction_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatRoom_MessageReaction_Notification*>(
               &_CChatRoom_MessageReaction_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    143;

  friend void swap(CChatRoom_MessageReaction_Notification& a, CChatRoom_MessageReaction_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatRoom_MessageReaction_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatRoom_MessageReaction_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatRoom_MessageReaction_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatRoom_MessageReaction_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatRoom_MessageReaction_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatRoom_MessageReaction_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatRoom_MessageReaction_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatRoom_MessageReaction_Notification";
  }
  protected:
  explicit CChatRoom_MessageReaction_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReactionFieldNumber = 7,
    kChatGroupIdFieldNumber = 1,
    kChatIdFieldNumber = 2,
    kServerTimestampFieldNumber = 3,
    kOrdinalFieldNumber = 4,
    kReactorFieldNumber = 5,
    kReactionTypeFieldNumber = 6,
    kIsAddFieldNumber = 8,
  };
  // optional string reaction = 7;
  bool has_reaction() const;
  private:
  bool _internal_has_reaction() const;
  public:
  void clear_reaction();
  const std::string& reaction() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_reaction(ArgT0&& arg0, ArgT... args);
  std::string* mutable_reaction();
  PROTOBUF_NODISCARD std::string* release_reaction();
  void set_allocated_reaction(std::string* reaction);
  private:
  const std::string& _internal_reaction() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reaction(const std::string& value);
  std::string* _internal_mutable_reaction();
  public:

  // optional uint64 chat_group_id = 1;
  bool has_chat_group_id() const;
  private:
  bool _internal_has_chat_group_id() const;
  public:
  void clear_chat_group_id();
  uint64_t chat_group_id() const;
  void set_chat_group_id(uint64_t value);
  private:
  uint64_t _internal_chat_group_id() const;
  void _internal_set_chat_group_id(uint64_t value);
  public:

  // optional uint64 chat_id = 2;
  bool has_chat_id() const;
  private:
  bool _internal_has_chat_id() const;
  public:
  void clear_chat_id();
  uint64_t chat_id() const;
  void set_chat_id(uint64_t value);
  private:
  uint64_t _internal_chat_id() const;
  void _internal_set_chat_id(uint64_t value);
  public:

  // optional uint32 server_timestamp = 3;
  bool has_server_timestamp() const;
  private:
  bool _internal_has_server_timestamp() const;
  public:
  void clear_server_timestamp();
  uint32_t server_timestamp() const;
  void set_server_timestamp(uint32_t value);
  private:
  uint32_t _internal_server_timestamp() const;
  void _internal_set_server_timestamp(uint32_t value);
  public:

  // optional uint32 ordinal = 4;
  bool has_ordinal() const;
  private:
  bool _internal_has_ordinal() const;
  public:
  void clear_ordinal();
  uint32_t ordinal() const;
  void set_ordinal(uint32_t value);
  private:
  uint32_t _internal_ordinal() const;
  void _internal_set_ordinal(uint32_t value);
  public:

  // optional fixed64 reactor = 5;
  bool has_reactor() const;
  private:
  bool _internal_has_reactor() const;
  public:
  void clear_reactor();
  uint64_t reactor() const;
  void set_reactor(uint64_t value);
  private:
  uint64_t _internal_reactor() const;
  void _internal_set_reactor(uint64_t value);
  public:

  // optional .EChatRoomMessageReactionType reaction_type = 6 [default = k_EChatRoomMessageReactionType_Invalid];
  bool has_reaction_type() const;
  private:
  bool _internal_has_reaction_type() const;
  public:
  void clear_reaction_type();
  ::EChatRoomMessageReactionType reaction_type() const;
  void set_reaction_type(::EChatRoomMessageReactionType value);
  private:
  ::EChatRoomMessageReactionType _internal_reaction_type() const;
  void _internal_set_reaction_type(::EChatRoomMessageReactionType value);
  public:

  // optional bool is_add = 8;
  bool has_is_add() const;
  private:
  bool _internal_has_is_add() const;
  public:
  void clear_is_add();
  bool is_add() const;
  void set_is_add(bool value);
  private:
  bool _internal_is_add() const;
  void _internal_set_is_add(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatRoom_MessageReaction_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reaction_;
  uint64_t chat_group_id_;
  uint64_t chat_id_;
  uint32_t server_timestamp_;
  uint32_t ordinal_;
  uint64_t reactor_;
  int reaction_type_;
  bool is_add_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatUsability_ClientUsabilityMetrics_Notification_Settings final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatUsability_ClientUsabilityMetrics_Notification.Settings) */ {
 public:
  inline CChatUsability_ClientUsabilityMetrics_Notification_Settings() : CChatUsability_ClientUsabilityMetrics_Notification_Settings(nullptr) {}
  ~CChatUsability_ClientUsabilityMetrics_Notification_Settings() override;
  explicit constexpr CChatUsability_ClientUsabilityMetrics_Notification_Settings(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatUsability_ClientUsabilityMetrics_Notification_Settings(const CChatUsability_ClientUsabilityMetrics_Notification_Settings& from);
  CChatUsability_ClientUsabilityMetrics_Notification_Settings(CChatUsability_ClientUsabilityMetrics_Notification_Settings&& from) noexcept
    : CChatUsability_ClientUsabilityMetrics_Notification_Settings() {
    *this = ::std::move(from);
  }

  inline CChatUsability_ClientUsabilityMetrics_Notification_Settings& operator=(const CChatUsability_ClientUsabilityMetrics_Notification_Settings& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatUsability_ClientUsabilityMetrics_Notification_Settings& operator=(CChatUsability_ClientUsabilityMetrics_Notification_Settings&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatUsability_ClientUsabilityMetrics_Notification_Settings& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatUsability_ClientUsabilityMetrics_Notification_Settings* internal_default_instance() {
    return reinterpret_cast<const CChatUsability_ClientUsabilityMetrics_Notification_Settings*>(
               &_CChatUsability_ClientUsabilityMetrics_Notification_Settings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    144;

  friend void swap(CChatUsability_ClientUsabilityMetrics_Notification_Settings& a, CChatUsability_ClientUsabilityMetrics_Notification_Settings& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatUsability_ClientUsabilityMetrics_Notification_Settings* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatUsability_ClientUsabilityMetrics_Notification_Settings* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatUsability_ClientUsabilityMetrics_Notification_Settings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_Settings>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatUsability_ClientUsabilityMetrics_Notification_Settings& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatUsability_ClientUsabilityMetrics_Notification_Settings& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatUsability_ClientUsabilityMetrics_Notification_Settings* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatUsability_ClientUsabilityMetrics_Notification.Settings";
  }
  protected:
  explicit CChatUsability_ClientUsabilityMetrics_Notification_Settings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNotificationsShowIngameFieldNumber = 1,
    kNotificationsShowOnlineFieldNumber = 2,
    kNotificationsShowMessageFieldNumber = 3,
    kNotificationsEventsAndAnnouncementsFieldNumber = 4,
    kSoundsPlayIngameFieldNumber = 5,
    kSoundsPlayOnlineFieldNumber = 6,
    kSoundsPlayMessageFieldNumber = 7,
    kSoundsEventsAndAnnouncementsFieldNumber = 8,
    kChatFlashModeFieldNumber = 11,
    kAlwaysNewChatWindowFieldNumber = 9,
    kForceAlphabeticFriendSortingFieldNumber = 10,
    kRememberOpenChatsFieldNumber = 12,
    kCompactQuickAccessFieldNumber = 13,
    kCompactFriendsListFieldNumber = 14,
    kNotificationsShowChatRoomNotificationFieldNumber = 15,
    kSoundsPlayChatRoomNotificationFieldNumber = 16,
    kHideOfflineFriendsInTagGroupsFieldNumber = 17,
    kChatFontSizeFieldNumber = 20,
    kHideCategorizedFriendsFieldNumber = 18,
    kCategorizeInGameFriendsByGameFieldNumber = 19,
    kUse24HourClockFieldNumber = 21,
    kDoNotDisturbModeFieldNumber = 22,
    kDisableEmbedInliningFieldNumber = 23,
    kSignIntoFriendsFieldNumber = 24,
    kAnimatedAvatarsFieldNumber = 25,
  };
  // optional bool notifications_show_ingame = 1;
  bool has_notifications_show_ingame() const;
  private:
  bool _internal_has_notifications_show_ingame() const;
  public:
  void clear_notifications_show_ingame();
  bool notifications_show_ingame() const;
  void set_notifications_show_ingame(bool value);
  private:
  bool _internal_notifications_show_ingame() const;
  void _internal_set_notifications_show_ingame(bool value);
  public:

  // optional bool notifications_show_online = 2;
  bool has_notifications_show_online() const;
  private:
  bool _internal_has_notifications_show_online() const;
  public:
  void clear_notifications_show_online();
  bool notifications_show_online() const;
  void set_notifications_show_online(bool value);
  private:
  bool _internal_notifications_show_online() const;
  void _internal_set_notifications_show_online(bool value);
  public:

  // optional bool notifications_show_message = 3;
  bool has_notifications_show_message() const;
  private:
  bool _internal_has_notifications_show_message() const;
  public:
  void clear_notifications_show_message();
  bool notifications_show_message() const;
  void set_notifications_show_message(bool value);
  private:
  bool _internal_notifications_show_message() const;
  void _internal_set_notifications_show_message(bool value);
  public:

  // optional bool notifications_events_and_announcements = 4;
  bool has_notifications_events_and_announcements() const;
  private:
  bool _internal_has_notifications_events_and_announcements() const;
  public:
  void clear_notifications_events_and_announcements();
  bool notifications_events_and_announcements() const;
  void set_notifications_events_and_announcements(bool value);
  private:
  bool _internal_notifications_events_and_announcements() const;
  void _internal_set_notifications_events_and_announcements(bool value);
  public:

  // optional bool sounds_play_ingame = 5;
  bool has_sounds_play_ingame() const;
  private:
  bool _internal_has_sounds_play_ingame() const;
  public:
  void clear_sounds_play_ingame();
  bool sounds_play_ingame() const;
  void set_sounds_play_ingame(bool value);
  private:
  bool _internal_sounds_play_ingame() const;
  void _internal_set_sounds_play_ingame(bool value);
  public:

  // optional bool sounds_play_online = 6;
  bool has_sounds_play_online() const;
  private:
  bool _internal_has_sounds_play_online() const;
  public:
  void clear_sounds_play_online();
  bool sounds_play_online() const;
  void set_sounds_play_online(bool value);
  private:
  bool _internal_sounds_play_online() const;
  void _internal_set_sounds_play_online(bool value);
  public:

  // optional bool sounds_play_message = 7;
  bool has_sounds_play_message() const;
  private:
  bool _internal_has_sounds_play_message() const;
  public:
  void clear_sounds_play_message();
  bool sounds_play_message() const;
  void set_sounds_play_message(bool value);
  private:
  bool _internal_sounds_play_message() const;
  void _internal_set_sounds_play_message(bool value);
  public:

  // optional bool sounds_events_and_announcements = 8;
  bool has_sounds_events_and_announcements() const;
  private:
  bool _internal_has_sounds_events_and_announcements() const;
  public:
  void clear_sounds_events_and_announcements();
  bool sounds_events_and_announcements() const;
  void set_sounds_events_and_announcements(bool value);
  private:
  bool _internal_sounds_events_and_announcements() const;
  void _internal_set_sounds_events_and_announcements(bool value);
  public:

  // optional int32 chat_flash_mode = 11;
  bool has_chat_flash_mode() const;
  private:
  bool _internal_has_chat_flash_mode() const;
  public:
  void clear_chat_flash_mode();
  int32_t chat_flash_mode() const;
  void set_chat_flash_mode(int32_t value);
  private:
  int32_t _internal_chat_flash_mode() const;
  void _internal_set_chat_flash_mode(int32_t value);
  public:

  // optional bool always_new_chat_window = 9;
  bool has_always_new_chat_window() const;
  private:
  bool _internal_has_always_new_chat_window() const;
  public:
  void clear_always_new_chat_window();
  bool always_new_chat_window() const;
  void set_always_new_chat_window(bool value);
  private:
  bool _internal_always_new_chat_window() const;
  void _internal_set_always_new_chat_window(bool value);
  public:

  // optional bool force_alphabetic_friend_sorting = 10;
  bool has_force_alphabetic_friend_sorting() const;
  private:
  bool _internal_has_force_alphabetic_friend_sorting() const;
  public:
  void clear_force_alphabetic_friend_sorting();
  bool force_alphabetic_friend_sorting() const;
  void set_force_alphabetic_friend_sorting(bool value);
  private:
  bool _internal_force_alphabetic_friend_sorting() const;
  void _internal_set_force_alphabetic_friend_sorting(bool value);
  public:

  // optional bool remember_open_chats = 12;
  bool has_remember_open_chats() const;
  private:
  bool _internal_has_remember_open_chats() const;
  public:
  void clear_remember_open_chats();
  bool remember_open_chats() const;
  void set_remember_open_chats(bool value);
  private:
  bool _internal_remember_open_chats() const;
  void _internal_set_remember_open_chats(bool value);
  public:

  // optional bool compact_quick_access = 13;
  bool has_compact_quick_access() const;
  private:
  bool _internal_has_compact_quick_access() const;
  public:
  void clear_compact_quick_access();
  bool compact_quick_access() const;
  void set_compact_quick_access(bool value);
  private:
  bool _internal_compact_quick_access() const;
  void _internal_set_compact_quick_access(bool value);
  public:

  // optional bool compact_friends_list = 14;
  bool has_compact_friends_list() const;
  private:
  bool _internal_has_compact_friends_list() const;
  public:
  void clear_compact_friends_list();
  bool compact_friends_list() const;
  void set_compact_friends_list(bool value);
  private:
  bool _internal_compact_friends_list() const;
  void _internal_set_compact_friends_list(bool value);
  public:

  // optional bool notifications_show_chat_room_notification = 15;
  bool has_notifications_show_chat_room_notification() const;
  private:
  bool _internal_has_notifications_show_chat_room_notification() const;
  public:
  void clear_notifications_show_chat_room_notification();
  bool notifications_show_chat_room_notification() const;
  void set_notifications_show_chat_room_notification(bool value);
  private:
  bool _internal_notifications_show_chat_room_notification() const;
  void _internal_set_notifications_show_chat_room_notification(bool value);
  public:

  // optional bool sounds_play_chat_room_notification = 16;
  bool has_sounds_play_chat_room_notification() const;
  private:
  bool _internal_has_sounds_play_chat_room_notification() const;
  public:
  void clear_sounds_play_chat_room_notification();
  bool sounds_play_chat_room_notification() const;
  void set_sounds_play_chat_room_notification(bool value);
  private:
  bool _internal_sounds_play_chat_room_notification() const;
  void _internal_set_sounds_play_chat_room_notification(bool value);
  public:

  // optional bool hide_offline_friends_in_tag_groups = 17;
  bool has_hide_offline_friends_in_tag_groups() const;
  private:
  bool _internal_has_hide_offline_friends_in_tag_groups() const;
  public:
  void clear_hide_offline_friends_in_tag_groups();
  bool hide_offline_friends_in_tag_groups() const;
  void set_hide_offline_friends_in_tag_groups(bool value);
  private:
  bool _internal_hide_offline_friends_in_tag_groups() const;
  void _internal_set_hide_offline_friends_in_tag_groups(bool value);
  public:

  // optional int32 chat_font_size = 20;
  bool has_chat_font_size() const;
  private:
  bool _internal_has_chat_font_size() const;
  public:
  void clear_chat_font_size();
  int32_t chat_font_size() const;
  void set_chat_font_size(int32_t value);
  private:
  int32_t _internal_chat_font_size() const;
  void _internal_set_chat_font_size(int32_t value);
  public:

  // optional bool hide_categorized_friends = 18;
  bool has_hide_categorized_friends() const;
  private:
  bool _internal_has_hide_categorized_friends() const;
  public:
  void clear_hide_categorized_friends();
  bool hide_categorized_friends() const;
  void set_hide_categorized_friends(bool value);
  private:
  bool _internal_hide_categorized_friends() const;
  void _internal_set_hide_categorized_friends(bool value);
  public:

  // optional bool categorize_in_game_friends_by_game = 19;
  bool has_categorize_in_game_friends_by_game() const;
  private:
  bool _internal_has_categorize_in_game_friends_by_game() const;
  public:
  void clear_categorize_in_game_friends_by_game();
  bool categorize_in_game_friends_by_game() const;
  void set_categorize_in_game_friends_by_game(bool value);
  private:
  bool _internal_categorize_in_game_friends_by_game() const;
  void _internal_set_categorize_in_game_friends_by_game(bool value);
  public:

  // optional bool use24hour_clock = 21;
  bool has_use24hour_clock() const;
  private:
  bool _internal_has_use24hour_clock() const;
  public:
  void clear_use24hour_clock();
  bool use24hour_clock() const;
  void set_use24hour_clock(bool value);
  private:
  bool _internal_use24hour_clock() const;
  void _internal_set_use24hour_clock(bool value);
  public:

  // optional bool do_not_disturb_mode = 22;
  bool has_do_not_disturb_mode() const;
  private:
  bool _internal_has_do_not_disturb_mode() const;
  public:
  void clear_do_not_disturb_mode();
  bool do_not_disturb_mode() const;
  void set_do_not_disturb_mode(bool value);
  private:
  bool _internal_do_not_disturb_mode() const;
  void _internal_set_do_not_disturb_mode(bool value);
  public:

  // optional bool disable_embed_inlining = 23;
  bool has_disable_embed_inlining() const;
  private:
  bool _internal_has_disable_embed_inlining() const;
  public:
  void clear_disable_embed_inlining();
  bool disable_embed_inlining() const;
  void set_disable_embed_inlining(bool value);
  private:
  bool _internal_disable_embed_inlining() const;
  void _internal_set_disable_embed_inlining(bool value);
  public:

  // optional bool sign_into_friends = 24;
  bool has_sign_into_friends() const;
  private:
  bool _internal_has_sign_into_friends() const;
  public:
  void clear_sign_into_friends();
  bool sign_into_friends() const;
  void set_sign_into_friends(bool value);
  private:
  bool _internal_sign_into_friends() const;
  void _internal_set_sign_into_friends(bool value);
  public:

  // optional bool animated_avatars = 25;
  bool has_animated_avatars() const;
  private:
  bool _internal_has_animated_avatars() const;
  public:
  void clear_animated_avatars();
  bool animated_avatars() const;
  void set_animated_avatars(bool value);
  private:
  bool _internal_animated_avatars() const;
  void _internal_set_animated_avatars(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatUsability_ClientUsabilityMetrics_Notification.Settings)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool notifications_show_ingame_;
  bool notifications_show_online_;
  bool notifications_show_message_;
  bool notifications_events_and_announcements_;
  bool sounds_play_ingame_;
  bool sounds_play_online_;
  bool sounds_play_message_;
  bool sounds_events_and_announcements_;
  int32_t chat_flash_mode_;
  bool always_new_chat_window_;
  bool force_alphabetic_friend_sorting_;
  bool remember_open_chats_;
  bool compact_quick_access_;
  bool compact_friends_list_;
  bool notifications_show_chat_room_notification_;
  bool sounds_play_chat_room_notification_;
  bool hide_offline_friends_in_tag_groups_;
  int32_t chat_font_size_;
  bool hide_categorized_friends_;
  bool categorize_in_game_friends_by_game_;
  bool use24hour_clock_;
  bool do_not_disturb_mode_;
  bool disable_embed_inlining_;
  bool sign_into_friends_;
  bool animated_avatars_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings) */ {
 public:
  inline CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings() : CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings(nullptr) {}
  ~CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings() override;
  explicit constexpr CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings(const CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& from);
  CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings(CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings&& from) noexcept
    : CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings() {
    *this = ::std::move(from);
  }

  inline CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& operator=(const CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& operator=(CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* internal_default_instance() {
    return reinterpret_cast<const CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings*>(
               &_CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    145;

  friend void swap(CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& a, CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings";
  }
  protected:
  explicit CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVoiceInputGainFieldNumber = 1,
    kVoiceOutputGainFieldNumber = 2,
    kNoiseGateLevelFieldNumber = 3,
    kVoiceUseEchoCancellationFieldNumber = 4,
    kVoiceUseNoiseCancellationFieldNumber = 5,
    kVoiceUseAutoGainControlFieldNumber = 6,
    kSelectedNonDefaultMicFieldNumber = 7,
    kSelectedNonDefaultOutputFieldNumber = 8,
    kPushToTalkEnabledFieldNumber = 9,
    kPushToMuteEnabledFieldNumber = 10,
    kPlayPttSoundsFieldNumber = 11,
  };
  // optional float voice_input_gain = 1;
  bool has_voice_input_gain() const;
  private:
  bool _internal_has_voice_input_gain() const;
  public:
  void clear_voice_input_gain();
  float voice_input_gain() const;
  void set_voice_input_gain(float value);
  private:
  float _internal_voice_input_gain() const;
  void _internal_set_voice_input_gain(float value);
  public:

  // optional float voice_output_gain = 2;
  bool has_voice_output_gain() const;
  private:
  bool _internal_has_voice_output_gain() const;
  public:
  void clear_voice_output_gain();
  float voice_output_gain() const;
  void set_voice_output_gain(float value);
  private:
  float _internal_voice_output_gain() const;
  void _internal_set_voice_output_gain(float value);
  public:

  // optional int32 noise_gate_level = 3;
  bool has_noise_gate_level() const;
  private:
  bool _internal_has_noise_gate_level() const;
  public:
  void clear_noise_gate_level();
  int32_t noise_gate_level() const;
  void set_noise_gate_level(int32_t value);
  private:
  int32_t _internal_noise_gate_level() const;
  void _internal_set_noise_gate_level(int32_t value);
  public:

  // optional bool voice_use_echo_cancellation = 4;
  bool has_voice_use_echo_cancellation() const;
  private:
  bool _internal_has_voice_use_echo_cancellation() const;
  public:
  void clear_voice_use_echo_cancellation();
  bool voice_use_echo_cancellation() const;
  void set_voice_use_echo_cancellation(bool value);
  private:
  bool _internal_voice_use_echo_cancellation() const;
  void _internal_set_voice_use_echo_cancellation(bool value);
  public:

  // optional bool voice_use_noise_cancellation = 5;
  bool has_voice_use_noise_cancellation() const;
  private:
  bool _internal_has_voice_use_noise_cancellation() const;
  public:
  void clear_voice_use_noise_cancellation();
  bool voice_use_noise_cancellation() const;
  void set_voice_use_noise_cancellation(bool value);
  private:
  bool _internal_voice_use_noise_cancellation() const;
  void _internal_set_voice_use_noise_cancellation(bool value);
  public:

  // optional bool voice_use_auto_gain_control = 6;
  bool has_voice_use_auto_gain_control() const;
  private:
  bool _internal_has_voice_use_auto_gain_control() const;
  public:
  void clear_voice_use_auto_gain_control();
  bool voice_use_auto_gain_control() const;
  void set_voice_use_auto_gain_control(bool value);
  private:
  bool _internal_voice_use_auto_gain_control() const;
  void _internal_set_voice_use_auto_gain_control(bool value);
  public:

  // optional bool selected_non_default_mic = 7;
  bool has_selected_non_default_mic() const;
  private:
  bool _internal_has_selected_non_default_mic() const;
  public:
  void clear_selected_non_default_mic();
  bool selected_non_default_mic() const;
  void set_selected_non_default_mic(bool value);
  private:
  bool _internal_selected_non_default_mic() const;
  void _internal_set_selected_non_default_mic(bool value);
  public:

  // optional bool selected_non_default_output = 8;
  bool has_selected_non_default_output() const;
  private:
  bool _internal_has_selected_non_default_output() const;
  public:
  void clear_selected_non_default_output();
  bool selected_non_default_output() const;
  void set_selected_non_default_output(bool value);
  private:
  bool _internal_selected_non_default_output() const;
  void _internal_set_selected_non_default_output(bool value);
  public:

  // optional bool push_to_talk_enabled = 9;
  bool has_push_to_talk_enabled() const;
  private:
  bool _internal_has_push_to_talk_enabled() const;
  public:
  void clear_push_to_talk_enabled();
  bool push_to_talk_enabled() const;
  void set_push_to_talk_enabled(bool value);
  private:
  bool _internal_push_to_talk_enabled() const;
  void _internal_set_push_to_talk_enabled(bool value);
  public:

  // optional bool push_to_mute_enabled = 10;
  bool has_push_to_mute_enabled() const;
  private:
  bool _internal_has_push_to_mute_enabled() const;
  public:
  void clear_push_to_mute_enabled();
  bool push_to_mute_enabled() const;
  void set_push_to_mute_enabled(bool value);
  private:
  bool _internal_push_to_mute_enabled() const;
  void _internal_set_push_to_mute_enabled(bool value);
  public:

  // optional bool play_ptt_sounds = 11;
  bool has_play_ptt_sounds() const;
  private:
  bool _internal_has_play_ptt_sounds() const;
  public:
  void clear_play_ptt_sounds();
  bool play_ptt_sounds() const;
  void set_play_ptt_sounds(bool value);
  private:
  bool _internal_play_ptt_sounds() const;
  void _internal_set_play_ptt_sounds(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float voice_input_gain_;
  float voice_output_gain_;
  int32_t noise_gate_level_;
  bool voice_use_echo_cancellation_;
  bool voice_use_noise_cancellation_;
  bool voice_use_auto_gain_control_;
  bool selected_non_default_mic_;
  bool selected_non_default_output_;
  bool push_to_talk_enabled_;
  bool push_to_mute_enabled_;
  bool play_ptt_sounds_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState) */ {
 public:
  inline CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState() : CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState(nullptr) {}
  ~CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState() override;
  explicit constexpr CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState(const CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& from);
  CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState(CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState&& from) noexcept
    : CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState() {
    *this = ::std::move(from);
  }

  inline CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& operator=(const CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& operator=(CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* internal_default_instance() {
    return reinterpret_cast<const CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState*>(
               &_CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    146;

  friend void swap(CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& a, CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState";
  }
  protected:
  explicit CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInGameCollapsedFieldNumber = 1,
    kOnlineCollapsedFieldNumber = 2,
    kOfflineCollapsedFieldNumber = 3,
    kGameGroupsCollapsedFieldNumber = 4,
    kCategoriesCollapsedFieldNumber = 5,
  };
  // optional bool in_game_collapsed = 1;
  bool has_in_game_collapsed() const;
  private:
  bool _internal_has_in_game_collapsed() const;
  public:
  void clear_in_game_collapsed();
  bool in_game_collapsed() const;
  void set_in_game_collapsed(bool value);
  private:
  bool _internal_in_game_collapsed() const;
  void _internal_set_in_game_collapsed(bool value);
  public:

  // optional bool online_collapsed = 2;
  bool has_online_collapsed() const;
  private:
  bool _internal_has_online_collapsed() const;
  public:
  void clear_online_collapsed();
  bool online_collapsed() const;
  void set_online_collapsed(bool value);
  private:
  bool _internal_online_collapsed() const;
  void _internal_set_online_collapsed(bool value);
  public:

  // optional bool offline_collapsed = 3;
  bool has_offline_collapsed() const;
  private:
  bool _internal_has_offline_collapsed() const;
  public:
  void clear_offline_collapsed();
  bool offline_collapsed() const;
  void set_offline_collapsed(bool value);
  private:
  bool _internal_offline_collapsed() const;
  void _internal_set_offline_collapsed(bool value);
  public:

  // optional int32 game_groups_collapsed = 4;
  bool has_game_groups_collapsed() const;
  private:
  bool _internal_has_game_groups_collapsed() const;
  public:
  void clear_game_groups_collapsed();
  int32_t game_groups_collapsed() const;
  void set_game_groups_collapsed(int32_t value);
  private:
  int32_t _internal_game_groups_collapsed() const;
  void _internal_set_game_groups_collapsed(int32_t value);
  public:

  // optional int32 categories_collapsed = 5;
  bool has_categories_collapsed() const;
  private:
  bool _internal_has_categories_collapsed() const;
  public:
  void clear_categories_collapsed();
  int32_t categories_collapsed() const;
  void set_categories_collapsed(int32_t value);
  private:
  int32_t _internal_categories_collapsed() const;
  void _internal_set_categories_collapsed(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool in_game_collapsed_;
  bool online_collapsed_;
  bool offline_collapsed_;
  int32_t game_groups_collapsed_;
  int32_t categories_collapsed_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatUsability_ClientUsabilityMetrics_Notification_UIState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatUsability_ClientUsabilityMetrics_Notification.UIState) */ {
 public:
  inline CChatUsability_ClientUsabilityMetrics_Notification_UIState() : CChatUsability_ClientUsabilityMetrics_Notification_UIState(nullptr) {}
  ~CChatUsability_ClientUsabilityMetrics_Notification_UIState() override;
  explicit constexpr CChatUsability_ClientUsabilityMetrics_Notification_UIState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatUsability_ClientUsabilityMetrics_Notification_UIState(const CChatUsability_ClientUsabilityMetrics_Notification_UIState& from);
  CChatUsability_ClientUsabilityMetrics_Notification_UIState(CChatUsability_ClientUsabilityMetrics_Notification_UIState&& from) noexcept
    : CChatUsability_ClientUsabilityMetrics_Notification_UIState() {
    *this = ::std::move(from);
  }

  inline CChatUsability_ClientUsabilityMetrics_Notification_UIState& operator=(const CChatUsability_ClientUsabilityMetrics_Notification_UIState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatUsability_ClientUsabilityMetrics_Notification_UIState& operator=(CChatUsability_ClientUsabilityMetrics_Notification_UIState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatUsability_ClientUsabilityMetrics_Notification_UIState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatUsability_ClientUsabilityMetrics_Notification_UIState* internal_default_instance() {
    return reinterpret_cast<const CChatUsability_ClientUsabilityMetrics_Notification_UIState*>(
               &_CChatUsability_ClientUsabilityMetrics_Notification_UIState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    147;

  friend void swap(CChatUsability_ClientUsabilityMetrics_Notification_UIState& a, CChatUsability_ClientUsabilityMetrics_Notification_UIState& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatUsability_ClientUsabilityMetrics_Notification_UIState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatUsability_ClientUsabilityMetrics_Notification_UIState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatUsability_ClientUsabilityMetrics_Notification_UIState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_UIState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatUsability_ClientUsabilityMetrics_Notification_UIState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatUsability_ClientUsabilityMetrics_Notification_UIState& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatUsability_ClientUsabilityMetrics_Notification_UIState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatUsability_ClientUsabilityMetrics_Notification.UIState";
  }
  protected:
  explicit CChatUsability_ClientUsabilityMetrics_Notification_UIState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState CategoryCollapseState;

  // accessors -------------------------------------------------------

  enum : int {
    kCategoryCollapseFieldNumber = 12,
    kFriendsListHeightFieldNumber = 1,
    kFriendsListWidthFieldNumber = 2,
    kFriendsListGroupChatsHeightFieldNumber = 5,
    kChatPopupsOpenedFieldNumber = 7,
    kFriendsListDockedFieldNumber = 3,
    kFriendsListCollapsedFieldNumber = 4,
    kFriendsListVisibleFieldNumber = 6,
    kInOneOnOneVoiceChatFieldNumber = 15,
    kGroupChatTabsOpenedFieldNumber = 8,
    kFriendChatTabsOpenedFieldNumber = 9,
    kChatWindowWidthFieldNumber = 10,
    kChatWindowHeightFieldNumber = 11,
    kGroupChatLeftColCollapsedFieldNumber = 13,
    kGroupChatRightColCollapsedFieldNumber = 14,
    kInGroupVoiceChatFieldNumber = 16,
  };
  // optional .CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState category_collapse = 12;
  bool has_category_collapse() const;
  private:
  bool _internal_has_category_collapse() const;
  public:
  void clear_category_collapse();
  const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& category_collapse() const;
  PROTOBUF_NODISCARD ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* release_category_collapse();
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* mutable_category_collapse();
  void set_allocated_category_collapse(::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* category_collapse);
  private:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& _internal_category_collapse() const;
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* _internal_mutable_category_collapse();
  public:
  void unsafe_arena_set_allocated_category_collapse(
      ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* category_collapse);
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* unsafe_arena_release_category_collapse();

  // optional int32 friends_list_height = 1;
  bool has_friends_list_height() const;
  private:
  bool _internal_has_friends_list_height() const;
  public:
  void clear_friends_list_height();
  int32_t friends_list_height() const;
  void set_friends_list_height(int32_t value);
  private:
  int32_t _internal_friends_list_height() const;
  void _internal_set_friends_list_height(int32_t value);
  public:

  // optional int32 friends_list_width = 2;
  bool has_friends_list_width() const;
  private:
  bool _internal_has_friends_list_width() const;
  public:
  void clear_friends_list_width();
  int32_t friends_list_width() const;
  void set_friends_list_width(int32_t value);
  private:
  int32_t _internal_friends_list_width() const;
  void _internal_set_friends_list_width(int32_t value);
  public:

  // optional int32 friends_list_group_chats_height = 5;
  bool has_friends_list_group_chats_height() const;
  private:
  bool _internal_has_friends_list_group_chats_height() const;
  public:
  void clear_friends_list_group_chats_height();
  int32_t friends_list_group_chats_height() const;
  void set_friends_list_group_chats_height(int32_t value);
  private:
  int32_t _internal_friends_list_group_chats_height() const;
  void _internal_set_friends_list_group_chats_height(int32_t value);
  public:

  // optional int32 chat_popups_opened = 7;
  bool has_chat_popups_opened() const;
  private:
  bool _internal_has_chat_popups_opened() const;
  public:
  void clear_chat_popups_opened();
  int32_t chat_popups_opened() const;
  void set_chat_popups_opened(int32_t value);
  private:
  int32_t _internal_chat_popups_opened() const;
  void _internal_set_chat_popups_opened(int32_t value);
  public:

  // optional bool friends_list_docked = 3;
  bool has_friends_list_docked() const;
  private:
  bool _internal_has_friends_list_docked() const;
  public:
  void clear_friends_list_docked();
  bool friends_list_docked() const;
  void set_friends_list_docked(bool value);
  private:
  bool _internal_friends_list_docked() const;
  void _internal_set_friends_list_docked(bool value);
  public:

  // optional bool friends_list_collapsed = 4;
  bool has_friends_list_collapsed() const;
  private:
  bool _internal_has_friends_list_collapsed() const;
  public:
  void clear_friends_list_collapsed();
  bool friends_list_collapsed() const;
  void set_friends_list_collapsed(bool value);
  private:
  bool _internal_friends_list_collapsed() const;
  void _internal_set_friends_list_collapsed(bool value);
  public:

  // optional bool friends_list_visible = 6;
  bool has_friends_list_visible() const;
  private:
  bool _internal_has_friends_list_visible() const;
  public:
  void clear_friends_list_visible();
  bool friends_list_visible() const;
  void set_friends_list_visible(bool value);
  private:
  bool _internal_friends_list_visible() const;
  void _internal_set_friends_list_visible(bool value);
  public:

  // optional bool in_one_on_one_voice_chat = 15;
  bool has_in_one_on_one_voice_chat() const;
  private:
  bool _internal_has_in_one_on_one_voice_chat() const;
  public:
  void clear_in_one_on_one_voice_chat();
  bool in_one_on_one_voice_chat() const;
  void set_in_one_on_one_voice_chat(bool value);
  private:
  bool _internal_in_one_on_one_voice_chat() const;
  void _internal_set_in_one_on_one_voice_chat(bool value);
  public:

  // optional int32 group_chat_tabs_opened = 8;
  bool has_group_chat_tabs_opened() const;
  private:
  bool _internal_has_group_chat_tabs_opened() const;
  public:
  void clear_group_chat_tabs_opened();
  int32_t group_chat_tabs_opened() const;
  void set_group_chat_tabs_opened(int32_t value);
  private:
  int32_t _internal_group_chat_tabs_opened() const;
  void _internal_set_group_chat_tabs_opened(int32_t value);
  public:

  // optional int32 friend_chat_tabs_opened = 9;
  bool has_friend_chat_tabs_opened() const;
  private:
  bool _internal_has_friend_chat_tabs_opened() const;
  public:
  void clear_friend_chat_tabs_opened();
  int32_t friend_chat_tabs_opened() const;
  void set_friend_chat_tabs_opened(int32_t value);
  private:
  int32_t _internal_friend_chat_tabs_opened() const;
  void _internal_set_friend_chat_tabs_opened(int32_t value);
  public:

  // optional int32 chat_window_width = 10;
  bool has_chat_window_width() const;
  private:
  bool _internal_has_chat_window_width() const;
  public:
  void clear_chat_window_width();
  int32_t chat_window_width() const;
  void set_chat_window_width(int32_t value);
  private:
  int32_t _internal_chat_window_width() const;
  void _internal_set_chat_window_width(int32_t value);
  public:

  // optional int32 chat_window_height = 11;
  bool has_chat_window_height() const;
  private:
  bool _internal_has_chat_window_height() const;
  public:
  void clear_chat_window_height();
  int32_t chat_window_height() const;
  void set_chat_window_height(int32_t value);
  private:
  int32_t _internal_chat_window_height() const;
  void _internal_set_chat_window_height(int32_t value);
  public:

  // optional int32 group_chat_left_col_collapsed = 13;
  bool has_group_chat_left_col_collapsed() const;
  private:
  bool _internal_has_group_chat_left_col_collapsed() const;
  public:
  void clear_group_chat_left_col_collapsed();
  int32_t group_chat_left_col_collapsed() const;
  void set_group_chat_left_col_collapsed(int32_t value);
  private:
  int32_t _internal_group_chat_left_col_collapsed() const;
  void _internal_set_group_chat_left_col_collapsed(int32_t value);
  public:

  // optional int32 group_chat_right_col_collapsed = 14;
  bool has_group_chat_right_col_collapsed() const;
  private:
  bool _internal_has_group_chat_right_col_collapsed() const;
  public:
  void clear_group_chat_right_col_collapsed();
  int32_t group_chat_right_col_collapsed() const;
  void set_group_chat_right_col_collapsed(int32_t value);
  private:
  int32_t _internal_group_chat_right_col_collapsed() const;
  void _internal_set_group_chat_right_col_collapsed(int32_t value);
  public:

  // optional bool in_group_voice_chat = 16;
  bool has_in_group_voice_chat() const;
  private:
  bool _internal_has_in_group_voice_chat() const;
  public:
  void clear_in_group_voice_chat();
  bool in_group_voice_chat() const;
  void set_in_group_voice_chat(bool value);
  private:
  bool _internal_in_group_voice_chat() const;
  void _internal_set_in_group_voice_chat(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatUsability_ClientUsabilityMetrics_Notification.UIState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* category_collapse_;
  int32_t friends_list_height_;
  int32_t friends_list_width_;
  int32_t friends_list_group_chats_height_;
  int32_t chat_popups_opened_;
  bool friends_list_docked_;
  bool friends_list_collapsed_;
  bool friends_list_visible_;
  bool in_one_on_one_voice_chat_;
  int32_t group_chat_tabs_opened_;
  int32_t friend_chat_tabs_opened_;
  int32_t chat_window_width_;
  int32_t chat_window_height_;
  int32_t group_chat_left_col_collapsed_;
  int32_t group_chat_right_col_collapsed_;
  bool in_group_voice_chat_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatUsability_ClientUsabilityMetrics_Notification_Metrics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatUsability_ClientUsabilityMetrics_Notification.Metrics) */ {
 public:
  inline CChatUsability_ClientUsabilityMetrics_Notification_Metrics() : CChatUsability_ClientUsabilityMetrics_Notification_Metrics(nullptr) {}
  ~CChatUsability_ClientUsabilityMetrics_Notification_Metrics() override;
  explicit constexpr CChatUsability_ClientUsabilityMetrics_Notification_Metrics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatUsability_ClientUsabilityMetrics_Notification_Metrics(const CChatUsability_ClientUsabilityMetrics_Notification_Metrics& from);
  CChatUsability_ClientUsabilityMetrics_Notification_Metrics(CChatUsability_ClientUsabilityMetrics_Notification_Metrics&& from) noexcept
    : CChatUsability_ClientUsabilityMetrics_Notification_Metrics() {
    *this = ::std::move(from);
  }

  inline CChatUsability_ClientUsabilityMetrics_Notification_Metrics& operator=(const CChatUsability_ClientUsabilityMetrics_Notification_Metrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatUsability_ClientUsabilityMetrics_Notification_Metrics& operator=(CChatUsability_ClientUsabilityMetrics_Notification_Metrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatUsability_ClientUsabilityMetrics_Notification_Metrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatUsability_ClientUsabilityMetrics_Notification_Metrics* internal_default_instance() {
    return reinterpret_cast<const CChatUsability_ClientUsabilityMetrics_Notification_Metrics*>(
               &_CChatUsability_ClientUsabilityMetrics_Notification_Metrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    148;

  friend void swap(CChatUsability_ClientUsabilityMetrics_Notification_Metrics& a, CChatUsability_ClientUsabilityMetrics_Notification_Metrics& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatUsability_ClientUsabilityMetrics_Notification_Metrics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatUsability_ClientUsabilityMetrics_Notification_Metrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatUsability_ClientUsabilityMetrics_Notification_Metrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification_Metrics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatUsability_ClientUsabilityMetrics_Notification_Metrics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatUsability_ClientUsabilityMetrics_Notification_Metrics& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatUsability_ClientUsabilityMetrics_Notification_Metrics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatUsability_ClientUsabilityMetrics_Notification.Metrics";
  }
  protected:
  explicit CChatUsability_ClientUsabilityMetrics_Notification_Metrics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFriendsCountFieldNumber = 1,
    kFriendsCategoryCountFieldNumber = 2,
    kFriendsCategorizedCountFieldNumber = 3,
    kFriendsOnlineCountFieldNumber = 4,
    kFriendsInGameCountFieldNumber = 5,
    kFriendsInGameSingletonCountFieldNumber = 6,
    kGameGroupCountFieldNumber = 7,
    kFriendsFavoriteCountFieldNumber = 8,
    kGroupChatCountFieldNumber = 9,
    kGroupChatFavoriteCountFieldNumber = 10,
  };
  // optional int32 friends_count = 1;
  bool has_friends_count() const;
  private:
  bool _internal_has_friends_count() const;
  public:
  void clear_friends_count();
  int32_t friends_count() const;
  void set_friends_count(int32_t value);
  private:
  int32_t _internal_friends_count() const;
  void _internal_set_friends_count(int32_t value);
  public:

  // optional int32 friends_category_count = 2;
  bool has_friends_category_count() const;
  private:
  bool _internal_has_friends_category_count() const;
  public:
  void clear_friends_category_count();
  int32_t friends_category_count() const;
  void set_friends_category_count(int32_t value);
  private:
  int32_t _internal_friends_category_count() const;
  void _internal_set_friends_category_count(int32_t value);
  public:

  // optional int32 friends_categorized_count = 3;
  bool has_friends_categorized_count() const;
  private:
  bool _internal_has_friends_categorized_count() const;
  public:
  void clear_friends_categorized_count();
  int32_t friends_categorized_count() const;
  void set_friends_categorized_count(int32_t value);
  private:
  int32_t _internal_friends_categorized_count() const;
  void _internal_set_friends_categorized_count(int32_t value);
  public:

  // optional int32 friends_online_count = 4;
  bool has_friends_online_count() const;
  private:
  bool _internal_has_friends_online_count() const;
  public:
  void clear_friends_online_count();
  int32_t friends_online_count() const;
  void set_friends_online_count(int32_t value);
  private:
  int32_t _internal_friends_online_count() const;
  void _internal_set_friends_online_count(int32_t value);
  public:

  // optional int32 friends_in_game_count = 5;
  bool has_friends_in_game_count() const;
  private:
  bool _internal_has_friends_in_game_count() const;
  public:
  void clear_friends_in_game_count();
  int32_t friends_in_game_count() const;
  void set_friends_in_game_count(int32_t value);
  private:
  int32_t _internal_friends_in_game_count() const;
  void _internal_set_friends_in_game_count(int32_t value);
  public:

  // optional int32 friends_in_game_singleton_count = 6;
  bool has_friends_in_game_singleton_count() const;
  private:
  bool _internal_has_friends_in_game_singleton_count() const;
  public:
  void clear_friends_in_game_singleton_count();
  int32_t friends_in_game_singleton_count() const;
  void set_friends_in_game_singleton_count(int32_t value);
  private:
  int32_t _internal_friends_in_game_singleton_count() const;
  void _internal_set_friends_in_game_singleton_count(int32_t value);
  public:

  // optional int32 game_group_count = 7;
  bool has_game_group_count() const;
  private:
  bool _internal_has_game_group_count() const;
  public:
  void clear_game_group_count();
  int32_t game_group_count() const;
  void set_game_group_count(int32_t value);
  private:
  int32_t _internal_game_group_count() const;
  void _internal_set_game_group_count(int32_t value);
  public:

  // optional int32 friends_favorite_count = 8;
  bool has_friends_favorite_count() const;
  private:
  bool _internal_has_friends_favorite_count() const;
  public:
  void clear_friends_favorite_count();
  int32_t friends_favorite_count() const;
  void set_friends_favorite_count(int32_t value);
  private:
  int32_t _internal_friends_favorite_count() const;
  void _internal_set_friends_favorite_count(int32_t value);
  public:

  // optional int32 group_chat_count = 9;
  bool has_group_chat_count() const;
  private:
  bool _internal_has_group_chat_count() const;
  public:
  void clear_group_chat_count();
  int32_t group_chat_count() const;
  void set_group_chat_count(int32_t value);
  private:
  int32_t _internal_group_chat_count() const;
  void _internal_set_group_chat_count(int32_t value);
  public:

  // optional int32 group_chat_favorite_count = 10;
  bool has_group_chat_favorite_count() const;
  private:
  bool _internal_has_group_chat_favorite_count() const;
  public:
  void clear_group_chat_favorite_count();
  int32_t group_chat_favorite_count() const;
  void set_group_chat_favorite_count(int32_t value);
  private:
  int32_t _internal_group_chat_favorite_count() const;
  void _internal_set_group_chat_favorite_count(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatUsability_ClientUsabilityMetrics_Notification.Metrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int32_t friends_count_;
  int32_t friends_category_count_;
  int32_t friends_categorized_count_;
  int32_t friends_online_count_;
  int32_t friends_in_game_count_;
  int32_t friends_in_game_singleton_count_;
  int32_t game_group_count_;
  int32_t friends_favorite_count_;
  int32_t group_chat_count_;
  int32_t group_chat_favorite_count_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatUsability_ClientUsabilityMetrics_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatUsability_ClientUsabilityMetrics_Notification) */ {
 public:
  inline CChatUsability_ClientUsabilityMetrics_Notification() : CChatUsability_ClientUsabilityMetrics_Notification(nullptr) {}
  ~CChatUsability_ClientUsabilityMetrics_Notification() override;
  explicit constexpr CChatUsability_ClientUsabilityMetrics_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatUsability_ClientUsabilityMetrics_Notification(const CChatUsability_ClientUsabilityMetrics_Notification& from);
  CChatUsability_ClientUsabilityMetrics_Notification(CChatUsability_ClientUsabilityMetrics_Notification&& from) noexcept
    : CChatUsability_ClientUsabilityMetrics_Notification() {
    *this = ::std::move(from);
  }

  inline CChatUsability_ClientUsabilityMetrics_Notification& operator=(const CChatUsability_ClientUsabilityMetrics_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatUsability_ClientUsabilityMetrics_Notification& operator=(CChatUsability_ClientUsabilityMetrics_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatUsability_ClientUsabilityMetrics_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatUsability_ClientUsabilityMetrics_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatUsability_ClientUsabilityMetrics_Notification*>(
               &_CChatUsability_ClientUsabilityMetrics_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    149;

  friend void swap(CChatUsability_ClientUsabilityMetrics_Notification& a, CChatUsability_ClientUsabilityMetrics_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatUsability_ClientUsabilityMetrics_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatUsability_ClientUsabilityMetrics_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatUsability_ClientUsabilityMetrics_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatUsability_ClientUsabilityMetrics_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatUsability_ClientUsabilityMetrics_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatUsability_ClientUsabilityMetrics_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatUsability_ClientUsabilityMetrics_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatUsability_ClientUsabilityMetrics_Notification";
  }
  protected:
  explicit CChatUsability_ClientUsabilityMetrics_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CChatUsability_ClientUsabilityMetrics_Notification_Settings Settings;
  typedef CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings VoiceSettings;
  typedef CChatUsability_ClientUsabilityMetrics_Notification_UIState UIState;
  typedef CChatUsability_ClientUsabilityMetrics_Notification_Metrics Metrics;

  // accessors -------------------------------------------------------

  enum : int {
    kSettingsFieldNumber = 10,
    kVoiceSettingsFieldNumber = 11,
    kUiStateFieldNumber = 12,
    kMetricsFieldNumber = 13,
    kMetricsRunIdFieldNumber = 1,
    kClientBuildFieldNumber = 2,
    kMetricsVersionFieldNumber = 3,
    kInWebFieldNumber = 4,
  };
  // optional .CChatUsability_ClientUsabilityMetrics_Notification.Settings settings = 10;
  bool has_settings() const;
  private:
  bool _internal_has_settings() const;
  public:
  void clear_settings();
  const ::CChatUsability_ClientUsabilityMetrics_Notification_Settings& settings() const;
  PROTOBUF_NODISCARD ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* release_settings();
  ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* mutable_settings();
  void set_allocated_settings(::CChatUsability_ClientUsabilityMetrics_Notification_Settings* settings);
  private:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_Settings& _internal_settings() const;
  ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* _internal_mutable_settings();
  public:
  void unsafe_arena_set_allocated_settings(
      ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* settings);
  ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* unsafe_arena_release_settings();

  // optional .CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings voice_settings = 11;
  bool has_voice_settings() const;
  private:
  bool _internal_has_voice_settings() const;
  public:
  void clear_voice_settings();
  const ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& voice_settings() const;
  PROTOBUF_NODISCARD ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* release_voice_settings();
  ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* mutable_voice_settings();
  void set_allocated_voice_settings(::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* voice_settings);
  private:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& _internal_voice_settings() const;
  ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* _internal_mutable_voice_settings();
  public:
  void unsafe_arena_set_allocated_voice_settings(
      ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* voice_settings);
  ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* unsafe_arena_release_voice_settings();

  // optional .CChatUsability_ClientUsabilityMetrics_Notification.UIState ui_state = 12;
  bool has_ui_state() const;
  private:
  bool _internal_has_ui_state() const;
  public:
  void clear_ui_state();
  const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState& ui_state() const;
  PROTOBUF_NODISCARD ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* release_ui_state();
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* mutable_ui_state();
  void set_allocated_ui_state(::CChatUsability_ClientUsabilityMetrics_Notification_UIState* ui_state);
  private:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState& _internal_ui_state() const;
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* _internal_mutable_ui_state();
  public:
  void unsafe_arena_set_allocated_ui_state(
      ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* ui_state);
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* unsafe_arena_release_ui_state();

  // optional .CChatUsability_ClientUsabilityMetrics_Notification.Metrics metrics = 13;
  bool has_metrics() const;
  private:
  bool _internal_has_metrics() const;
  public:
  void clear_metrics();
  const ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics& metrics() const;
  PROTOBUF_NODISCARD ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* release_metrics();
  ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* mutable_metrics();
  void set_allocated_metrics(::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* metrics);
  private:
  const ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics& _internal_metrics() const;
  ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* _internal_mutable_metrics();
  public:
  void unsafe_arena_set_allocated_metrics(
      ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* metrics);
  ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* unsafe_arena_release_metrics();

  // optional uint32 metrics_run_id = 1;
  bool has_metrics_run_id() const;
  private:
  bool _internal_has_metrics_run_id() const;
  public:
  void clear_metrics_run_id();
  uint32_t metrics_run_id() const;
  void set_metrics_run_id(uint32_t value);
  private:
  uint32_t _internal_metrics_run_id() const;
  void _internal_set_metrics_run_id(uint32_t value);
  public:

  // optional uint32 client_build = 2;
  bool has_client_build() const;
  private:
  bool _internal_has_client_build() const;
  public:
  void clear_client_build();
  uint32_t client_build() const;
  void set_client_build(uint32_t value);
  private:
  uint32_t _internal_client_build() const;
  void _internal_set_client_build(uint32_t value);
  public:

  // optional uint32 metrics_version = 3;
  bool has_metrics_version() const;
  private:
  bool _internal_has_metrics_version() const;
  public:
  void clear_metrics_version();
  uint32_t metrics_version() const;
  void set_metrics_version(uint32_t value);
  private:
  uint32_t _internal_metrics_version() const;
  void _internal_set_metrics_version(uint32_t value);
  public:

  // optional bool in_web = 4;
  bool has_in_web() const;
  private:
  bool _internal_has_in_web() const;
  public:
  void clear_in_web();
  bool in_web() const;
  void set_in_web(bool value);
  private:
  bool _internal_in_web() const;
  void _internal_set_in_web(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CChatUsability_ClientUsabilityMetrics_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* settings_;
  ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* voice_settings_;
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* ui_state_;
  ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* metrics_;
  uint32_t metrics_run_id_;
  uint32_t client_build_;
  uint32_t metrics_version_;
  bool in_web_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CChatUsability_RequestClientUsabilityMetrics_Notification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CChatUsability_RequestClientUsabilityMetrics_Notification) */ {
 public:
  inline CChatUsability_RequestClientUsabilityMetrics_Notification() : CChatUsability_RequestClientUsabilityMetrics_Notification(nullptr) {}
  ~CChatUsability_RequestClientUsabilityMetrics_Notification() override;
  explicit constexpr CChatUsability_RequestClientUsabilityMetrics_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CChatUsability_RequestClientUsabilityMetrics_Notification(const CChatUsability_RequestClientUsabilityMetrics_Notification& from);
  CChatUsability_RequestClientUsabilityMetrics_Notification(CChatUsability_RequestClientUsabilityMetrics_Notification&& from) noexcept
    : CChatUsability_RequestClientUsabilityMetrics_Notification() {
    *this = ::std::move(from);
  }

  inline CChatUsability_RequestClientUsabilityMetrics_Notification& operator=(const CChatUsability_RequestClientUsabilityMetrics_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChatUsability_RequestClientUsabilityMetrics_Notification& operator=(CChatUsability_RequestClientUsabilityMetrics_Notification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChatUsability_RequestClientUsabilityMetrics_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CChatUsability_RequestClientUsabilityMetrics_Notification* internal_default_instance() {
    return reinterpret_cast<const CChatUsability_RequestClientUsabilityMetrics_Notification*>(
               &_CChatUsability_RequestClientUsabilityMetrics_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    150;

  friend void swap(CChatUsability_RequestClientUsabilityMetrics_Notification& a, CChatUsability_RequestClientUsabilityMetrics_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CChatUsability_RequestClientUsabilityMetrics_Notification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChatUsability_RequestClientUsabilityMetrics_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChatUsability_RequestClientUsabilityMetrics_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CChatUsability_RequestClientUsabilityMetrics_Notification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CChatUsability_RequestClientUsabilityMetrics_Notification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CChatUsability_RequestClientUsabilityMetrics_Notification& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CChatUsability_RequestClientUsabilityMetrics_Notification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CChatUsability_RequestClientUsabilityMetrics_Notification";
  }
  protected:
  explicit CChatUsability_RequestClientUsabilityMetrics_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetricsRunIdFieldNumber = 1,
  };
  // optional uint32 metrics_run_id = 1;
  bool has_metrics_run_id() const;
  private:
  bool _internal_has_metrics_run_id() const;
  public:
  void clear_metrics_run_id();
  uint32_t metrics_run_id() const;
  void set_metrics_run_id(uint32_t value);
  private:
  uint32_t _internal_metrics_run_id() const;
  void _internal_set_metrics_run_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CChatUsability_RequestClientUsabilityMetrics_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t metrics_run_id_;
  friend struct ::TableStruct_steammessages_5fchat_2esteamclient_2eproto;
};
// ===================================================================

class Chat_Stub;

class Chat : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Chat() {};
 public:
  virtual ~Chat();

  typedef Chat_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void RequestFriendPersonaStates(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChat_RequestFriendPersonaStates_Request* request,
                       ::CChat_RequestFriendPersonaStates_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Chat);
};

class Chat_Stub : public Chat {
 public:
  Chat_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  Chat_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~Chat_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements Chat ------------------------------------------

  void RequestFriendPersonaStates(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChat_RequestFriendPersonaStates_Request* request,
                       ::CChat_RequestFriendPersonaStates_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Chat_Stub);
};


// -------------------------------------------------------------------

class ChatRoom_Stub;

class ChatRoom : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ChatRoom() {};
 public:
  virtual ~ChatRoom();

  typedef ChatRoom_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void CreateChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_CreateChatRoomGroup_Request* request,
                       ::CChatRoom_CreateChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SaveChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SaveChatRoomGroup_Request* request,
                       ::CChatRoom_SaveChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RenameChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_RenameChatRoomGroup_Request* request,
                       ::CChatRoom_RenameChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetChatRoomGroupTagline(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetChatRoomGroupTagline_Request* request,
                       ::CChatRoom_SetChatRoomGroupTagline_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetChatRoomGroupAvatar(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetChatRoomGroupAvatar_Request* request,
                       ::CChatRoom_SetChatRoomGroupAvatar_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetChatRoomGroupWatchingBroadcast(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* request,
                       ::CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void JoinMiniGameForChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_JoinMiniGameForChatRoomGroup_Request* request,
                       ::CChatRoom_JoinMiniGameForChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void EndMiniGameForChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_EndMiniGameForChatRoomGroup_Request* request,
                       ::CChatRoom_EndMiniGameForChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void MuteUserInGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_MuteUser_Request* request,
                       ::CChatRoom_MuteUser_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void KickUserFromGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_KickUser_Request* request,
                       ::CChatRoom_KickUser_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetUserBanState(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetUserBanState_Request* request,
                       ::CChatRoom_SetUserBanState_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RevokeInviteToGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_RevokeInvite_Request* request,
                       ::CChatRoom_RevokeInvite_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void CreateRole(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_CreateRole_Request* request,
                       ::CChatRoom_CreateRole_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetRoles(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetRoles_Request* request,
                       ::CChatRoom_GetRoles_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RenameRole(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_RenameRole_Request* request,
                       ::CChatRoom_RenameRole_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ReorderRole(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_ReorderRole_Request* request,
                       ::CChatRoom_ReorderRole_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteRole(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_DeleteRole_Request* request,
                       ::CChatRoom_DeleteRole_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetRoleActions(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetRoleActions_Request* request,
                       ::CChatRoom_GetRoleActions_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ReplaceRoleActions(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_ReplaceRoleActions_Request* request,
                       ::CChatRoom_ReplaceRoleActions_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void AddRoleToUser(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_AddRoleToUser_Request* request,
                       ::CChatRoom_AddRoleToUser_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetRolesForUser(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetRolesForUser_Request* request,
                       ::CChatRoom_GetRolesForUser_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteRoleFromUser(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_DeleteRoleFromUser_Request* request,
                       ::CChatRoom_DeleteRoleFromUser_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void JoinChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_JoinChatRoomGroup_Request* request,
                       ::CChatRoom_JoinChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void InviteFriendToChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_InviteFriendToChatRoomGroup_Request* request,
                       ::CChatRoom_InviteFriendToChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void LeaveChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_LeaveChatRoomGroup_Request* request,
                       ::CChatRoom_LeaveChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void CreateChatRoom(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_CreateChatRoom_Request* request,
                       ::CChatRoom_CreateChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteChatRoom(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_DeleteChatRoom_Request* request,
                       ::CChatRoom_DeleteChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RenameChatRoom(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_RenameChatRoom_Request* request,
                       ::CChatRoom_RenameChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ReorderChatRoom(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_ReorderChatRoom_Request* request,
                       ::CChatRoom_ReorderChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SendChatMessage(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SendChatMessage_Request* request,
                       ::CChatRoom_SendChatMessage_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void JoinVoiceChat(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_JoinVoiceChat_Request* request,
                       ::CChatRoom_JoinVoiceChat_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void LeaveVoiceChat(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_LeaveVoiceChat_Request* request,
                       ::CChatRoom_LeaveVoiceChat_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetMessageHistory(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetMessageHistory_Request* request,
                       ::CChatRoom_GetMessageHistory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetMyChatRoomGroups(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetMyChatRoomGroups_Request* request,
                       ::CChatRoom_GetMyChatRoomGroups_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetChatRoomGroupState(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetChatRoomGroupState_Request* request,
                       ::CChatRoom_GetChatRoomGroupState_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetChatRoomGroupSummary(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetChatRoomGroupSummary_Request* request,
                       ::CChatRoom_GetChatRoomGroupSummary_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetAppChatRoomGroupForceActive(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetAppChatRoomGroupForceActive_Request* request,
                       ::CChatRoom_SetAppChatRoomGroupForceActive_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetAppChatRoomGroupStopForceActive(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetAppChatRoomGroupStopForceActive_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void AckChatMessage(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_AckChatMessage_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void CreateInviteLink(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_CreateInviteLink_Request* request,
                       ::CChatRoom_CreateInviteLink_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetInviteLinkInfo(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetInviteLinkInfo_Request* request,
                       ::CChatRoom_GetInviteLinkInfo_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetInviteInfo(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetInviteInfo_Request* request,
                       ::CChatRoom_GetInviteInfo_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetInviteLinksForGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetInviteLinksForGroup_Request* request,
                       ::CChatRoom_GetInviteLinksForGroup_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetBanList(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetBanList_Request* request,
                       ::CChatRoom_GetBanList_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetInviteList(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetInviteList_Request* request,
                       ::CChatRoom_GetInviteList_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteInviteLink(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_DeleteInviteLink_Request* request,
                       ::CChatRoom_DeleteInviteLink_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetSessionActiveChatRoomGroups(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetSessionActiveChatRoomGroups_Request* request,
                       ::CChatRoom_SetSessionActiveChatRoomGroups_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetUserChatGroupPreferences(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetUserChatGroupPreferences_Request* request,
                       ::CChatRoom_SetUserChatGroupPreferences_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteChatMessages(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_DeleteChatMessages_Request* request,
                       ::CChatRoom_DeleteChatMessages_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void UpdateMemberListView(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_UpdateMemberListView_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void SearchMembers(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SearchMembers_Request* request,
                       ::CChatRoom_SearchMembers_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void UpdateMessageReaction(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_UpdateMessageReaction_Request* request,
                       ::CChatRoom_UpdateMessageReaction_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetMessageReactionReactors(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetMessageReactionReactors_Request* request,
                       ::CChatRoom_GetMessageReactionReactors_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatRoom);
};

class ChatRoom_Stub : public ChatRoom {
 public:
  ChatRoom_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  ChatRoom_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~ChatRoom_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements ChatRoom ------------------------------------------

  void CreateChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_CreateChatRoomGroup_Request* request,
                       ::CChatRoom_CreateChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void SaveChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SaveChatRoomGroup_Request* request,
                       ::CChatRoom_SaveChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void RenameChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_RenameChatRoomGroup_Request* request,
                       ::CChatRoom_RenameChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void SetChatRoomGroupTagline(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetChatRoomGroupTagline_Request* request,
                       ::CChatRoom_SetChatRoomGroupTagline_Response* response,
                       ::google::protobuf::Closure* done);
  void SetChatRoomGroupAvatar(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetChatRoomGroupAvatar_Request* request,
                       ::CChatRoom_SetChatRoomGroupAvatar_Response* response,
                       ::google::protobuf::Closure* done);
  void SetChatRoomGroupWatchingBroadcast(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetChatRoomGroupWatchingBroadcast_Request* request,
                       ::CChatRoom_SetChatRoomGroupWatchingBroadcast_Response* response,
                       ::google::protobuf::Closure* done);
  void JoinMiniGameForChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_JoinMiniGameForChatRoomGroup_Request* request,
                       ::CChatRoom_JoinMiniGameForChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void EndMiniGameForChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_EndMiniGameForChatRoomGroup_Request* request,
                       ::CChatRoom_EndMiniGameForChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void MuteUserInGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_MuteUser_Request* request,
                       ::CChatRoom_MuteUser_Response* response,
                       ::google::protobuf::Closure* done);
  void KickUserFromGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_KickUser_Request* request,
                       ::CChatRoom_KickUser_Response* response,
                       ::google::protobuf::Closure* done);
  void SetUserBanState(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetUserBanState_Request* request,
                       ::CChatRoom_SetUserBanState_Response* response,
                       ::google::protobuf::Closure* done);
  void RevokeInviteToGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_RevokeInvite_Request* request,
                       ::CChatRoom_RevokeInvite_Response* response,
                       ::google::protobuf::Closure* done);
  void CreateRole(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_CreateRole_Request* request,
                       ::CChatRoom_CreateRole_Response* response,
                       ::google::protobuf::Closure* done);
  void GetRoles(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetRoles_Request* request,
                       ::CChatRoom_GetRoles_Response* response,
                       ::google::protobuf::Closure* done);
  void RenameRole(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_RenameRole_Request* request,
                       ::CChatRoom_RenameRole_Response* response,
                       ::google::protobuf::Closure* done);
  void ReorderRole(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_ReorderRole_Request* request,
                       ::CChatRoom_ReorderRole_Response* response,
                       ::google::protobuf::Closure* done);
  void DeleteRole(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_DeleteRole_Request* request,
                       ::CChatRoom_DeleteRole_Response* response,
                       ::google::protobuf::Closure* done);
  void GetRoleActions(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetRoleActions_Request* request,
                       ::CChatRoom_GetRoleActions_Response* response,
                       ::google::protobuf::Closure* done);
  void ReplaceRoleActions(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_ReplaceRoleActions_Request* request,
                       ::CChatRoom_ReplaceRoleActions_Response* response,
                       ::google::protobuf::Closure* done);
  void AddRoleToUser(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_AddRoleToUser_Request* request,
                       ::CChatRoom_AddRoleToUser_Response* response,
                       ::google::protobuf::Closure* done);
  void GetRolesForUser(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetRolesForUser_Request* request,
                       ::CChatRoom_GetRolesForUser_Response* response,
                       ::google::protobuf::Closure* done);
  void DeleteRoleFromUser(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_DeleteRoleFromUser_Request* request,
                       ::CChatRoom_DeleteRoleFromUser_Response* response,
                       ::google::protobuf::Closure* done);
  void JoinChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_JoinChatRoomGroup_Request* request,
                       ::CChatRoom_JoinChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void InviteFriendToChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_InviteFriendToChatRoomGroup_Request* request,
                       ::CChatRoom_InviteFriendToChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void LeaveChatRoomGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_LeaveChatRoomGroup_Request* request,
                       ::CChatRoom_LeaveChatRoomGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void CreateChatRoom(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_CreateChatRoom_Request* request,
                       ::CChatRoom_CreateChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  void DeleteChatRoom(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_DeleteChatRoom_Request* request,
                       ::CChatRoom_DeleteChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  void RenameChatRoom(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_RenameChatRoom_Request* request,
                       ::CChatRoom_RenameChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  void ReorderChatRoom(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_ReorderChatRoom_Request* request,
                       ::CChatRoom_ReorderChatRoom_Response* response,
                       ::google::protobuf::Closure* done);
  void SendChatMessage(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SendChatMessage_Request* request,
                       ::CChatRoom_SendChatMessage_Response* response,
                       ::google::protobuf::Closure* done);
  void JoinVoiceChat(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_JoinVoiceChat_Request* request,
                       ::CChatRoom_JoinVoiceChat_Response* response,
                       ::google::protobuf::Closure* done);
  void LeaveVoiceChat(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_LeaveVoiceChat_Request* request,
                       ::CChatRoom_LeaveVoiceChat_Response* response,
                       ::google::protobuf::Closure* done);
  void GetMessageHistory(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetMessageHistory_Request* request,
                       ::CChatRoom_GetMessageHistory_Response* response,
                       ::google::protobuf::Closure* done);
  void GetMyChatRoomGroups(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetMyChatRoomGroups_Request* request,
                       ::CChatRoom_GetMyChatRoomGroups_Response* response,
                       ::google::protobuf::Closure* done);
  void GetChatRoomGroupState(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetChatRoomGroupState_Request* request,
                       ::CChatRoom_GetChatRoomGroupState_Response* response,
                       ::google::protobuf::Closure* done);
  void GetChatRoomGroupSummary(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetChatRoomGroupSummary_Request* request,
                       ::CChatRoom_GetChatRoomGroupSummary_Response* response,
                       ::google::protobuf::Closure* done);
  void SetAppChatRoomGroupForceActive(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetAppChatRoomGroupForceActive_Request* request,
                       ::CChatRoom_SetAppChatRoomGroupForceActive_Response* response,
                       ::google::protobuf::Closure* done);
  void SetAppChatRoomGroupStopForceActive(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetAppChatRoomGroupStopForceActive_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void AckChatMessage(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_AckChatMessage_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void CreateInviteLink(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_CreateInviteLink_Request* request,
                       ::CChatRoom_CreateInviteLink_Response* response,
                       ::google::protobuf::Closure* done);
  void GetInviteLinkInfo(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetInviteLinkInfo_Request* request,
                       ::CChatRoom_GetInviteLinkInfo_Response* response,
                       ::google::protobuf::Closure* done);
  void GetInviteInfo(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetInviteInfo_Request* request,
                       ::CChatRoom_GetInviteInfo_Response* response,
                       ::google::protobuf::Closure* done);
  void GetInviteLinksForGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetInviteLinksForGroup_Request* request,
                       ::CChatRoom_GetInviteLinksForGroup_Response* response,
                       ::google::protobuf::Closure* done);
  void GetBanList(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetBanList_Request* request,
                       ::CChatRoom_GetBanList_Response* response,
                       ::google::protobuf::Closure* done);
  void GetInviteList(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetInviteList_Request* request,
                       ::CChatRoom_GetInviteList_Response* response,
                       ::google::protobuf::Closure* done);
  void DeleteInviteLink(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_DeleteInviteLink_Request* request,
                       ::CChatRoom_DeleteInviteLink_Response* response,
                       ::google::protobuf::Closure* done);
  void SetSessionActiveChatRoomGroups(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetSessionActiveChatRoomGroups_Request* request,
                       ::CChatRoom_SetSessionActiveChatRoomGroups_Response* response,
                       ::google::protobuf::Closure* done);
  void SetUserChatGroupPreferences(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SetUserChatGroupPreferences_Request* request,
                       ::CChatRoom_SetUserChatGroupPreferences_Response* response,
                       ::google::protobuf::Closure* done);
  void DeleteChatMessages(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_DeleteChatMessages_Request* request,
                       ::CChatRoom_DeleteChatMessages_Response* response,
                       ::google::protobuf::Closure* done);
  void UpdateMemberListView(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_UpdateMemberListView_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void SearchMembers(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_SearchMembers_Request* request,
                       ::CChatRoom_SearchMembers_Response* response,
                       ::google::protobuf::Closure* done);
  void UpdateMessageReaction(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_UpdateMessageReaction_Request* request,
                       ::CChatRoom_UpdateMessageReaction_Response* response,
                       ::google::protobuf::Closure* done);
  void GetMessageReactionReactors(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_GetMessageReactionReactors_Request* request,
                       ::CChatRoom_GetMessageReactionReactors_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatRoom_Stub);
};


// -------------------------------------------------------------------

class ClanChatRooms_Stub;

class ClanChatRooms : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ClanChatRooms() {};
 public:
  virtual ~ClanChatRooms();

  typedef ClanChatRooms_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void GetClanChatRoomInfo(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CClanChatRooms_GetClanChatRoomInfo_Request* request,
                       ::CClanChatRooms_GetClanChatRoomInfo_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetClanChatRoomPrivate(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CClanChatRooms_SetClanChatRoomPrivate_Request* request,
                       ::CClanChatRooms_SetClanChatRoomPrivate_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ClanChatRooms);
};

class ClanChatRooms_Stub : public ClanChatRooms {
 public:
  ClanChatRooms_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  ClanChatRooms_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~ClanChatRooms_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements ClanChatRooms ------------------------------------------

  void GetClanChatRoomInfo(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CClanChatRooms_GetClanChatRoomInfo_Request* request,
                       ::CClanChatRooms_GetClanChatRoomInfo_Response* response,
                       ::google::protobuf::Closure* done);
  void SetClanChatRoomPrivate(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CClanChatRooms_SetClanChatRoomPrivate_Request* request,
                       ::CClanChatRooms_SetClanChatRoomPrivate_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ClanChatRooms_Stub);
};


// -------------------------------------------------------------------

class ChatRoomClient_Stub;

class ChatRoomClient : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ChatRoomClient() {};
 public:
  virtual ~ChatRoomClient();

  typedef ChatRoomClient_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void NotifyIncomingChatMessage(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_IncomingChatMessage_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyChatMessageModified(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_ChatMessageModified_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyMemberStateChange(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_MemberStateChange_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyChatRoomHeaderStateChange(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_ChatRoomHeaderState_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyChatRoomGroupRoomsChange(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_ChatRoomGroupRoomsChange_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyShouldRejoinChatRoomVoiceChat(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyChatGroupUserStateChanged(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyAckChatMessageEcho(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_AckChatMessage_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyChatRoomDisconnect(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::ChatRoomClient_NotifyChatRoomDisconnect_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyMemberListViewUpdated(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoomClient_MemberListViewUpdated_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyMessageReaction(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_MessageReaction_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatRoomClient);
};

class ChatRoomClient_Stub : public ChatRoomClient {
 public:
  ChatRoomClient_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  ChatRoomClient_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~ChatRoomClient_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements ChatRoomClient ------------------------------------------

  void NotifyIncomingChatMessage(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_IncomingChatMessage_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyChatMessageModified(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_ChatMessageModified_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyMemberStateChange(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_MemberStateChange_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyChatRoomHeaderStateChange(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_ChatRoomHeaderState_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyChatRoomGroupRoomsChange(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_ChatRoomGroupRoomsChange_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyShouldRejoinChatRoomVoiceChat(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyChatGroupUserStateChanged(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::ChatRoomClient_NotifyChatGroupUserStateChanged_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyAckChatMessageEcho(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_AckChatMessage_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyChatRoomDisconnect(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::ChatRoomClient_NotifyChatRoomDisconnect_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyMemberListViewUpdated(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoomClient_MemberListViewUpdated_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyMessageReaction(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatRoom_MessageReaction_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatRoomClient_Stub);
};


// -------------------------------------------------------------------

class ChatUsability_Stub;

class ChatUsability : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ChatUsability() {};
 public:
  virtual ~ChatUsability();

  typedef ChatUsability_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void NotifyClientUsabilityMetrics(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatUsability_ClientUsabilityMetrics_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatUsability);
};

class ChatUsability_Stub : public ChatUsability {
 public:
  ChatUsability_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  ChatUsability_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~ChatUsability_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements ChatUsability ------------------------------------------

  void NotifyClientUsabilityMetrics(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatUsability_ClientUsabilityMetrics_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatUsability_Stub);
};


// -------------------------------------------------------------------

class ChatUsabilityClient_Stub;

class ChatUsabilityClient : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ChatUsabilityClient() {};
 public:
  virtual ~ChatUsabilityClient();

  typedef ChatUsabilityClient_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void NotifyRequestClientUsabilityMetrics(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatUsability_RequestClientUsabilityMetrics_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatUsabilityClient);
};

class ChatUsabilityClient_Stub : public ChatUsabilityClient {
 public:
  ChatUsabilityClient_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  ChatUsabilityClient_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~ChatUsabilityClient_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements ChatUsabilityClient ------------------------------------------

  void NotifyRequestClientUsabilityMetrics(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CChatUsability_RequestClientUsabilityMetrics_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ChatUsabilityClient_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CChat_RequestFriendPersonaStates_Request

// -------------------------------------------------------------------

// CChat_RequestFriendPersonaStates_Response

// -------------------------------------------------------------------

// CChatRoom_CreateChatRoomGroup_Request

// optional fixed64 steamid_partner = 1;
inline bool CChatRoom_CreateChatRoomGroup_Request::_internal_has_steamid_partner() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_CreateChatRoomGroup_Request::has_steamid_partner() const {
  return _internal_has_steamid_partner();
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_steamid_partner() {
  steamid_partner_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_CreateChatRoomGroup_Request::_internal_steamid_partner() const {
  return steamid_partner_;
}
inline uint64_t CChatRoom_CreateChatRoomGroup_Request::steamid_partner() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Request.steamid_partner)
  return _internal_steamid_partner();
}
inline void CChatRoom_CreateChatRoomGroup_Request::_internal_set_steamid_partner(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_partner_ = value;
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_steamid_partner(uint64_t value) {
  _internal_set_steamid_partner(value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoomGroup_Request.steamid_partner)
}

// optional fixed64 steamid_invited = 2;
inline bool CChatRoom_CreateChatRoomGroup_Request::_internal_has_steamid_invited() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_CreateChatRoomGroup_Request::has_steamid_invited() const {
  return _internal_has_steamid_invited();
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_steamid_invited() {
  steamid_invited_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_CreateChatRoomGroup_Request::_internal_steamid_invited() const {
  return steamid_invited_;
}
inline uint64_t CChatRoom_CreateChatRoomGroup_Request::steamid_invited() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Request.steamid_invited)
  return _internal_steamid_invited();
}
inline void CChatRoom_CreateChatRoomGroup_Request::_internal_set_steamid_invited(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  steamid_invited_ = value;
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_steamid_invited(uint64_t value) {
  _internal_set_steamid_invited(value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoomGroup_Request.steamid_invited)
}

// optional string name = 3;
inline bool CChatRoom_CreateChatRoomGroup_Request::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_CreateChatRoomGroup_Request::has_name() const {
  return _internal_has_name();
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_CreateChatRoomGroup_Request::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Request.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_CreateChatRoomGroup_Request::set_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoomGroup_Request.name)
}
inline std::string* CChatRoom_CreateChatRoomGroup_Request::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateChatRoomGroup_Request.name)
  return _s;
}
inline const std::string& CChatRoom_CreateChatRoomGroup_Request::_internal_name() const {
  return name_.Get();
}
inline void CChatRoom_CreateChatRoomGroup_Request::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_CreateChatRoomGroup_Request::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_CreateChatRoomGroup_Request::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateChatRoomGroup_Request.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateChatRoomGroup_Request.name)
}

// repeated fixed64 steamid_invitees = 4;
inline int CChatRoom_CreateChatRoomGroup_Request::_internal_steamid_invitees_size() const {
  return steamid_invitees_.size();
}
inline int CChatRoom_CreateChatRoomGroup_Request::steamid_invitees_size() const {
  return _internal_steamid_invitees_size();
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_steamid_invitees() {
  steamid_invitees_.Clear();
}
inline uint64_t CChatRoom_CreateChatRoomGroup_Request::_internal_steamid_invitees(int index) const {
  return steamid_invitees_.Get(index);
}
inline uint64_t CChatRoom_CreateChatRoomGroup_Request::steamid_invitees(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Request.steamid_invitees)
  return _internal_steamid_invitees(index);
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_steamid_invitees(int index, uint64_t value) {
  steamid_invitees_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoomGroup_Request.steamid_invitees)
}
inline void CChatRoom_CreateChatRoomGroup_Request::_internal_add_steamid_invitees(uint64_t value) {
  steamid_invitees_.Add(value);
}
inline void CChatRoom_CreateChatRoomGroup_Request::add_steamid_invitees(uint64_t value) {
  _internal_add_steamid_invitees(value);
  // @@protoc_insertion_point(field_add:CChatRoom_CreateChatRoomGroup_Request.steamid_invitees)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CChatRoom_CreateChatRoomGroup_Request::_internal_steamid_invitees() const {
  return steamid_invitees_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CChatRoom_CreateChatRoomGroup_Request::steamid_invitees() const {
  // @@protoc_insertion_point(field_list:CChatRoom_CreateChatRoomGroup_Request.steamid_invitees)
  return _internal_steamid_invitees();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CChatRoom_CreateChatRoomGroup_Request::_internal_mutable_steamid_invitees() {
  return &steamid_invitees_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CChatRoom_CreateChatRoomGroup_Request::mutable_steamid_invitees() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_CreateChatRoomGroup_Request.steamid_invitees)
  return _internal_mutable_steamid_invitees();
}

// optional uint32 watching_broadcast_accountid = 6;
inline bool CChatRoom_CreateChatRoomGroup_Request::_internal_has_watching_broadcast_accountid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatRoom_CreateChatRoomGroup_Request::has_watching_broadcast_accountid() const {
  return _internal_has_watching_broadcast_accountid();
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_watching_broadcast_accountid() {
  watching_broadcast_accountid_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CChatRoom_CreateChatRoomGroup_Request::_internal_watching_broadcast_accountid() const {
  return watching_broadcast_accountid_;
}
inline uint32_t CChatRoom_CreateChatRoomGroup_Request::watching_broadcast_accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Request.watching_broadcast_accountid)
  return _internal_watching_broadcast_accountid();
}
inline void CChatRoom_CreateChatRoomGroup_Request::_internal_set_watching_broadcast_accountid(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  watching_broadcast_accountid_ = value;
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_watching_broadcast_accountid(uint32_t value) {
  _internal_set_watching_broadcast_accountid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoomGroup_Request.watching_broadcast_accountid)
}

// optional uint64 watching_broadcast_channel_id = 7;
inline bool CChatRoom_CreateChatRoomGroup_Request::_internal_has_watching_broadcast_channel_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_CreateChatRoomGroup_Request::has_watching_broadcast_channel_id() const {
  return _internal_has_watching_broadcast_channel_id();
}
inline void CChatRoom_CreateChatRoomGroup_Request::clear_watching_broadcast_channel_id() {
  watching_broadcast_channel_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CChatRoom_CreateChatRoomGroup_Request::_internal_watching_broadcast_channel_id() const {
  return watching_broadcast_channel_id_;
}
inline uint64_t CChatRoom_CreateChatRoomGroup_Request::watching_broadcast_channel_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Request.watching_broadcast_channel_id)
  return _internal_watching_broadcast_channel_id();
}
inline void CChatRoom_CreateChatRoomGroup_Request::_internal_set_watching_broadcast_channel_id(uint64_t value) {
  _has_bits_[0] |= 0x00000008u;
  watching_broadcast_channel_id_ = value;
}
inline void CChatRoom_CreateChatRoomGroup_Request::set_watching_broadcast_channel_id(uint64_t value) {
  _internal_set_watching_broadcast_channel_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoomGroup_Request.watching_broadcast_channel_id)
}

// -------------------------------------------------------------------

// CChatRole

// optional uint64 role_id = 1;
inline bool CChatRole::_internal_has_role_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRole::has_role_id() const {
  return _internal_has_role_id();
}
inline void CChatRole::clear_role_id() {
  role_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRole::_internal_role_id() const {
  return role_id_;
}
inline uint64_t CChatRole::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRole.role_id)
  return _internal_role_id();
}
inline void CChatRole::_internal_set_role_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  role_id_ = value;
}
inline void CChatRole::set_role_id(uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CChatRole.role_id)
}

// optional string name = 2;
inline bool CChatRole::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRole::has_name() const {
  return _internal_has_name();
}
inline void CChatRole::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRole::name() const {
  // @@protoc_insertion_point(field_get:CChatRole.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRole::set_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRole.name)
}
inline std::string* CChatRole::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CChatRole.name)
  return _s;
}
inline const std::string& CChatRole::_internal_name() const {
  return name_.Get();
}
inline void CChatRole::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRole::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRole::release_name() {
  // @@protoc_insertion_point(field_release:CChatRole.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRole::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRole.name)
}

// optional uint32 ordinal = 3;
inline bool CChatRole::_internal_has_ordinal() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRole::has_ordinal() const {
  return _internal_has_ordinal();
}
inline void CChatRole::clear_ordinal() {
  ordinal_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CChatRole::_internal_ordinal() const {
  return ordinal_;
}
inline uint32_t CChatRole::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRole.ordinal)
  return _internal_ordinal();
}
inline void CChatRole::_internal_set_ordinal(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  ordinal_ = value;
}
inline void CChatRole::set_ordinal(uint32_t value) {
  _internal_set_ordinal(value);
  // @@protoc_insertion_point(field_set:CChatRole.ordinal)
}

// -------------------------------------------------------------------

// CChatRoleActions

// optional uint64 role_id = 1;
inline bool CChatRoleActions::_internal_has_role_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoleActions::has_role_id() const {
  return _internal_has_role_id();
}
inline void CChatRoleActions::clear_role_id() {
  role_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoleActions::_internal_role_id() const {
  return role_id_;
}
inline uint64_t CChatRoleActions::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.role_id)
  return _internal_role_id();
}
inline void CChatRoleActions::_internal_set_role_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  role_id_ = value;
}
inline void CChatRoleActions::set_role_id(uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CChatRoleActions.role_id)
}

// optional bool can_create_rename_delete_channel = 2;
inline bool CChatRoleActions::_internal_has_can_create_rename_delete_channel() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoleActions::has_can_create_rename_delete_channel() const {
  return _internal_has_can_create_rename_delete_channel();
}
inline void CChatRoleActions::clear_can_create_rename_delete_channel() {
  can_create_rename_delete_channel_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CChatRoleActions::_internal_can_create_rename_delete_channel() const {
  return can_create_rename_delete_channel_;
}
inline bool CChatRoleActions::can_create_rename_delete_channel() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_create_rename_delete_channel)
  return _internal_can_create_rename_delete_channel();
}
inline void CChatRoleActions::_internal_set_can_create_rename_delete_channel(bool value) {
  _has_bits_[0] |= 0x00000002u;
  can_create_rename_delete_channel_ = value;
}
inline void CChatRoleActions::set_can_create_rename_delete_channel(bool value) {
  _internal_set_can_create_rename_delete_channel(value);
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_create_rename_delete_channel)
}

// optional bool can_kick = 3;
inline bool CChatRoleActions::_internal_has_can_kick() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoleActions::has_can_kick() const {
  return _internal_has_can_kick();
}
inline void CChatRoleActions::clear_can_kick() {
  can_kick_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CChatRoleActions::_internal_can_kick() const {
  return can_kick_;
}
inline bool CChatRoleActions::can_kick() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_kick)
  return _internal_can_kick();
}
inline void CChatRoleActions::_internal_set_can_kick(bool value) {
  _has_bits_[0] |= 0x00000004u;
  can_kick_ = value;
}
inline void CChatRoleActions::set_can_kick(bool value) {
  _internal_set_can_kick(value);
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_kick)
}

// optional bool can_ban = 4;
inline bool CChatRoleActions::_internal_has_can_ban() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoleActions::has_can_ban() const {
  return _internal_has_can_ban();
}
inline void CChatRoleActions::clear_can_ban() {
  can_ban_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CChatRoleActions::_internal_can_ban() const {
  return can_ban_;
}
inline bool CChatRoleActions::can_ban() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_ban)
  return _internal_can_ban();
}
inline void CChatRoleActions::_internal_set_can_ban(bool value) {
  _has_bits_[0] |= 0x00000008u;
  can_ban_ = value;
}
inline void CChatRoleActions::set_can_ban(bool value) {
  _internal_set_can_ban(value);
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_ban)
}

// optional bool can_invite = 5;
inline bool CChatRoleActions::_internal_has_can_invite() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatRoleActions::has_can_invite() const {
  return _internal_has_can_invite();
}
inline void CChatRoleActions::clear_can_invite() {
  can_invite_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CChatRoleActions::_internal_can_invite() const {
  return can_invite_;
}
inline bool CChatRoleActions::can_invite() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_invite)
  return _internal_can_invite();
}
inline void CChatRoleActions::_internal_set_can_invite(bool value) {
  _has_bits_[0] |= 0x00000010u;
  can_invite_ = value;
}
inline void CChatRoleActions::set_can_invite(bool value) {
  _internal_set_can_invite(value);
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_invite)
}

// optional bool can_change_tagline_avatar_name = 6;
inline bool CChatRoleActions::_internal_has_can_change_tagline_avatar_name() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatRoleActions::has_can_change_tagline_avatar_name() const {
  return _internal_has_can_change_tagline_avatar_name();
}
inline void CChatRoleActions::clear_can_change_tagline_avatar_name() {
  can_change_tagline_avatar_name_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CChatRoleActions::_internal_can_change_tagline_avatar_name() const {
  return can_change_tagline_avatar_name_;
}
inline bool CChatRoleActions::can_change_tagline_avatar_name() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_change_tagline_avatar_name)
  return _internal_can_change_tagline_avatar_name();
}
inline void CChatRoleActions::_internal_set_can_change_tagline_avatar_name(bool value) {
  _has_bits_[0] |= 0x00000020u;
  can_change_tagline_avatar_name_ = value;
}
inline void CChatRoleActions::set_can_change_tagline_avatar_name(bool value) {
  _internal_set_can_change_tagline_avatar_name(value);
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_change_tagline_avatar_name)
}

// optional bool can_chat = 7;
inline bool CChatRoleActions::_internal_has_can_chat() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatRoleActions::has_can_chat() const {
  return _internal_has_can_chat();
}
inline void CChatRoleActions::clear_can_chat() {
  can_chat_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CChatRoleActions::_internal_can_chat() const {
  return can_chat_;
}
inline bool CChatRoleActions::can_chat() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_chat)
  return _internal_can_chat();
}
inline void CChatRoleActions::_internal_set_can_chat(bool value) {
  _has_bits_[0] |= 0x00000040u;
  can_chat_ = value;
}
inline void CChatRoleActions::set_can_chat(bool value) {
  _internal_set_can_chat(value);
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_chat)
}

// optional bool can_view_history = 8;
inline bool CChatRoleActions::_internal_has_can_view_history() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CChatRoleActions::has_can_view_history() const {
  return _internal_has_can_view_history();
}
inline void CChatRoleActions::clear_can_view_history() {
  can_view_history_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CChatRoleActions::_internal_can_view_history() const {
  return can_view_history_;
}
inline bool CChatRoleActions::can_view_history() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_view_history)
  return _internal_can_view_history();
}
inline void CChatRoleActions::_internal_set_can_view_history(bool value) {
  _has_bits_[0] |= 0x00000080u;
  can_view_history_ = value;
}
inline void CChatRoleActions::set_can_view_history(bool value) {
  _internal_set_can_view_history(value);
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_view_history)
}

// optional bool can_change_group_roles = 9;
inline bool CChatRoleActions::_internal_has_can_change_group_roles() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CChatRoleActions::has_can_change_group_roles() const {
  return _internal_has_can_change_group_roles();
}
inline void CChatRoleActions::clear_can_change_group_roles() {
  can_change_group_roles_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CChatRoleActions::_internal_can_change_group_roles() const {
  return can_change_group_roles_;
}
inline bool CChatRoleActions::can_change_group_roles() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_change_group_roles)
  return _internal_can_change_group_roles();
}
inline void CChatRoleActions::_internal_set_can_change_group_roles(bool value) {
  _has_bits_[0] |= 0x00000100u;
  can_change_group_roles_ = value;
}
inline void CChatRoleActions::set_can_change_group_roles(bool value) {
  _internal_set_can_change_group_roles(value);
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_change_group_roles)
}

// optional bool can_change_user_roles = 10;
inline bool CChatRoleActions::_internal_has_can_change_user_roles() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CChatRoleActions::has_can_change_user_roles() const {
  return _internal_has_can_change_user_roles();
}
inline void CChatRoleActions::clear_can_change_user_roles() {
  can_change_user_roles_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CChatRoleActions::_internal_can_change_user_roles() const {
  return can_change_user_roles_;
}
inline bool CChatRoleActions::can_change_user_roles() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_change_user_roles)
  return _internal_can_change_user_roles();
}
inline void CChatRoleActions::_internal_set_can_change_user_roles(bool value) {
  _has_bits_[0] |= 0x00000200u;
  can_change_user_roles_ = value;
}
inline void CChatRoleActions::set_can_change_user_roles(bool value) {
  _internal_set_can_change_user_roles(value);
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_change_user_roles)
}

// optional bool can_mention_all = 11;
inline bool CChatRoleActions::_internal_has_can_mention_all() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CChatRoleActions::has_can_mention_all() const {
  return _internal_has_can_mention_all();
}
inline void CChatRoleActions::clear_can_mention_all() {
  can_mention_all_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CChatRoleActions::_internal_can_mention_all() const {
  return can_mention_all_;
}
inline bool CChatRoleActions::can_mention_all() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_mention_all)
  return _internal_can_mention_all();
}
inline void CChatRoleActions::_internal_set_can_mention_all(bool value) {
  _has_bits_[0] |= 0x00000400u;
  can_mention_all_ = value;
}
inline void CChatRoleActions::set_can_mention_all(bool value) {
  _internal_set_can_mention_all(value);
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_mention_all)
}

// optional bool can_set_watching_broadcast = 12;
inline bool CChatRoleActions::_internal_has_can_set_watching_broadcast() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CChatRoleActions::has_can_set_watching_broadcast() const {
  return _internal_has_can_set_watching_broadcast();
}
inline void CChatRoleActions::clear_can_set_watching_broadcast() {
  can_set_watching_broadcast_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CChatRoleActions::_internal_can_set_watching_broadcast() const {
  return can_set_watching_broadcast_;
}
inline bool CChatRoleActions::can_set_watching_broadcast() const {
  // @@protoc_insertion_point(field_get:CChatRoleActions.can_set_watching_broadcast)
  return _internal_can_set_watching_broadcast();
}
inline void CChatRoleActions::_internal_set_can_set_watching_broadcast(bool value) {
  _has_bits_[0] |= 0x00000800u;
  can_set_watching_broadcast_ = value;
}
inline void CChatRoleActions::set_can_set_watching_broadcast(bool value) {
  _internal_set_can_set_watching_broadcast(value);
  // @@protoc_insertion_point(field_set:CChatRoleActions.can_set_watching_broadcast)
}

// -------------------------------------------------------------------

// CChatPartyBeacon

// optional uint32 app_id = 1;
inline bool CChatPartyBeacon::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatPartyBeacon::has_app_id() const {
  return _internal_has_app_id();
}
inline void CChatPartyBeacon::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CChatPartyBeacon::_internal_app_id() const {
  return app_id_;
}
inline uint32_t CChatPartyBeacon::app_id() const {
  // @@protoc_insertion_point(field_get:CChatPartyBeacon.app_id)
  return _internal_app_id();
}
inline void CChatPartyBeacon::_internal_set_app_id(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  app_id_ = value;
}
inline void CChatPartyBeacon::set_app_id(uint32_t value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CChatPartyBeacon.app_id)
}

// optional fixed64 steamid_owner = 2;
inline bool CChatPartyBeacon::_internal_has_steamid_owner() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatPartyBeacon::has_steamid_owner() const {
  return _internal_has_steamid_owner();
}
inline void CChatPartyBeacon::clear_steamid_owner() {
  steamid_owner_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatPartyBeacon::_internal_steamid_owner() const {
  return steamid_owner_;
}
inline uint64_t CChatPartyBeacon::steamid_owner() const {
  // @@protoc_insertion_point(field_get:CChatPartyBeacon.steamid_owner)
  return _internal_steamid_owner();
}
inline void CChatPartyBeacon::_internal_set_steamid_owner(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_owner_ = value;
}
inline void CChatPartyBeacon::set_steamid_owner(uint64_t value) {
  _internal_set_steamid_owner(value);
  // @@protoc_insertion_point(field_set:CChatPartyBeacon.steamid_owner)
}

// optional fixed64 beacon_id = 3;
inline bool CChatPartyBeacon::_internal_has_beacon_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatPartyBeacon::has_beacon_id() const {
  return _internal_has_beacon_id();
}
inline void CChatPartyBeacon::clear_beacon_id() {
  beacon_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatPartyBeacon::_internal_beacon_id() const {
  return beacon_id_;
}
inline uint64_t CChatPartyBeacon::beacon_id() const {
  // @@protoc_insertion_point(field_get:CChatPartyBeacon.beacon_id)
  return _internal_beacon_id();
}
inline void CChatPartyBeacon::_internal_set_beacon_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  beacon_id_ = value;
}
inline void CChatPartyBeacon::set_beacon_id(uint64_t value) {
  _internal_set_beacon_id(value);
  // @@protoc_insertion_point(field_set:CChatPartyBeacon.beacon_id)
}

// optional string game_metadata = 4;
inline bool CChatPartyBeacon::_internal_has_game_metadata() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatPartyBeacon::has_game_metadata() const {
  return _internal_has_game_metadata();
}
inline void CChatPartyBeacon::clear_game_metadata() {
  game_metadata_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatPartyBeacon::game_metadata() const {
  // @@protoc_insertion_point(field_get:CChatPartyBeacon.game_metadata)
  return _internal_game_metadata();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatPartyBeacon::set_game_metadata(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 game_metadata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatPartyBeacon.game_metadata)
}
inline std::string* CChatPartyBeacon::mutable_game_metadata() {
  std::string* _s = _internal_mutable_game_metadata();
  // @@protoc_insertion_point(field_mutable:CChatPartyBeacon.game_metadata)
  return _s;
}
inline const std::string& CChatPartyBeacon::_internal_game_metadata() const {
  return game_metadata_.Get();
}
inline void CChatPartyBeacon::_internal_set_game_metadata(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  game_metadata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatPartyBeacon::_internal_mutable_game_metadata() {
  _has_bits_[0] |= 0x00000001u;
  return game_metadata_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatPartyBeacon::release_game_metadata() {
  // @@protoc_insertion_point(field_release:CChatPartyBeacon.game_metadata)
  if (!_internal_has_game_metadata()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = game_metadata_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (game_metadata_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    game_metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatPartyBeacon::set_allocated_game_metadata(std::string* game_metadata) {
  if (game_metadata != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  game_metadata_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), game_metadata,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (game_metadata_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    game_metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatPartyBeacon.game_metadata)
}

// -------------------------------------------------------------------

// CChatRoomGroupHeaderState

// optional uint64 chat_group_id = 1;
inline bool CChatRoomGroupHeaderState::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatRoomGroupHeaderState::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoomGroupHeaderState::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000010u;
}
inline uint64_t CChatRoomGroupHeaderState::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoomGroupHeaderState::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoomGroupHeaderState::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000010u;
  chat_group_id_ = value;
}
inline void CChatRoomGroupHeaderState::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.chat_group_id)
}

// optional string chat_name = 2;
inline bool CChatRoomGroupHeaderState::_internal_has_chat_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoomGroupHeaderState::has_chat_name() const {
  return _internal_has_chat_name();
}
inline void CChatRoomGroupHeaderState::clear_chat_name() {
  chat_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoomGroupHeaderState::chat_name() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.chat_name)
  return _internal_chat_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoomGroupHeaderState::set_chat_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 chat_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.chat_name)
}
inline std::string* CChatRoomGroupHeaderState::mutable_chat_name() {
  std::string* _s = _internal_mutable_chat_name();
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupHeaderState.chat_name)
  return _s;
}
inline const std::string& CChatRoomGroupHeaderState::_internal_chat_name() const {
  return chat_name_.Get();
}
inline void CChatRoomGroupHeaderState::_internal_set_chat_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  chat_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoomGroupHeaderState::_internal_mutable_chat_name() {
  _has_bits_[0] |= 0x00000001u;
  return chat_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoomGroupHeaderState::release_chat_name() {
  // @@protoc_insertion_point(field_release:CChatRoomGroupHeaderState.chat_name)
  if (!_internal_has_chat_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = chat_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (chat_name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    chat_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoomGroupHeaderState::set_allocated_chat_name(std::string* chat_name) {
  if (chat_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  chat_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), chat_name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (chat_name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    chat_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoomGroupHeaderState.chat_name)
}

// optional uint32 clanid = 13;
inline bool CChatRoomGroupHeaderState::_internal_has_clanid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatRoomGroupHeaderState::has_clanid() const {
  return _internal_has_clanid();
}
inline void CChatRoomGroupHeaderState::clear_clanid() {
  clanid_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CChatRoomGroupHeaderState::_internal_clanid() const {
  return clanid_;
}
inline uint32_t CChatRoomGroupHeaderState::clanid() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.clanid)
  return _internal_clanid();
}
inline void CChatRoomGroupHeaderState::_internal_set_clanid(uint32_t value) {
  _has_bits_[0] |= 0x00000020u;
  clanid_ = value;
}
inline void CChatRoomGroupHeaderState::set_clanid(uint32_t value) {
  _internal_set_clanid(value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.clanid)
}

// optional uint32 accountid_owner = 14;
inline bool CChatRoomGroupHeaderState::_internal_has_accountid_owner() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatRoomGroupHeaderState::has_accountid_owner() const {
  return _internal_has_accountid_owner();
}
inline void CChatRoomGroupHeaderState::clear_accountid_owner() {
  accountid_owner_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CChatRoomGroupHeaderState::_internal_accountid_owner() const {
  return accountid_owner_;
}
inline uint32_t CChatRoomGroupHeaderState::accountid_owner() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.accountid_owner)
  return _internal_accountid_owner();
}
inline void CChatRoomGroupHeaderState::_internal_set_accountid_owner(uint32_t value) {
  _has_bits_[0] |= 0x00000040u;
  accountid_owner_ = value;
}
inline void CChatRoomGroupHeaderState::set_accountid_owner(uint32_t value) {
  _internal_set_accountid_owner(value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.accountid_owner)
}

// optional uint32 appid = 21;
inline bool CChatRoomGroupHeaderState::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CChatRoomGroupHeaderState::has_appid() const {
  return _internal_has_appid();
}
inline void CChatRoomGroupHeaderState::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline uint32_t CChatRoomGroupHeaderState::_internal_appid() const {
  return appid_;
}
inline uint32_t CChatRoomGroupHeaderState::appid() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.appid)
  return _internal_appid();
}
inline void CChatRoomGroupHeaderState::_internal_set_appid(uint32_t value) {
  _has_bits_[0] |= 0x00000400u;
  appid_ = value;
}
inline void CChatRoomGroupHeaderState::set_appid(uint32_t value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.appid)
}

// optional string tagline = 15;
inline bool CChatRoomGroupHeaderState::_internal_has_tagline() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoomGroupHeaderState::has_tagline() const {
  return _internal_has_tagline();
}
inline void CChatRoomGroupHeaderState::clear_tagline() {
  tagline_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CChatRoomGroupHeaderState::tagline() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.tagline)
  return _internal_tagline();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoomGroupHeaderState::set_tagline(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 tagline_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.tagline)
}
inline std::string* CChatRoomGroupHeaderState::mutable_tagline() {
  std::string* _s = _internal_mutable_tagline();
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupHeaderState.tagline)
  return _s;
}
inline const std::string& CChatRoomGroupHeaderState::_internal_tagline() const {
  return tagline_.Get();
}
inline void CChatRoomGroupHeaderState::_internal_set_tagline(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  tagline_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoomGroupHeaderState::_internal_mutable_tagline() {
  _has_bits_[0] |= 0x00000002u;
  return tagline_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoomGroupHeaderState::release_tagline() {
  // @@protoc_insertion_point(field_release:CChatRoomGroupHeaderState.tagline)
  if (!_internal_has_tagline()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  auto* p = tagline_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (tagline_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    tagline_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoomGroupHeaderState::set_allocated_tagline(std::string* tagline) {
  if (tagline != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  tagline_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tagline,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (tagline_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    tagline_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoomGroupHeaderState.tagline)
}

// optional bytes avatar_sha = 16;
inline bool CChatRoomGroupHeaderState::_internal_has_avatar_sha() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoomGroupHeaderState::has_avatar_sha() const {
  return _internal_has_avatar_sha();
}
inline void CChatRoomGroupHeaderState::clear_avatar_sha() {
  avatar_sha_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CChatRoomGroupHeaderState::avatar_sha() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.avatar_sha)
  return _internal_avatar_sha();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoomGroupHeaderState::set_avatar_sha(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000004u;
 avatar_sha_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.avatar_sha)
}
inline std::string* CChatRoomGroupHeaderState::mutable_avatar_sha() {
  std::string* _s = _internal_mutable_avatar_sha();
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupHeaderState.avatar_sha)
  return _s;
}
inline const std::string& CChatRoomGroupHeaderState::_internal_avatar_sha() const {
  return avatar_sha_.Get();
}
inline void CChatRoomGroupHeaderState::_internal_set_avatar_sha(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  avatar_sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoomGroupHeaderState::_internal_mutable_avatar_sha() {
  _has_bits_[0] |= 0x00000004u;
  return avatar_sha_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoomGroupHeaderState::release_avatar_sha() {
  // @@protoc_insertion_point(field_release:CChatRoomGroupHeaderState.avatar_sha)
  if (!_internal_has_avatar_sha()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  auto* p = avatar_sha_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (avatar_sha_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    avatar_sha_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoomGroupHeaderState::set_allocated_avatar_sha(std::string* avatar_sha) {
  if (avatar_sha != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  avatar_sha_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_sha,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (avatar_sha_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    avatar_sha_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoomGroupHeaderState.avatar_sha)
}

// optional uint64 default_role_id = 17;
inline bool CChatRoomGroupHeaderState::_internal_has_default_role_id() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CChatRoomGroupHeaderState::has_default_role_id() const {
  return _internal_has_default_role_id();
}
inline void CChatRoomGroupHeaderState::clear_default_role_id() {
  default_role_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000080u;
}
inline uint64_t CChatRoomGroupHeaderState::_internal_default_role_id() const {
  return default_role_id_;
}
inline uint64_t CChatRoomGroupHeaderState::default_role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.default_role_id)
  return _internal_default_role_id();
}
inline void CChatRoomGroupHeaderState::_internal_set_default_role_id(uint64_t value) {
  _has_bits_[0] |= 0x00000080u;
  default_role_id_ = value;
}
inline void CChatRoomGroupHeaderState::set_default_role_id(uint64_t value) {
  _internal_set_default_role_id(value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.default_role_id)
}

// repeated .CChatRole roles = 18;
inline int CChatRoomGroupHeaderState::_internal_roles_size() const {
  return roles_.size();
}
inline int CChatRoomGroupHeaderState::roles_size() const {
  return _internal_roles_size();
}
inline void CChatRoomGroupHeaderState::clear_roles() {
  roles_.Clear();
}
inline ::CChatRole* CChatRoomGroupHeaderState::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupHeaderState.roles)
  return roles_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRole >*
CChatRoomGroupHeaderState::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomGroupHeaderState.roles)
  return &roles_;
}
inline const ::CChatRole& CChatRoomGroupHeaderState::_internal_roles(int index) const {
  return roles_.Get(index);
}
inline const ::CChatRole& CChatRoomGroupHeaderState::roles(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.roles)
  return _internal_roles(index);
}
inline ::CChatRole* CChatRoomGroupHeaderState::_internal_add_roles() {
  return roles_.Add();
}
inline ::CChatRole* CChatRoomGroupHeaderState::add_roles() {
  ::CChatRole* _add = _internal_add_roles();
  // @@protoc_insertion_point(field_add:CChatRoomGroupHeaderState.roles)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRole >&
CChatRoomGroupHeaderState::roles() const {
  // @@protoc_insertion_point(field_list:CChatRoomGroupHeaderState.roles)
  return roles_;
}

// repeated .CChatRoleActions role_actions = 19;
inline int CChatRoomGroupHeaderState::_internal_role_actions_size() const {
  return role_actions_.size();
}
inline int CChatRoomGroupHeaderState::role_actions_size() const {
  return _internal_role_actions_size();
}
inline void CChatRoomGroupHeaderState::clear_role_actions() {
  role_actions_.Clear();
}
inline ::CChatRoleActions* CChatRoomGroupHeaderState::mutable_role_actions(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupHeaderState.role_actions)
  return role_actions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions >*
CChatRoomGroupHeaderState::mutable_role_actions() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomGroupHeaderState.role_actions)
  return &role_actions_;
}
inline const ::CChatRoleActions& CChatRoomGroupHeaderState::_internal_role_actions(int index) const {
  return role_actions_.Get(index);
}
inline const ::CChatRoleActions& CChatRoomGroupHeaderState::role_actions(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.role_actions)
  return _internal_role_actions(index);
}
inline ::CChatRoleActions* CChatRoomGroupHeaderState::_internal_add_role_actions() {
  return role_actions_.Add();
}
inline ::CChatRoleActions* CChatRoomGroupHeaderState::add_role_actions() {
  ::CChatRoleActions* _add = _internal_add_role_actions();
  // @@protoc_insertion_point(field_add:CChatRoomGroupHeaderState.role_actions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions >&
CChatRoomGroupHeaderState::role_actions() const {
  // @@protoc_insertion_point(field_list:CChatRoomGroupHeaderState.role_actions)
  return role_actions_;
}

// optional uint32 watching_broadcast_accountid = 20;
inline bool CChatRoomGroupHeaderState::_internal_has_watching_broadcast_accountid() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CChatRoomGroupHeaderState::has_watching_broadcast_accountid() const {
  return _internal_has_watching_broadcast_accountid();
}
inline void CChatRoomGroupHeaderState::clear_watching_broadcast_accountid() {
  watching_broadcast_accountid_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CChatRoomGroupHeaderState::_internal_watching_broadcast_accountid() const {
  return watching_broadcast_accountid_;
}
inline uint32_t CChatRoomGroupHeaderState::watching_broadcast_accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.watching_broadcast_accountid)
  return _internal_watching_broadcast_accountid();
}
inline void CChatRoomGroupHeaderState::_internal_set_watching_broadcast_accountid(uint32_t value) {
  _has_bits_[0] |= 0x00000200u;
  watching_broadcast_accountid_ = value;
}
inline void CChatRoomGroupHeaderState::set_watching_broadcast_accountid(uint32_t value) {
  _internal_set_watching_broadcast_accountid(value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.watching_broadcast_accountid)
}

// repeated .CChatPartyBeacon party_beacons = 22;
inline int CChatRoomGroupHeaderState::_internal_party_beacons_size() const {
  return party_beacons_.size();
}
inline int CChatRoomGroupHeaderState::party_beacons_size() const {
  return _internal_party_beacons_size();
}
inline void CChatRoomGroupHeaderState::clear_party_beacons() {
  party_beacons_.Clear();
}
inline ::CChatPartyBeacon* CChatRoomGroupHeaderState::mutable_party_beacons(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupHeaderState.party_beacons)
  return party_beacons_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatPartyBeacon >*
CChatRoomGroupHeaderState::mutable_party_beacons() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomGroupHeaderState.party_beacons)
  return &party_beacons_;
}
inline const ::CChatPartyBeacon& CChatRoomGroupHeaderState::_internal_party_beacons(int index) const {
  return party_beacons_.Get(index);
}
inline const ::CChatPartyBeacon& CChatRoomGroupHeaderState::party_beacons(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.party_beacons)
  return _internal_party_beacons(index);
}
inline ::CChatPartyBeacon* CChatRoomGroupHeaderState::_internal_add_party_beacons() {
  return party_beacons_.Add();
}
inline ::CChatPartyBeacon* CChatRoomGroupHeaderState::add_party_beacons() {
  ::CChatPartyBeacon* _add = _internal_add_party_beacons();
  // @@protoc_insertion_point(field_add:CChatRoomGroupHeaderState.party_beacons)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatPartyBeacon >&
CChatRoomGroupHeaderState::party_beacons() const {
  // @@protoc_insertion_point(field_list:CChatRoomGroupHeaderState.party_beacons)
  return party_beacons_;
}

// optional uint64 watching_broadcast_channel_id = 23;
inline bool CChatRoomGroupHeaderState::_internal_has_watching_broadcast_channel_id() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CChatRoomGroupHeaderState::has_watching_broadcast_channel_id() const {
  return _internal_has_watching_broadcast_channel_id();
}
inline void CChatRoomGroupHeaderState::clear_watching_broadcast_channel_id() {
  watching_broadcast_channel_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000800u;
}
inline uint64_t CChatRoomGroupHeaderState::_internal_watching_broadcast_channel_id() const {
  return watching_broadcast_channel_id_;
}
inline uint64_t CChatRoomGroupHeaderState::watching_broadcast_channel_id() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.watching_broadcast_channel_id)
  return _internal_watching_broadcast_channel_id();
}
inline void CChatRoomGroupHeaderState::_internal_set_watching_broadcast_channel_id(uint64_t value) {
  _has_bits_[0] |= 0x00000800u;
  watching_broadcast_channel_id_ = value;
}
inline void CChatRoomGroupHeaderState::set_watching_broadcast_channel_id(uint64_t value) {
  _internal_set_watching_broadcast_channel_id(value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.watching_broadcast_channel_id)
}

// optional uint64 active_minigame_id = 24;
inline bool CChatRoomGroupHeaderState::_internal_has_active_minigame_id() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CChatRoomGroupHeaderState::has_active_minigame_id() const {
  return _internal_has_active_minigame_id();
}
inline void CChatRoomGroupHeaderState::clear_active_minigame_id() {
  active_minigame_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00001000u;
}
inline uint64_t CChatRoomGroupHeaderState::_internal_active_minigame_id() const {
  return active_minigame_id_;
}
inline uint64_t CChatRoomGroupHeaderState::active_minigame_id() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.active_minigame_id)
  return _internal_active_minigame_id();
}
inline void CChatRoomGroupHeaderState::_internal_set_active_minigame_id(uint64_t value) {
  _has_bits_[0] |= 0x00001000u;
  active_minigame_id_ = value;
}
inline void CChatRoomGroupHeaderState::set_active_minigame_id(uint64_t value) {
  _internal_set_active_minigame_id(value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.active_minigame_id)
}

// optional string avatar_ugc_url = 25;
inline bool CChatRoomGroupHeaderState::_internal_has_avatar_ugc_url() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoomGroupHeaderState::has_avatar_ugc_url() const {
  return _internal_has_avatar_ugc_url();
}
inline void CChatRoomGroupHeaderState::clear_avatar_ugc_url() {
  avatar_ugc_url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CChatRoomGroupHeaderState::avatar_ugc_url() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.avatar_ugc_url)
  return _internal_avatar_ugc_url();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoomGroupHeaderState::set_avatar_ugc_url(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000008u;
 avatar_ugc_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.avatar_ugc_url)
}
inline std::string* CChatRoomGroupHeaderState::mutable_avatar_ugc_url() {
  std::string* _s = _internal_mutable_avatar_ugc_url();
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupHeaderState.avatar_ugc_url)
  return _s;
}
inline const std::string& CChatRoomGroupHeaderState::_internal_avatar_ugc_url() const {
  return avatar_ugc_url_.Get();
}
inline void CChatRoomGroupHeaderState::_internal_set_avatar_ugc_url(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  avatar_ugc_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoomGroupHeaderState::_internal_mutable_avatar_ugc_url() {
  _has_bits_[0] |= 0x00000008u;
  return avatar_ugc_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoomGroupHeaderState::release_avatar_ugc_url() {
  // @@protoc_insertion_point(field_release:CChatRoomGroupHeaderState.avatar_ugc_url)
  if (!_internal_has_avatar_ugc_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  auto* p = avatar_ugc_url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (avatar_ugc_url_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    avatar_ugc_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoomGroupHeaderState::set_allocated_avatar_ugc_url(std::string* avatar_ugc_url) {
  if (avatar_ugc_url != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  avatar_ugc_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_ugc_url,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (avatar_ugc_url_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    avatar_ugc_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoomGroupHeaderState.avatar_ugc_url)
}

// optional bool disabled = 26;
inline bool CChatRoomGroupHeaderState::_internal_has_disabled() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CChatRoomGroupHeaderState::has_disabled() const {
  return _internal_has_disabled();
}
inline void CChatRoomGroupHeaderState::clear_disabled() {
  disabled_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CChatRoomGroupHeaderState::_internal_disabled() const {
  return disabled_;
}
inline bool CChatRoomGroupHeaderState::disabled() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupHeaderState.disabled)
  return _internal_disabled();
}
inline void CChatRoomGroupHeaderState::_internal_set_disabled(bool value) {
  _has_bits_[0] |= 0x00000100u;
  disabled_ = value;
}
inline void CChatRoomGroupHeaderState::set_disabled(bool value) {
  _internal_set_disabled(value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupHeaderState.disabled)
}

// -------------------------------------------------------------------

// CChatRoomMember

// optional uint32 accountid = 1;
inline bool CChatRoomMember::_internal_has_accountid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoomMember::has_accountid() const {
  return _internal_has_accountid();
}
inline void CChatRoomMember::clear_accountid() {
  accountid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CChatRoomMember::_internal_accountid() const {
  return accountid_;
}
inline uint32_t CChatRoomMember::accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoomMember.accountid)
  return _internal_accountid();
}
inline void CChatRoomMember::_internal_set_accountid(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  accountid_ = value;
}
inline void CChatRoomMember::set_accountid(uint32_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:CChatRoomMember.accountid)
}

// optional .EChatRoomJoinState state = 3 [default = k_EChatRoomJoinState_Default];
inline bool CChatRoomMember::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoomMember::has_state() const {
  return _internal_has_state();
}
inline void CChatRoomMember::clear_state() {
  state_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::EChatRoomJoinState CChatRoomMember::_internal_state() const {
  return static_cast< ::EChatRoomJoinState >(state_);
}
inline ::EChatRoomJoinState CChatRoomMember::state() const {
  // @@protoc_insertion_point(field_get:CChatRoomMember.state)
  return _internal_state();
}
inline void CChatRoomMember::_internal_set_state(::EChatRoomJoinState value) {
  assert(::EChatRoomJoinState_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  state_ = value;
}
inline void CChatRoomMember::set_state(::EChatRoomJoinState value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:CChatRoomMember.state)
}

// optional .EChatRoomGroupRank rank = 4 [default = k_EChatRoomGroupRank_Default];
inline bool CChatRoomMember::_internal_has_rank() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoomMember::has_rank() const {
  return _internal_has_rank();
}
inline void CChatRoomMember::clear_rank() {
  rank_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::EChatRoomGroupRank CChatRoomMember::_internal_rank() const {
  return static_cast< ::EChatRoomGroupRank >(rank_);
}
inline ::EChatRoomGroupRank CChatRoomMember::rank() const {
  // @@protoc_insertion_point(field_get:CChatRoomMember.rank)
  return _internal_rank();
}
inline void CChatRoomMember::_internal_set_rank(::EChatRoomGroupRank value) {
  assert(::EChatRoomGroupRank_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  rank_ = value;
}
inline void CChatRoomMember::set_rank(::EChatRoomGroupRank value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:CChatRoomMember.rank)
}

// optional uint32 time_kick_expire = 6;
inline bool CChatRoomMember::_internal_has_time_kick_expire() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoomMember::has_time_kick_expire() const {
  return _internal_has_time_kick_expire();
}
inline void CChatRoomMember::clear_time_kick_expire() {
  time_kick_expire_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CChatRoomMember::_internal_time_kick_expire() const {
  return time_kick_expire_;
}
inline uint32_t CChatRoomMember::time_kick_expire() const {
  // @@protoc_insertion_point(field_get:CChatRoomMember.time_kick_expire)
  return _internal_time_kick_expire();
}
inline void CChatRoomMember::_internal_set_time_kick_expire(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  time_kick_expire_ = value;
}
inline void CChatRoomMember::set_time_kick_expire(uint32_t value) {
  _internal_set_time_kick_expire(value);
  // @@protoc_insertion_point(field_set:CChatRoomMember.time_kick_expire)
}

// repeated uint64 role_ids = 7;
inline int CChatRoomMember::_internal_role_ids_size() const {
  return role_ids_.size();
}
inline int CChatRoomMember::role_ids_size() const {
  return _internal_role_ids_size();
}
inline void CChatRoomMember::clear_role_ids() {
  role_ids_.Clear();
}
inline uint64_t CChatRoomMember::_internal_role_ids(int index) const {
  return role_ids_.Get(index);
}
inline uint64_t CChatRoomMember::role_ids(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomMember.role_ids)
  return _internal_role_ids(index);
}
inline void CChatRoomMember::set_role_ids(int index, uint64_t value) {
  role_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoomMember.role_ids)
}
inline void CChatRoomMember::_internal_add_role_ids(uint64_t value) {
  role_ids_.Add(value);
}
inline void CChatRoomMember::add_role_ids(uint64_t value) {
  _internal_add_role_ids(value);
  // @@protoc_insertion_point(field_add:CChatRoomMember.role_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CChatRoomMember::_internal_role_ids() const {
  return role_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CChatRoomMember::role_ids() const {
  // @@protoc_insertion_point(field_list:CChatRoomMember.role_ids)
  return _internal_role_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CChatRoomMember::_internal_mutable_role_ids() {
  return &role_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CChatRoomMember::mutable_role_ids() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomMember.role_ids)
  return _internal_mutable_role_ids();
}

// -------------------------------------------------------------------

// CChatRoomState

// optional uint64 chat_id = 1;
inline bool CChatRoomState::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoomState::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoomState::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoomState::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoomState::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoomState.chat_id)
  return _internal_chat_id();
}
inline void CChatRoomState::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  chat_id_ = value;
}
inline void CChatRoomState::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoomState.chat_id)
}

// optional string chat_name = 2;
inline bool CChatRoomState::_internal_has_chat_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoomState::has_chat_name() const {
  return _internal_has_chat_name();
}
inline void CChatRoomState::clear_chat_name() {
  chat_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoomState::chat_name() const {
  // @@protoc_insertion_point(field_get:CChatRoomState.chat_name)
  return _internal_chat_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoomState::set_chat_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 chat_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoomState.chat_name)
}
inline std::string* CChatRoomState::mutable_chat_name() {
  std::string* _s = _internal_mutable_chat_name();
  // @@protoc_insertion_point(field_mutable:CChatRoomState.chat_name)
  return _s;
}
inline const std::string& CChatRoomState::_internal_chat_name() const {
  return chat_name_.Get();
}
inline void CChatRoomState::_internal_set_chat_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  chat_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoomState::_internal_mutable_chat_name() {
  _has_bits_[0] |= 0x00000001u;
  return chat_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoomState::release_chat_name() {
  // @@protoc_insertion_point(field_release:CChatRoomState.chat_name)
  if (!_internal_has_chat_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = chat_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (chat_name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    chat_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoomState::set_allocated_chat_name(std::string* chat_name) {
  if (chat_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  chat_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), chat_name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (chat_name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    chat_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoomState.chat_name)
}

// optional bool voice_allowed = 3;
inline bool CChatRoomState::_internal_has_voice_allowed() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoomState::has_voice_allowed() const {
  return _internal_has_voice_allowed();
}
inline void CChatRoomState::clear_voice_allowed() {
  voice_allowed_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CChatRoomState::_internal_voice_allowed() const {
  return voice_allowed_;
}
inline bool CChatRoomState::voice_allowed() const {
  // @@protoc_insertion_point(field_get:CChatRoomState.voice_allowed)
  return _internal_voice_allowed();
}
inline void CChatRoomState::_internal_set_voice_allowed(bool value) {
  _has_bits_[0] |= 0x00000008u;
  voice_allowed_ = value;
}
inline void CChatRoomState::set_voice_allowed(bool value) {
  _internal_set_voice_allowed(value);
  // @@protoc_insertion_point(field_set:CChatRoomState.voice_allowed)
}

// repeated uint32 members_in_voice = 4;
inline int CChatRoomState::_internal_members_in_voice_size() const {
  return members_in_voice_.size();
}
inline int CChatRoomState::members_in_voice_size() const {
  return _internal_members_in_voice_size();
}
inline void CChatRoomState::clear_members_in_voice() {
  members_in_voice_.Clear();
}
inline uint32_t CChatRoomState::_internal_members_in_voice(int index) const {
  return members_in_voice_.Get(index);
}
inline uint32_t CChatRoomState::members_in_voice(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomState.members_in_voice)
  return _internal_members_in_voice(index);
}
inline void CChatRoomState::set_members_in_voice(int index, uint32_t value) {
  members_in_voice_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoomState.members_in_voice)
}
inline void CChatRoomState::_internal_add_members_in_voice(uint32_t value) {
  members_in_voice_.Add(value);
}
inline void CChatRoomState::add_members_in_voice(uint32_t value) {
  _internal_add_members_in_voice(value);
  // @@protoc_insertion_point(field_add:CChatRoomState.members_in_voice)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CChatRoomState::_internal_members_in_voice() const {
  return members_in_voice_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CChatRoomState::members_in_voice() const {
  // @@protoc_insertion_point(field_list:CChatRoomState.members_in_voice)
  return _internal_members_in_voice();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CChatRoomState::_internal_mutable_members_in_voice() {
  return &members_in_voice_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CChatRoomState::mutable_members_in_voice() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomState.members_in_voice)
  return _internal_mutable_members_in_voice();
}

// optional uint32 time_last_message = 5;
inline bool CChatRoomState::_internal_has_time_last_message() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatRoomState::has_time_last_message() const {
  return _internal_has_time_last_message();
}
inline void CChatRoomState::clear_time_last_message() {
  time_last_message_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CChatRoomState::_internal_time_last_message() const {
  return time_last_message_;
}
inline uint32_t CChatRoomState::time_last_message() const {
  // @@protoc_insertion_point(field_get:CChatRoomState.time_last_message)
  return _internal_time_last_message();
}
inline void CChatRoomState::_internal_set_time_last_message(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  time_last_message_ = value;
}
inline void CChatRoomState::set_time_last_message(uint32_t value) {
  _internal_set_time_last_message(value);
  // @@protoc_insertion_point(field_set:CChatRoomState.time_last_message)
}

// optional uint32 sort_order = 6;
inline bool CChatRoomState::_internal_has_sort_order() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatRoomState::has_sort_order() const {
  return _internal_has_sort_order();
}
inline void CChatRoomState::clear_sort_order() {
  sort_order_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CChatRoomState::_internal_sort_order() const {
  return sort_order_;
}
inline uint32_t CChatRoomState::sort_order() const {
  // @@protoc_insertion_point(field_get:CChatRoomState.sort_order)
  return _internal_sort_order();
}
inline void CChatRoomState::_internal_set_sort_order(uint32_t value) {
  _has_bits_[0] |= 0x00000020u;
  sort_order_ = value;
}
inline void CChatRoomState::set_sort_order(uint32_t value) {
  _internal_set_sort_order(value);
  // @@protoc_insertion_point(field_set:CChatRoomState.sort_order)
}

// optional string last_message = 7;
inline bool CChatRoomState::_internal_has_last_message() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoomState::has_last_message() const {
  return _internal_has_last_message();
}
inline void CChatRoomState::clear_last_message() {
  last_message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CChatRoomState::last_message() const {
  // @@protoc_insertion_point(field_get:CChatRoomState.last_message)
  return _internal_last_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoomState::set_last_message(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 last_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoomState.last_message)
}
inline std::string* CChatRoomState::mutable_last_message() {
  std::string* _s = _internal_mutable_last_message();
  // @@protoc_insertion_point(field_mutable:CChatRoomState.last_message)
  return _s;
}
inline const std::string& CChatRoomState::_internal_last_message() const {
  return last_message_.Get();
}
inline void CChatRoomState::_internal_set_last_message(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  last_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoomState::_internal_mutable_last_message() {
  _has_bits_[0] |= 0x00000002u;
  return last_message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoomState::release_last_message() {
  // @@protoc_insertion_point(field_release:CChatRoomState.last_message)
  if (!_internal_has_last_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  auto* p = last_message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (last_message_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    last_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoomState::set_allocated_last_message(std::string* last_message) {
  if (last_message != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  last_message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_message,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (last_message_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    last_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoomState.last_message)
}

// optional uint32 accountid_last_message = 8;
inline bool CChatRoomState::_internal_has_accountid_last_message() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatRoomState::has_accountid_last_message() const {
  return _internal_has_accountid_last_message();
}
inline void CChatRoomState::clear_accountid_last_message() {
  accountid_last_message_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CChatRoomState::_internal_accountid_last_message() const {
  return accountid_last_message_;
}
inline uint32_t CChatRoomState::accountid_last_message() const {
  // @@protoc_insertion_point(field_get:CChatRoomState.accountid_last_message)
  return _internal_accountid_last_message();
}
inline void CChatRoomState::_internal_set_accountid_last_message(uint32_t value) {
  _has_bits_[0] |= 0x00000040u;
  accountid_last_message_ = value;
}
inline void CChatRoomState::set_accountid_last_message(uint32_t value) {
  _internal_set_accountid_last_message(value);
  // @@protoc_insertion_point(field_set:CChatRoomState.accountid_last_message)
}

// -------------------------------------------------------------------

// CChatRoomGroupState

// optional .CChatRoomGroupHeaderState header_state = 1;
inline bool CChatRoomGroupState::_internal_has_header_state() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || header_state_ != nullptr);
  return value;
}
inline bool CChatRoomGroupState::has_header_state() const {
  return _internal_has_header_state();
}
inline void CChatRoomGroupState::clear_header_state() {
  if (header_state_ != nullptr) header_state_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatRoomGroupHeaderState& CChatRoomGroupState::_internal_header_state() const {
  const ::CChatRoomGroupHeaderState* p = header_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoomGroupHeaderState&>(
      ::_CChatRoomGroupHeaderState_default_instance_);
}
inline const ::CChatRoomGroupHeaderState& CChatRoomGroupState::header_state() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupState.header_state)
  return _internal_header_state();
}
inline void CChatRoomGroupState::unsafe_arena_set_allocated_header_state(
    ::CChatRoomGroupHeaderState* header_state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_state_);
  }
  header_state_ = header_state;
  if (header_state) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoomGroupState.header_state)
}
inline ::CChatRoomGroupHeaderState* CChatRoomGroupState::release_header_state() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomGroupHeaderState* temp = header_state_;
  header_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoomGroupHeaderState* CChatRoomGroupState::unsafe_arena_release_header_state() {
  // @@protoc_insertion_point(field_release:CChatRoomGroupState.header_state)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomGroupHeaderState* temp = header_state_;
  header_state_ = nullptr;
  return temp;
}
inline ::CChatRoomGroupHeaderState* CChatRoomGroupState::_internal_mutable_header_state() {
  _has_bits_[0] |= 0x00000001u;
  if (header_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoomGroupHeaderState>(GetArenaForAllocation());
    header_state_ = p;
  }
  return header_state_;
}
inline ::CChatRoomGroupHeaderState* CChatRoomGroupState::mutable_header_state() {
  ::CChatRoomGroupHeaderState* _msg = _internal_mutable_header_state();
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupState.header_state)
  return _msg;
}
inline void CChatRoomGroupState::set_allocated_header_state(::CChatRoomGroupHeaderState* header_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete header_state_;
  }
  if (header_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoomGroupHeaderState>::GetOwningArena(header_state);
    if (message_arena != submessage_arena) {
      header_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  header_state_ = header_state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoomGroupState.header_state)
}

// repeated .CChatRoomMember members = 2;
inline int CChatRoomGroupState::_internal_members_size() const {
  return members_.size();
}
inline int CChatRoomGroupState::members_size() const {
  return _internal_members_size();
}
inline void CChatRoomGroupState::clear_members() {
  members_.Clear();
}
inline ::CChatRoomMember* CChatRoomGroupState::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupState.members)
  return members_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomMember >*
CChatRoomGroupState::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomGroupState.members)
  return &members_;
}
inline const ::CChatRoomMember& CChatRoomGroupState::_internal_members(int index) const {
  return members_.Get(index);
}
inline const ::CChatRoomMember& CChatRoomGroupState::members(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupState.members)
  return _internal_members(index);
}
inline ::CChatRoomMember* CChatRoomGroupState::_internal_add_members() {
  return members_.Add();
}
inline ::CChatRoomMember* CChatRoomGroupState::add_members() {
  ::CChatRoomMember* _add = _internal_add_members();
  // @@protoc_insertion_point(field_add:CChatRoomGroupState.members)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomMember >&
CChatRoomGroupState::members() const {
  // @@protoc_insertion_point(field_list:CChatRoomGroupState.members)
  return members_;
}

// optional uint64 default_chat_id = 4;
inline bool CChatRoomGroupState::_internal_has_default_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoomGroupState::has_default_chat_id() const {
  return _internal_has_default_chat_id();
}
inline void CChatRoomGroupState::clear_default_chat_id() {
  default_chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoomGroupState::_internal_default_chat_id() const {
  return default_chat_id_;
}
inline uint64_t CChatRoomGroupState::default_chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupState.default_chat_id)
  return _internal_default_chat_id();
}
inline void CChatRoomGroupState::_internal_set_default_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  default_chat_id_ = value;
}
inline void CChatRoomGroupState::set_default_chat_id(uint64_t value) {
  _internal_set_default_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupState.default_chat_id)
}

// repeated .CChatRoomState chat_rooms = 5;
inline int CChatRoomGroupState::_internal_chat_rooms_size() const {
  return chat_rooms_.size();
}
inline int CChatRoomGroupState::chat_rooms_size() const {
  return _internal_chat_rooms_size();
}
inline void CChatRoomGroupState::clear_chat_rooms() {
  chat_rooms_.Clear();
}
inline ::CChatRoomState* CChatRoomGroupState::mutable_chat_rooms(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupState.chat_rooms)
  return chat_rooms_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState >*
CChatRoomGroupState::mutable_chat_rooms() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomGroupState.chat_rooms)
  return &chat_rooms_;
}
inline const ::CChatRoomState& CChatRoomGroupState::_internal_chat_rooms(int index) const {
  return chat_rooms_.Get(index);
}
inline const ::CChatRoomState& CChatRoomGroupState::chat_rooms(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupState.chat_rooms)
  return _internal_chat_rooms(index);
}
inline ::CChatRoomState* CChatRoomGroupState::_internal_add_chat_rooms() {
  return chat_rooms_.Add();
}
inline ::CChatRoomState* CChatRoomGroupState::add_chat_rooms() {
  ::CChatRoomState* _add = _internal_add_chat_rooms();
  // @@protoc_insertion_point(field_add:CChatRoomGroupState.chat_rooms)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState >&
CChatRoomGroupState::chat_rooms() const {
  // @@protoc_insertion_point(field_list:CChatRoomGroupState.chat_rooms)
  return chat_rooms_;
}

// repeated .CChatRoomMember kicked = 7;
inline int CChatRoomGroupState::_internal_kicked_size() const {
  return kicked_.size();
}
inline int CChatRoomGroupState::kicked_size() const {
  return _internal_kicked_size();
}
inline void CChatRoomGroupState::clear_kicked() {
  kicked_.Clear();
}
inline ::CChatRoomMember* CChatRoomGroupState::mutable_kicked(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoomGroupState.kicked)
  return kicked_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomMember >*
CChatRoomGroupState::mutable_kicked() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomGroupState.kicked)
  return &kicked_;
}
inline const ::CChatRoomMember& CChatRoomGroupState::_internal_kicked(int index) const {
  return kicked_.Get(index);
}
inline const ::CChatRoomMember& CChatRoomGroupState::kicked(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupState.kicked)
  return _internal_kicked(index);
}
inline ::CChatRoomMember* CChatRoomGroupState::_internal_add_kicked() {
  return kicked_.Add();
}
inline ::CChatRoomMember* CChatRoomGroupState::add_kicked() {
  ::CChatRoomMember* _add = _internal_add_kicked();
  // @@protoc_insertion_point(field_add:CChatRoomGroupState.kicked)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomMember >&
CChatRoomGroupState::kicked() const {
  // @@protoc_insertion_point(field_list:CChatRoomGroupState.kicked)
  return kicked_;
}

// -------------------------------------------------------------------

// CUserChatRoomState

// optional uint64 chat_id = 1;
inline bool CUserChatRoomState::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CUserChatRoomState::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CUserChatRoomState::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CUserChatRoomState::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CUserChatRoomState::chat_id() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.chat_id)
  return _internal_chat_id();
}
inline void CUserChatRoomState::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_id_ = value;
}
inline void CUserChatRoomState::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CUserChatRoomState.chat_id)
}

// optional uint32 time_joined = 2;
inline bool CUserChatRoomState::_internal_has_time_joined() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CUserChatRoomState::has_time_joined() const {
  return _internal_has_time_joined();
}
inline void CUserChatRoomState::clear_time_joined() {
  time_joined_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CUserChatRoomState::_internal_time_joined() const {
  return time_joined_;
}
inline uint32_t CUserChatRoomState::time_joined() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.time_joined)
  return _internal_time_joined();
}
inline void CUserChatRoomState::_internal_set_time_joined(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  time_joined_ = value;
}
inline void CUserChatRoomState::set_time_joined(uint32_t value) {
  _internal_set_time_joined(value);
  // @@protoc_insertion_point(field_set:CUserChatRoomState.time_joined)
}

// optional uint32 time_last_ack = 3;
inline bool CUserChatRoomState::_internal_has_time_last_ack() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CUserChatRoomState::has_time_last_ack() const {
  return _internal_has_time_last_ack();
}
inline void CUserChatRoomState::clear_time_last_ack() {
  time_last_ack_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CUserChatRoomState::_internal_time_last_ack() const {
  return time_last_ack_;
}
inline uint32_t CUserChatRoomState::time_last_ack() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.time_last_ack)
  return _internal_time_last_ack();
}
inline void CUserChatRoomState::_internal_set_time_last_ack(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  time_last_ack_ = value;
}
inline void CUserChatRoomState::set_time_last_ack(uint32_t value) {
  _internal_set_time_last_ack(value);
  // @@protoc_insertion_point(field_set:CUserChatRoomState.time_last_ack)
}

// optional .EChatRoomNotificationLevel desktop_notification_level = 4 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CUserChatRoomState::_internal_has_desktop_notification_level() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CUserChatRoomState::has_desktop_notification_level() const {
  return _internal_has_desktop_notification_level();
}
inline void CUserChatRoomState::clear_desktop_notification_level() {
  desktop_notification_level_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::EChatRoomNotificationLevel CUserChatRoomState::_internal_desktop_notification_level() const {
  return static_cast< ::EChatRoomNotificationLevel >(desktop_notification_level_);
}
inline ::EChatRoomNotificationLevel CUserChatRoomState::desktop_notification_level() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.desktop_notification_level)
  return _internal_desktop_notification_level();
}
inline void CUserChatRoomState::_internal_set_desktop_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  desktop_notification_level_ = value;
}
inline void CUserChatRoomState::set_desktop_notification_level(::EChatRoomNotificationLevel value) {
  _internal_set_desktop_notification_level(value);
  // @@protoc_insertion_point(field_set:CUserChatRoomState.desktop_notification_level)
}

// optional .EChatRoomNotificationLevel mobile_notification_level = 5 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CUserChatRoomState::_internal_has_mobile_notification_level() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CUserChatRoomState::has_mobile_notification_level() const {
  return _internal_has_mobile_notification_level();
}
inline void CUserChatRoomState::clear_mobile_notification_level() {
  mobile_notification_level_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::EChatRoomNotificationLevel CUserChatRoomState::_internal_mobile_notification_level() const {
  return static_cast< ::EChatRoomNotificationLevel >(mobile_notification_level_);
}
inline ::EChatRoomNotificationLevel CUserChatRoomState::mobile_notification_level() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.mobile_notification_level)
  return _internal_mobile_notification_level();
}
inline void CUserChatRoomState::_internal_set_mobile_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  mobile_notification_level_ = value;
}
inline void CUserChatRoomState::set_mobile_notification_level(::EChatRoomNotificationLevel value) {
  _internal_set_mobile_notification_level(value);
  // @@protoc_insertion_point(field_set:CUserChatRoomState.mobile_notification_level)
}

// optional uint32 time_last_mention = 6;
inline bool CUserChatRoomState::_internal_has_time_last_mention() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CUserChatRoomState::has_time_last_mention() const {
  return _internal_has_time_last_mention();
}
inline void CUserChatRoomState::clear_time_last_mention() {
  time_last_mention_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CUserChatRoomState::_internal_time_last_mention() const {
  return time_last_mention_;
}
inline uint32_t CUserChatRoomState::time_last_mention() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.time_last_mention)
  return _internal_time_last_mention();
}
inline void CUserChatRoomState::_internal_set_time_last_mention(uint32_t value) {
  _has_bits_[0] |= 0x00000020u;
  time_last_mention_ = value;
}
inline void CUserChatRoomState::set_time_last_mention(uint32_t value) {
  _internal_set_time_last_mention(value);
  // @@protoc_insertion_point(field_set:CUserChatRoomState.time_last_mention)
}

// optional bool unread_indicator_muted = 7 [default = false];
inline bool CUserChatRoomState::_internal_has_unread_indicator_muted() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CUserChatRoomState::has_unread_indicator_muted() const {
  return _internal_has_unread_indicator_muted();
}
inline void CUserChatRoomState::clear_unread_indicator_muted() {
  unread_indicator_muted_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CUserChatRoomState::_internal_unread_indicator_muted() const {
  return unread_indicator_muted_;
}
inline bool CUserChatRoomState::unread_indicator_muted() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.unread_indicator_muted)
  return _internal_unread_indicator_muted();
}
inline void CUserChatRoomState::_internal_set_unread_indicator_muted(bool value) {
  _has_bits_[0] |= 0x00000040u;
  unread_indicator_muted_ = value;
}
inline void CUserChatRoomState::set_unread_indicator_muted(bool value) {
  _internal_set_unread_indicator_muted(value);
  // @@protoc_insertion_point(field_set:CUserChatRoomState.unread_indicator_muted)
}

// optional uint32 time_first_unread = 8;
inline bool CUserChatRoomState::_internal_has_time_first_unread() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CUserChatRoomState::has_time_first_unread() const {
  return _internal_has_time_first_unread();
}
inline void CUserChatRoomState::clear_time_first_unread() {
  time_first_unread_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CUserChatRoomState::_internal_time_first_unread() const {
  return time_first_unread_;
}
inline uint32_t CUserChatRoomState::time_first_unread() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomState.time_first_unread)
  return _internal_time_first_unread();
}
inline void CUserChatRoomState::_internal_set_time_first_unread(uint32_t value) {
  _has_bits_[0] |= 0x00000080u;
  time_first_unread_ = value;
}
inline void CUserChatRoomState::set_time_first_unread(uint32_t value) {
  _internal_set_time_first_unread(value);
  // @@protoc_insertion_point(field_set:CUserChatRoomState.time_first_unread)
}

// -------------------------------------------------------------------

// CUserChatRoomGroupState

// optional uint64 chat_group_id = 1;
inline bool CUserChatRoomGroupState::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CUserChatRoomGroupState::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CUserChatRoomGroupState::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CUserChatRoomGroupState::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CUserChatRoomGroupState::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomGroupState.chat_group_id)
  return _internal_chat_group_id();
}
inline void CUserChatRoomGroupState::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CUserChatRoomGroupState::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CUserChatRoomGroupState.chat_group_id)
}

// optional uint32 time_joined = 2;
inline bool CUserChatRoomGroupState::_internal_has_time_joined() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CUserChatRoomGroupState::has_time_joined() const {
  return _internal_has_time_joined();
}
inline void CUserChatRoomGroupState::clear_time_joined() {
  time_joined_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CUserChatRoomGroupState::_internal_time_joined() const {
  return time_joined_;
}
inline uint32_t CUserChatRoomGroupState::time_joined() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomGroupState.time_joined)
  return _internal_time_joined();
}
inline void CUserChatRoomGroupState::_internal_set_time_joined(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  time_joined_ = value;
}
inline void CUserChatRoomGroupState::set_time_joined(uint32_t value) {
  _internal_set_time_joined(value);
  // @@protoc_insertion_point(field_set:CUserChatRoomGroupState.time_joined)
}

// repeated .CUserChatRoomState user_chat_room_state = 3;
inline int CUserChatRoomGroupState::_internal_user_chat_room_state_size() const {
  return user_chat_room_state_.size();
}
inline int CUserChatRoomGroupState::user_chat_room_state_size() const {
  return _internal_user_chat_room_state_size();
}
inline void CUserChatRoomGroupState::clear_user_chat_room_state() {
  user_chat_room_state_.Clear();
}
inline ::CUserChatRoomState* CUserChatRoomGroupState::mutable_user_chat_room_state(int index) {
  // @@protoc_insertion_point(field_mutable:CUserChatRoomGroupState.user_chat_room_state)
  return user_chat_room_state_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CUserChatRoomState >*
CUserChatRoomGroupState::mutable_user_chat_room_state() {
  // @@protoc_insertion_point(field_mutable_list:CUserChatRoomGroupState.user_chat_room_state)
  return &user_chat_room_state_;
}
inline const ::CUserChatRoomState& CUserChatRoomGroupState::_internal_user_chat_room_state(int index) const {
  return user_chat_room_state_.Get(index);
}
inline const ::CUserChatRoomState& CUserChatRoomGroupState::user_chat_room_state(int index) const {
  // @@protoc_insertion_point(field_get:CUserChatRoomGroupState.user_chat_room_state)
  return _internal_user_chat_room_state(index);
}
inline ::CUserChatRoomState* CUserChatRoomGroupState::_internal_add_user_chat_room_state() {
  return user_chat_room_state_.Add();
}
inline ::CUserChatRoomState* CUserChatRoomGroupState::add_user_chat_room_state() {
  ::CUserChatRoomState* _add = _internal_add_user_chat_room_state();
  // @@protoc_insertion_point(field_add:CUserChatRoomGroupState.user_chat_room_state)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CUserChatRoomState >&
CUserChatRoomGroupState::user_chat_room_state() const {
  // @@protoc_insertion_point(field_list:CUserChatRoomGroupState.user_chat_room_state)
  return user_chat_room_state_;
}

// optional .EChatRoomNotificationLevel desktop_notification_level = 4 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CUserChatRoomGroupState::_internal_has_desktop_notification_level() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CUserChatRoomGroupState::has_desktop_notification_level() const {
  return _internal_has_desktop_notification_level();
}
inline void CUserChatRoomGroupState::clear_desktop_notification_level() {
  desktop_notification_level_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::EChatRoomNotificationLevel CUserChatRoomGroupState::_internal_desktop_notification_level() const {
  return static_cast< ::EChatRoomNotificationLevel >(desktop_notification_level_);
}
inline ::EChatRoomNotificationLevel CUserChatRoomGroupState::desktop_notification_level() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomGroupState.desktop_notification_level)
  return _internal_desktop_notification_level();
}
inline void CUserChatRoomGroupState::_internal_set_desktop_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  desktop_notification_level_ = value;
}
inline void CUserChatRoomGroupState::set_desktop_notification_level(::EChatRoomNotificationLevel value) {
  _internal_set_desktop_notification_level(value);
  // @@protoc_insertion_point(field_set:CUserChatRoomGroupState.desktop_notification_level)
}

// optional .EChatRoomNotificationLevel mobile_notification_level = 5 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CUserChatRoomGroupState::_internal_has_mobile_notification_level() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CUserChatRoomGroupState::has_mobile_notification_level() const {
  return _internal_has_mobile_notification_level();
}
inline void CUserChatRoomGroupState::clear_mobile_notification_level() {
  mobile_notification_level_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::EChatRoomNotificationLevel CUserChatRoomGroupState::_internal_mobile_notification_level() const {
  return static_cast< ::EChatRoomNotificationLevel >(mobile_notification_level_);
}
inline ::EChatRoomNotificationLevel CUserChatRoomGroupState::mobile_notification_level() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomGroupState.mobile_notification_level)
  return _internal_mobile_notification_level();
}
inline void CUserChatRoomGroupState::_internal_set_mobile_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  mobile_notification_level_ = value;
}
inline void CUserChatRoomGroupState::set_mobile_notification_level(::EChatRoomNotificationLevel value) {
  _internal_set_mobile_notification_level(value);
  // @@protoc_insertion_point(field_set:CUserChatRoomGroupState.mobile_notification_level)
}

// optional uint32 time_last_group_ack = 6;
inline bool CUserChatRoomGroupState::_internal_has_time_last_group_ack() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CUserChatRoomGroupState::has_time_last_group_ack() const {
  return _internal_has_time_last_group_ack();
}
inline void CUserChatRoomGroupState::clear_time_last_group_ack() {
  time_last_group_ack_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CUserChatRoomGroupState::_internal_time_last_group_ack() const {
  return time_last_group_ack_;
}
inline uint32_t CUserChatRoomGroupState::time_last_group_ack() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomGroupState.time_last_group_ack)
  return _internal_time_last_group_ack();
}
inline void CUserChatRoomGroupState::_internal_set_time_last_group_ack(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  time_last_group_ack_ = value;
}
inline void CUserChatRoomGroupState::set_time_last_group_ack(uint32_t value) {
  _internal_set_time_last_group_ack(value);
  // @@protoc_insertion_point(field_set:CUserChatRoomGroupState.time_last_group_ack)
}

// optional bool unread_indicator_muted = 7 [default = false];
inline bool CUserChatRoomGroupState::_internal_has_unread_indicator_muted() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CUserChatRoomGroupState::has_unread_indicator_muted() const {
  return _internal_has_unread_indicator_muted();
}
inline void CUserChatRoomGroupState::clear_unread_indicator_muted() {
  unread_indicator_muted_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CUserChatRoomGroupState::_internal_unread_indicator_muted() const {
  return unread_indicator_muted_;
}
inline bool CUserChatRoomGroupState::unread_indicator_muted() const {
  // @@protoc_insertion_point(field_get:CUserChatRoomGroupState.unread_indicator_muted)
  return _internal_unread_indicator_muted();
}
inline void CUserChatRoomGroupState::_internal_set_unread_indicator_muted(bool value) {
  _has_bits_[0] |= 0x00000020u;
  unread_indicator_muted_ = value;
}
inline void CUserChatRoomGroupState::set_unread_indicator_muted(bool value) {
  _internal_set_unread_indicator_muted(value);
  // @@protoc_insertion_point(field_set:CUserChatRoomGroupState.unread_indicator_muted)
}

// -------------------------------------------------------------------

// CChatRoom_CreateChatRoomGroup_Response

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_CreateChatRoomGroup_Response::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_CreateChatRoomGroup_Response::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_CreateChatRoomGroup_Response::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_CreateChatRoomGroup_Response::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_CreateChatRoomGroup_Response::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Response.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_CreateChatRoomGroup_Response::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  chat_group_id_ = value;
}
inline void CChatRoom_CreateChatRoomGroup_Response::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoomGroup_Response.chat_group_id)
}

// optional .CChatRoomGroupState state = 2;
inline bool CChatRoom_CreateChatRoomGroup_Response::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || state_ != nullptr);
  return value;
}
inline bool CChatRoom_CreateChatRoomGroup_Response::has_state() const {
  return _internal_has_state();
}
inline void CChatRoom_CreateChatRoomGroup_Response::clear_state() {
  if (state_ != nullptr) state_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatRoomGroupState& CChatRoom_CreateChatRoomGroup_Response::_internal_state() const {
  const ::CChatRoomGroupState* p = state_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoomGroupState&>(
      ::_CChatRoomGroupState_default_instance_);
}
inline const ::CChatRoomGroupState& CChatRoom_CreateChatRoomGroup_Response::state() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Response.state)
  return _internal_state();
}
inline void CChatRoom_CreateChatRoomGroup_Response::unsafe_arena_set_allocated_state(
    ::CChatRoomGroupState* state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(state_);
  }
  state_ = state;
  if (state) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_CreateChatRoomGroup_Response.state)
}
inline ::CChatRoomGroupState* CChatRoom_CreateChatRoomGroup_Response::release_state() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomGroupState* temp = state_;
  state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoomGroupState* CChatRoom_CreateChatRoomGroup_Response::unsafe_arena_release_state() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateChatRoomGroup_Response.state)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomGroupState* temp = state_;
  state_ = nullptr;
  return temp;
}
inline ::CChatRoomGroupState* CChatRoom_CreateChatRoomGroup_Response::_internal_mutable_state() {
  _has_bits_[0] |= 0x00000001u;
  if (state_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoomGroupState>(GetArenaForAllocation());
    state_ = p;
  }
  return state_;
}
inline ::CChatRoomGroupState* CChatRoom_CreateChatRoomGroup_Response::mutable_state() {
  ::CChatRoomGroupState* _msg = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateChatRoomGroup_Response.state)
  return _msg;
}
inline void CChatRoom_CreateChatRoomGroup_Response::set_allocated_state(::CChatRoomGroupState* state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete state_;
  }
  if (state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoomGroupState>::GetOwningArena(state);
    if (message_arena != submessage_arena) {
      state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateChatRoomGroup_Response.state)
}

// optional .CUserChatRoomGroupState user_chat_state = 3;
inline bool CChatRoom_CreateChatRoomGroup_Response::_internal_has_user_chat_state() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || user_chat_state_ != nullptr);
  return value;
}
inline bool CChatRoom_CreateChatRoomGroup_Response::has_user_chat_state() const {
  return _internal_has_user_chat_state();
}
inline void CChatRoom_CreateChatRoomGroup_Response::clear_user_chat_state() {
  if (user_chat_state_ != nullptr) user_chat_state_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CUserChatRoomGroupState& CChatRoom_CreateChatRoomGroup_Response::_internal_user_chat_state() const {
  const ::CUserChatRoomGroupState* p = user_chat_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::CUserChatRoomGroupState&>(
      ::_CUserChatRoomGroupState_default_instance_);
}
inline const ::CUserChatRoomGroupState& CChatRoom_CreateChatRoomGroup_Response::user_chat_state() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoomGroup_Response.user_chat_state)
  return _internal_user_chat_state();
}
inline void CChatRoom_CreateChatRoomGroup_Response::unsafe_arena_set_allocated_user_chat_state(
    ::CUserChatRoomGroupState* user_chat_state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(user_chat_state_);
  }
  user_chat_state_ = user_chat_state;
  if (user_chat_state) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_CreateChatRoomGroup_Response.user_chat_state)
}
inline ::CUserChatRoomGroupState* CChatRoom_CreateChatRoomGroup_Response::release_user_chat_state() {
  _has_bits_[0] &= ~0x00000002u;
  ::CUserChatRoomGroupState* temp = user_chat_state_;
  user_chat_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CUserChatRoomGroupState* CChatRoom_CreateChatRoomGroup_Response::unsafe_arena_release_user_chat_state() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateChatRoomGroup_Response.user_chat_state)
  _has_bits_[0] &= ~0x00000002u;
  ::CUserChatRoomGroupState* temp = user_chat_state_;
  user_chat_state_ = nullptr;
  return temp;
}
inline ::CUserChatRoomGroupState* CChatRoom_CreateChatRoomGroup_Response::_internal_mutable_user_chat_state() {
  _has_bits_[0] |= 0x00000002u;
  if (user_chat_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserChatRoomGroupState>(GetArenaForAllocation());
    user_chat_state_ = p;
  }
  return user_chat_state_;
}
inline ::CUserChatRoomGroupState* CChatRoom_CreateChatRoomGroup_Response::mutable_user_chat_state() {
  ::CUserChatRoomGroupState* _msg = _internal_mutable_user_chat_state();
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateChatRoomGroup_Response.user_chat_state)
  return _msg;
}
inline void CChatRoom_CreateChatRoomGroup_Response::set_allocated_user_chat_state(::CUserChatRoomGroupState* user_chat_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete user_chat_state_;
  }
  if (user_chat_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CUserChatRoomGroupState>::GetOwningArena(user_chat_state);
    if (message_arena != submessage_arena) {
      user_chat_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_chat_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  user_chat_state_ = user_chat_state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateChatRoomGroup_Response.user_chat_state)
}

// -------------------------------------------------------------------

// CChatRoom_SaveChatRoomGroup_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SaveChatRoomGroup_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_SaveChatRoomGroup_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_SaveChatRoomGroup_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_SaveChatRoomGroup_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_SaveChatRoomGroup_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SaveChatRoomGroup_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_SaveChatRoomGroup_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_SaveChatRoomGroup_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SaveChatRoomGroup_Request.chat_group_id)
}

// optional string name = 2;
inline bool CChatRoom_SaveChatRoomGroup_Request::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SaveChatRoomGroup_Request::has_name() const {
  return _internal_has_name();
}
inline void CChatRoom_SaveChatRoomGroup_Request::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_SaveChatRoomGroup_Request::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SaveChatRoomGroup_Request.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_SaveChatRoomGroup_Request::set_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_SaveChatRoomGroup_Request.name)
}
inline std::string* CChatRoom_SaveChatRoomGroup_Request::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_SaveChatRoomGroup_Request.name)
  return _s;
}
inline const std::string& CChatRoom_SaveChatRoomGroup_Request::_internal_name() const {
  return name_.Get();
}
inline void CChatRoom_SaveChatRoomGroup_Request::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_SaveChatRoomGroup_Request::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_SaveChatRoomGroup_Request::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_SaveChatRoomGroup_Request.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_SaveChatRoomGroup_Request::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SaveChatRoomGroup_Request.name)
}

// -------------------------------------------------------------------

// CChatRoom_SaveChatRoomGroup_Response

// -------------------------------------------------------------------

// CChatRoom_RenameChatRoomGroup_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_RenameChatRoomGroup_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_RenameChatRoomGroup_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_RenameChatRoomGroup_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_RenameChatRoomGroup_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_RenameChatRoomGroup_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameChatRoomGroup_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_RenameChatRoomGroup_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_RenameChatRoomGroup_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_RenameChatRoomGroup_Request.chat_group_id)
}

// optional string name = 2;
inline bool CChatRoom_RenameChatRoomGroup_Request::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_RenameChatRoomGroup_Request::has_name() const {
  return _internal_has_name();
}
inline void CChatRoom_RenameChatRoomGroup_Request::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_RenameChatRoomGroup_Request::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameChatRoomGroup_Request.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_RenameChatRoomGroup_Request::set_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_RenameChatRoomGroup_Request.name)
}
inline std::string* CChatRoom_RenameChatRoomGroup_Request::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_RenameChatRoomGroup_Request.name)
  return _s;
}
inline const std::string& CChatRoom_RenameChatRoomGroup_Request::_internal_name() const {
  return name_.Get();
}
inline void CChatRoom_RenameChatRoomGroup_Request::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_RenameChatRoomGroup_Request::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_RenameChatRoomGroup_Request::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_RenameChatRoomGroup_Request.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_RenameChatRoomGroup_Request::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_RenameChatRoomGroup_Request.name)
}

// -------------------------------------------------------------------

// CChatRoom_RenameChatRoomGroup_Response

// optional string name = 1;
inline bool CChatRoom_RenameChatRoomGroup_Response::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_RenameChatRoomGroup_Response::has_name() const {
  return _internal_has_name();
}
inline void CChatRoom_RenameChatRoomGroup_Response::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_RenameChatRoomGroup_Response::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameChatRoomGroup_Response.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_RenameChatRoomGroup_Response::set_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_RenameChatRoomGroup_Response.name)
}
inline std::string* CChatRoom_RenameChatRoomGroup_Response::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_RenameChatRoomGroup_Response.name)
  return _s;
}
inline const std::string& CChatRoom_RenameChatRoomGroup_Response::_internal_name() const {
  return name_.Get();
}
inline void CChatRoom_RenameChatRoomGroup_Response::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_RenameChatRoomGroup_Response::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_RenameChatRoomGroup_Response::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_RenameChatRoomGroup_Response.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_RenameChatRoomGroup_Response::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_RenameChatRoomGroup_Response.name)
}

// -------------------------------------------------------------------

// CChatRoom_SetChatRoomGroupTagline_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SetChatRoomGroupTagline_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_SetChatRoomGroupTagline_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_SetChatRoomGroupTagline_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_SetChatRoomGroupTagline_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetChatRoomGroupTagline_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetChatRoomGroupTagline_Request.chat_group_id)
}

// optional string tagline = 2;
inline bool CChatRoom_SetChatRoomGroupTagline_Request::_internal_has_tagline() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SetChatRoomGroupTagline_Request::has_tagline() const {
  return _internal_has_tagline();
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::clear_tagline() {
  tagline_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_SetChatRoomGroupTagline_Request::tagline() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetChatRoomGroupTagline_Request.tagline)
  return _internal_tagline();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_SetChatRoomGroupTagline_Request::set_tagline(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 tagline_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_SetChatRoomGroupTagline_Request.tagline)
}
inline std::string* CChatRoom_SetChatRoomGroupTagline_Request::mutable_tagline() {
  std::string* _s = _internal_mutable_tagline();
  // @@protoc_insertion_point(field_mutable:CChatRoom_SetChatRoomGroupTagline_Request.tagline)
  return _s;
}
inline const std::string& CChatRoom_SetChatRoomGroupTagline_Request::_internal_tagline() const {
  return tagline_.Get();
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::_internal_set_tagline(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  tagline_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_SetChatRoomGroupTagline_Request::_internal_mutable_tagline() {
  _has_bits_[0] |= 0x00000001u;
  return tagline_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_SetChatRoomGroupTagline_Request::release_tagline() {
  // @@protoc_insertion_point(field_release:CChatRoom_SetChatRoomGroupTagline_Request.tagline)
  if (!_internal_has_tagline()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = tagline_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (tagline_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    tagline_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_SetChatRoomGroupTagline_Request::set_allocated_tagline(std::string* tagline) {
  if (tagline != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tagline_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tagline,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (tagline_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    tagline_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SetChatRoomGroupTagline_Request.tagline)
}

// -------------------------------------------------------------------

// CChatRoom_SetChatRoomGroupTagline_Response

// -------------------------------------------------------------------

// CChatRoom_SetChatRoomGroupAvatar_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SetChatRoomGroupAvatar_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_SetChatRoomGroupAvatar_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_SetChatRoomGroupAvatar_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_SetChatRoomGroupAvatar_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetChatRoomGroupAvatar_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetChatRoomGroupAvatar_Request.chat_group_id)
}

// optional bytes avatar_sha = 2;
inline bool CChatRoom_SetChatRoomGroupAvatar_Request::_internal_has_avatar_sha() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SetChatRoomGroupAvatar_Request::has_avatar_sha() const {
  return _internal_has_avatar_sha();
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::clear_avatar_sha() {
  avatar_sha_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_SetChatRoomGroupAvatar_Request::avatar_sha() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetChatRoomGroupAvatar_Request.avatar_sha)
  return _internal_avatar_sha();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_SetChatRoomGroupAvatar_Request::set_avatar_sha(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 avatar_sha_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_SetChatRoomGroupAvatar_Request.avatar_sha)
}
inline std::string* CChatRoom_SetChatRoomGroupAvatar_Request::mutable_avatar_sha() {
  std::string* _s = _internal_mutable_avatar_sha();
  // @@protoc_insertion_point(field_mutable:CChatRoom_SetChatRoomGroupAvatar_Request.avatar_sha)
  return _s;
}
inline const std::string& CChatRoom_SetChatRoomGroupAvatar_Request::_internal_avatar_sha() const {
  return avatar_sha_.Get();
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::_internal_set_avatar_sha(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  avatar_sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_SetChatRoomGroupAvatar_Request::_internal_mutable_avatar_sha() {
  _has_bits_[0] |= 0x00000001u;
  return avatar_sha_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_SetChatRoomGroupAvatar_Request::release_avatar_sha() {
  // @@protoc_insertion_point(field_release:CChatRoom_SetChatRoomGroupAvatar_Request.avatar_sha)
  if (!_internal_has_avatar_sha()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = avatar_sha_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (avatar_sha_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    avatar_sha_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_SetChatRoomGroupAvatar_Request::set_allocated_avatar_sha(std::string* avatar_sha) {
  if (avatar_sha != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  avatar_sha_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_sha,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (avatar_sha_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    avatar_sha_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SetChatRoomGroupAvatar_Request.avatar_sha)
}

// -------------------------------------------------------------------

// CChatRoom_SetChatRoomGroupAvatar_Response

// -------------------------------------------------------------------

// CChatRoom_SetChatRoomGroupWatchingBroadcast_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.chat_group_id)
}

// optional uint32 watching_broadcast_accountid = 2;
inline bool CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::_internal_has_watching_broadcast_accountid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::has_watching_broadcast_accountid() const {
  return _internal_has_watching_broadcast_accountid();
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::clear_watching_broadcast_accountid() {
  watching_broadcast_accountid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::_internal_watching_broadcast_accountid() const {
  return watching_broadcast_accountid_;
}
inline uint32_t CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::watching_broadcast_accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.watching_broadcast_accountid)
  return _internal_watching_broadcast_accountid();
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::_internal_set_watching_broadcast_accountid(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  watching_broadcast_accountid_ = value;
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::set_watching_broadcast_accountid(uint32_t value) {
  _internal_set_watching_broadcast_accountid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.watching_broadcast_accountid)
}

// optional uint64 watching_broadcast_channel_id = 3;
inline bool CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::_internal_has_watching_broadcast_channel_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::has_watching_broadcast_channel_id() const {
  return _internal_has_watching_broadcast_channel_id();
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::clear_watching_broadcast_channel_id() {
  watching_broadcast_channel_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::_internal_watching_broadcast_channel_id() const {
  return watching_broadcast_channel_id_;
}
inline uint64_t CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::watching_broadcast_channel_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.watching_broadcast_channel_id)
  return _internal_watching_broadcast_channel_id();
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::_internal_set_watching_broadcast_channel_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  watching_broadcast_channel_id_ = value;
}
inline void CChatRoom_SetChatRoomGroupWatchingBroadcast_Request::set_watching_broadcast_channel_id(uint64_t value) {
  _internal_set_watching_broadcast_channel_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.watching_broadcast_channel_id)
}

// -------------------------------------------------------------------

// CChatRoom_SetChatRoomGroupWatchingBroadcast_Response

// -------------------------------------------------------------------

// CChatRoom_JoinMiniGameForChatRoomGroup_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_JoinMiniGameForChatRoomGroup_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_JoinMiniGameForChatRoomGroup_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_JoinMiniGameForChatRoomGroup_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_JoinMiniGameForChatRoomGroup_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_JoinMiniGameForChatRoomGroup_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinMiniGameForChatRoomGroup_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_JoinMiniGameForChatRoomGroup_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_JoinMiniGameForChatRoomGroup_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_JoinMiniGameForChatRoomGroup_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_JoinMiniGameForChatRoomGroup_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_JoinMiniGameForChatRoomGroup_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_JoinMiniGameForChatRoomGroup_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_JoinMiniGameForChatRoomGroup_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_JoinMiniGameForChatRoomGroup_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinMiniGameForChatRoomGroup_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_JoinMiniGameForChatRoomGroup_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_id_ = value;
}
inline void CChatRoom_JoinMiniGameForChatRoomGroup_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_JoinMiniGameForChatRoomGroup_Request.chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_JoinMiniGameForChatRoomGroup_Response

// optional uint64 minigame_id = 1;
inline bool CChatRoom_JoinMiniGameForChatRoomGroup_Response::_internal_has_minigame_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_JoinMiniGameForChatRoomGroup_Response::has_minigame_id() const {
  return _internal_has_minigame_id();
}
inline void CChatRoom_JoinMiniGameForChatRoomGroup_Response::clear_minigame_id() {
  minigame_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_JoinMiniGameForChatRoomGroup_Response::_internal_minigame_id() const {
  return minigame_id_;
}
inline uint64_t CChatRoom_JoinMiniGameForChatRoomGroup_Response::minigame_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinMiniGameForChatRoomGroup_Response.minigame_id)
  return _internal_minigame_id();
}
inline void CChatRoom_JoinMiniGameForChatRoomGroup_Response::_internal_set_minigame_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  minigame_id_ = value;
}
inline void CChatRoom_JoinMiniGameForChatRoomGroup_Response::set_minigame_id(uint64_t value) {
  _internal_set_minigame_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_JoinMiniGameForChatRoomGroup_Response.minigame_id)
}

// -------------------------------------------------------------------

// CChatRoom_EndMiniGameForChatRoomGroup_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_EndMiniGameForChatRoomGroup_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_EndMiniGameForChatRoomGroup_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_EndMiniGameForChatRoomGroup_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_EndMiniGameForChatRoomGroup_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_EndMiniGameForChatRoomGroup_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_EndMiniGameForChatRoomGroup_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_EndMiniGameForChatRoomGroup_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_EndMiniGameForChatRoomGroup_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_EndMiniGameForChatRoomGroup_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_EndMiniGameForChatRoomGroup_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_EndMiniGameForChatRoomGroup_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_EndMiniGameForChatRoomGroup_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_EndMiniGameForChatRoomGroup_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_EndMiniGameForChatRoomGroup_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_EndMiniGameForChatRoomGroup_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_EndMiniGameForChatRoomGroup_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_id_ = value;
}
inline void CChatRoom_EndMiniGameForChatRoomGroup_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_EndMiniGameForChatRoomGroup_Request.chat_id)
}

// optional uint64 minigame_id = 3;
inline bool CChatRoom_EndMiniGameForChatRoomGroup_Request::_internal_has_minigame_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_EndMiniGameForChatRoomGroup_Request::has_minigame_id() const {
  return _internal_has_minigame_id();
}
inline void CChatRoom_EndMiniGameForChatRoomGroup_Request::clear_minigame_id() {
  minigame_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_EndMiniGameForChatRoomGroup_Request::_internal_minigame_id() const {
  return minigame_id_;
}
inline uint64_t CChatRoom_EndMiniGameForChatRoomGroup_Request::minigame_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_EndMiniGameForChatRoomGroup_Request.minigame_id)
  return _internal_minigame_id();
}
inline void CChatRoom_EndMiniGameForChatRoomGroup_Request::_internal_set_minigame_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  minigame_id_ = value;
}
inline void CChatRoom_EndMiniGameForChatRoomGroup_Request::set_minigame_id(uint64_t value) {
  _internal_set_minigame_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_EndMiniGameForChatRoomGroup_Request.minigame_id)
}

// -------------------------------------------------------------------

// CChatRoom_EndMiniGameForChatRoomGroup_Response

// -------------------------------------------------------------------

// CChatRoom_MuteUser_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_MuteUser_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_MuteUser_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_MuteUser_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_MuteUser_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_MuteUser_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MuteUser_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_MuteUser_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_MuteUser_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_MuteUser_Request.chat_group_id)
}

// optional fixed64 steamid = 2;
inline bool CChatRoom_MuteUser_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_MuteUser_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CChatRoom_MuteUser_Request::clear_steamid() {
  steamid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_MuteUser_Request::_internal_steamid() const {
  return steamid_;
}
inline uint64_t CChatRoom_MuteUser_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MuteUser_Request.steamid)
  return _internal_steamid();
}
inline void CChatRoom_MuteUser_Request::_internal_set_steamid(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CChatRoom_MuteUser_Request::set_steamid(uint64_t value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_MuteUser_Request.steamid)
}

// optional int32 expiration = 3;
inline bool CChatRoom_MuteUser_Request::_internal_has_expiration() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_MuteUser_Request::has_expiration() const {
  return _internal_has_expiration();
}
inline void CChatRoom_MuteUser_Request::clear_expiration() {
  expiration_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline int32_t CChatRoom_MuteUser_Request::_internal_expiration() const {
  return expiration_;
}
inline int32_t CChatRoom_MuteUser_Request::expiration() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MuteUser_Request.expiration)
  return _internal_expiration();
}
inline void CChatRoom_MuteUser_Request::_internal_set_expiration(int32_t value) {
  _has_bits_[0] |= 0x00000004u;
  expiration_ = value;
}
inline void CChatRoom_MuteUser_Request::set_expiration(int32_t value) {
  _internal_set_expiration(value);
  // @@protoc_insertion_point(field_set:CChatRoom_MuteUser_Request.expiration)
}

// -------------------------------------------------------------------

// CChatRoom_MuteUser_Response

// -------------------------------------------------------------------

// CChatRoom_KickUser_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_KickUser_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_KickUser_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_KickUser_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_KickUser_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_KickUser_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_KickUser_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_KickUser_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_KickUser_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_KickUser_Request.chat_group_id)
}

// optional fixed64 steamid = 2;
inline bool CChatRoom_KickUser_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_KickUser_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CChatRoom_KickUser_Request::clear_steamid() {
  steamid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_KickUser_Request::_internal_steamid() const {
  return steamid_;
}
inline uint64_t CChatRoom_KickUser_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_KickUser_Request.steamid)
  return _internal_steamid();
}
inline void CChatRoom_KickUser_Request::_internal_set_steamid(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CChatRoom_KickUser_Request::set_steamid(uint64_t value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_KickUser_Request.steamid)
}

// optional int32 expiration = 3;
inline bool CChatRoom_KickUser_Request::_internal_has_expiration() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_KickUser_Request::has_expiration() const {
  return _internal_has_expiration();
}
inline void CChatRoom_KickUser_Request::clear_expiration() {
  expiration_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline int32_t CChatRoom_KickUser_Request::_internal_expiration() const {
  return expiration_;
}
inline int32_t CChatRoom_KickUser_Request::expiration() const {
  // @@protoc_insertion_point(field_get:CChatRoom_KickUser_Request.expiration)
  return _internal_expiration();
}
inline void CChatRoom_KickUser_Request::_internal_set_expiration(int32_t value) {
  _has_bits_[0] |= 0x00000004u;
  expiration_ = value;
}
inline void CChatRoom_KickUser_Request::set_expiration(int32_t value) {
  _internal_set_expiration(value);
  // @@protoc_insertion_point(field_set:CChatRoom_KickUser_Request.expiration)
}

// -------------------------------------------------------------------

// CChatRoom_KickUser_Response

// -------------------------------------------------------------------

// CChatRoom_SetUserBanState_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SetUserBanState_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SetUserBanState_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_SetUserBanState_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_SetUserBanState_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_SetUserBanState_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserBanState_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_SetUserBanState_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_SetUserBanState_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserBanState_Request.chat_group_id)
}

// optional fixed64 steamid = 2;
inline bool CChatRoom_SetUserBanState_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_SetUserBanState_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CChatRoom_SetUserBanState_Request::clear_steamid() {
  steamid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_SetUserBanState_Request::_internal_steamid() const {
  return steamid_;
}
inline uint64_t CChatRoom_SetUserBanState_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserBanState_Request.steamid)
  return _internal_steamid();
}
inline void CChatRoom_SetUserBanState_Request::_internal_set_steamid(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CChatRoom_SetUserBanState_Request::set_steamid(uint64_t value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserBanState_Request.steamid)
}

// optional bool ban_state = 3;
inline bool CChatRoom_SetUserBanState_Request::_internal_has_ban_state() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_SetUserBanState_Request::has_ban_state() const {
  return _internal_has_ban_state();
}
inline void CChatRoom_SetUserBanState_Request::clear_ban_state() {
  ban_state_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CChatRoom_SetUserBanState_Request::_internal_ban_state() const {
  return ban_state_;
}
inline bool CChatRoom_SetUserBanState_Request::ban_state() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserBanState_Request.ban_state)
  return _internal_ban_state();
}
inline void CChatRoom_SetUserBanState_Request::_internal_set_ban_state(bool value) {
  _has_bits_[0] |= 0x00000004u;
  ban_state_ = value;
}
inline void CChatRoom_SetUserBanState_Request::set_ban_state(bool value) {
  _internal_set_ban_state(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserBanState_Request.ban_state)
}

// -------------------------------------------------------------------

// CChatRoom_SetUserBanState_Response

// -------------------------------------------------------------------

// CChatRoom_RevokeInvite_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_RevokeInvite_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_RevokeInvite_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_RevokeInvite_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_RevokeInvite_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_RevokeInvite_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RevokeInvite_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_RevokeInvite_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_RevokeInvite_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_RevokeInvite_Request.chat_group_id)
}

// optional fixed64 steamid = 2;
inline bool CChatRoom_RevokeInvite_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_RevokeInvite_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CChatRoom_RevokeInvite_Request::clear_steamid() {
  steamid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_RevokeInvite_Request::_internal_steamid() const {
  return steamid_;
}
inline uint64_t CChatRoom_RevokeInvite_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RevokeInvite_Request.steamid)
  return _internal_steamid();
}
inline void CChatRoom_RevokeInvite_Request::_internal_set_steamid(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CChatRoom_RevokeInvite_Request::set_steamid(uint64_t value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_RevokeInvite_Request.steamid)
}

// -------------------------------------------------------------------

// CChatRoom_RevokeInvite_Response

// -------------------------------------------------------------------

// CChatRoom_CreateRole_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_CreateRole_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_CreateRole_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_CreateRole_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_CreateRole_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_CreateRole_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateRole_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_CreateRole_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_CreateRole_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateRole_Request.chat_group_id)
}

// optional string name = 2;
inline bool CChatRoom_CreateRole_Request::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_CreateRole_Request::has_name() const {
  return _internal_has_name();
}
inline void CChatRoom_CreateRole_Request::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_CreateRole_Request::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateRole_Request.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_CreateRole_Request::set_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_CreateRole_Request.name)
}
inline std::string* CChatRoom_CreateRole_Request::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateRole_Request.name)
  return _s;
}
inline const std::string& CChatRoom_CreateRole_Request::_internal_name() const {
  return name_.Get();
}
inline void CChatRoom_CreateRole_Request::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_CreateRole_Request::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_CreateRole_Request::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateRole_Request.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_CreateRole_Request::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateRole_Request.name)
}

// -------------------------------------------------------------------

// CChatRoom_CreateRole_Response

// optional .CChatRoleActions actions = 2;
inline bool CChatRoom_CreateRole_Response::_internal_has_actions() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || actions_ != nullptr);
  return value;
}
inline bool CChatRoom_CreateRole_Response::has_actions() const {
  return _internal_has_actions();
}
inline void CChatRoom_CreateRole_Response::clear_actions() {
  if (actions_ != nullptr) actions_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatRoleActions& CChatRoom_CreateRole_Response::_internal_actions() const {
  const ::CChatRoleActions* p = actions_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoleActions&>(
      ::_CChatRoleActions_default_instance_);
}
inline const ::CChatRoleActions& CChatRoom_CreateRole_Response::actions() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateRole_Response.actions)
  return _internal_actions();
}
inline void CChatRoom_CreateRole_Response::unsafe_arena_set_allocated_actions(
    ::CChatRoleActions* actions) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(actions_);
  }
  actions_ = actions;
  if (actions) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_CreateRole_Response.actions)
}
inline ::CChatRoleActions* CChatRoom_CreateRole_Response::release_actions() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoleActions* temp = actions_;
  actions_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoleActions* CChatRoom_CreateRole_Response::unsafe_arena_release_actions() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateRole_Response.actions)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoleActions* temp = actions_;
  actions_ = nullptr;
  return temp;
}
inline ::CChatRoleActions* CChatRoom_CreateRole_Response::_internal_mutable_actions() {
  _has_bits_[0] |= 0x00000001u;
  if (actions_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoleActions>(GetArenaForAllocation());
    actions_ = p;
  }
  return actions_;
}
inline ::CChatRoleActions* CChatRoom_CreateRole_Response::mutable_actions() {
  ::CChatRoleActions* _msg = _internal_mutable_actions();
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateRole_Response.actions)
  return _msg;
}
inline void CChatRoom_CreateRole_Response::set_allocated_actions(::CChatRoleActions* actions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete actions_;
  }
  if (actions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoleActions>::GetOwningArena(actions);
    if (message_arena != submessage_arena) {
      actions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, actions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  actions_ = actions;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateRole_Response.actions)
}

// -------------------------------------------------------------------

// CChatRoom_GetRoles_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetRoles_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetRoles_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_GetRoles_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_GetRoles_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_GetRoles_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRoles_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_GetRoles_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_GetRoles_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetRoles_Request.chat_group_id)
}

// -------------------------------------------------------------------

// CChatRoom_GetRoles_Response

// repeated .CChatRole roles = 1;
inline int CChatRoom_GetRoles_Response::_internal_roles_size() const {
  return roles_.size();
}
inline int CChatRoom_GetRoles_Response::roles_size() const {
  return _internal_roles_size();
}
inline void CChatRoom_GetRoles_Response::clear_roles() {
  roles_.Clear();
}
inline ::CChatRole* CChatRoom_GetRoles_Response::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetRoles_Response.roles)
  return roles_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRole >*
CChatRoom_GetRoles_Response::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetRoles_Response.roles)
  return &roles_;
}
inline const ::CChatRole& CChatRoom_GetRoles_Response::_internal_roles(int index) const {
  return roles_.Get(index);
}
inline const ::CChatRole& CChatRoom_GetRoles_Response::roles(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRoles_Response.roles)
  return _internal_roles(index);
}
inline ::CChatRole* CChatRoom_GetRoles_Response::_internal_add_roles() {
  return roles_.Add();
}
inline ::CChatRole* CChatRoom_GetRoles_Response::add_roles() {
  ::CChatRole* _add = _internal_add_roles();
  // @@protoc_insertion_point(field_add:CChatRoom_GetRoles_Response.roles)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRole >&
CChatRoom_GetRoles_Response::roles() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetRoles_Response.roles)
  return roles_;
}

// -------------------------------------------------------------------

// CChatRoom_RenameRole_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_RenameRole_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_RenameRole_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_RenameRole_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_RenameRole_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_RenameRole_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameRole_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_RenameRole_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_RenameRole_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_RenameRole_Request.chat_group_id)
}

// optional uint64 role_id = 2;
inline bool CChatRoom_RenameRole_Request::_internal_has_role_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_RenameRole_Request::has_role_id() const {
  return _internal_has_role_id();
}
inline void CChatRoom_RenameRole_Request::clear_role_id() {
  role_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_RenameRole_Request::_internal_role_id() const {
  return role_id_;
}
inline uint64_t CChatRoom_RenameRole_Request::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameRole_Request.role_id)
  return _internal_role_id();
}
inline void CChatRoom_RenameRole_Request::_internal_set_role_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  role_id_ = value;
}
inline void CChatRoom_RenameRole_Request::set_role_id(uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_RenameRole_Request.role_id)
}

// optional string name = 3;
inline bool CChatRoom_RenameRole_Request::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_RenameRole_Request::has_name() const {
  return _internal_has_name();
}
inline void CChatRoom_RenameRole_Request::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_RenameRole_Request::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameRole_Request.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_RenameRole_Request::set_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_RenameRole_Request.name)
}
inline std::string* CChatRoom_RenameRole_Request::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_RenameRole_Request.name)
  return _s;
}
inline const std::string& CChatRoom_RenameRole_Request::_internal_name() const {
  return name_.Get();
}
inline void CChatRoom_RenameRole_Request::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_RenameRole_Request::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_RenameRole_Request::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_RenameRole_Request.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_RenameRole_Request::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_RenameRole_Request.name)
}

// -------------------------------------------------------------------

// CChatRoom_RenameRole_Response

// -------------------------------------------------------------------

// CChatRoom_ReorderRole_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_ReorderRole_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_ReorderRole_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_ReorderRole_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_ReorderRole_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_ReorderRole_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReorderRole_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_ReorderRole_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_ReorderRole_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ReorderRole_Request.chat_group_id)
}

// optional uint64 role_id = 2;
inline bool CChatRoom_ReorderRole_Request::_internal_has_role_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_ReorderRole_Request::has_role_id() const {
  return _internal_has_role_id();
}
inline void CChatRoom_ReorderRole_Request::clear_role_id() {
  role_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_ReorderRole_Request::_internal_role_id() const {
  return role_id_;
}
inline uint64_t CChatRoom_ReorderRole_Request::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReorderRole_Request.role_id)
  return _internal_role_id();
}
inline void CChatRoom_ReorderRole_Request::_internal_set_role_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  role_id_ = value;
}
inline void CChatRoom_ReorderRole_Request::set_role_id(uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ReorderRole_Request.role_id)
}

// optional uint32 ordinal = 3;
inline bool CChatRoom_ReorderRole_Request::_internal_has_ordinal() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_ReorderRole_Request::has_ordinal() const {
  return _internal_has_ordinal();
}
inline void CChatRoom_ReorderRole_Request::clear_ordinal() {
  ordinal_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CChatRoom_ReorderRole_Request::_internal_ordinal() const {
  return ordinal_;
}
inline uint32_t CChatRoom_ReorderRole_Request::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReorderRole_Request.ordinal)
  return _internal_ordinal();
}
inline void CChatRoom_ReorderRole_Request::_internal_set_ordinal(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  ordinal_ = value;
}
inline void CChatRoom_ReorderRole_Request::set_ordinal(uint32_t value) {
  _internal_set_ordinal(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ReorderRole_Request.ordinal)
}

// -------------------------------------------------------------------

// CChatRoom_ReorderRole_Response

// -------------------------------------------------------------------

// CChatRoom_DeleteRole_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_DeleteRole_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_DeleteRole_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_DeleteRole_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_DeleteRole_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_DeleteRole_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteRole_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_DeleteRole_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_DeleteRole_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteRole_Request.chat_group_id)
}

// optional uint64 role_id = 2;
inline bool CChatRoom_DeleteRole_Request::_internal_has_role_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_DeleteRole_Request::has_role_id() const {
  return _internal_has_role_id();
}
inline void CChatRoom_DeleteRole_Request::clear_role_id() {
  role_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_DeleteRole_Request::_internal_role_id() const {
  return role_id_;
}
inline uint64_t CChatRoom_DeleteRole_Request::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteRole_Request.role_id)
  return _internal_role_id();
}
inline void CChatRoom_DeleteRole_Request::_internal_set_role_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  role_id_ = value;
}
inline void CChatRoom_DeleteRole_Request::set_role_id(uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteRole_Request.role_id)
}

// -------------------------------------------------------------------

// CChatRoom_DeleteRole_Response

// -------------------------------------------------------------------

// CChatRoom_GetRoleActions_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetRoleActions_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetRoleActions_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_GetRoleActions_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_GetRoleActions_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_GetRoleActions_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRoleActions_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_GetRoleActions_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_GetRoleActions_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetRoleActions_Request.chat_group_id)
}

// optional uint64 role_id = 2;
inline bool CChatRoom_GetRoleActions_Request::_internal_has_role_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_GetRoleActions_Request::has_role_id() const {
  return _internal_has_role_id();
}
inline void CChatRoom_GetRoleActions_Request::clear_role_id() {
  role_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_GetRoleActions_Request::_internal_role_id() const {
  return role_id_;
}
inline uint64_t CChatRoom_GetRoleActions_Request::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRoleActions_Request.role_id)
  return _internal_role_id();
}
inline void CChatRoom_GetRoleActions_Request::_internal_set_role_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  role_id_ = value;
}
inline void CChatRoom_GetRoleActions_Request::set_role_id(uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetRoleActions_Request.role_id)
}

// -------------------------------------------------------------------

// CChatRoom_GetRoleActions_Response

// repeated .CChatRoleActions actions = 1;
inline int CChatRoom_GetRoleActions_Response::_internal_actions_size() const {
  return actions_.size();
}
inline int CChatRoom_GetRoleActions_Response::actions_size() const {
  return _internal_actions_size();
}
inline void CChatRoom_GetRoleActions_Response::clear_actions() {
  actions_.Clear();
}
inline ::CChatRoleActions* CChatRoom_GetRoleActions_Response::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetRoleActions_Response.actions)
  return actions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions >*
CChatRoom_GetRoleActions_Response::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetRoleActions_Response.actions)
  return &actions_;
}
inline const ::CChatRoleActions& CChatRoom_GetRoleActions_Response::_internal_actions(int index) const {
  return actions_.Get(index);
}
inline const ::CChatRoleActions& CChatRoom_GetRoleActions_Response::actions(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRoleActions_Response.actions)
  return _internal_actions(index);
}
inline ::CChatRoleActions* CChatRoom_GetRoleActions_Response::_internal_add_actions() {
  return actions_.Add();
}
inline ::CChatRoleActions* CChatRoom_GetRoleActions_Response::add_actions() {
  ::CChatRoleActions* _add = _internal_add_actions();
  // @@protoc_insertion_point(field_add:CChatRoom_GetRoleActions_Response.actions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions >&
CChatRoom_GetRoleActions_Response::actions() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetRoleActions_Response.actions)
  return actions_;
}

// -------------------------------------------------------------------

// CChatRoom_ReplaceRoleActions_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_ReplaceRoleActions_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_ReplaceRoleActions_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_ReplaceRoleActions_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_ReplaceRoleActions_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_ReplaceRoleActions_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReplaceRoleActions_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_ReplaceRoleActions_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_ReplaceRoleActions_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ReplaceRoleActions_Request.chat_group_id)
}

// optional uint64 role_id = 2;
inline bool CChatRoom_ReplaceRoleActions_Request::_internal_has_role_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_ReplaceRoleActions_Request::has_role_id() const {
  return _internal_has_role_id();
}
inline void CChatRoom_ReplaceRoleActions_Request::clear_role_id() {
  role_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_ReplaceRoleActions_Request::_internal_role_id() const {
  return role_id_;
}
inline uint64_t CChatRoom_ReplaceRoleActions_Request::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReplaceRoleActions_Request.role_id)
  return _internal_role_id();
}
inline void CChatRoom_ReplaceRoleActions_Request::_internal_set_role_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  role_id_ = value;
}
inline void CChatRoom_ReplaceRoleActions_Request::set_role_id(uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ReplaceRoleActions_Request.role_id)
}

// optional .CChatRoleActions actions = 4;
inline bool CChatRoom_ReplaceRoleActions_Request::_internal_has_actions() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || actions_ != nullptr);
  return value;
}
inline bool CChatRoom_ReplaceRoleActions_Request::has_actions() const {
  return _internal_has_actions();
}
inline void CChatRoom_ReplaceRoleActions_Request::clear_actions() {
  if (actions_ != nullptr) actions_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatRoleActions& CChatRoom_ReplaceRoleActions_Request::_internal_actions() const {
  const ::CChatRoleActions* p = actions_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoleActions&>(
      ::_CChatRoleActions_default_instance_);
}
inline const ::CChatRoleActions& CChatRoom_ReplaceRoleActions_Request::actions() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReplaceRoleActions_Request.actions)
  return _internal_actions();
}
inline void CChatRoom_ReplaceRoleActions_Request::unsafe_arena_set_allocated_actions(
    ::CChatRoleActions* actions) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(actions_);
  }
  actions_ = actions;
  if (actions) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_ReplaceRoleActions_Request.actions)
}
inline ::CChatRoleActions* CChatRoom_ReplaceRoleActions_Request::release_actions() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoleActions* temp = actions_;
  actions_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoleActions* CChatRoom_ReplaceRoleActions_Request::unsafe_arena_release_actions() {
  // @@protoc_insertion_point(field_release:CChatRoom_ReplaceRoleActions_Request.actions)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoleActions* temp = actions_;
  actions_ = nullptr;
  return temp;
}
inline ::CChatRoleActions* CChatRoom_ReplaceRoleActions_Request::_internal_mutable_actions() {
  _has_bits_[0] |= 0x00000001u;
  if (actions_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoleActions>(GetArenaForAllocation());
    actions_ = p;
  }
  return actions_;
}
inline ::CChatRoleActions* CChatRoom_ReplaceRoleActions_Request::mutable_actions() {
  ::CChatRoleActions* _msg = _internal_mutable_actions();
  // @@protoc_insertion_point(field_mutable:CChatRoom_ReplaceRoleActions_Request.actions)
  return _msg;
}
inline void CChatRoom_ReplaceRoleActions_Request::set_allocated_actions(::CChatRoleActions* actions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete actions_;
  }
  if (actions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoleActions>::GetOwningArena(actions);
    if (message_arena != submessage_arena) {
      actions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, actions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  actions_ = actions;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_ReplaceRoleActions_Request.actions)
}

// -------------------------------------------------------------------

// CChatRoom_ReplaceRoleActions_Response

// -------------------------------------------------------------------

// CChatRoom_AddRoleToUser_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_AddRoleToUser_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_AddRoleToUser_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_AddRoleToUser_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_AddRoleToUser_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_AddRoleToUser_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_AddRoleToUser_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_AddRoleToUser_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_AddRoleToUser_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_AddRoleToUser_Request.chat_group_id)
}

// optional uint64 role_id = 3;
inline bool CChatRoom_AddRoleToUser_Request::_internal_has_role_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_AddRoleToUser_Request::has_role_id() const {
  return _internal_has_role_id();
}
inline void CChatRoom_AddRoleToUser_Request::clear_role_id() {
  role_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_AddRoleToUser_Request::_internal_role_id() const {
  return role_id_;
}
inline uint64_t CChatRoom_AddRoleToUser_Request::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_AddRoleToUser_Request.role_id)
  return _internal_role_id();
}
inline void CChatRoom_AddRoleToUser_Request::_internal_set_role_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  role_id_ = value;
}
inline void CChatRoom_AddRoleToUser_Request::set_role_id(uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_AddRoleToUser_Request.role_id)
}

// optional fixed64 steamid = 4;
inline bool CChatRoom_AddRoleToUser_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_AddRoleToUser_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CChatRoom_AddRoleToUser_Request::clear_steamid() {
  steamid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_AddRoleToUser_Request::_internal_steamid() const {
  return steamid_;
}
inline uint64_t CChatRoom_AddRoleToUser_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_AddRoleToUser_Request.steamid)
  return _internal_steamid();
}
inline void CChatRoom_AddRoleToUser_Request::_internal_set_steamid(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  steamid_ = value;
}
inline void CChatRoom_AddRoleToUser_Request::set_steamid(uint64_t value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_AddRoleToUser_Request.steamid)
}

// -------------------------------------------------------------------

// CChatRoom_AddRoleToUser_Response

// -------------------------------------------------------------------

// CChatRoom_GetRolesForUser_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetRolesForUser_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetRolesForUser_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_GetRolesForUser_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_GetRolesForUser_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_GetRolesForUser_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRolesForUser_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_GetRolesForUser_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_GetRolesForUser_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetRolesForUser_Request.chat_group_id)
}

// optional fixed64 steamid = 3;
inline bool CChatRoom_GetRolesForUser_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_GetRolesForUser_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CChatRoom_GetRolesForUser_Request::clear_steamid() {
  steamid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_GetRolesForUser_Request::_internal_steamid() const {
  return steamid_;
}
inline uint64_t CChatRoom_GetRolesForUser_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRolesForUser_Request.steamid)
  return _internal_steamid();
}
inline void CChatRoom_GetRolesForUser_Request::_internal_set_steamid(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CChatRoom_GetRolesForUser_Request::set_steamid(uint64_t value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetRolesForUser_Request.steamid)
}

// -------------------------------------------------------------------

// CChatRoom_GetRolesForUser_Response

// repeated uint64 role_ids = 1;
inline int CChatRoom_GetRolesForUser_Response::_internal_role_ids_size() const {
  return role_ids_.size();
}
inline int CChatRoom_GetRolesForUser_Response::role_ids_size() const {
  return _internal_role_ids_size();
}
inline void CChatRoom_GetRolesForUser_Response::clear_role_ids() {
  role_ids_.Clear();
}
inline uint64_t CChatRoom_GetRolesForUser_Response::_internal_role_ids(int index) const {
  return role_ids_.Get(index);
}
inline uint64_t CChatRoom_GetRolesForUser_Response::role_ids(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetRolesForUser_Response.role_ids)
  return _internal_role_ids(index);
}
inline void CChatRoom_GetRolesForUser_Response::set_role_ids(int index, uint64_t value) {
  role_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetRolesForUser_Response.role_ids)
}
inline void CChatRoom_GetRolesForUser_Response::_internal_add_role_ids(uint64_t value) {
  role_ids_.Add(value);
}
inline void CChatRoom_GetRolesForUser_Response::add_role_ids(uint64_t value) {
  _internal_add_role_ids(value);
  // @@protoc_insertion_point(field_add:CChatRoom_GetRolesForUser_Response.role_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CChatRoom_GetRolesForUser_Response::_internal_role_ids() const {
  return role_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CChatRoom_GetRolesForUser_Response::role_ids() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetRolesForUser_Response.role_ids)
  return _internal_role_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CChatRoom_GetRolesForUser_Response::_internal_mutable_role_ids() {
  return &role_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CChatRoom_GetRolesForUser_Response::mutable_role_ids() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetRolesForUser_Response.role_ids)
  return _internal_mutable_role_ids();
}

// -------------------------------------------------------------------

// CChatRoom_DeleteRoleFromUser_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_DeleteRoleFromUser_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_DeleteRoleFromUser_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_DeleteRoleFromUser_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_DeleteRoleFromUser_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_DeleteRoleFromUser_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteRoleFromUser_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_DeleteRoleFromUser_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_DeleteRoleFromUser_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteRoleFromUser_Request.chat_group_id)
}

// optional uint64 role_id = 3;
inline bool CChatRoom_DeleteRoleFromUser_Request::_internal_has_role_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_DeleteRoleFromUser_Request::has_role_id() const {
  return _internal_has_role_id();
}
inline void CChatRoom_DeleteRoleFromUser_Request::clear_role_id() {
  role_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_DeleteRoleFromUser_Request::_internal_role_id() const {
  return role_id_;
}
inline uint64_t CChatRoom_DeleteRoleFromUser_Request::role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteRoleFromUser_Request.role_id)
  return _internal_role_id();
}
inline void CChatRoom_DeleteRoleFromUser_Request::_internal_set_role_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  role_id_ = value;
}
inline void CChatRoom_DeleteRoleFromUser_Request::set_role_id(uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteRoleFromUser_Request.role_id)
}

// optional fixed64 steamid = 4;
inline bool CChatRoom_DeleteRoleFromUser_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_DeleteRoleFromUser_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CChatRoom_DeleteRoleFromUser_Request::clear_steamid() {
  steamid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_DeleteRoleFromUser_Request::_internal_steamid() const {
  return steamid_;
}
inline uint64_t CChatRoom_DeleteRoleFromUser_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteRoleFromUser_Request.steamid)
  return _internal_steamid();
}
inline void CChatRoom_DeleteRoleFromUser_Request::_internal_set_steamid(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  steamid_ = value;
}
inline void CChatRoom_DeleteRoleFromUser_Request::set_steamid(uint64_t value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteRoleFromUser_Request.steamid)
}

// -------------------------------------------------------------------

// CChatRoom_DeleteRoleFromUser_Response

// -------------------------------------------------------------------

// CChatRoom_JoinChatRoomGroup_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_JoinChatRoomGroup_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_JoinChatRoomGroup_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_JoinChatRoomGroup_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_JoinChatRoomGroup_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_JoinChatRoomGroup_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinChatRoomGroup_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_JoinChatRoomGroup_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_JoinChatRoomGroup_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_JoinChatRoomGroup_Request.chat_group_id)
}

// optional string invite_code = 2;
inline bool CChatRoom_JoinChatRoomGroup_Request::_internal_has_invite_code() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_JoinChatRoomGroup_Request::has_invite_code() const {
  return _internal_has_invite_code();
}
inline void CChatRoom_JoinChatRoomGroup_Request::clear_invite_code() {
  invite_code_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_JoinChatRoomGroup_Request::invite_code() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinChatRoomGroup_Request.invite_code)
  return _internal_invite_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_JoinChatRoomGroup_Request::set_invite_code(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_JoinChatRoomGroup_Request.invite_code)
}
inline std::string* CChatRoom_JoinChatRoomGroup_Request::mutable_invite_code() {
  std::string* _s = _internal_mutable_invite_code();
  // @@protoc_insertion_point(field_mutable:CChatRoom_JoinChatRoomGroup_Request.invite_code)
  return _s;
}
inline const std::string& CChatRoom_JoinChatRoomGroup_Request::_internal_invite_code() const {
  return invite_code_.Get();
}
inline void CChatRoom_JoinChatRoomGroup_Request::_internal_set_invite_code(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_JoinChatRoomGroup_Request::_internal_mutable_invite_code() {
  _has_bits_[0] |= 0x00000001u;
  return invite_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_JoinChatRoomGroup_Request::release_invite_code() {
  // @@protoc_insertion_point(field_release:CChatRoom_JoinChatRoomGroup_Request.invite_code)
  if (!_internal_has_invite_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = invite_code_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (invite_code_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_JoinChatRoomGroup_Request::set_allocated_invite_code(std::string* invite_code) {
  if (invite_code != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  invite_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), invite_code,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (invite_code_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_JoinChatRoomGroup_Request.invite_code)
}

// optional uint64 chat_id = 3;
inline bool CChatRoom_JoinChatRoomGroup_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_JoinChatRoomGroup_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_JoinChatRoomGroup_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_JoinChatRoomGroup_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_JoinChatRoomGroup_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinChatRoomGroup_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_JoinChatRoomGroup_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  chat_id_ = value;
}
inline void CChatRoom_JoinChatRoomGroup_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_JoinChatRoomGroup_Request.chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_JoinChatRoomGroup_Response

// optional .CChatRoomGroupState state = 1;
inline bool CChatRoom_JoinChatRoomGroup_Response::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || state_ != nullptr);
  return value;
}
inline bool CChatRoom_JoinChatRoomGroup_Response::has_state() const {
  return _internal_has_state();
}
inline void CChatRoom_JoinChatRoomGroup_Response::clear_state() {
  if (state_ != nullptr) state_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatRoomGroupState& CChatRoom_JoinChatRoomGroup_Response::_internal_state() const {
  const ::CChatRoomGroupState* p = state_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoomGroupState&>(
      ::_CChatRoomGroupState_default_instance_);
}
inline const ::CChatRoomGroupState& CChatRoom_JoinChatRoomGroup_Response::state() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinChatRoomGroup_Response.state)
  return _internal_state();
}
inline void CChatRoom_JoinChatRoomGroup_Response::unsafe_arena_set_allocated_state(
    ::CChatRoomGroupState* state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(state_);
  }
  state_ = state;
  if (state) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_JoinChatRoomGroup_Response.state)
}
inline ::CChatRoomGroupState* CChatRoom_JoinChatRoomGroup_Response::release_state() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomGroupState* temp = state_;
  state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoomGroupState* CChatRoom_JoinChatRoomGroup_Response::unsafe_arena_release_state() {
  // @@protoc_insertion_point(field_release:CChatRoom_JoinChatRoomGroup_Response.state)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomGroupState* temp = state_;
  state_ = nullptr;
  return temp;
}
inline ::CChatRoomGroupState* CChatRoom_JoinChatRoomGroup_Response::_internal_mutable_state() {
  _has_bits_[0] |= 0x00000001u;
  if (state_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoomGroupState>(GetArenaForAllocation());
    state_ = p;
  }
  return state_;
}
inline ::CChatRoomGroupState* CChatRoom_JoinChatRoomGroup_Response::mutable_state() {
  ::CChatRoomGroupState* _msg = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:CChatRoom_JoinChatRoomGroup_Response.state)
  return _msg;
}
inline void CChatRoom_JoinChatRoomGroup_Response::set_allocated_state(::CChatRoomGroupState* state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete state_;
  }
  if (state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoomGroupState>::GetOwningArena(state);
    if (message_arena != submessage_arena) {
      state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_JoinChatRoomGroup_Response.state)
}

// optional .CUserChatRoomGroupState user_chat_state = 3;
inline bool CChatRoom_JoinChatRoomGroup_Response::_internal_has_user_chat_state() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || user_chat_state_ != nullptr);
  return value;
}
inline bool CChatRoom_JoinChatRoomGroup_Response::has_user_chat_state() const {
  return _internal_has_user_chat_state();
}
inline void CChatRoom_JoinChatRoomGroup_Response::clear_user_chat_state() {
  if (user_chat_state_ != nullptr) user_chat_state_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CUserChatRoomGroupState& CChatRoom_JoinChatRoomGroup_Response::_internal_user_chat_state() const {
  const ::CUserChatRoomGroupState* p = user_chat_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::CUserChatRoomGroupState&>(
      ::_CUserChatRoomGroupState_default_instance_);
}
inline const ::CUserChatRoomGroupState& CChatRoom_JoinChatRoomGroup_Response::user_chat_state() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinChatRoomGroup_Response.user_chat_state)
  return _internal_user_chat_state();
}
inline void CChatRoom_JoinChatRoomGroup_Response::unsafe_arena_set_allocated_user_chat_state(
    ::CUserChatRoomGroupState* user_chat_state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(user_chat_state_);
  }
  user_chat_state_ = user_chat_state;
  if (user_chat_state) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_JoinChatRoomGroup_Response.user_chat_state)
}
inline ::CUserChatRoomGroupState* CChatRoom_JoinChatRoomGroup_Response::release_user_chat_state() {
  _has_bits_[0] &= ~0x00000002u;
  ::CUserChatRoomGroupState* temp = user_chat_state_;
  user_chat_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CUserChatRoomGroupState* CChatRoom_JoinChatRoomGroup_Response::unsafe_arena_release_user_chat_state() {
  // @@protoc_insertion_point(field_release:CChatRoom_JoinChatRoomGroup_Response.user_chat_state)
  _has_bits_[0] &= ~0x00000002u;
  ::CUserChatRoomGroupState* temp = user_chat_state_;
  user_chat_state_ = nullptr;
  return temp;
}
inline ::CUserChatRoomGroupState* CChatRoom_JoinChatRoomGroup_Response::_internal_mutable_user_chat_state() {
  _has_bits_[0] |= 0x00000002u;
  if (user_chat_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserChatRoomGroupState>(GetArenaForAllocation());
    user_chat_state_ = p;
  }
  return user_chat_state_;
}
inline ::CUserChatRoomGroupState* CChatRoom_JoinChatRoomGroup_Response::mutable_user_chat_state() {
  ::CUserChatRoomGroupState* _msg = _internal_mutable_user_chat_state();
  // @@protoc_insertion_point(field_mutable:CChatRoom_JoinChatRoomGroup_Response.user_chat_state)
  return _msg;
}
inline void CChatRoom_JoinChatRoomGroup_Response::set_allocated_user_chat_state(::CUserChatRoomGroupState* user_chat_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete user_chat_state_;
  }
  if (user_chat_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CUserChatRoomGroupState>::GetOwningArena(user_chat_state);
    if (message_arena != submessage_arena) {
      user_chat_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_chat_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  user_chat_state_ = user_chat_state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_JoinChatRoomGroup_Response.user_chat_state)
}

// optional uint64 join_chat_id = 4;
inline bool CChatRoom_JoinChatRoomGroup_Response::_internal_has_join_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_JoinChatRoomGroup_Response::has_join_chat_id() const {
  return _internal_has_join_chat_id();
}
inline void CChatRoom_JoinChatRoomGroup_Response::clear_join_chat_id() {
  join_chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_JoinChatRoomGroup_Response::_internal_join_chat_id() const {
  return join_chat_id_;
}
inline uint64_t CChatRoom_JoinChatRoomGroup_Response::join_chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinChatRoomGroup_Response.join_chat_id)
  return _internal_join_chat_id();
}
inline void CChatRoom_JoinChatRoomGroup_Response::_internal_set_join_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  join_chat_id_ = value;
}
inline void CChatRoom_JoinChatRoomGroup_Response::set_join_chat_id(uint64_t value) {
  _internal_set_join_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_JoinChatRoomGroup_Response.join_chat_id)
}

// optional uint32 time_expire = 5;
inline bool CChatRoom_JoinChatRoomGroup_Response::_internal_has_time_expire() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_JoinChatRoomGroup_Response::has_time_expire() const {
  return _internal_has_time_expire();
}
inline void CChatRoom_JoinChatRoomGroup_Response::clear_time_expire() {
  time_expire_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CChatRoom_JoinChatRoomGroup_Response::_internal_time_expire() const {
  return time_expire_;
}
inline uint32_t CChatRoom_JoinChatRoomGroup_Response::time_expire() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinChatRoomGroup_Response.time_expire)
  return _internal_time_expire();
}
inline void CChatRoom_JoinChatRoomGroup_Response::_internal_set_time_expire(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  time_expire_ = value;
}
inline void CChatRoom_JoinChatRoomGroup_Response::set_time_expire(uint32_t value) {
  _internal_set_time_expire(value);
  // @@protoc_insertion_point(field_set:CChatRoom_JoinChatRoomGroup_Response.time_expire)
}

// -------------------------------------------------------------------

// CChatRoom_InviteFriendToChatRoomGroup_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_InviteFriendToChatRoomGroup_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_InviteFriendToChatRoomGroup_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_InviteFriendToChatRoomGroup_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_InviteFriendToChatRoomGroup_Request.chat_group_id)
}

// optional fixed64 steamid = 2;
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::clear_steamid() {
  steamid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_InviteFriendToChatRoomGroup_Request::_internal_steamid() const {
  return steamid_;
}
inline uint64_t CChatRoom_InviteFriendToChatRoomGroup_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_InviteFriendToChatRoomGroup_Request.steamid)
  return _internal_steamid();
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::_internal_set_steamid(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::set_steamid(uint64_t value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_InviteFriendToChatRoomGroup_Request.steamid)
}

// optional uint64 chat_id = 3;
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_InviteFriendToChatRoomGroup_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_InviteFriendToChatRoomGroup_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_InviteFriendToChatRoomGroup_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  chat_id_ = value;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_InviteFriendToChatRoomGroup_Request.chat_id)
}

// optional bool skip_friendsui_check = 4;
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::_internal_has_skip_friendsui_check() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::has_skip_friendsui_check() const {
  return _internal_has_skip_friendsui_check();
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::clear_skip_friendsui_check() {
  skip_friendsui_check_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::_internal_skip_friendsui_check() const {
  return skip_friendsui_check_;
}
inline bool CChatRoom_InviteFriendToChatRoomGroup_Request::skip_friendsui_check() const {
  // @@protoc_insertion_point(field_get:CChatRoom_InviteFriendToChatRoomGroup_Request.skip_friendsui_check)
  return _internal_skip_friendsui_check();
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::_internal_set_skip_friendsui_check(bool value) {
  _has_bits_[0] |= 0x00000008u;
  skip_friendsui_check_ = value;
}
inline void CChatRoom_InviteFriendToChatRoomGroup_Request::set_skip_friendsui_check(bool value) {
  _internal_set_skip_friendsui_check(value);
  // @@protoc_insertion_point(field_set:CChatRoom_InviteFriendToChatRoomGroup_Request.skip_friendsui_check)
}

// -------------------------------------------------------------------

// CChatRoom_InviteFriendToChatRoomGroup_Response

// -------------------------------------------------------------------

// CChatRoom_LeaveChatRoomGroup_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_LeaveChatRoomGroup_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_LeaveChatRoomGroup_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_LeaveChatRoomGroup_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_LeaveChatRoomGroup_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_LeaveChatRoomGroup_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_LeaveChatRoomGroup_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_LeaveChatRoomGroup_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_LeaveChatRoomGroup_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_LeaveChatRoomGroup_Request.chat_group_id)
}

// -------------------------------------------------------------------

// CChatRoom_LeaveChatRoomGroup_Response

// -------------------------------------------------------------------

// CChatRoom_CreateChatRoom_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_CreateChatRoom_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_CreateChatRoom_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_CreateChatRoom_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_CreateChatRoom_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_CreateChatRoom_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoom_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_CreateChatRoom_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_CreateChatRoom_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoom_Request.chat_group_id)
}

// optional string name = 2;
inline bool CChatRoom_CreateChatRoom_Request::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_CreateChatRoom_Request::has_name() const {
  return _internal_has_name();
}
inline void CChatRoom_CreateChatRoom_Request::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_CreateChatRoom_Request::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoom_Request.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_CreateChatRoom_Request::set_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoom_Request.name)
}
inline std::string* CChatRoom_CreateChatRoom_Request::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateChatRoom_Request.name)
  return _s;
}
inline const std::string& CChatRoom_CreateChatRoom_Request::_internal_name() const {
  return name_.Get();
}
inline void CChatRoom_CreateChatRoom_Request::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_CreateChatRoom_Request::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_CreateChatRoom_Request::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateChatRoom_Request.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_CreateChatRoom_Request::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateChatRoom_Request.name)
}

// optional bool allow_voice = 3;
inline bool CChatRoom_CreateChatRoom_Request::_internal_has_allow_voice() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_CreateChatRoom_Request::has_allow_voice() const {
  return _internal_has_allow_voice();
}
inline void CChatRoom_CreateChatRoom_Request::clear_allow_voice() {
  allow_voice_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CChatRoom_CreateChatRoom_Request::_internal_allow_voice() const {
  return allow_voice_;
}
inline bool CChatRoom_CreateChatRoom_Request::allow_voice() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoom_Request.allow_voice)
  return _internal_allow_voice();
}
inline void CChatRoom_CreateChatRoom_Request::_internal_set_allow_voice(bool value) {
  _has_bits_[0] |= 0x00000004u;
  allow_voice_ = value;
}
inline void CChatRoom_CreateChatRoom_Request::set_allow_voice(bool value) {
  _internal_set_allow_voice(value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateChatRoom_Request.allow_voice)
}

// -------------------------------------------------------------------

// CChatRoom_CreateChatRoom_Response

// optional .CChatRoomState chat_room = 1;
inline bool CChatRoom_CreateChatRoom_Response::_internal_has_chat_room() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || chat_room_ != nullptr);
  return value;
}
inline bool CChatRoom_CreateChatRoom_Response::has_chat_room() const {
  return _internal_has_chat_room();
}
inline void CChatRoom_CreateChatRoom_Response::clear_chat_room() {
  if (chat_room_ != nullptr) chat_room_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatRoomState& CChatRoom_CreateChatRoom_Response::_internal_chat_room() const {
  const ::CChatRoomState* p = chat_room_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoomState&>(
      ::_CChatRoomState_default_instance_);
}
inline const ::CChatRoomState& CChatRoom_CreateChatRoom_Response::chat_room() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateChatRoom_Response.chat_room)
  return _internal_chat_room();
}
inline void CChatRoom_CreateChatRoom_Response::unsafe_arena_set_allocated_chat_room(
    ::CChatRoomState* chat_room) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(chat_room_);
  }
  chat_room_ = chat_room;
  if (chat_room) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_CreateChatRoom_Response.chat_room)
}
inline ::CChatRoomState* CChatRoom_CreateChatRoom_Response::release_chat_room() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomState* temp = chat_room_;
  chat_room_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoomState* CChatRoom_CreateChatRoom_Response::unsafe_arena_release_chat_room() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateChatRoom_Response.chat_room)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomState* temp = chat_room_;
  chat_room_ = nullptr;
  return temp;
}
inline ::CChatRoomState* CChatRoom_CreateChatRoom_Response::_internal_mutable_chat_room() {
  _has_bits_[0] |= 0x00000001u;
  if (chat_room_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoomState>(GetArenaForAllocation());
    chat_room_ = p;
  }
  return chat_room_;
}
inline ::CChatRoomState* CChatRoom_CreateChatRoom_Response::mutable_chat_room() {
  ::CChatRoomState* _msg = _internal_mutable_chat_room();
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateChatRoom_Response.chat_room)
  return _msg;
}
inline void CChatRoom_CreateChatRoom_Response::set_allocated_chat_room(::CChatRoomState* chat_room) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete chat_room_;
  }
  if (chat_room) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoomState>::GetOwningArena(chat_room);
    if (message_arena != submessage_arena) {
      chat_room = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chat_room, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  chat_room_ = chat_room;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateChatRoom_Response.chat_room)
}

// -------------------------------------------------------------------

// CChatRoom_DeleteChatRoom_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_DeleteChatRoom_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_DeleteChatRoom_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_DeleteChatRoom_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_DeleteChatRoom_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_DeleteChatRoom_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteChatRoom_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_DeleteChatRoom_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_DeleteChatRoom_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteChatRoom_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_DeleteChatRoom_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_DeleteChatRoom_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_DeleteChatRoom_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_DeleteChatRoom_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_DeleteChatRoom_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteChatRoom_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_DeleteChatRoom_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_id_ = value;
}
inline void CChatRoom_DeleteChatRoom_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteChatRoom_Request.chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_DeleteChatRoom_Response

// -------------------------------------------------------------------

// CChatRoom_RenameChatRoom_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_RenameChatRoom_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_RenameChatRoom_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_RenameChatRoom_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_RenameChatRoom_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_RenameChatRoom_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameChatRoom_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_RenameChatRoom_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_RenameChatRoom_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_RenameChatRoom_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_RenameChatRoom_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_RenameChatRoom_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_RenameChatRoom_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_RenameChatRoom_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_RenameChatRoom_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameChatRoom_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_RenameChatRoom_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  chat_id_ = value;
}
inline void CChatRoom_RenameChatRoom_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_RenameChatRoom_Request.chat_id)
}

// optional string name = 3;
inline bool CChatRoom_RenameChatRoom_Request::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_RenameChatRoom_Request::has_name() const {
  return _internal_has_name();
}
inline void CChatRoom_RenameChatRoom_Request::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_RenameChatRoom_Request::name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_RenameChatRoom_Request.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_RenameChatRoom_Request::set_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_RenameChatRoom_Request.name)
}
inline std::string* CChatRoom_RenameChatRoom_Request::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_RenameChatRoom_Request.name)
  return _s;
}
inline const std::string& CChatRoom_RenameChatRoom_Request::_internal_name() const {
  return name_.Get();
}
inline void CChatRoom_RenameChatRoom_Request::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_RenameChatRoom_Request::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_RenameChatRoom_Request::release_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_RenameChatRoom_Request.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_RenameChatRoom_Request::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_RenameChatRoom_Request.name)
}

// -------------------------------------------------------------------

// CChatRoom_RenameChatRoom_Response

// -------------------------------------------------------------------

// CChatRoom_ReorderChatRoom_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_ReorderChatRoom_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_ReorderChatRoom_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_ReorderChatRoom_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_ReorderChatRoom_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_ReorderChatRoom_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReorderChatRoom_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_ReorderChatRoom_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_ReorderChatRoom_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ReorderChatRoom_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_ReorderChatRoom_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_ReorderChatRoom_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_ReorderChatRoom_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_ReorderChatRoom_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_ReorderChatRoom_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReorderChatRoom_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_ReorderChatRoom_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_id_ = value;
}
inline void CChatRoom_ReorderChatRoom_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ReorderChatRoom_Request.chat_id)
}

// optional uint64 move_after_chat_id = 3;
inline bool CChatRoom_ReorderChatRoom_Request::_internal_has_move_after_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_ReorderChatRoom_Request::has_move_after_chat_id() const {
  return _internal_has_move_after_chat_id();
}
inline void CChatRoom_ReorderChatRoom_Request::clear_move_after_chat_id() {
  move_after_chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_ReorderChatRoom_Request::_internal_move_after_chat_id() const {
  return move_after_chat_id_;
}
inline uint64_t CChatRoom_ReorderChatRoom_Request::move_after_chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ReorderChatRoom_Request.move_after_chat_id)
  return _internal_move_after_chat_id();
}
inline void CChatRoom_ReorderChatRoom_Request::_internal_set_move_after_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  move_after_chat_id_ = value;
}
inline void CChatRoom_ReorderChatRoom_Request::set_move_after_chat_id(uint64_t value) {
  _internal_set_move_after_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ReorderChatRoom_Request.move_after_chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_ReorderChatRoom_Response

// -------------------------------------------------------------------

// CChatRoom_SendChatMessage_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SendChatMessage_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_SendChatMessage_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_SendChatMessage_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_SendChatMessage_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_SendChatMessage_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SendChatMessage_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_SendChatMessage_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_SendChatMessage_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SendChatMessage_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_SendChatMessage_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_SendChatMessage_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_SendChatMessage_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_SendChatMessage_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_SendChatMessage_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SendChatMessage_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_SendChatMessage_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  chat_id_ = value;
}
inline void CChatRoom_SendChatMessage_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SendChatMessage_Request.chat_id)
}

// optional string message = 3;
inline bool CChatRoom_SendChatMessage_Request::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SendChatMessage_Request::has_message() const {
  return _internal_has_message();
}
inline void CChatRoom_SendChatMessage_Request::clear_message() {
  message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_SendChatMessage_Request::message() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SendChatMessage_Request.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_SendChatMessage_Request::set_message(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_SendChatMessage_Request.message)
}
inline std::string* CChatRoom_SendChatMessage_Request::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:CChatRoom_SendChatMessage_Request.message)
  return _s;
}
inline const std::string& CChatRoom_SendChatMessage_Request::_internal_message() const {
  return message_.Get();
}
inline void CChatRoom_SendChatMessage_Request::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_SendChatMessage_Request::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_SendChatMessage_Request::release_message() {
  // @@protoc_insertion_point(field_release:CChatRoom_SendChatMessage_Request.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (message_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_SendChatMessage_Request::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (message_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SendChatMessage_Request.message)
}

// optional bool echo_to_sender = 4;
inline bool CChatRoom_SendChatMessage_Request::_internal_has_echo_to_sender() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_SendChatMessage_Request::has_echo_to_sender() const {
  return _internal_has_echo_to_sender();
}
inline void CChatRoom_SendChatMessage_Request::clear_echo_to_sender() {
  echo_to_sender_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CChatRoom_SendChatMessage_Request::_internal_echo_to_sender() const {
  return echo_to_sender_;
}
inline bool CChatRoom_SendChatMessage_Request::echo_to_sender() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SendChatMessage_Request.echo_to_sender)
  return _internal_echo_to_sender();
}
inline void CChatRoom_SendChatMessage_Request::_internal_set_echo_to_sender(bool value) {
  _has_bits_[0] |= 0x00000008u;
  echo_to_sender_ = value;
}
inline void CChatRoom_SendChatMessage_Request::set_echo_to_sender(bool value) {
  _internal_set_echo_to_sender(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SendChatMessage_Request.echo_to_sender)
}

// -------------------------------------------------------------------

// CChatRoom_SendChatMessage_Response

// optional string modified_message = 1;
inline bool CChatRoom_SendChatMessage_Response::_internal_has_modified_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SendChatMessage_Response::has_modified_message() const {
  return _internal_has_modified_message();
}
inline void CChatRoom_SendChatMessage_Response::clear_modified_message() {
  modified_message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_SendChatMessage_Response::modified_message() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SendChatMessage_Response.modified_message)
  return _internal_modified_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_SendChatMessage_Response::set_modified_message(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 modified_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_SendChatMessage_Response.modified_message)
}
inline std::string* CChatRoom_SendChatMessage_Response::mutable_modified_message() {
  std::string* _s = _internal_mutable_modified_message();
  // @@protoc_insertion_point(field_mutable:CChatRoom_SendChatMessage_Response.modified_message)
  return _s;
}
inline const std::string& CChatRoom_SendChatMessage_Response::_internal_modified_message() const {
  return modified_message_.Get();
}
inline void CChatRoom_SendChatMessage_Response::_internal_set_modified_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  modified_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_SendChatMessage_Response::_internal_mutable_modified_message() {
  _has_bits_[0] |= 0x00000001u;
  return modified_message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_SendChatMessage_Response::release_modified_message() {
  // @@protoc_insertion_point(field_release:CChatRoom_SendChatMessage_Response.modified_message)
  if (!_internal_has_modified_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = modified_message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (modified_message_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    modified_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_SendChatMessage_Response::set_allocated_modified_message(std::string* modified_message) {
  if (modified_message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  modified_message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), modified_message,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (modified_message_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    modified_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SendChatMessage_Response.modified_message)
}

// optional uint32 server_timestamp = 2;
inline bool CChatRoom_SendChatMessage_Response::_internal_has_server_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_SendChatMessage_Response::has_server_timestamp() const {
  return _internal_has_server_timestamp();
}
inline void CChatRoom_SendChatMessage_Response::clear_server_timestamp() {
  server_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CChatRoom_SendChatMessage_Response::_internal_server_timestamp() const {
  return server_timestamp_;
}
inline uint32_t CChatRoom_SendChatMessage_Response::server_timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SendChatMessage_Response.server_timestamp)
  return _internal_server_timestamp();
}
inline void CChatRoom_SendChatMessage_Response::_internal_set_server_timestamp(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  server_timestamp_ = value;
}
inline void CChatRoom_SendChatMessage_Response::set_server_timestamp(uint32_t value) {
  _internal_set_server_timestamp(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SendChatMessage_Response.server_timestamp)
}

// optional uint32 ordinal = 3;
inline bool CChatRoom_SendChatMessage_Response::_internal_has_ordinal() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_SendChatMessage_Response::has_ordinal() const {
  return _internal_has_ordinal();
}
inline void CChatRoom_SendChatMessage_Response::clear_ordinal() {
  ordinal_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CChatRoom_SendChatMessage_Response::_internal_ordinal() const {
  return ordinal_;
}
inline uint32_t CChatRoom_SendChatMessage_Response::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SendChatMessage_Response.ordinal)
  return _internal_ordinal();
}
inline void CChatRoom_SendChatMessage_Response::_internal_set_ordinal(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  ordinal_ = value;
}
inline void CChatRoom_SendChatMessage_Response::set_ordinal(uint32_t value) {
  _internal_set_ordinal(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SendChatMessage_Response.ordinal)
}

// optional string message_without_bb_code = 4;
inline bool CChatRoom_SendChatMessage_Response::_internal_has_message_without_bb_code() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_SendChatMessage_Response::has_message_without_bb_code() const {
  return _internal_has_message_without_bb_code();
}
inline void CChatRoom_SendChatMessage_Response::clear_message_without_bb_code() {
  message_without_bb_code_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CChatRoom_SendChatMessage_Response::message_without_bb_code() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SendChatMessage_Response.message_without_bb_code)
  return _internal_message_without_bb_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_SendChatMessage_Response::set_message_without_bb_code(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 message_without_bb_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_SendChatMessage_Response.message_without_bb_code)
}
inline std::string* CChatRoom_SendChatMessage_Response::mutable_message_without_bb_code() {
  std::string* _s = _internal_mutable_message_without_bb_code();
  // @@protoc_insertion_point(field_mutable:CChatRoom_SendChatMessage_Response.message_without_bb_code)
  return _s;
}
inline const std::string& CChatRoom_SendChatMessage_Response::_internal_message_without_bb_code() const {
  return message_without_bb_code_.Get();
}
inline void CChatRoom_SendChatMessage_Response::_internal_set_message_without_bb_code(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  message_without_bb_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_SendChatMessage_Response::_internal_mutable_message_without_bb_code() {
  _has_bits_[0] |= 0x00000002u;
  return message_without_bb_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_SendChatMessage_Response::release_message_without_bb_code() {
  // @@protoc_insertion_point(field_release:CChatRoom_SendChatMessage_Response.message_without_bb_code)
  if (!_internal_has_message_without_bb_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  auto* p = message_without_bb_code_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (message_without_bb_code_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    message_without_bb_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_SendChatMessage_Response::set_allocated_message_without_bb_code(std::string* message_without_bb_code) {
  if (message_without_bb_code != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  message_without_bb_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message_without_bb_code,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (message_without_bb_code_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    message_without_bb_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SendChatMessage_Response.message_without_bb_code)
}

// -------------------------------------------------------------------

// CChatRoom_JoinVoiceChat_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_JoinVoiceChat_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_JoinVoiceChat_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_JoinVoiceChat_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_JoinVoiceChat_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_JoinVoiceChat_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinVoiceChat_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_JoinVoiceChat_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_JoinVoiceChat_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_JoinVoiceChat_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_JoinVoiceChat_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_JoinVoiceChat_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_JoinVoiceChat_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_JoinVoiceChat_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_JoinVoiceChat_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinVoiceChat_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_JoinVoiceChat_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_id_ = value;
}
inline void CChatRoom_JoinVoiceChat_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_JoinVoiceChat_Request.chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_JoinVoiceChat_Response

// optional uint64 voice_chatid = 1;
inline bool CChatRoom_JoinVoiceChat_Response::_internal_has_voice_chatid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_JoinVoiceChat_Response::has_voice_chatid() const {
  return _internal_has_voice_chatid();
}
inline void CChatRoom_JoinVoiceChat_Response::clear_voice_chatid() {
  voice_chatid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_JoinVoiceChat_Response::_internal_voice_chatid() const {
  return voice_chatid_;
}
inline uint64_t CChatRoom_JoinVoiceChat_Response::voice_chatid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_JoinVoiceChat_Response.voice_chatid)
  return _internal_voice_chatid();
}
inline void CChatRoom_JoinVoiceChat_Response::_internal_set_voice_chatid(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  voice_chatid_ = value;
}
inline void CChatRoom_JoinVoiceChat_Response::set_voice_chatid(uint64_t value) {
  _internal_set_voice_chatid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_JoinVoiceChat_Response.voice_chatid)
}

// -------------------------------------------------------------------

// CChatRoom_LeaveVoiceChat_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_LeaveVoiceChat_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_LeaveVoiceChat_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_LeaveVoiceChat_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_LeaveVoiceChat_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_LeaveVoiceChat_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_LeaveVoiceChat_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_LeaveVoiceChat_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_LeaveVoiceChat_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_LeaveVoiceChat_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_LeaveVoiceChat_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_LeaveVoiceChat_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_LeaveVoiceChat_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_LeaveVoiceChat_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_LeaveVoiceChat_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_LeaveVoiceChat_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_LeaveVoiceChat_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_id_ = value;
}
inline void CChatRoom_LeaveVoiceChat_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_LeaveVoiceChat_Request.chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_LeaveVoiceChat_Response

// -------------------------------------------------------------------

// CChatRoom_GetMessageHistory_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetMessageHistory_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_GetMessageHistory_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_GetMessageHistory_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_GetMessageHistory_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_GetMessageHistory_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_GetMessageHistory_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_GetMessageHistory_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_GetMessageHistory_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_GetMessageHistory_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_GetMessageHistory_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_GetMessageHistory_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_id_ = value;
}
inline void CChatRoom_GetMessageHistory_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Request.chat_id)
}

// optional uint32 last_time = 3;
inline bool CChatRoom_GetMessageHistory_Request::_internal_has_last_time() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Request::has_last_time() const {
  return _internal_has_last_time();
}
inline void CChatRoom_GetMessageHistory_Request::clear_last_time() {
  last_time_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CChatRoom_GetMessageHistory_Request::_internal_last_time() const {
  return last_time_;
}
inline uint32_t CChatRoom_GetMessageHistory_Request::last_time() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Request.last_time)
  return _internal_last_time();
}
inline void CChatRoom_GetMessageHistory_Request::_internal_set_last_time(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  last_time_ = value;
}
inline void CChatRoom_GetMessageHistory_Request::set_last_time(uint32_t value) {
  _internal_set_last_time(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Request.last_time)
}

// optional uint32 last_ordinal = 4;
inline bool CChatRoom_GetMessageHistory_Request::_internal_has_last_ordinal() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Request::has_last_ordinal() const {
  return _internal_has_last_ordinal();
}
inline void CChatRoom_GetMessageHistory_Request::clear_last_ordinal() {
  last_ordinal_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CChatRoom_GetMessageHistory_Request::_internal_last_ordinal() const {
  return last_ordinal_;
}
inline uint32_t CChatRoom_GetMessageHistory_Request::last_ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Request.last_ordinal)
  return _internal_last_ordinal();
}
inline void CChatRoom_GetMessageHistory_Request::_internal_set_last_ordinal(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  last_ordinal_ = value;
}
inline void CChatRoom_GetMessageHistory_Request::set_last_ordinal(uint32_t value) {
  _internal_set_last_ordinal(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Request.last_ordinal)
}

// optional uint32 start_time = 5;
inline bool CChatRoom_GetMessageHistory_Request::_internal_has_start_time() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Request::has_start_time() const {
  return _internal_has_start_time();
}
inline void CChatRoom_GetMessageHistory_Request::clear_start_time() {
  start_time_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CChatRoom_GetMessageHistory_Request::_internal_start_time() const {
  return start_time_;
}
inline uint32_t CChatRoom_GetMessageHistory_Request::start_time() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Request.start_time)
  return _internal_start_time();
}
inline void CChatRoom_GetMessageHistory_Request::_internal_set_start_time(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  start_time_ = value;
}
inline void CChatRoom_GetMessageHistory_Request::set_start_time(uint32_t value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Request.start_time)
}

// optional uint32 start_ordinal = 6;
inline bool CChatRoom_GetMessageHistory_Request::_internal_has_start_ordinal() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Request::has_start_ordinal() const {
  return _internal_has_start_ordinal();
}
inline void CChatRoom_GetMessageHistory_Request::clear_start_ordinal() {
  start_ordinal_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CChatRoom_GetMessageHistory_Request::_internal_start_ordinal() const {
  return start_ordinal_;
}
inline uint32_t CChatRoom_GetMessageHistory_Request::start_ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Request.start_ordinal)
  return _internal_start_ordinal();
}
inline void CChatRoom_GetMessageHistory_Request::_internal_set_start_ordinal(uint32_t value) {
  _has_bits_[0] |= 0x00000020u;
  start_ordinal_ = value;
}
inline void CChatRoom_GetMessageHistory_Request::set_start_ordinal(uint32_t value) {
  _internal_set_start_ordinal(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Request.start_ordinal)
}

// optional uint32 max_count = 7;
inline bool CChatRoom_GetMessageHistory_Request::_internal_has_max_count() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Request::has_max_count() const {
  return _internal_has_max_count();
}
inline void CChatRoom_GetMessageHistory_Request::clear_max_count() {
  max_count_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CChatRoom_GetMessageHistory_Request::_internal_max_count() const {
  return max_count_;
}
inline uint32_t CChatRoom_GetMessageHistory_Request::max_count() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Request.max_count)
  return _internal_max_count();
}
inline void CChatRoom_GetMessageHistory_Request::_internal_set_max_count(uint32_t value) {
  _has_bits_[0] |= 0x00000040u;
  max_count_ = value;
}
inline void CChatRoom_GetMessageHistory_Request::set_max_count(uint32_t value) {
  _internal_set_max_count(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Request.max_count)
}

// -------------------------------------------------------------------

// ServerMessage

// optional .EChatRoomServerMessage message = 1 [default = k_EChatRoomServerMsg_Invalid];
inline bool ServerMessage::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ServerMessage::has_message() const {
  return _internal_has_message();
}
inline void ServerMessage::clear_message() {
  message_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::EChatRoomServerMessage ServerMessage::_internal_message() const {
  return static_cast< ::EChatRoomServerMessage >(message_);
}
inline ::EChatRoomServerMessage ServerMessage::message() const {
  // @@protoc_insertion_point(field_get:ServerMessage.message)
  return _internal_message();
}
inline void ServerMessage::_internal_set_message(::EChatRoomServerMessage value) {
  assert(::EChatRoomServerMessage_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  message_ = value;
}
inline void ServerMessage::set_message(::EChatRoomServerMessage value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:ServerMessage.message)
}

// optional string string_param = 2;
inline bool ServerMessage::_internal_has_string_param() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ServerMessage::has_string_param() const {
  return _internal_has_string_param();
}
inline void ServerMessage::clear_string_param() {
  string_param_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ServerMessage::string_param() const {
  // @@protoc_insertion_point(field_get:ServerMessage.string_param)
  return _internal_string_param();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerMessage::set_string_param(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 string_param_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ServerMessage.string_param)
}
inline std::string* ServerMessage::mutable_string_param() {
  std::string* _s = _internal_mutable_string_param();
  // @@protoc_insertion_point(field_mutable:ServerMessage.string_param)
  return _s;
}
inline const std::string& ServerMessage::_internal_string_param() const {
  return string_param_.Get();
}
inline void ServerMessage::_internal_set_string_param(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  string_param_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* ServerMessage::_internal_mutable_string_param() {
  _has_bits_[0] |= 0x00000001u;
  return string_param_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* ServerMessage::release_string_param() {
  // @@protoc_insertion_point(field_release:ServerMessage.string_param)
  if (!_internal_has_string_param()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = string_param_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (string_param_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    string_param_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void ServerMessage::set_allocated_string_param(std::string* string_param) {
  if (string_param != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  string_param_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), string_param,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (string_param_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    string_param_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ServerMessage.string_param)
}

// optional uint32 accountid_param = 3;
inline bool ServerMessage::_internal_has_accountid_param() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ServerMessage::has_accountid_param() const {
  return _internal_has_accountid_param();
}
inline void ServerMessage::clear_accountid_param() {
  accountid_param_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t ServerMessage::_internal_accountid_param() const {
  return accountid_param_;
}
inline uint32_t ServerMessage::accountid_param() const {
  // @@protoc_insertion_point(field_get:ServerMessage.accountid_param)
  return _internal_accountid_param();
}
inline void ServerMessage::_internal_set_accountid_param(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  accountid_param_ = value;
}
inline void ServerMessage::set_accountid_param(uint32_t value) {
  _internal_set_accountid_param(value);
  // @@protoc_insertion_point(field_set:ServerMessage.accountid_param)
}

// -------------------------------------------------------------------

// CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction

// optional .EChatRoomMessageReactionType reaction_type = 1 [default = k_EChatRoomMessageReactionType_Invalid];
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::_internal_has_reaction_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::has_reaction_type() const {
  return _internal_has_reaction_type();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::clear_reaction_type() {
  reaction_type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::EChatRoomMessageReactionType CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::_internal_reaction_type() const {
  return static_cast< ::EChatRoomMessageReactionType >(reaction_type_);
}
inline ::EChatRoomMessageReactionType CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::reaction_type() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction.reaction_type)
  return _internal_reaction_type();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::_internal_set_reaction_type(::EChatRoomMessageReactionType value) {
  assert(::EChatRoomMessageReactionType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  reaction_type_ = value;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::set_reaction_type(::EChatRoomMessageReactionType value) {
  _internal_set_reaction_type(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction.reaction_type)
}

// optional string reaction = 2;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::_internal_has_reaction() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::has_reaction() const {
  return _internal_has_reaction();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::clear_reaction() {
  reaction_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::reaction() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction.reaction)
  return _internal_reaction();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::set_reaction(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 reaction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction.reaction)
}
inline std::string* CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::mutable_reaction() {
  std::string* _s = _internal_mutable_reaction();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction.reaction)
  return _s;
}
inline const std::string& CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::_internal_reaction() const {
  return reaction_.Get();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::_internal_set_reaction(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  reaction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::_internal_mutable_reaction() {
  _has_bits_[0] |= 0x00000001u;
  return reaction_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::release_reaction() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction.reaction)
  if (!_internal_has_reaction()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = reaction_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (reaction_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    reaction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::set_allocated_reaction(std::string* reaction) {
  if (reaction != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  reaction_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reaction,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (reaction_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    reaction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction.reaction)
}

// optional uint32 num_reactors = 3;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::_internal_has_num_reactors() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::has_num_reactors() const {
  return _internal_has_num_reactors();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::clear_num_reactors() {
  num_reactors_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::_internal_num_reactors() const {
  return num_reactors_;
}
inline uint32_t CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::num_reactors() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction.num_reactors)
  return _internal_num_reactors();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::_internal_set_num_reactors(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  num_reactors_ = value;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::set_num_reactors(uint32_t value) {
  _internal_set_num_reactors(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction.num_reactors)
}

// optional bool has_user_reacted = 4;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::_internal_has_has_user_reacted() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::has_has_user_reacted() const {
  return _internal_has_has_user_reacted();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::clear_has_user_reacted() {
  has_user_reacted_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::_internal_has_user_reacted() const {
  return has_user_reacted_;
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::has_user_reacted() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction.has_user_reacted)
  return _internal_has_user_reacted();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::_internal_set_has_user_reacted(bool value) {
  _has_bits_[0] |= 0x00000008u;
  has_user_reacted_ = value;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction::set_has_user_reacted(bool value) {
  _internal_set_has_user_reacted(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction.has_user_reacted)
}

// -------------------------------------------------------------------

// CChatRoom_GetMessageHistory_Response_ChatMessage

// optional uint32 sender = 1;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_has_sender() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::has_sender() const {
  return _internal_has_sender();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_sender() {
  sender_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_sender() const {
  return sender_;
}
inline uint32_t CChatRoom_GetMessageHistory_Response_ChatMessage::sender() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.sender)
  return _internal_sender();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_set_sender(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  sender_ = value;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_sender(uint32_t value) {
  _internal_set_sender(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.ChatMessage.sender)
}

// optional uint32 server_timestamp = 2;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_has_server_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::has_server_timestamp() const {
  return _internal_has_server_timestamp();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_server_timestamp() {
  server_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_server_timestamp() const {
  return server_timestamp_;
}
inline uint32_t CChatRoom_GetMessageHistory_Response_ChatMessage::server_timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.server_timestamp)
  return _internal_server_timestamp();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_set_server_timestamp(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  server_timestamp_ = value;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_server_timestamp(uint32_t value) {
  _internal_set_server_timestamp(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.ChatMessage.server_timestamp)
}

// optional string message = 3;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::has_message() const {
  return _internal_has_message();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_message() {
  message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_GetMessageHistory_Response_ChatMessage::message() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_GetMessageHistory_Response_ChatMessage::set_message(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.ChatMessage.message)
}
inline std::string* CChatRoom_GetMessageHistory_Response_ChatMessage::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetMessageHistory_Response.ChatMessage.message)
  return _s;
}
inline const std::string& CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_message() const {
  return message_.Get();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetMessageHistory_Response_ChatMessage::release_message() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetMessageHistory_Response.ChatMessage.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (message_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (message_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetMessageHistory_Response.ChatMessage.message)
}

// optional uint32 ordinal = 4;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_has_ordinal() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::has_ordinal() const {
  return _internal_has_ordinal();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_ordinal() {
  ordinal_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_ordinal() const {
  return ordinal_;
}
inline uint32_t CChatRoom_GetMessageHistory_Response_ChatMessage::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.ordinal)
  return _internal_ordinal();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_set_ordinal(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  ordinal_ = value;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_ordinal(uint32_t value) {
  _internal_set_ordinal(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.ChatMessage.ordinal)
}

// optional .ServerMessage server_message = 5;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_has_server_message() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || server_message_ != nullptr);
  return value;
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::has_server_message() const {
  return _internal_has_server_message();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_server_message() {
  if (server_message_ != nullptr) server_message_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::ServerMessage& CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_server_message() const {
  const ::ServerMessage* p = server_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::ServerMessage&>(
      ::_ServerMessage_default_instance_);
}
inline const ::ServerMessage& CChatRoom_GetMessageHistory_Response_ChatMessage::server_message() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.server_message)
  return _internal_server_message();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::unsafe_arena_set_allocated_server_message(
    ::ServerMessage* server_message) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(server_message_);
  }
  server_message_ = server_message;
  if (server_message) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_GetMessageHistory_Response.ChatMessage.server_message)
}
inline ::ServerMessage* CChatRoom_GetMessageHistory_Response_ChatMessage::release_server_message() {
  _has_bits_[0] &= ~0x00000002u;
  ::ServerMessage* temp = server_message_;
  server_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ServerMessage* CChatRoom_GetMessageHistory_Response_ChatMessage::unsafe_arena_release_server_message() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetMessageHistory_Response.ChatMessage.server_message)
  _has_bits_[0] &= ~0x00000002u;
  ::ServerMessage* temp = server_message_;
  server_message_ = nullptr;
  return temp;
}
inline ::ServerMessage* CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_mutable_server_message() {
  _has_bits_[0] |= 0x00000002u;
  if (server_message_ == nullptr) {
    auto* p = CreateMaybeMessage<::ServerMessage>(GetArenaForAllocation());
    server_message_ = p;
  }
  return server_message_;
}
inline ::ServerMessage* CChatRoom_GetMessageHistory_Response_ChatMessage::mutable_server_message() {
  ::ServerMessage* _msg = _internal_mutable_server_message();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetMessageHistory_Response.ChatMessage.server_message)
  return _msg;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_allocated_server_message(::ServerMessage* server_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete server_message_;
  }
  if (server_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::ServerMessage>::GetOwningArena(server_message);
    if (message_arena != submessage_arena) {
      server_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, server_message, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  server_message_ = server_message;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetMessageHistory_Response.ChatMessage.server_message)
}

// optional bool deleted = 6;
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_has_deleted() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::has_deleted() const {
  return _internal_has_deleted();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_deleted() {
  deleted_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_deleted() const {
  return deleted_;
}
inline bool CChatRoom_GetMessageHistory_Response_ChatMessage::deleted() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.deleted)
  return _internal_deleted();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_set_deleted(bool value) {
  _has_bits_[0] |= 0x00000020u;
  deleted_ = value;
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::set_deleted(bool value) {
  _internal_set_deleted(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.ChatMessage.deleted)
}

// repeated .CChatRoom_GetMessageHistory_Response.ChatMessage.MessageReaction reactions = 7;
inline int CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_reactions_size() const {
  return reactions_.size();
}
inline int CChatRoom_GetMessageHistory_Response_ChatMessage::reactions_size() const {
  return _internal_reactions_size();
}
inline void CChatRoom_GetMessageHistory_Response_ChatMessage::clear_reactions() {
  reactions_.Clear();
}
inline ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction* CChatRoom_GetMessageHistory_Response_ChatMessage::mutable_reactions(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetMessageHistory_Response.ChatMessage.reactions)
  return reactions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction >*
CChatRoom_GetMessageHistory_Response_ChatMessage::mutable_reactions() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetMessageHistory_Response.ChatMessage.reactions)
  return &reactions_;
}
inline const ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction& CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_reactions(int index) const {
  return reactions_.Get(index);
}
inline const ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction& CChatRoom_GetMessageHistory_Response_ChatMessage::reactions(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.ChatMessage.reactions)
  return _internal_reactions(index);
}
inline ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction* CChatRoom_GetMessageHistory_Response_ChatMessage::_internal_add_reactions() {
  return reactions_.Add();
}
inline ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction* CChatRoom_GetMessageHistory_Response_ChatMessage::add_reactions() {
  ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction* _add = _internal_add_reactions();
  // @@protoc_insertion_point(field_add:CChatRoom_GetMessageHistory_Response.ChatMessage.reactions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction >&
CChatRoom_GetMessageHistory_Response_ChatMessage::reactions() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetMessageHistory_Response.ChatMessage.reactions)
  return reactions_;
}

// -------------------------------------------------------------------

// CChatRoom_GetMessageHistory_Response

// repeated .CChatRoom_GetMessageHistory_Response.ChatMessage messages = 1;
inline int CChatRoom_GetMessageHistory_Response::_internal_messages_size() const {
  return messages_.size();
}
inline int CChatRoom_GetMessageHistory_Response::messages_size() const {
  return _internal_messages_size();
}
inline void CChatRoom_GetMessageHistory_Response::clear_messages() {
  messages_.Clear();
}
inline ::CChatRoom_GetMessageHistory_Response_ChatMessage* CChatRoom_GetMessageHistory_Response::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetMessageHistory_Response.messages)
  return messages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage >*
CChatRoom_GetMessageHistory_Response::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetMessageHistory_Response.messages)
  return &messages_;
}
inline const ::CChatRoom_GetMessageHistory_Response_ChatMessage& CChatRoom_GetMessageHistory_Response::_internal_messages(int index) const {
  return messages_.Get(index);
}
inline const ::CChatRoom_GetMessageHistory_Response_ChatMessage& CChatRoom_GetMessageHistory_Response::messages(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.messages)
  return _internal_messages(index);
}
inline ::CChatRoom_GetMessageHistory_Response_ChatMessage* CChatRoom_GetMessageHistory_Response::_internal_add_messages() {
  return messages_.Add();
}
inline ::CChatRoom_GetMessageHistory_Response_ChatMessage* CChatRoom_GetMessageHistory_Response::add_messages() {
  ::CChatRoom_GetMessageHistory_Response_ChatMessage* _add = _internal_add_messages();
  // @@protoc_insertion_point(field_add:CChatRoom_GetMessageHistory_Response.messages)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetMessageHistory_Response_ChatMessage >&
CChatRoom_GetMessageHistory_Response::messages() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetMessageHistory_Response.messages)
  return messages_;
}

// optional bool more_available = 4;
inline bool CChatRoom_GetMessageHistory_Response::_internal_has_more_available() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageHistory_Response::has_more_available() const {
  return _internal_has_more_available();
}
inline void CChatRoom_GetMessageHistory_Response::clear_more_available() {
  more_available_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CChatRoom_GetMessageHistory_Response::_internal_more_available() const {
  return more_available_;
}
inline bool CChatRoom_GetMessageHistory_Response::more_available() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageHistory_Response.more_available)
  return _internal_more_available();
}
inline void CChatRoom_GetMessageHistory_Response::_internal_set_more_available(bool value) {
  _has_bits_[0] |= 0x00000001u;
  more_available_ = value;
}
inline void CChatRoom_GetMessageHistory_Response::set_more_available(bool value) {
  _internal_set_more_available(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageHistory_Response.more_available)
}

// -------------------------------------------------------------------

// CChatRoom_GetMyChatRoomGroups_Request

// -------------------------------------------------------------------

// CChatRoom_GetChatRoomGroupSummary_Response

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000010u;
}
inline uint64_t CChatRoom_GetChatRoomGroupSummary_Response::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_GetChatRoomGroupSummary_Response::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000010u;
  chat_group_id_ = value;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_id)
}

// optional string chat_group_name = 2;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_chat_group_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_chat_group_name() const {
  return _internal_has_chat_group_name();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_chat_group_name() {
  chat_group_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_GetChatRoomGroupSummary_Response::chat_group_name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_name)
  return _internal_chat_group_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 chat_group_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_name)
}
inline std::string* CChatRoom_GetChatRoomGroupSummary_Response::mutable_chat_group_name() {
  std::string* _s = _internal_mutable_chat_group_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_name)
  return _s;
}
inline const std::string& CChatRoom_GetChatRoomGroupSummary_Response::_internal_chat_group_name() const {
  return chat_group_name_.Get();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_chat_group_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetChatRoomGroupSummary_Response::_internal_mutable_chat_group_name() {
  _has_bits_[0] |= 0x00000001u;
  return chat_group_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetChatRoomGroupSummary_Response::release_chat_group_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_name)
  if (!_internal_has_chat_group_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = chat_group_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (chat_group_name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    chat_group_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_allocated_chat_group_name(std::string* chat_group_name) {
  if (chat_group_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  chat_group_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), chat_group_name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (chat_group_name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    chat_group_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_name)
}

// optional uint32 active_member_count = 3;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_active_member_count() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_active_member_count() const {
  return _internal_has_active_member_count();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_active_member_count() {
  active_member_count_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CChatRoom_GetChatRoomGroupSummary_Response::_internal_active_member_count() const {
  return active_member_count_;
}
inline uint32_t CChatRoom_GetChatRoomGroupSummary_Response::active_member_count() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.active_member_count)
  return _internal_active_member_count();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_active_member_count(uint32_t value) {
  _has_bits_[0] |= 0x00000020u;
  active_member_count_ = value;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_active_member_count(uint32_t value) {
  _internal_set_active_member_count(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.active_member_count)
}

// optional uint32 active_voice_member_count = 4;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_active_voice_member_count() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_active_voice_member_count() const {
  return _internal_has_active_voice_member_count();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_active_voice_member_count() {
  active_voice_member_count_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CChatRoom_GetChatRoomGroupSummary_Response::_internal_active_voice_member_count() const {
  return active_voice_member_count_;
}
inline uint32_t CChatRoom_GetChatRoomGroupSummary_Response::active_voice_member_count() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.active_voice_member_count)
  return _internal_active_voice_member_count();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_active_voice_member_count(uint32_t value) {
  _has_bits_[0] |= 0x00000040u;
  active_voice_member_count_ = value;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_active_voice_member_count(uint32_t value) {
  _internal_set_active_voice_member_count(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.active_voice_member_count)
}

// optional uint64 default_chat_id = 5;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_default_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_default_chat_id() const {
  return _internal_has_default_chat_id();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_default_chat_id() {
  default_chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000080u;
}
inline uint64_t CChatRoom_GetChatRoomGroupSummary_Response::_internal_default_chat_id() const {
  return default_chat_id_;
}
inline uint64_t CChatRoom_GetChatRoomGroupSummary_Response::default_chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.default_chat_id)
  return _internal_default_chat_id();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_default_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000080u;
  default_chat_id_ = value;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_default_chat_id(uint64_t value) {
  _internal_set_default_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.default_chat_id)
}

// repeated .CChatRoomState chat_rooms = 6;
inline int CChatRoom_GetChatRoomGroupSummary_Response::_internal_chat_rooms_size() const {
  return chat_rooms_.size();
}
inline int CChatRoom_GetChatRoomGroupSummary_Response::chat_rooms_size() const {
  return _internal_chat_rooms_size();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_chat_rooms() {
  chat_rooms_.Clear();
}
inline ::CChatRoomState* CChatRoom_GetChatRoomGroupSummary_Response::mutable_chat_rooms(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupSummary_Response.chat_rooms)
  return chat_rooms_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState >*
CChatRoom_GetChatRoomGroupSummary_Response::mutable_chat_rooms() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetChatRoomGroupSummary_Response.chat_rooms)
  return &chat_rooms_;
}
inline const ::CChatRoomState& CChatRoom_GetChatRoomGroupSummary_Response::_internal_chat_rooms(int index) const {
  return chat_rooms_.Get(index);
}
inline const ::CChatRoomState& CChatRoom_GetChatRoomGroupSummary_Response::chat_rooms(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.chat_rooms)
  return _internal_chat_rooms(index);
}
inline ::CChatRoomState* CChatRoom_GetChatRoomGroupSummary_Response::_internal_add_chat_rooms() {
  return chat_rooms_.Add();
}
inline ::CChatRoomState* CChatRoom_GetChatRoomGroupSummary_Response::add_chat_rooms() {
  ::CChatRoomState* _add = _internal_add_chat_rooms();
  // @@protoc_insertion_point(field_add:CChatRoom_GetChatRoomGroupSummary_Response.chat_rooms)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState >&
CChatRoom_GetChatRoomGroupSummary_Response::chat_rooms() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetChatRoomGroupSummary_Response.chat_rooms)
  return chat_rooms_;
}

// optional uint32 clanid = 7;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_clanid() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_clanid() const {
  return _internal_has_clanid();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_clanid() {
  clanid_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline uint32_t CChatRoom_GetChatRoomGroupSummary_Response::_internal_clanid() const {
  return clanid_;
}
inline uint32_t CChatRoom_GetChatRoomGroupSummary_Response::clanid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.clanid)
  return _internal_clanid();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_clanid(uint32_t value) {
  _has_bits_[0] |= 0x00000100u;
  clanid_ = value;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_clanid(uint32_t value) {
  _internal_set_clanid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.clanid)
}

// optional string chat_group_tagline = 8;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_chat_group_tagline() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_chat_group_tagline() const {
  return _internal_has_chat_group_tagline();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_chat_group_tagline() {
  chat_group_tagline_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CChatRoom_GetChatRoomGroupSummary_Response::chat_group_tagline() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_tagline)
  return _internal_chat_group_tagline();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_tagline(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 chat_group_tagline_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_tagline)
}
inline std::string* CChatRoom_GetChatRoomGroupSummary_Response::mutable_chat_group_tagline() {
  std::string* _s = _internal_mutable_chat_group_tagline();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_tagline)
  return _s;
}
inline const std::string& CChatRoom_GetChatRoomGroupSummary_Response::_internal_chat_group_tagline() const {
  return chat_group_tagline_.Get();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_chat_group_tagline(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_tagline_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetChatRoomGroupSummary_Response::_internal_mutable_chat_group_tagline() {
  _has_bits_[0] |= 0x00000002u;
  return chat_group_tagline_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetChatRoomGroupSummary_Response::release_chat_group_tagline() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_tagline)
  if (!_internal_has_chat_group_tagline()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  auto* p = chat_group_tagline_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (chat_group_tagline_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    chat_group_tagline_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_allocated_chat_group_tagline(std::string* chat_group_tagline) {
  if (chat_group_tagline != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  chat_group_tagline_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), chat_group_tagline,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (chat_group_tagline_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    chat_group_tagline_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_tagline)
}

// optional uint32 accountid_owner = 9;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_accountid_owner() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_accountid_owner() const {
  return _internal_has_accountid_owner();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_accountid_owner() {
  accountid_owner_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CChatRoom_GetChatRoomGroupSummary_Response::_internal_accountid_owner() const {
  return accountid_owner_;
}
inline uint32_t CChatRoom_GetChatRoomGroupSummary_Response::accountid_owner() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.accountid_owner)
  return _internal_accountid_owner();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_accountid_owner(uint32_t value) {
  _has_bits_[0] |= 0x00000200u;
  accountid_owner_ = value;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_accountid_owner(uint32_t value) {
  _internal_set_accountid_owner(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.accountid_owner)
}

// repeated uint32 top_members = 10;
inline int CChatRoom_GetChatRoomGroupSummary_Response::_internal_top_members_size() const {
  return top_members_.size();
}
inline int CChatRoom_GetChatRoomGroupSummary_Response::top_members_size() const {
  return _internal_top_members_size();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_top_members() {
  top_members_.Clear();
}
inline uint32_t CChatRoom_GetChatRoomGroupSummary_Response::_internal_top_members(int index) const {
  return top_members_.Get(index);
}
inline uint32_t CChatRoom_GetChatRoomGroupSummary_Response::top_members(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.top_members)
  return _internal_top_members(index);
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_top_members(int index, uint32_t value) {
  top_members_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.top_members)
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_add_top_members(uint32_t value) {
  top_members_.Add(value);
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::add_top_members(uint32_t value) {
  _internal_add_top_members(value);
  // @@protoc_insertion_point(field_add:CChatRoom_GetChatRoomGroupSummary_Response.top_members)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CChatRoom_GetChatRoomGroupSummary_Response::_internal_top_members() const {
  return top_members_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CChatRoom_GetChatRoomGroupSummary_Response::top_members() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetChatRoomGroupSummary_Response.top_members)
  return _internal_top_members();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CChatRoom_GetChatRoomGroupSummary_Response::_internal_mutable_top_members() {
  return &top_members_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CChatRoom_GetChatRoomGroupSummary_Response::mutable_top_members() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetChatRoomGroupSummary_Response.top_members)
  return _internal_mutable_top_members();
}

// optional bytes chat_group_avatar_sha = 11;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_chat_group_avatar_sha() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_chat_group_avatar_sha() const {
  return _internal_has_chat_group_avatar_sha();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_chat_group_avatar_sha() {
  chat_group_avatar_sha_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CChatRoom_GetChatRoomGroupSummary_Response::chat_group_avatar_sha() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_avatar_sha)
  return _internal_chat_group_avatar_sha();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_GetChatRoomGroupSummary_Response::set_chat_group_avatar_sha(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000004u;
 chat_group_avatar_sha_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_avatar_sha)
}
inline std::string* CChatRoom_GetChatRoomGroupSummary_Response::mutable_chat_group_avatar_sha() {
  std::string* _s = _internal_mutable_chat_group_avatar_sha();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_avatar_sha)
  return _s;
}
inline const std::string& CChatRoom_GetChatRoomGroupSummary_Response::_internal_chat_group_avatar_sha() const {
  return chat_group_avatar_sha_.Get();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_chat_group_avatar_sha(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  chat_group_avatar_sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetChatRoomGroupSummary_Response::_internal_mutable_chat_group_avatar_sha() {
  _has_bits_[0] |= 0x00000004u;
  return chat_group_avatar_sha_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetChatRoomGroupSummary_Response::release_chat_group_avatar_sha() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_avatar_sha)
  if (!_internal_has_chat_group_avatar_sha()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  auto* p = chat_group_avatar_sha_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (chat_group_avatar_sha_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    chat_group_avatar_sha_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_allocated_chat_group_avatar_sha(std::string* chat_group_avatar_sha) {
  if (chat_group_avatar_sha != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  chat_group_avatar_sha_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), chat_group_avatar_sha,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (chat_group_avatar_sha_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    chat_group_avatar_sha_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetChatRoomGroupSummary_Response.chat_group_avatar_sha)
}

// optional .EChatRoomGroupRank rank = 12 [default = k_EChatRoomGroupRank_Default];
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_rank() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_rank() const {
  return _internal_has_rank();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_rank() {
  rank_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::EChatRoomGroupRank CChatRoom_GetChatRoomGroupSummary_Response::_internal_rank() const {
  return static_cast< ::EChatRoomGroupRank >(rank_);
}
inline ::EChatRoomGroupRank CChatRoom_GetChatRoomGroupSummary_Response::rank() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.rank)
  return _internal_rank();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_rank(::EChatRoomGroupRank value) {
  assert(::EChatRoomGroupRank_IsValid(value));
  _has_bits_[0] |= 0x00000800u;
  rank_ = value;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_rank(::EChatRoomGroupRank value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.rank)
}

// optional uint64 default_role_id = 13;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_default_role_id() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_default_role_id() const {
  return _internal_has_default_role_id();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_default_role_id() {
  default_role_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000400u;
}
inline uint64_t CChatRoom_GetChatRoomGroupSummary_Response::_internal_default_role_id() const {
  return default_role_id_;
}
inline uint64_t CChatRoom_GetChatRoomGroupSummary_Response::default_role_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.default_role_id)
  return _internal_default_role_id();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_default_role_id(uint64_t value) {
  _has_bits_[0] |= 0x00000400u;
  default_role_id_ = value;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_default_role_id(uint64_t value) {
  _internal_set_default_role_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.default_role_id)
}

// repeated uint64 role_ids = 14;
inline int CChatRoom_GetChatRoomGroupSummary_Response::_internal_role_ids_size() const {
  return role_ids_.size();
}
inline int CChatRoom_GetChatRoomGroupSummary_Response::role_ids_size() const {
  return _internal_role_ids_size();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_role_ids() {
  role_ids_.Clear();
}
inline uint64_t CChatRoom_GetChatRoomGroupSummary_Response::_internal_role_ids(int index) const {
  return role_ids_.Get(index);
}
inline uint64_t CChatRoom_GetChatRoomGroupSummary_Response::role_ids(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.role_ids)
  return _internal_role_ids(index);
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_role_ids(int index, uint64_t value) {
  role_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.role_ids)
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_add_role_ids(uint64_t value) {
  role_ids_.Add(value);
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::add_role_ids(uint64_t value) {
  _internal_add_role_ids(value);
  // @@protoc_insertion_point(field_add:CChatRoom_GetChatRoomGroupSummary_Response.role_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CChatRoom_GetChatRoomGroupSummary_Response::_internal_role_ids() const {
  return role_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CChatRoom_GetChatRoomGroupSummary_Response::role_ids() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetChatRoomGroupSummary_Response.role_ids)
  return _internal_role_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CChatRoom_GetChatRoomGroupSummary_Response::_internal_mutable_role_ids() {
  return &role_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CChatRoom_GetChatRoomGroupSummary_Response::mutable_role_ids() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetChatRoomGroupSummary_Response.role_ids)
  return _internal_mutable_role_ids();
}

// repeated .CChatRoleActions role_actions = 15;
inline int CChatRoom_GetChatRoomGroupSummary_Response::_internal_role_actions_size() const {
  return role_actions_.size();
}
inline int CChatRoom_GetChatRoomGroupSummary_Response::role_actions_size() const {
  return _internal_role_actions_size();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_role_actions() {
  role_actions_.Clear();
}
inline ::CChatRoleActions* CChatRoom_GetChatRoomGroupSummary_Response::mutable_role_actions(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupSummary_Response.role_actions)
  return role_actions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions >*
CChatRoom_GetChatRoomGroupSummary_Response::mutable_role_actions() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetChatRoomGroupSummary_Response.role_actions)
  return &role_actions_;
}
inline const ::CChatRoleActions& CChatRoom_GetChatRoomGroupSummary_Response::_internal_role_actions(int index) const {
  return role_actions_.Get(index);
}
inline const ::CChatRoleActions& CChatRoom_GetChatRoomGroupSummary_Response::role_actions(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.role_actions)
  return _internal_role_actions(index);
}
inline ::CChatRoleActions* CChatRoom_GetChatRoomGroupSummary_Response::_internal_add_role_actions() {
  return role_actions_.Add();
}
inline ::CChatRoleActions* CChatRoom_GetChatRoomGroupSummary_Response::add_role_actions() {
  ::CChatRoleActions* _add = _internal_add_role_actions();
  // @@protoc_insertion_point(field_add:CChatRoom_GetChatRoomGroupSummary_Response.role_actions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoleActions >&
CChatRoom_GetChatRoomGroupSummary_Response::role_actions() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetChatRoomGroupSummary_Response.role_actions)
  return role_actions_;
}

// optional uint32 watching_broadcast_accountid = 16;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_watching_broadcast_accountid() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_watching_broadcast_accountid() const {
  return _internal_has_watching_broadcast_accountid();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_watching_broadcast_accountid() {
  watching_broadcast_accountid_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline uint32_t CChatRoom_GetChatRoomGroupSummary_Response::_internal_watching_broadcast_accountid() const {
  return watching_broadcast_accountid_;
}
inline uint32_t CChatRoom_GetChatRoomGroupSummary_Response::watching_broadcast_accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.watching_broadcast_accountid)
  return _internal_watching_broadcast_accountid();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_watching_broadcast_accountid(uint32_t value) {
  _has_bits_[0] |= 0x00001000u;
  watching_broadcast_accountid_ = value;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_watching_broadcast_accountid(uint32_t value) {
  _internal_set_watching_broadcast_accountid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.watching_broadcast_accountid)
}

// optional uint32 appid = 17;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_appid() const {
  return _internal_has_appid();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline uint32_t CChatRoom_GetChatRoomGroupSummary_Response::_internal_appid() const {
  return appid_;
}
inline uint32_t CChatRoom_GetChatRoomGroupSummary_Response::appid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.appid)
  return _internal_appid();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_appid(uint32_t value) {
  _has_bits_[0] |= 0x00004000u;
  appid_ = value;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_appid(uint32_t value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.appid)
}

// repeated .CChatPartyBeacon party_beacons = 18;
inline int CChatRoom_GetChatRoomGroupSummary_Response::_internal_party_beacons_size() const {
  return party_beacons_.size();
}
inline int CChatRoom_GetChatRoomGroupSummary_Response::party_beacons_size() const {
  return _internal_party_beacons_size();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_party_beacons() {
  party_beacons_.Clear();
}
inline ::CChatPartyBeacon* CChatRoom_GetChatRoomGroupSummary_Response::mutable_party_beacons(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupSummary_Response.party_beacons)
  return party_beacons_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatPartyBeacon >*
CChatRoom_GetChatRoomGroupSummary_Response::mutable_party_beacons() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetChatRoomGroupSummary_Response.party_beacons)
  return &party_beacons_;
}
inline const ::CChatPartyBeacon& CChatRoom_GetChatRoomGroupSummary_Response::_internal_party_beacons(int index) const {
  return party_beacons_.Get(index);
}
inline const ::CChatPartyBeacon& CChatRoom_GetChatRoomGroupSummary_Response::party_beacons(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.party_beacons)
  return _internal_party_beacons(index);
}
inline ::CChatPartyBeacon* CChatRoom_GetChatRoomGroupSummary_Response::_internal_add_party_beacons() {
  return party_beacons_.Add();
}
inline ::CChatPartyBeacon* CChatRoom_GetChatRoomGroupSummary_Response::add_party_beacons() {
  ::CChatPartyBeacon* _add = _internal_add_party_beacons();
  // @@protoc_insertion_point(field_add:CChatRoom_GetChatRoomGroupSummary_Response.party_beacons)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatPartyBeacon >&
CChatRoom_GetChatRoomGroupSummary_Response::party_beacons() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetChatRoomGroupSummary_Response.party_beacons)
  return party_beacons_;
}

// optional uint64 watching_broadcast_channel_id = 19;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_watching_broadcast_channel_id() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_watching_broadcast_channel_id() const {
  return _internal_has_watching_broadcast_channel_id();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_watching_broadcast_channel_id() {
  watching_broadcast_channel_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00002000u;
}
inline uint64_t CChatRoom_GetChatRoomGroupSummary_Response::_internal_watching_broadcast_channel_id() const {
  return watching_broadcast_channel_id_;
}
inline uint64_t CChatRoom_GetChatRoomGroupSummary_Response::watching_broadcast_channel_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.watching_broadcast_channel_id)
  return _internal_watching_broadcast_channel_id();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_watching_broadcast_channel_id(uint64_t value) {
  _has_bits_[0] |= 0x00002000u;
  watching_broadcast_channel_id_ = value;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_watching_broadcast_channel_id(uint64_t value) {
  _internal_set_watching_broadcast_channel_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.watching_broadcast_channel_id)
}

// optional uint64 active_minigame_id = 20;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_active_minigame_id() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_active_minigame_id() const {
  return _internal_has_active_minigame_id();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_active_minigame_id() {
  active_minigame_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00010000u;
}
inline uint64_t CChatRoom_GetChatRoomGroupSummary_Response::_internal_active_minigame_id() const {
  return active_minigame_id_;
}
inline uint64_t CChatRoom_GetChatRoomGroupSummary_Response::active_minigame_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.active_minigame_id)
  return _internal_active_minigame_id();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_active_minigame_id(uint64_t value) {
  _has_bits_[0] |= 0x00010000u;
  active_minigame_id_ = value;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_active_minigame_id(uint64_t value) {
  _internal_set_active_minigame_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.active_minigame_id)
}

// optional string avatar_ugc_url = 21;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_avatar_ugc_url() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_avatar_ugc_url() const {
  return _internal_has_avatar_ugc_url();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_avatar_ugc_url() {
  avatar_ugc_url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CChatRoom_GetChatRoomGroupSummary_Response::avatar_ugc_url() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.avatar_ugc_url)
  return _internal_avatar_ugc_url();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_GetChatRoomGroupSummary_Response::set_avatar_ugc_url(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000008u;
 avatar_ugc_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.avatar_ugc_url)
}
inline std::string* CChatRoom_GetChatRoomGroupSummary_Response::mutable_avatar_ugc_url() {
  std::string* _s = _internal_mutable_avatar_ugc_url();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupSummary_Response.avatar_ugc_url)
  return _s;
}
inline const std::string& CChatRoom_GetChatRoomGroupSummary_Response::_internal_avatar_ugc_url() const {
  return avatar_ugc_url_.Get();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_avatar_ugc_url(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  avatar_ugc_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetChatRoomGroupSummary_Response::_internal_mutable_avatar_ugc_url() {
  _has_bits_[0] |= 0x00000008u;
  return avatar_ugc_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetChatRoomGroupSummary_Response::release_avatar_ugc_url() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetChatRoomGroupSummary_Response.avatar_ugc_url)
  if (!_internal_has_avatar_ugc_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  auto* p = avatar_ugc_url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (avatar_ugc_url_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    avatar_ugc_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_allocated_avatar_ugc_url(std::string* avatar_ugc_url) {
  if (avatar_ugc_url != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  avatar_ugc_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_ugc_url,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (avatar_ugc_url_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    avatar_ugc_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetChatRoomGroupSummary_Response.avatar_ugc_url)
}

// optional bool disabled = 22;
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_has_disabled() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::has_disabled() const {
  return _internal_has_disabled();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::clear_disabled() {
  disabled_ = false;
  _has_bits_[0] &= ~0x00008000u;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::_internal_disabled() const {
  return disabled_;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Response::disabled() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Response.disabled)
  return _internal_disabled();
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::_internal_set_disabled(bool value) {
  _has_bits_[0] |= 0x00008000u;
  disabled_ = value;
}
inline void CChatRoom_GetChatRoomGroupSummary_Response::set_disabled(bool value) {
  _internal_set_disabled(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Response.disabled)
}

// -------------------------------------------------------------------

// CChatRoomSummaryPair

// optional .CUserChatRoomGroupState user_chat_group_state = 1;
inline bool CChatRoomSummaryPair::_internal_has_user_chat_group_state() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || user_chat_group_state_ != nullptr);
  return value;
}
inline bool CChatRoomSummaryPair::has_user_chat_group_state() const {
  return _internal_has_user_chat_group_state();
}
inline void CChatRoomSummaryPair::clear_user_chat_group_state() {
  if (user_chat_group_state_ != nullptr) user_chat_group_state_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CUserChatRoomGroupState& CChatRoomSummaryPair::_internal_user_chat_group_state() const {
  const ::CUserChatRoomGroupState* p = user_chat_group_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::CUserChatRoomGroupState&>(
      ::_CUserChatRoomGroupState_default_instance_);
}
inline const ::CUserChatRoomGroupState& CChatRoomSummaryPair::user_chat_group_state() const {
  // @@protoc_insertion_point(field_get:CChatRoomSummaryPair.user_chat_group_state)
  return _internal_user_chat_group_state();
}
inline void CChatRoomSummaryPair::unsafe_arena_set_allocated_user_chat_group_state(
    ::CUserChatRoomGroupState* user_chat_group_state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(user_chat_group_state_);
  }
  user_chat_group_state_ = user_chat_group_state;
  if (user_chat_group_state) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoomSummaryPair.user_chat_group_state)
}
inline ::CUserChatRoomGroupState* CChatRoomSummaryPair::release_user_chat_group_state() {
  _has_bits_[0] &= ~0x00000001u;
  ::CUserChatRoomGroupState* temp = user_chat_group_state_;
  user_chat_group_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CUserChatRoomGroupState* CChatRoomSummaryPair::unsafe_arena_release_user_chat_group_state() {
  // @@protoc_insertion_point(field_release:CChatRoomSummaryPair.user_chat_group_state)
  _has_bits_[0] &= ~0x00000001u;
  ::CUserChatRoomGroupState* temp = user_chat_group_state_;
  user_chat_group_state_ = nullptr;
  return temp;
}
inline ::CUserChatRoomGroupState* CChatRoomSummaryPair::_internal_mutable_user_chat_group_state() {
  _has_bits_[0] |= 0x00000001u;
  if (user_chat_group_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserChatRoomGroupState>(GetArenaForAllocation());
    user_chat_group_state_ = p;
  }
  return user_chat_group_state_;
}
inline ::CUserChatRoomGroupState* CChatRoomSummaryPair::mutable_user_chat_group_state() {
  ::CUserChatRoomGroupState* _msg = _internal_mutable_user_chat_group_state();
  // @@protoc_insertion_point(field_mutable:CChatRoomSummaryPair.user_chat_group_state)
  return _msg;
}
inline void CChatRoomSummaryPair::set_allocated_user_chat_group_state(::CUserChatRoomGroupState* user_chat_group_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete user_chat_group_state_;
  }
  if (user_chat_group_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CUserChatRoomGroupState>::GetOwningArena(user_chat_group_state);
    if (message_arena != submessage_arena) {
      user_chat_group_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_chat_group_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  user_chat_group_state_ = user_chat_group_state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoomSummaryPair.user_chat_group_state)
}

// optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 2;
inline bool CChatRoomSummaryPair::_internal_has_group_summary() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || group_summary_ != nullptr);
  return value;
}
inline bool CChatRoomSummaryPair::has_group_summary() const {
  return _internal_has_group_summary();
}
inline void CChatRoomSummaryPair::clear_group_summary() {
  if (group_summary_ != nullptr) group_summary_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CChatRoomSummaryPair::_internal_group_summary() const {
  const ::CChatRoom_GetChatRoomGroupSummary_Response* p = group_summary_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoom_GetChatRoomGroupSummary_Response&>(
      ::_CChatRoom_GetChatRoomGroupSummary_Response_default_instance_);
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CChatRoomSummaryPair::group_summary() const {
  // @@protoc_insertion_point(field_get:CChatRoomSummaryPair.group_summary)
  return _internal_group_summary();
}
inline void CChatRoomSummaryPair::unsafe_arena_set_allocated_group_summary(
    ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(group_summary_);
  }
  group_summary_ = group_summary;
  if (group_summary) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoomSummaryPair.group_summary)
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoomSummaryPair::release_group_summary() {
  _has_bits_[0] &= ~0x00000002u;
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = group_summary_;
  group_summary_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoomSummaryPair::unsafe_arena_release_group_summary() {
  // @@protoc_insertion_point(field_release:CChatRoomSummaryPair.group_summary)
  _has_bits_[0] &= ~0x00000002u;
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = group_summary_;
  group_summary_ = nullptr;
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoomSummaryPair::_internal_mutable_group_summary() {
  _has_bits_[0] |= 0x00000002u;
  if (group_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoom_GetChatRoomGroupSummary_Response>(GetArenaForAllocation());
    group_summary_ = p;
  }
  return group_summary_;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoomSummaryPair::mutable_group_summary() {
  ::CChatRoom_GetChatRoomGroupSummary_Response* _msg = _internal_mutable_group_summary();
  // @@protoc_insertion_point(field_mutable:CChatRoomSummaryPair.group_summary)
  return _msg;
}
inline void CChatRoomSummaryPair::set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete group_summary_;
  }
  if (group_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoom_GetChatRoomGroupSummary_Response>::GetOwningArena(group_summary);
    if (message_arena != submessage_arena) {
      group_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_summary, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  group_summary_ = group_summary;
  // @@protoc_insertion_point(field_set_allocated:CChatRoomSummaryPair.group_summary)
}

// -------------------------------------------------------------------

// CChatRoom_GetMyChatRoomGroups_Response

// repeated .CChatRoomSummaryPair chat_room_groups = 1;
inline int CChatRoom_GetMyChatRoomGroups_Response::_internal_chat_room_groups_size() const {
  return chat_room_groups_.size();
}
inline int CChatRoom_GetMyChatRoomGroups_Response::chat_room_groups_size() const {
  return _internal_chat_room_groups_size();
}
inline void CChatRoom_GetMyChatRoomGroups_Response::clear_chat_room_groups() {
  chat_room_groups_.Clear();
}
inline ::CChatRoomSummaryPair* CChatRoom_GetMyChatRoomGroups_Response::mutable_chat_room_groups(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetMyChatRoomGroups_Response.chat_room_groups)
  return chat_room_groups_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomSummaryPair >*
CChatRoom_GetMyChatRoomGroups_Response::mutable_chat_room_groups() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetMyChatRoomGroups_Response.chat_room_groups)
  return &chat_room_groups_;
}
inline const ::CChatRoomSummaryPair& CChatRoom_GetMyChatRoomGroups_Response::_internal_chat_room_groups(int index) const {
  return chat_room_groups_.Get(index);
}
inline const ::CChatRoomSummaryPair& CChatRoom_GetMyChatRoomGroups_Response::chat_room_groups(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMyChatRoomGroups_Response.chat_room_groups)
  return _internal_chat_room_groups(index);
}
inline ::CChatRoomSummaryPair* CChatRoom_GetMyChatRoomGroups_Response::_internal_add_chat_room_groups() {
  return chat_room_groups_.Add();
}
inline ::CChatRoomSummaryPair* CChatRoom_GetMyChatRoomGroups_Response::add_chat_room_groups() {
  ::CChatRoomSummaryPair* _add = _internal_add_chat_room_groups();
  // @@protoc_insertion_point(field_add:CChatRoom_GetMyChatRoomGroups_Response.chat_room_groups)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomSummaryPair >&
CChatRoom_GetMyChatRoomGroups_Response::chat_room_groups() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetMyChatRoomGroups_Response.chat_room_groups)
  return chat_room_groups_;
}

// -------------------------------------------------------------------

// CChatRoom_GetChatRoomGroupState_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetChatRoomGroupState_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupState_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_GetChatRoomGroupState_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_GetChatRoomGroupState_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_GetChatRoomGroupState_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupState_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_GetChatRoomGroupState_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_GetChatRoomGroupState_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupState_Request.chat_group_id)
}

// -------------------------------------------------------------------

// CChatRoom_GetChatRoomGroupState_Response

// optional .CChatRoomGroupState state = 1;
inline bool CChatRoom_GetChatRoomGroupState_Response::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || state_ != nullptr);
  return value;
}
inline bool CChatRoom_GetChatRoomGroupState_Response::has_state() const {
  return _internal_has_state();
}
inline void CChatRoom_GetChatRoomGroupState_Response::clear_state() {
  if (state_ != nullptr) state_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatRoomGroupState& CChatRoom_GetChatRoomGroupState_Response::_internal_state() const {
  const ::CChatRoomGroupState* p = state_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoomGroupState&>(
      ::_CChatRoomGroupState_default_instance_);
}
inline const ::CChatRoomGroupState& CChatRoom_GetChatRoomGroupState_Response::state() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupState_Response.state)
  return _internal_state();
}
inline void CChatRoom_GetChatRoomGroupState_Response::unsafe_arena_set_allocated_state(
    ::CChatRoomGroupState* state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(state_);
  }
  state_ = state;
  if (state) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_GetChatRoomGroupState_Response.state)
}
inline ::CChatRoomGroupState* CChatRoom_GetChatRoomGroupState_Response::release_state() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomGroupState* temp = state_;
  state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoomGroupState* CChatRoom_GetChatRoomGroupState_Response::unsafe_arena_release_state() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetChatRoomGroupState_Response.state)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomGroupState* temp = state_;
  state_ = nullptr;
  return temp;
}
inline ::CChatRoomGroupState* CChatRoom_GetChatRoomGroupState_Response::_internal_mutable_state() {
  _has_bits_[0] |= 0x00000001u;
  if (state_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoomGroupState>(GetArenaForAllocation());
    state_ = p;
  }
  return state_;
}
inline ::CChatRoomGroupState* CChatRoom_GetChatRoomGroupState_Response::mutable_state() {
  ::CChatRoomGroupState* _msg = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetChatRoomGroupState_Response.state)
  return _msg;
}
inline void CChatRoom_GetChatRoomGroupState_Response::set_allocated_state(::CChatRoomGroupState* state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete state_;
  }
  if (state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoomGroupState>::GetOwningArena(state);
    if (message_arena != submessage_arena) {
      state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetChatRoomGroupState_Response.state)
}

// -------------------------------------------------------------------

// CChatRoom_GetChatRoomGroupSummary_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetChatRoomGroupSummary_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetChatRoomGroupSummary_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_GetChatRoomGroupSummary_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_GetChatRoomGroupSummary_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_GetChatRoomGroupSummary_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetChatRoomGroupSummary_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_GetChatRoomGroupSummary_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_GetChatRoomGroupSummary_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetChatRoomGroupSummary_Request.chat_group_id)
}

// -------------------------------------------------------------------

// CChatRoom_SetAppChatRoomGroupForceActive_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SetAppChatRoomGroupForceActive_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SetAppChatRoomGroupForceActive_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_SetAppChatRoomGroupForceActive_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_SetAppChatRoomGroupForceActive_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_SetAppChatRoomGroupForceActive_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetAppChatRoomGroupForceActive_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_SetAppChatRoomGroupForceActive_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_SetAppChatRoomGroupForceActive_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetAppChatRoomGroupForceActive_Request.chat_group_id)
}

// optional uint32 requesting_app_id = 2;
inline bool CChatRoom_SetAppChatRoomGroupForceActive_Request::_internal_has_requesting_app_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_SetAppChatRoomGroupForceActive_Request::has_requesting_app_id() const {
  return _internal_has_requesting_app_id();
}
inline void CChatRoom_SetAppChatRoomGroupForceActive_Request::clear_requesting_app_id() {
  requesting_app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CChatRoom_SetAppChatRoomGroupForceActive_Request::_internal_requesting_app_id() const {
  return requesting_app_id_;
}
inline uint32_t CChatRoom_SetAppChatRoomGroupForceActive_Request::requesting_app_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetAppChatRoomGroupForceActive_Request.requesting_app_id)
  return _internal_requesting_app_id();
}
inline void CChatRoom_SetAppChatRoomGroupForceActive_Request::_internal_set_requesting_app_id(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  requesting_app_id_ = value;
}
inline void CChatRoom_SetAppChatRoomGroupForceActive_Request::set_requesting_app_id(uint32_t value) {
  _internal_set_requesting_app_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetAppChatRoomGroupForceActive_Request.requesting_app_id)
}

// -------------------------------------------------------------------

// CChatRoom_SetAppChatRoomGroupForceActive_Response

// optional uint32 result = 1;
inline bool CChatRoom_SetAppChatRoomGroupForceActive_Response::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SetAppChatRoomGroupForceActive_Response::has_result() const {
  return _internal_has_result();
}
inline void CChatRoom_SetAppChatRoomGroupForceActive_Response::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CChatRoom_SetAppChatRoomGroupForceActive_Response::_internal_result() const {
  return result_;
}
inline uint32_t CChatRoom_SetAppChatRoomGroupForceActive_Response::result() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetAppChatRoomGroupForceActive_Response.result)
  return _internal_result();
}
inline void CChatRoom_SetAppChatRoomGroupForceActive_Response::_internal_set_result(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CChatRoom_SetAppChatRoomGroupForceActive_Response::set_result(uint32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetAppChatRoomGroupForceActive_Response.result)
}

// repeated uint32 accounts_in_channel = 2;
inline int CChatRoom_SetAppChatRoomGroupForceActive_Response::_internal_accounts_in_channel_size() const {
  return accounts_in_channel_.size();
}
inline int CChatRoom_SetAppChatRoomGroupForceActive_Response::accounts_in_channel_size() const {
  return _internal_accounts_in_channel_size();
}
inline void CChatRoom_SetAppChatRoomGroupForceActive_Response::clear_accounts_in_channel() {
  accounts_in_channel_.Clear();
}
inline uint32_t CChatRoom_SetAppChatRoomGroupForceActive_Response::_internal_accounts_in_channel(int index) const {
  return accounts_in_channel_.Get(index);
}
inline uint32_t CChatRoom_SetAppChatRoomGroupForceActive_Response::accounts_in_channel(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetAppChatRoomGroupForceActive_Response.accounts_in_channel)
  return _internal_accounts_in_channel(index);
}
inline void CChatRoom_SetAppChatRoomGroupForceActive_Response::set_accounts_in_channel(int index, uint32_t value) {
  accounts_in_channel_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetAppChatRoomGroupForceActive_Response.accounts_in_channel)
}
inline void CChatRoom_SetAppChatRoomGroupForceActive_Response::_internal_add_accounts_in_channel(uint32_t value) {
  accounts_in_channel_.Add(value);
}
inline void CChatRoom_SetAppChatRoomGroupForceActive_Response::add_accounts_in_channel(uint32_t value) {
  _internal_add_accounts_in_channel(value);
  // @@protoc_insertion_point(field_add:CChatRoom_SetAppChatRoomGroupForceActive_Response.accounts_in_channel)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CChatRoom_SetAppChatRoomGroupForceActive_Response::_internal_accounts_in_channel() const {
  return accounts_in_channel_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CChatRoom_SetAppChatRoomGroupForceActive_Response::accounts_in_channel() const {
  // @@protoc_insertion_point(field_list:CChatRoom_SetAppChatRoomGroupForceActive_Response.accounts_in_channel)
  return _internal_accounts_in_channel();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CChatRoom_SetAppChatRoomGroupForceActive_Response::_internal_mutable_accounts_in_channel() {
  return &accounts_in_channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CChatRoom_SetAppChatRoomGroupForceActive_Response::mutable_accounts_in_channel() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_SetAppChatRoomGroupForceActive_Response.accounts_in_channel)
  return _internal_mutable_accounts_in_channel();
}

// -------------------------------------------------------------------

// CChatRoom_SetAppChatRoomGroupStopForceActive_Notification

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SetAppChatRoomGroupStopForceActive_Notification::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SetAppChatRoomGroupStopForceActive_Notification::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_SetAppChatRoomGroupStopForceActive_Notification::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_SetAppChatRoomGroupStopForceActive_Notification::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_SetAppChatRoomGroupStopForceActive_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetAppChatRoomGroupStopForceActive_Notification.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_SetAppChatRoomGroupStopForceActive_Notification::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_SetAppChatRoomGroupStopForceActive_Notification::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetAppChatRoomGroupStopForceActive_Notification.chat_group_id)
}

// optional uint32 requesting_app_id = 2;
inline bool CChatRoom_SetAppChatRoomGroupStopForceActive_Notification::_internal_has_requesting_app_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_SetAppChatRoomGroupStopForceActive_Notification::has_requesting_app_id() const {
  return _internal_has_requesting_app_id();
}
inline void CChatRoom_SetAppChatRoomGroupStopForceActive_Notification::clear_requesting_app_id() {
  requesting_app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CChatRoom_SetAppChatRoomGroupStopForceActive_Notification::_internal_requesting_app_id() const {
  return requesting_app_id_;
}
inline uint32_t CChatRoom_SetAppChatRoomGroupStopForceActive_Notification::requesting_app_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetAppChatRoomGroupStopForceActive_Notification.requesting_app_id)
  return _internal_requesting_app_id();
}
inline void CChatRoom_SetAppChatRoomGroupStopForceActive_Notification::_internal_set_requesting_app_id(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  requesting_app_id_ = value;
}
inline void CChatRoom_SetAppChatRoomGroupStopForceActive_Notification::set_requesting_app_id(uint32_t value) {
  _internal_set_requesting_app_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetAppChatRoomGroupStopForceActive_Notification.requesting_app_id)
}

// -------------------------------------------------------------------

// CChatRoom_AckChatMessage_Notification

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_AckChatMessage_Notification::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_AckChatMessage_Notification::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_AckChatMessage_Notification::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_AckChatMessage_Notification::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_AckChatMessage_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_AckChatMessage_Notification.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_AckChatMessage_Notification::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_AckChatMessage_Notification::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_AckChatMessage_Notification.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_AckChatMessage_Notification::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_AckChatMessage_Notification::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_AckChatMessage_Notification::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_AckChatMessage_Notification::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_AckChatMessage_Notification::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_AckChatMessage_Notification.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_AckChatMessage_Notification::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_id_ = value;
}
inline void CChatRoom_AckChatMessage_Notification::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_AckChatMessage_Notification.chat_id)
}

// optional uint32 timestamp = 3;
inline bool CChatRoom_AckChatMessage_Notification::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_AckChatMessage_Notification::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void CChatRoom_AckChatMessage_Notification::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CChatRoom_AckChatMessage_Notification::_internal_timestamp() const {
  return timestamp_;
}
inline uint32_t CChatRoom_AckChatMessage_Notification::timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_AckChatMessage_Notification.timestamp)
  return _internal_timestamp();
}
inline void CChatRoom_AckChatMessage_Notification::_internal_set_timestamp(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  timestamp_ = value;
}
inline void CChatRoom_AckChatMessage_Notification::set_timestamp(uint32_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:CChatRoom_AckChatMessage_Notification.timestamp)
}

// -------------------------------------------------------------------

// CChatRoom_CreateInviteLink_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_CreateInviteLink_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_CreateInviteLink_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_CreateInviteLink_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_CreateInviteLink_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_CreateInviteLink_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateInviteLink_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_CreateInviteLink_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_CreateInviteLink_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateInviteLink_Request.chat_group_id)
}

// optional uint32 seconds_valid = 2;
inline bool CChatRoom_CreateInviteLink_Request::_internal_has_seconds_valid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_CreateInviteLink_Request::has_seconds_valid() const {
  return _internal_has_seconds_valid();
}
inline void CChatRoom_CreateInviteLink_Request::clear_seconds_valid() {
  seconds_valid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CChatRoom_CreateInviteLink_Request::_internal_seconds_valid() const {
  return seconds_valid_;
}
inline uint32_t CChatRoom_CreateInviteLink_Request::seconds_valid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateInviteLink_Request.seconds_valid)
  return _internal_seconds_valid();
}
inline void CChatRoom_CreateInviteLink_Request::_internal_set_seconds_valid(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  seconds_valid_ = value;
}
inline void CChatRoom_CreateInviteLink_Request::set_seconds_valid(uint32_t value) {
  _internal_set_seconds_valid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateInviteLink_Request.seconds_valid)
}

// optional uint64 chat_id = 3;
inline bool CChatRoom_CreateInviteLink_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_CreateInviteLink_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_CreateInviteLink_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_CreateInviteLink_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_CreateInviteLink_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateInviteLink_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_CreateInviteLink_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_id_ = value;
}
inline void CChatRoom_CreateInviteLink_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateInviteLink_Request.chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_CreateInviteLink_Response

// optional string invite_code = 1;
inline bool CChatRoom_CreateInviteLink_Response::_internal_has_invite_code() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_CreateInviteLink_Response::has_invite_code() const {
  return _internal_has_invite_code();
}
inline void CChatRoom_CreateInviteLink_Response::clear_invite_code() {
  invite_code_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_CreateInviteLink_Response::invite_code() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateInviteLink_Response.invite_code)
  return _internal_invite_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_CreateInviteLink_Response::set_invite_code(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_CreateInviteLink_Response.invite_code)
}
inline std::string* CChatRoom_CreateInviteLink_Response::mutable_invite_code() {
  std::string* _s = _internal_mutable_invite_code();
  // @@protoc_insertion_point(field_mutable:CChatRoom_CreateInviteLink_Response.invite_code)
  return _s;
}
inline const std::string& CChatRoom_CreateInviteLink_Response::_internal_invite_code() const {
  return invite_code_.Get();
}
inline void CChatRoom_CreateInviteLink_Response::_internal_set_invite_code(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_CreateInviteLink_Response::_internal_mutable_invite_code() {
  _has_bits_[0] |= 0x00000001u;
  return invite_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_CreateInviteLink_Response::release_invite_code() {
  // @@protoc_insertion_point(field_release:CChatRoom_CreateInviteLink_Response.invite_code)
  if (!_internal_has_invite_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = invite_code_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (invite_code_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_CreateInviteLink_Response::set_allocated_invite_code(std::string* invite_code) {
  if (invite_code != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  invite_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), invite_code,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (invite_code_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_CreateInviteLink_Response.invite_code)
}

// optional uint32 seconds_valid = 2;
inline bool CChatRoom_CreateInviteLink_Response::_internal_has_seconds_valid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_CreateInviteLink_Response::has_seconds_valid() const {
  return _internal_has_seconds_valid();
}
inline void CChatRoom_CreateInviteLink_Response::clear_seconds_valid() {
  seconds_valid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CChatRoom_CreateInviteLink_Response::_internal_seconds_valid() const {
  return seconds_valid_;
}
inline uint32_t CChatRoom_CreateInviteLink_Response::seconds_valid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_CreateInviteLink_Response.seconds_valid)
  return _internal_seconds_valid();
}
inline void CChatRoom_CreateInviteLink_Response::_internal_set_seconds_valid(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  seconds_valid_ = value;
}
inline void CChatRoom_CreateInviteLink_Response::set_seconds_valid(uint32_t value) {
  _internal_set_seconds_valid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_CreateInviteLink_Response.seconds_valid)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteLinkInfo_Request

// optional string invite_code = 1;
inline bool CChatRoom_GetInviteLinkInfo_Request::_internal_has_invite_code() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteLinkInfo_Request::has_invite_code() const {
  return _internal_has_invite_code();
}
inline void CChatRoom_GetInviteLinkInfo_Request::clear_invite_code() {
  invite_code_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_GetInviteLinkInfo_Request::invite_code() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Request.invite_code)
  return _internal_invite_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_GetInviteLinkInfo_Request::set_invite_code(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinkInfo_Request.invite_code)
}
inline std::string* CChatRoom_GetInviteLinkInfo_Request::mutable_invite_code() {
  std::string* _s = _internal_mutable_invite_code();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteLinkInfo_Request.invite_code)
  return _s;
}
inline const std::string& CChatRoom_GetInviteLinkInfo_Request::_internal_invite_code() const {
  return invite_code_.Get();
}
inline void CChatRoom_GetInviteLinkInfo_Request::_internal_set_invite_code(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetInviteLinkInfo_Request::_internal_mutable_invite_code() {
  _has_bits_[0] |= 0x00000001u;
  return invite_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetInviteLinkInfo_Request::release_invite_code() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetInviteLinkInfo_Request.invite_code)
  if (!_internal_has_invite_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = invite_code_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (invite_code_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_GetInviteLinkInfo_Request::set_allocated_invite_code(std::string* invite_code) {
  if (invite_code != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  invite_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), invite_code,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (invite_code_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetInviteLinkInfo_Request.invite_code)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteLinkInfo_Response

// optional fixed64 steamid_sender = 3;
inline bool CChatRoom_GetInviteLinkInfo_Response::_internal_has_steamid_sender() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteLinkInfo_Response::has_steamid_sender() const {
  return _internal_has_steamid_sender();
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_steamid_sender() {
  steamid_sender_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_GetInviteLinkInfo_Response::_internal_steamid_sender() const {
  return steamid_sender_;
}
inline uint64_t CChatRoom_GetInviteLinkInfo_Response::steamid_sender() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Response.steamid_sender)
  return _internal_steamid_sender();
}
inline void CChatRoom_GetInviteLinkInfo_Response::_internal_set_steamid_sender(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  steamid_sender_ = value;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_steamid_sender(uint64_t value) {
  _internal_set_steamid_sender(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinkInfo_Response.steamid_sender)
}

// optional uint32 time_expires = 4;
inline bool CChatRoom_GetInviteLinkInfo_Response::_internal_has_time_expires() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteLinkInfo_Response::has_time_expires() const {
  return _internal_has_time_expires();
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_time_expires() {
  time_expires_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CChatRoom_GetInviteLinkInfo_Response::_internal_time_expires() const {
  return time_expires_;
}
inline uint32_t CChatRoom_GetInviteLinkInfo_Response::time_expires() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Response.time_expires)
  return _internal_time_expires();
}
inline void CChatRoom_GetInviteLinkInfo_Response::_internal_set_time_expires(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  time_expires_ = value;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_time_expires(uint32_t value) {
  _internal_set_time_expires(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinkInfo_Response.time_expires)
}

// optional uint64 chat_id = 6;
inline bool CChatRoom_GetInviteLinkInfo_Response::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteLinkInfo_Response::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CChatRoom_GetInviteLinkInfo_Response::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_GetInviteLinkInfo_Response::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Response.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_GetInviteLinkInfo_Response::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000008u;
  chat_id_ = value;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinkInfo_Response.chat_id)
}

// optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 8;
inline bool CChatRoom_GetInviteLinkInfo_Response::_internal_has_group_summary() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || group_summary_ != nullptr);
  return value;
}
inline bool CChatRoom_GetInviteLinkInfo_Response::has_group_summary() const {
  return _internal_has_group_summary();
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_group_summary() {
  if (group_summary_ != nullptr) group_summary_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CChatRoom_GetInviteLinkInfo_Response::_internal_group_summary() const {
  const ::CChatRoom_GetChatRoomGroupSummary_Response* p = group_summary_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoom_GetChatRoomGroupSummary_Response&>(
      ::_CChatRoom_GetChatRoomGroupSummary_Response_default_instance_);
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CChatRoom_GetInviteLinkInfo_Response::group_summary() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Response.group_summary)
  return _internal_group_summary();
}
inline void CChatRoom_GetInviteLinkInfo_Response::unsafe_arena_set_allocated_group_summary(
    ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(group_summary_);
  }
  group_summary_ = group_summary;
  if (group_summary) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_GetInviteLinkInfo_Response.group_summary)
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoom_GetInviteLinkInfo_Response::release_group_summary() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = group_summary_;
  group_summary_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoom_GetInviteLinkInfo_Response::unsafe_arena_release_group_summary() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetInviteLinkInfo_Response.group_summary)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = group_summary_;
  group_summary_ = nullptr;
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoom_GetInviteLinkInfo_Response::_internal_mutable_group_summary() {
  _has_bits_[0] |= 0x00000001u;
  if (group_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoom_GetChatRoomGroupSummary_Response>(GetArenaForAllocation());
    group_summary_ = p;
  }
  return group_summary_;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoom_GetInviteLinkInfo_Response::mutable_group_summary() {
  ::CChatRoom_GetChatRoomGroupSummary_Response* _msg = _internal_mutable_group_summary();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteLinkInfo_Response.group_summary)
  return _msg;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete group_summary_;
  }
  if (group_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoom_GetChatRoomGroupSummary_Response>::GetOwningArena(group_summary);
    if (message_arena != submessage_arena) {
      group_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_summary, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  group_summary_ = group_summary;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetInviteLinkInfo_Response.group_summary)
}

// optional .CUserChatRoomGroupState user_chat_group_state = 9;
inline bool CChatRoom_GetInviteLinkInfo_Response::_internal_has_user_chat_group_state() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || user_chat_group_state_ != nullptr);
  return value;
}
inline bool CChatRoom_GetInviteLinkInfo_Response::has_user_chat_group_state() const {
  return _internal_has_user_chat_group_state();
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_user_chat_group_state() {
  if (user_chat_group_state_ != nullptr) user_chat_group_state_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CUserChatRoomGroupState& CChatRoom_GetInviteLinkInfo_Response::_internal_user_chat_group_state() const {
  const ::CUserChatRoomGroupState* p = user_chat_group_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::CUserChatRoomGroupState&>(
      ::_CUserChatRoomGroupState_default_instance_);
}
inline const ::CUserChatRoomGroupState& CChatRoom_GetInviteLinkInfo_Response::user_chat_group_state() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Response.user_chat_group_state)
  return _internal_user_chat_group_state();
}
inline void CChatRoom_GetInviteLinkInfo_Response::unsafe_arena_set_allocated_user_chat_group_state(
    ::CUserChatRoomGroupState* user_chat_group_state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(user_chat_group_state_);
  }
  user_chat_group_state_ = user_chat_group_state;
  if (user_chat_group_state) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_GetInviteLinkInfo_Response.user_chat_group_state)
}
inline ::CUserChatRoomGroupState* CChatRoom_GetInviteLinkInfo_Response::release_user_chat_group_state() {
  _has_bits_[0] &= ~0x00000002u;
  ::CUserChatRoomGroupState* temp = user_chat_group_state_;
  user_chat_group_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CUserChatRoomGroupState* CChatRoom_GetInviteLinkInfo_Response::unsafe_arena_release_user_chat_group_state() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetInviteLinkInfo_Response.user_chat_group_state)
  _has_bits_[0] &= ~0x00000002u;
  ::CUserChatRoomGroupState* temp = user_chat_group_state_;
  user_chat_group_state_ = nullptr;
  return temp;
}
inline ::CUserChatRoomGroupState* CChatRoom_GetInviteLinkInfo_Response::_internal_mutable_user_chat_group_state() {
  _has_bits_[0] |= 0x00000002u;
  if (user_chat_group_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserChatRoomGroupState>(GetArenaForAllocation());
    user_chat_group_state_ = p;
  }
  return user_chat_group_state_;
}
inline ::CUserChatRoomGroupState* CChatRoom_GetInviteLinkInfo_Response::mutable_user_chat_group_state() {
  ::CUserChatRoomGroupState* _msg = _internal_mutable_user_chat_group_state();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteLinkInfo_Response.user_chat_group_state)
  return _msg;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_allocated_user_chat_group_state(::CUserChatRoomGroupState* user_chat_group_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete user_chat_group_state_;
  }
  if (user_chat_group_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CUserChatRoomGroupState>::GetOwningArena(user_chat_group_state);
    if (message_arena != submessage_arena) {
      user_chat_group_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_chat_group_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  user_chat_group_state_ = user_chat_group_state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetInviteLinkInfo_Response.user_chat_group_state)
}

// optional uint32 time_kick_expire = 10;
inline bool CChatRoom_GetInviteLinkInfo_Response::_internal_has_time_kick_expire() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteLinkInfo_Response::has_time_kick_expire() const {
  return _internal_has_time_kick_expire();
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_time_kick_expire() {
  time_kick_expire_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CChatRoom_GetInviteLinkInfo_Response::_internal_time_kick_expire() const {
  return time_kick_expire_;
}
inline uint32_t CChatRoom_GetInviteLinkInfo_Response::time_kick_expire() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Response.time_kick_expire)
  return _internal_time_kick_expire();
}
inline void CChatRoom_GetInviteLinkInfo_Response::_internal_set_time_kick_expire(uint32_t value) {
  _has_bits_[0] |= 0x00000020u;
  time_kick_expire_ = value;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_time_kick_expire(uint32_t value) {
  _internal_set_time_kick_expire(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinkInfo_Response.time_kick_expire)
}

// optional bool banned = 11;
inline bool CChatRoom_GetInviteLinkInfo_Response::_internal_has_banned() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteLinkInfo_Response::has_banned() const {
  return _internal_has_banned();
}
inline void CChatRoom_GetInviteLinkInfo_Response::clear_banned() {
  banned_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CChatRoom_GetInviteLinkInfo_Response::_internal_banned() const {
  return banned_;
}
inline bool CChatRoom_GetInviteLinkInfo_Response::banned() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinkInfo_Response.banned)
  return _internal_banned();
}
inline void CChatRoom_GetInviteLinkInfo_Response::_internal_set_banned(bool value) {
  _has_bits_[0] |= 0x00000040u;
  banned_ = value;
}
inline void CChatRoom_GetInviteLinkInfo_Response::set_banned(bool value) {
  _internal_set_banned(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinkInfo_Response.banned)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteInfo_Request

// optional fixed64 steamid_invitee = 1;
inline bool CChatRoom_GetInviteInfo_Request::_internal_has_steamid_invitee() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteInfo_Request::has_steamid_invitee() const {
  return _internal_has_steamid_invitee();
}
inline void CChatRoom_GetInviteInfo_Request::clear_steamid_invitee() {
  steamid_invitee_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_GetInviteInfo_Request::_internal_steamid_invitee() const {
  return steamid_invitee_;
}
inline uint64_t CChatRoom_GetInviteInfo_Request::steamid_invitee() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteInfo_Request.steamid_invitee)
  return _internal_steamid_invitee();
}
inline void CChatRoom_GetInviteInfo_Request::_internal_set_steamid_invitee(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_invitee_ = value;
}
inline void CChatRoom_GetInviteInfo_Request::set_steamid_invitee(uint64_t value) {
  _internal_set_steamid_invitee(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteInfo_Request.steamid_invitee)
}

// optional uint64 chat_group_id = 2;
inline bool CChatRoom_GetInviteInfo_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteInfo_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_GetInviteInfo_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_GetInviteInfo_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_GetInviteInfo_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteInfo_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_GetInviteInfo_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  chat_group_id_ = value;
}
inline void CChatRoom_GetInviteInfo_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteInfo_Request.chat_group_id)
}

// optional uint64 chat_id = 3;
inline bool CChatRoom_GetInviteInfo_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteInfo_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_GetInviteInfo_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CChatRoom_GetInviteInfo_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_GetInviteInfo_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteInfo_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_GetInviteInfo_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000008u;
  chat_id_ = value;
}
inline void CChatRoom_GetInviteInfo_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteInfo_Request.chat_id)
}

// optional string invite_code = 4;
inline bool CChatRoom_GetInviteInfo_Request::_internal_has_invite_code() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteInfo_Request::has_invite_code() const {
  return _internal_has_invite_code();
}
inline void CChatRoom_GetInviteInfo_Request::clear_invite_code() {
  invite_code_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_GetInviteInfo_Request::invite_code() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteInfo_Request.invite_code)
  return _internal_invite_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_GetInviteInfo_Request::set_invite_code(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteInfo_Request.invite_code)
}
inline std::string* CChatRoom_GetInviteInfo_Request::mutable_invite_code() {
  std::string* _s = _internal_mutable_invite_code();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteInfo_Request.invite_code)
  return _s;
}
inline const std::string& CChatRoom_GetInviteInfo_Request::_internal_invite_code() const {
  return invite_code_.Get();
}
inline void CChatRoom_GetInviteInfo_Request::_internal_set_invite_code(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetInviteInfo_Request::_internal_mutable_invite_code() {
  _has_bits_[0] |= 0x00000001u;
  return invite_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetInviteInfo_Request::release_invite_code() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetInviteInfo_Request.invite_code)
  if (!_internal_has_invite_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = invite_code_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (invite_code_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_GetInviteInfo_Request::set_allocated_invite_code(std::string* invite_code) {
  if (invite_code != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  invite_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), invite_code,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (invite_code_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetInviteInfo_Request.invite_code)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteInfo_Response

// optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 1;
inline bool CChatRoom_GetInviteInfo_Response::_internal_has_group_summary() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || group_summary_ != nullptr);
  return value;
}
inline bool CChatRoom_GetInviteInfo_Response::has_group_summary() const {
  return _internal_has_group_summary();
}
inline void CChatRoom_GetInviteInfo_Response::clear_group_summary() {
  if (group_summary_ != nullptr) group_summary_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CChatRoom_GetInviteInfo_Response::_internal_group_summary() const {
  const ::CChatRoom_GetChatRoomGroupSummary_Response* p = group_summary_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoom_GetChatRoomGroupSummary_Response&>(
      ::_CChatRoom_GetChatRoomGroupSummary_Response_default_instance_);
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CChatRoom_GetInviteInfo_Response::group_summary() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteInfo_Response.group_summary)
  return _internal_group_summary();
}
inline void CChatRoom_GetInviteInfo_Response::unsafe_arena_set_allocated_group_summary(
    ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(group_summary_);
  }
  group_summary_ = group_summary;
  if (group_summary) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_GetInviteInfo_Response.group_summary)
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoom_GetInviteInfo_Response::release_group_summary() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = group_summary_;
  group_summary_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoom_GetInviteInfo_Response::unsafe_arena_release_group_summary() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetInviteInfo_Response.group_summary)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = group_summary_;
  group_summary_ = nullptr;
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoom_GetInviteInfo_Response::_internal_mutable_group_summary() {
  _has_bits_[0] |= 0x00000001u;
  if (group_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoom_GetChatRoomGroupSummary_Response>(GetArenaForAllocation());
    group_summary_ = p;
  }
  return group_summary_;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CChatRoom_GetInviteInfo_Response::mutable_group_summary() {
  ::CChatRoom_GetChatRoomGroupSummary_Response* _msg = _internal_mutable_group_summary();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteInfo_Response.group_summary)
  return _msg;
}
inline void CChatRoom_GetInviteInfo_Response::set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete group_summary_;
  }
  if (group_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoom_GetChatRoomGroupSummary_Response>::GetOwningArena(group_summary);
    if (message_arena != submessage_arena) {
      group_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_summary, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  group_summary_ = group_summary;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetInviteInfo_Response.group_summary)
}

// optional uint32 time_kick_expire = 2;
inline bool CChatRoom_GetInviteInfo_Response::_internal_has_time_kick_expire() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteInfo_Response::has_time_kick_expire() const {
  return _internal_has_time_kick_expire();
}
inline void CChatRoom_GetInviteInfo_Response::clear_time_kick_expire() {
  time_kick_expire_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CChatRoom_GetInviteInfo_Response::_internal_time_kick_expire() const {
  return time_kick_expire_;
}
inline uint32_t CChatRoom_GetInviteInfo_Response::time_kick_expire() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteInfo_Response.time_kick_expire)
  return _internal_time_kick_expire();
}
inline void CChatRoom_GetInviteInfo_Response::_internal_set_time_kick_expire(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  time_kick_expire_ = value;
}
inline void CChatRoom_GetInviteInfo_Response::set_time_kick_expire(uint32_t value) {
  _internal_set_time_kick_expire(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteInfo_Response.time_kick_expire)
}

// optional bool banned = 3;
inline bool CChatRoom_GetInviteInfo_Response::_internal_has_banned() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteInfo_Response::has_banned() const {
  return _internal_has_banned();
}
inline void CChatRoom_GetInviteInfo_Response::clear_banned() {
  banned_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CChatRoom_GetInviteInfo_Response::_internal_banned() const {
  return banned_;
}
inline bool CChatRoom_GetInviteInfo_Response::banned() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteInfo_Response.banned)
  return _internal_banned();
}
inline void CChatRoom_GetInviteInfo_Response::_internal_set_banned(bool value) {
  _has_bits_[0] |= 0x00000004u;
  banned_ = value;
}
inline void CChatRoom_GetInviteInfo_Response::set_banned(bool value) {
  _internal_set_banned(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteInfo_Response.banned)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteLinksForGroup_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetInviteLinksForGroup_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteLinksForGroup_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_GetInviteLinksForGroup_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_GetInviteLinksForGroup_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_GetInviteLinksForGroup_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinksForGroup_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_GetInviteLinksForGroup_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_GetInviteLinksForGroup_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinksForGroup_Request.chat_group_id)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteLinksForGroup_Response_LinkInfo

// optional string invite_code = 1;
inline bool CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::_internal_has_invite_code() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::has_invite_code() const {
  return _internal_has_invite_code();
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::clear_invite_code() {
  invite_code_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::invite_code() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.invite_code)
  return _internal_invite_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_invite_code(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.invite_code)
}
inline std::string* CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::mutable_invite_code() {
  std::string* _s = _internal_mutable_invite_code();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.invite_code)
  return _s;
}
inline const std::string& CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::_internal_invite_code() const {
  return invite_code_.Get();
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::_internal_set_invite_code(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::_internal_mutable_invite_code() {
  _has_bits_[0] |= 0x00000001u;
  return invite_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::release_invite_code() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.invite_code)
  if (!_internal_has_invite_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = invite_code_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (invite_code_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_allocated_invite_code(std::string* invite_code) {
  if (invite_code != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  invite_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), invite_code,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (invite_code_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.invite_code)
}

// optional fixed64 steamid_creator = 2;
inline bool CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::_internal_has_steamid_creator() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::has_steamid_creator() const {
  return _internal_has_steamid_creator();
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::clear_steamid_creator() {
  steamid_creator_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::_internal_steamid_creator() const {
  return steamid_creator_;
}
inline uint64_t CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::steamid_creator() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.steamid_creator)
  return _internal_steamid_creator();
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::_internal_set_steamid_creator(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_creator_ = value;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_steamid_creator(uint64_t value) {
  _internal_set_steamid_creator(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.steamid_creator)
}

// optional uint32 time_expires = 3;
inline bool CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::_internal_has_time_expires() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::has_time_expires() const {
  return _internal_has_time_expires();
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::clear_time_expires() {
  time_expires_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::_internal_time_expires() const {
  return time_expires_;
}
inline uint32_t CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::time_expires() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.time_expires)
  return _internal_time_expires();
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::_internal_set_time_expires(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  time_expires_ = value;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_time_expires(uint32_t value) {
  _internal_set_time_expires(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.time_expires)
}

// optional uint64 chat_id = 4;
inline bool CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  chat_id_ = value;
}
inline void CChatRoom_GetInviteLinksForGroup_Response_LinkInfo::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteLinksForGroup_Response.LinkInfo.chat_id)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteLinksForGroup_Response

// repeated .CChatRoom_GetInviteLinksForGroup_Response.LinkInfo invite_links = 1;
inline int CChatRoom_GetInviteLinksForGroup_Response::_internal_invite_links_size() const {
  return invite_links_.size();
}
inline int CChatRoom_GetInviteLinksForGroup_Response::invite_links_size() const {
  return _internal_invite_links_size();
}
inline void CChatRoom_GetInviteLinksForGroup_Response::clear_invite_links() {
  invite_links_.Clear();
}
inline ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* CChatRoom_GetInviteLinksForGroup_Response::mutable_invite_links(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteLinksForGroup_Response.invite_links)
  return invite_links_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo >*
CChatRoom_GetInviteLinksForGroup_Response::mutable_invite_links() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetInviteLinksForGroup_Response.invite_links)
  return &invite_links_;
}
inline const ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& CChatRoom_GetInviteLinksForGroup_Response::_internal_invite_links(int index) const {
  return invite_links_.Get(index);
}
inline const ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo& CChatRoom_GetInviteLinksForGroup_Response::invite_links(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteLinksForGroup_Response.invite_links)
  return _internal_invite_links(index);
}
inline ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* CChatRoom_GetInviteLinksForGroup_Response::_internal_add_invite_links() {
  return invite_links_.Add();
}
inline ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* CChatRoom_GetInviteLinksForGroup_Response::add_invite_links() {
  ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo* _add = _internal_add_invite_links();
  // @@protoc_insertion_point(field_add:CChatRoom_GetInviteLinksForGroup_Response.invite_links)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetInviteLinksForGroup_Response_LinkInfo >&
CChatRoom_GetInviteLinksForGroup_Response::invite_links() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetInviteLinksForGroup_Response.invite_links)
  return invite_links_;
}

// -------------------------------------------------------------------

// CChatRoom_GetBanList_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetBanList_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetBanList_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_GetBanList_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_GetBanList_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_GetBanList_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetBanList_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_GetBanList_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_GetBanList_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetBanList_Request.chat_group_id)
}

// -------------------------------------------------------------------

// CChatRoom_GetBanList_Response_BanInfo

// optional uint32 accountid = 1;
inline bool CChatRoom_GetBanList_Response_BanInfo::_internal_has_accountid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_GetBanList_Response_BanInfo::has_accountid() const {
  return _internal_has_accountid();
}
inline void CChatRoom_GetBanList_Response_BanInfo::clear_accountid() {
  accountid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CChatRoom_GetBanList_Response_BanInfo::_internal_accountid() const {
  return accountid_;
}
inline uint32_t CChatRoom_GetBanList_Response_BanInfo::accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetBanList_Response.BanInfo.accountid)
  return _internal_accountid();
}
inline void CChatRoom_GetBanList_Response_BanInfo::_internal_set_accountid(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  accountid_ = value;
}
inline void CChatRoom_GetBanList_Response_BanInfo::set_accountid(uint32_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetBanList_Response.BanInfo.accountid)
}

// optional uint32 accountid_actor = 2;
inline bool CChatRoom_GetBanList_Response_BanInfo::_internal_has_accountid_actor() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_GetBanList_Response_BanInfo::has_accountid_actor() const {
  return _internal_has_accountid_actor();
}
inline void CChatRoom_GetBanList_Response_BanInfo::clear_accountid_actor() {
  accountid_actor_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CChatRoom_GetBanList_Response_BanInfo::_internal_accountid_actor() const {
  return accountid_actor_;
}
inline uint32_t CChatRoom_GetBanList_Response_BanInfo::accountid_actor() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetBanList_Response.BanInfo.accountid_actor)
  return _internal_accountid_actor();
}
inline void CChatRoom_GetBanList_Response_BanInfo::_internal_set_accountid_actor(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  accountid_actor_ = value;
}
inline void CChatRoom_GetBanList_Response_BanInfo::set_accountid_actor(uint32_t value) {
  _internal_set_accountid_actor(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetBanList_Response.BanInfo.accountid_actor)
}

// optional uint32 time_banned = 3;
inline bool CChatRoom_GetBanList_Response_BanInfo::_internal_has_time_banned() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_GetBanList_Response_BanInfo::has_time_banned() const {
  return _internal_has_time_banned();
}
inline void CChatRoom_GetBanList_Response_BanInfo::clear_time_banned() {
  time_banned_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CChatRoom_GetBanList_Response_BanInfo::_internal_time_banned() const {
  return time_banned_;
}
inline uint32_t CChatRoom_GetBanList_Response_BanInfo::time_banned() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetBanList_Response.BanInfo.time_banned)
  return _internal_time_banned();
}
inline void CChatRoom_GetBanList_Response_BanInfo::_internal_set_time_banned(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  time_banned_ = value;
}
inline void CChatRoom_GetBanList_Response_BanInfo::set_time_banned(uint32_t value) {
  _internal_set_time_banned(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetBanList_Response.BanInfo.time_banned)
}

// optional string ban_reason = 4;
inline bool CChatRoom_GetBanList_Response_BanInfo::_internal_has_ban_reason() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetBanList_Response_BanInfo::has_ban_reason() const {
  return _internal_has_ban_reason();
}
inline void CChatRoom_GetBanList_Response_BanInfo::clear_ban_reason() {
  ban_reason_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_GetBanList_Response_BanInfo::ban_reason() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetBanList_Response.BanInfo.ban_reason)
  return _internal_ban_reason();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_GetBanList_Response_BanInfo::set_ban_reason(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 ban_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_GetBanList_Response.BanInfo.ban_reason)
}
inline std::string* CChatRoom_GetBanList_Response_BanInfo::mutable_ban_reason() {
  std::string* _s = _internal_mutable_ban_reason();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetBanList_Response.BanInfo.ban_reason)
  return _s;
}
inline const std::string& CChatRoom_GetBanList_Response_BanInfo::_internal_ban_reason() const {
  return ban_reason_.Get();
}
inline void CChatRoom_GetBanList_Response_BanInfo::_internal_set_ban_reason(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  ban_reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetBanList_Response_BanInfo::_internal_mutable_ban_reason() {
  _has_bits_[0] |= 0x00000001u;
  return ban_reason_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetBanList_Response_BanInfo::release_ban_reason() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetBanList_Response.BanInfo.ban_reason)
  if (!_internal_has_ban_reason()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = ban_reason_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (ban_reason_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    ban_reason_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_GetBanList_Response_BanInfo::set_allocated_ban_reason(std::string* ban_reason) {
  if (ban_reason != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ban_reason_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ban_reason,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (ban_reason_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    ban_reason_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetBanList_Response.BanInfo.ban_reason)
}

// -------------------------------------------------------------------

// CChatRoom_GetBanList_Response

// repeated .CChatRoom_GetBanList_Response.BanInfo bans = 1;
inline int CChatRoom_GetBanList_Response::_internal_bans_size() const {
  return bans_.size();
}
inline int CChatRoom_GetBanList_Response::bans_size() const {
  return _internal_bans_size();
}
inline void CChatRoom_GetBanList_Response::clear_bans() {
  bans_.Clear();
}
inline ::CChatRoom_GetBanList_Response_BanInfo* CChatRoom_GetBanList_Response::mutable_bans(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetBanList_Response.bans)
  return bans_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetBanList_Response_BanInfo >*
CChatRoom_GetBanList_Response::mutable_bans() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetBanList_Response.bans)
  return &bans_;
}
inline const ::CChatRoom_GetBanList_Response_BanInfo& CChatRoom_GetBanList_Response::_internal_bans(int index) const {
  return bans_.Get(index);
}
inline const ::CChatRoom_GetBanList_Response_BanInfo& CChatRoom_GetBanList_Response::bans(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetBanList_Response.bans)
  return _internal_bans(index);
}
inline ::CChatRoom_GetBanList_Response_BanInfo* CChatRoom_GetBanList_Response::_internal_add_bans() {
  return bans_.Add();
}
inline ::CChatRoom_GetBanList_Response_BanInfo* CChatRoom_GetBanList_Response::add_bans() {
  ::CChatRoom_GetBanList_Response_BanInfo* _add = _internal_add_bans();
  // @@protoc_insertion_point(field_add:CChatRoom_GetBanList_Response.bans)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_GetBanList_Response_BanInfo >&
CChatRoom_GetBanList_Response::bans() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetBanList_Response.bans)
  return bans_;
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteList_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetInviteList_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetInviteList_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_GetInviteList_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_GetInviteList_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_GetInviteList_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteList_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_GetInviteList_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_GetInviteList_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetInviteList_Request.chat_group_id)
}

// -------------------------------------------------------------------

// CChatRoomGroupInvite

// optional uint32 accountid = 1;
inline bool CChatRoomGroupInvite::_internal_has_accountid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoomGroupInvite::has_accountid() const {
  return _internal_has_accountid();
}
inline void CChatRoomGroupInvite::clear_accountid() {
  accountid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CChatRoomGroupInvite::_internal_accountid() const {
  return accountid_;
}
inline uint32_t CChatRoomGroupInvite::accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupInvite.accountid)
  return _internal_accountid();
}
inline void CChatRoomGroupInvite::_internal_set_accountid(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  accountid_ = value;
}
inline void CChatRoomGroupInvite::set_accountid(uint32_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupInvite.accountid)
}

// optional uint32 accountid_actor = 2;
inline bool CChatRoomGroupInvite::_internal_has_accountid_actor() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoomGroupInvite::has_accountid_actor() const {
  return _internal_has_accountid_actor();
}
inline void CChatRoomGroupInvite::clear_accountid_actor() {
  accountid_actor_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CChatRoomGroupInvite::_internal_accountid_actor() const {
  return accountid_actor_;
}
inline uint32_t CChatRoomGroupInvite::accountid_actor() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupInvite.accountid_actor)
  return _internal_accountid_actor();
}
inline void CChatRoomGroupInvite::_internal_set_accountid_actor(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  accountid_actor_ = value;
}
inline void CChatRoomGroupInvite::set_accountid_actor(uint32_t value) {
  _internal_set_accountid_actor(value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupInvite.accountid_actor)
}

// optional uint32 time_invited = 3;
inline bool CChatRoomGroupInvite::_internal_has_time_invited() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoomGroupInvite::has_time_invited() const {
  return _internal_has_time_invited();
}
inline void CChatRoomGroupInvite::clear_time_invited() {
  time_invited_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CChatRoomGroupInvite::_internal_time_invited() const {
  return time_invited_;
}
inline uint32_t CChatRoomGroupInvite::time_invited() const {
  // @@protoc_insertion_point(field_get:CChatRoomGroupInvite.time_invited)
  return _internal_time_invited();
}
inline void CChatRoomGroupInvite::_internal_set_time_invited(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  time_invited_ = value;
}
inline void CChatRoomGroupInvite::set_time_invited(uint32_t value) {
  _internal_set_time_invited(value);
  // @@protoc_insertion_point(field_set:CChatRoomGroupInvite.time_invited)
}

// -------------------------------------------------------------------

// CChatRoom_GetInviteList_Response

// repeated .CChatRoomGroupInvite invites = 1;
inline int CChatRoom_GetInviteList_Response::_internal_invites_size() const {
  return invites_.size();
}
inline int CChatRoom_GetInviteList_Response::invites_size() const {
  return _internal_invites_size();
}
inline void CChatRoom_GetInviteList_Response::clear_invites() {
  invites_.Clear();
}
inline ::CChatRoomGroupInvite* CChatRoom_GetInviteList_Response::mutable_invites(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetInviteList_Response.invites)
  return invites_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomGroupInvite >*
CChatRoom_GetInviteList_Response::mutable_invites() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetInviteList_Response.invites)
  return &invites_;
}
inline const ::CChatRoomGroupInvite& CChatRoom_GetInviteList_Response::_internal_invites(int index) const {
  return invites_.Get(index);
}
inline const ::CChatRoomGroupInvite& CChatRoom_GetInviteList_Response::invites(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetInviteList_Response.invites)
  return _internal_invites(index);
}
inline ::CChatRoomGroupInvite* CChatRoom_GetInviteList_Response::_internal_add_invites() {
  return invites_.Add();
}
inline ::CChatRoomGroupInvite* CChatRoom_GetInviteList_Response::add_invites() {
  ::CChatRoomGroupInvite* _add = _internal_add_invites();
  // @@protoc_insertion_point(field_add:CChatRoom_GetInviteList_Response.invites)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomGroupInvite >&
CChatRoom_GetInviteList_Response::invites() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetInviteList_Response.invites)
  return invites_;
}

// -------------------------------------------------------------------

// CChatRoom_DeleteInviteLink_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_DeleteInviteLink_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_DeleteInviteLink_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_DeleteInviteLink_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_DeleteInviteLink_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_DeleteInviteLink_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteInviteLink_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_DeleteInviteLink_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_DeleteInviteLink_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteInviteLink_Request.chat_group_id)
}

// optional string invite_code = 2;
inline bool CChatRoom_DeleteInviteLink_Request::_internal_has_invite_code() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_DeleteInviteLink_Request::has_invite_code() const {
  return _internal_has_invite_code();
}
inline void CChatRoom_DeleteInviteLink_Request::clear_invite_code() {
  invite_code_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_DeleteInviteLink_Request::invite_code() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteInviteLink_Request.invite_code)
  return _internal_invite_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_DeleteInviteLink_Request::set_invite_code(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteInviteLink_Request.invite_code)
}
inline std::string* CChatRoom_DeleteInviteLink_Request::mutable_invite_code() {
  std::string* _s = _internal_mutable_invite_code();
  // @@protoc_insertion_point(field_mutable:CChatRoom_DeleteInviteLink_Request.invite_code)
  return _s;
}
inline const std::string& CChatRoom_DeleteInviteLink_Request::_internal_invite_code() const {
  return invite_code_.Get();
}
inline void CChatRoom_DeleteInviteLink_Request::_internal_set_invite_code(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_DeleteInviteLink_Request::_internal_mutable_invite_code() {
  _has_bits_[0] |= 0x00000001u;
  return invite_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_DeleteInviteLink_Request::release_invite_code() {
  // @@protoc_insertion_point(field_release:CChatRoom_DeleteInviteLink_Request.invite_code)
  if (!_internal_has_invite_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = invite_code_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (invite_code_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_DeleteInviteLink_Request::set_allocated_invite_code(std::string* invite_code) {
  if (invite_code != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  invite_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), invite_code,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (invite_code_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_DeleteInviteLink_Request.invite_code)
}

// -------------------------------------------------------------------

// CChatRoom_DeleteInviteLink_Response

// -------------------------------------------------------------------

// CChatRoom_SetSessionActiveChatRoomGroups_Request

// repeated uint64 chat_group_ids = 1;
inline int CChatRoom_SetSessionActiveChatRoomGroups_Request::_internal_chat_group_ids_size() const {
  return chat_group_ids_.size();
}
inline int CChatRoom_SetSessionActiveChatRoomGroups_Request::chat_group_ids_size() const {
  return _internal_chat_group_ids_size();
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::clear_chat_group_ids() {
  chat_group_ids_.Clear();
}
inline uint64_t CChatRoom_SetSessionActiveChatRoomGroups_Request::_internal_chat_group_ids(int index) const {
  return chat_group_ids_.Get(index);
}
inline uint64_t CChatRoom_SetSessionActiveChatRoomGroups_Request::chat_group_ids(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_group_ids)
  return _internal_chat_group_ids(index);
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::set_chat_group_ids(int index, uint64_t value) {
  chat_group_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_group_ids)
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::_internal_add_chat_group_ids(uint64_t value) {
  chat_group_ids_.Add(value);
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::add_chat_group_ids(uint64_t value) {
  _internal_add_chat_group_ids(value);
  // @@protoc_insertion_point(field_add:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_group_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CChatRoom_SetSessionActiveChatRoomGroups_Request::_internal_chat_group_ids() const {
  return chat_group_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CChatRoom_SetSessionActiveChatRoomGroups_Request::chat_group_ids() const {
  // @@protoc_insertion_point(field_list:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_group_ids)
  return _internal_chat_group_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CChatRoom_SetSessionActiveChatRoomGroups_Request::_internal_mutable_chat_group_ids() {
  return &chat_group_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CChatRoom_SetSessionActiveChatRoomGroups_Request::mutable_chat_group_ids() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_group_ids)
  return _internal_mutable_chat_group_ids();
}

// repeated uint64 chat_groups_data_requested = 2;
inline int CChatRoom_SetSessionActiveChatRoomGroups_Request::_internal_chat_groups_data_requested_size() const {
  return chat_groups_data_requested_.size();
}
inline int CChatRoom_SetSessionActiveChatRoomGroups_Request::chat_groups_data_requested_size() const {
  return _internal_chat_groups_data_requested_size();
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::clear_chat_groups_data_requested() {
  chat_groups_data_requested_.Clear();
}
inline uint64_t CChatRoom_SetSessionActiveChatRoomGroups_Request::_internal_chat_groups_data_requested(int index) const {
  return chat_groups_data_requested_.Get(index);
}
inline uint64_t CChatRoom_SetSessionActiveChatRoomGroups_Request::chat_groups_data_requested(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_groups_data_requested)
  return _internal_chat_groups_data_requested(index);
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::set_chat_groups_data_requested(int index, uint64_t value) {
  chat_groups_data_requested_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_groups_data_requested)
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::_internal_add_chat_groups_data_requested(uint64_t value) {
  chat_groups_data_requested_.Add(value);
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::add_chat_groups_data_requested(uint64_t value) {
  _internal_add_chat_groups_data_requested(value);
  // @@protoc_insertion_point(field_add:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_groups_data_requested)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CChatRoom_SetSessionActiveChatRoomGroups_Request::_internal_chat_groups_data_requested() const {
  return chat_groups_data_requested_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CChatRoom_SetSessionActiveChatRoomGroups_Request::chat_groups_data_requested() const {
  // @@protoc_insertion_point(field_list:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_groups_data_requested)
  return _internal_chat_groups_data_requested();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CChatRoom_SetSessionActiveChatRoomGroups_Request::_internal_mutable_chat_groups_data_requested() {
  return &chat_groups_data_requested_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CChatRoom_SetSessionActiveChatRoomGroups_Request::mutable_chat_groups_data_requested() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_groups_data_requested)
  return _internal_mutable_chat_groups_data_requested();
}

// optional int32 virtualize_members_threshold = 3 [(.description) = "If a chat room has more members than this threshold, we will opt in to a virtualized list"];
inline bool CChatRoom_SetSessionActiveChatRoomGroups_Request::_internal_has_virtualize_members_threshold() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SetSessionActiveChatRoomGroups_Request::has_virtualize_members_threshold() const {
  return _internal_has_virtualize_members_threshold();
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::clear_virtualize_members_threshold() {
  virtualize_members_threshold_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline int32_t CChatRoom_SetSessionActiveChatRoomGroups_Request::_internal_virtualize_members_threshold() const {
  return virtualize_members_threshold_;
}
inline int32_t CChatRoom_SetSessionActiveChatRoomGroups_Request::virtualize_members_threshold() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetSessionActiveChatRoomGroups_Request.virtualize_members_threshold)
  return _internal_virtualize_members_threshold();
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::_internal_set_virtualize_members_threshold(int32_t value) {
  _has_bits_[0] |= 0x00000001u;
  virtualize_members_threshold_ = value;
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Request::set_virtualize_members_threshold(int32_t value) {
  _internal_set_virtualize_members_threshold(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetSessionActiveChatRoomGroups_Request.virtualize_members_threshold)
}

// -------------------------------------------------------------------

// CChatRoom_SetSessionActiveChatRoomGroups_Response

// repeated .CChatRoomGroupState chat_states = 1;
inline int CChatRoom_SetSessionActiveChatRoomGroups_Response::_internal_chat_states_size() const {
  return chat_states_.size();
}
inline int CChatRoom_SetSessionActiveChatRoomGroups_Response::chat_states_size() const {
  return _internal_chat_states_size();
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Response::clear_chat_states() {
  chat_states_.Clear();
}
inline ::CChatRoomGroupState* CChatRoom_SetSessionActiveChatRoomGroups_Response::mutable_chat_states(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_SetSessionActiveChatRoomGroups_Response.chat_states)
  return chat_states_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomGroupState >*
CChatRoom_SetSessionActiveChatRoomGroups_Response::mutable_chat_states() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_SetSessionActiveChatRoomGroups_Response.chat_states)
  return &chat_states_;
}
inline const ::CChatRoomGroupState& CChatRoom_SetSessionActiveChatRoomGroups_Response::_internal_chat_states(int index) const {
  return chat_states_.Get(index);
}
inline const ::CChatRoomGroupState& CChatRoom_SetSessionActiveChatRoomGroups_Response::chat_states(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetSessionActiveChatRoomGroups_Response.chat_states)
  return _internal_chat_states(index);
}
inline ::CChatRoomGroupState* CChatRoom_SetSessionActiveChatRoomGroups_Response::_internal_add_chat_states() {
  return chat_states_.Add();
}
inline ::CChatRoomGroupState* CChatRoom_SetSessionActiveChatRoomGroups_Response::add_chat_states() {
  ::CChatRoomGroupState* _add = _internal_add_chat_states();
  // @@protoc_insertion_point(field_add:CChatRoom_SetSessionActiveChatRoomGroups_Response.chat_states)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomGroupState >&
CChatRoom_SetSessionActiveChatRoomGroups_Response::chat_states() const {
  // @@protoc_insertion_point(field_list:CChatRoom_SetSessionActiveChatRoomGroups_Response.chat_states)
  return chat_states_;
}

// repeated uint64 virtualize_members_chat_group_ids = 2;
inline int CChatRoom_SetSessionActiveChatRoomGroups_Response::_internal_virtualize_members_chat_group_ids_size() const {
  return virtualize_members_chat_group_ids_.size();
}
inline int CChatRoom_SetSessionActiveChatRoomGroups_Response::virtualize_members_chat_group_ids_size() const {
  return _internal_virtualize_members_chat_group_ids_size();
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Response::clear_virtualize_members_chat_group_ids() {
  virtualize_members_chat_group_ids_.Clear();
}
inline uint64_t CChatRoom_SetSessionActiveChatRoomGroups_Response::_internal_virtualize_members_chat_group_ids(int index) const {
  return virtualize_members_chat_group_ids_.Get(index);
}
inline uint64_t CChatRoom_SetSessionActiveChatRoomGroups_Response::virtualize_members_chat_group_ids(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetSessionActiveChatRoomGroups_Response.virtualize_members_chat_group_ids)
  return _internal_virtualize_members_chat_group_ids(index);
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Response::set_virtualize_members_chat_group_ids(int index, uint64_t value) {
  virtualize_members_chat_group_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetSessionActiveChatRoomGroups_Response.virtualize_members_chat_group_ids)
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Response::_internal_add_virtualize_members_chat_group_ids(uint64_t value) {
  virtualize_members_chat_group_ids_.Add(value);
}
inline void CChatRoom_SetSessionActiveChatRoomGroups_Response::add_virtualize_members_chat_group_ids(uint64_t value) {
  _internal_add_virtualize_members_chat_group_ids(value);
  // @@protoc_insertion_point(field_add:CChatRoom_SetSessionActiveChatRoomGroups_Response.virtualize_members_chat_group_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CChatRoom_SetSessionActiveChatRoomGroups_Response::_internal_virtualize_members_chat_group_ids() const {
  return virtualize_members_chat_group_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CChatRoom_SetSessionActiveChatRoomGroups_Response::virtualize_members_chat_group_ids() const {
  // @@protoc_insertion_point(field_list:CChatRoom_SetSessionActiveChatRoomGroups_Response.virtualize_members_chat_group_ids)
  return _internal_virtualize_members_chat_group_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CChatRoom_SetSessionActiveChatRoomGroups_Response::_internal_mutable_virtualize_members_chat_group_ids() {
  return &virtualize_members_chat_group_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CChatRoom_SetSessionActiveChatRoomGroups_Response::mutable_virtualize_members_chat_group_ids() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_SetSessionActiveChatRoomGroups_Response.virtualize_members_chat_group_ids)
  return _internal_mutable_virtualize_members_chat_group_ids();
}

// -------------------------------------------------------------------

// CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences

// optional .EChatRoomNotificationLevel desktop_notification_level = 1 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::_internal_has_desktop_notification_level() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::has_desktop_notification_level() const {
  return _internal_has_desktop_notification_level();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::clear_desktop_notification_level() {
  desktop_notification_level_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::EChatRoomNotificationLevel CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::_internal_desktop_notification_level() const {
  return static_cast< ::EChatRoomNotificationLevel >(desktop_notification_level_);
}
inline ::EChatRoomNotificationLevel CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::desktop_notification_level() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences.desktop_notification_level)
  return _internal_desktop_notification_level();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::_internal_set_desktop_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  desktop_notification_level_ = value;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::set_desktop_notification_level(::EChatRoomNotificationLevel value) {
  _internal_set_desktop_notification_level(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences.desktop_notification_level)
}

// optional .EChatRoomNotificationLevel mobile_notification_level = 2 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::_internal_has_mobile_notification_level() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::has_mobile_notification_level() const {
  return _internal_has_mobile_notification_level();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::clear_mobile_notification_level() {
  mobile_notification_level_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::EChatRoomNotificationLevel CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::_internal_mobile_notification_level() const {
  return static_cast< ::EChatRoomNotificationLevel >(mobile_notification_level_);
}
inline ::EChatRoomNotificationLevel CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::mobile_notification_level() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences.mobile_notification_level)
  return _internal_mobile_notification_level();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::_internal_set_mobile_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  mobile_notification_level_ = value;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::set_mobile_notification_level(::EChatRoomNotificationLevel value) {
  _internal_set_mobile_notification_level(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences.mobile_notification_level)
}

// optional bool unread_indicator_muted = 3;
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::_internal_has_unread_indicator_muted() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::has_unread_indicator_muted() const {
  return _internal_has_unread_indicator_muted();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::clear_unread_indicator_muted() {
  unread_indicator_muted_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::_internal_unread_indicator_muted() const {
  return unread_indicator_muted_;
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::unread_indicator_muted() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences.unread_indicator_muted)
  return _internal_unread_indicator_muted();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::_internal_set_unread_indicator_muted(bool value) {
  _has_bits_[0] |= 0x00000004u;
  unread_indicator_muted_ = value;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences::set_unread_indicator_muted(bool value) {
  _internal_set_unread_indicator_muted(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences.unread_indicator_muted)
}

// -------------------------------------------------------------------

// CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences

// optional uint64 chat_id = 1;
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_id_ = value;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.chat_id)
}

// optional .EChatRoomNotificationLevel desktop_notification_level = 2 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::_internal_has_desktop_notification_level() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::has_desktop_notification_level() const {
  return _internal_has_desktop_notification_level();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::clear_desktop_notification_level() {
  desktop_notification_level_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::EChatRoomNotificationLevel CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::_internal_desktop_notification_level() const {
  return static_cast< ::EChatRoomNotificationLevel >(desktop_notification_level_);
}
inline ::EChatRoomNotificationLevel CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::desktop_notification_level() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.desktop_notification_level)
  return _internal_desktop_notification_level();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::_internal_set_desktop_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  desktop_notification_level_ = value;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::set_desktop_notification_level(::EChatRoomNotificationLevel value) {
  _internal_set_desktop_notification_level(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.desktop_notification_level)
}

// optional .EChatRoomNotificationLevel mobile_notification_level = 3 [default = k_EChatroomNotificationLevel_Invalid];
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::_internal_has_mobile_notification_level() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::has_mobile_notification_level() const {
  return _internal_has_mobile_notification_level();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::clear_mobile_notification_level() {
  mobile_notification_level_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::EChatRoomNotificationLevel CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::_internal_mobile_notification_level() const {
  return static_cast< ::EChatRoomNotificationLevel >(mobile_notification_level_);
}
inline ::EChatRoomNotificationLevel CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::mobile_notification_level() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.mobile_notification_level)
  return _internal_mobile_notification_level();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::_internal_set_mobile_notification_level(::EChatRoomNotificationLevel value) {
  assert(::EChatRoomNotificationLevel_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  mobile_notification_level_ = value;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::set_mobile_notification_level(::EChatRoomNotificationLevel value) {
  _internal_set_mobile_notification_level(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.mobile_notification_level)
}

// optional bool unread_indicator_muted = 4;
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::_internal_has_unread_indicator_muted() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::has_unread_indicator_muted() const {
  return _internal_has_unread_indicator_muted();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::clear_unread_indicator_muted() {
  unread_indicator_muted_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::_internal_unread_indicator_muted() const {
  return unread_indicator_muted_;
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::unread_indicator_muted() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.unread_indicator_muted)
  return _internal_unread_indicator_muted();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::_internal_set_unread_indicator_muted(bool value) {
  _has_bits_[0] |= 0x00000008u;
  unread_indicator_muted_ = value;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences::set_unread_indicator_muted(bool value) {
  _internal_set_unread_indicator_muted(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences.unread_indicator_muted)
}

// -------------------------------------------------------------------

// CChatRoom_SetUserChatGroupPreferences_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SetUserChatGroupPreferences_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_SetUserChatGroupPreferences_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_SetUserChatGroupPreferences_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SetUserChatGroupPreferences_Request.chat_group_id)
}

// optional .CChatRoom_SetUserChatGroupPreferences_Request.ChatGroupPreferences chat_group_preferences = 2;
inline bool CChatRoom_SetUserChatGroupPreferences_Request::_internal_has_chat_group_preferences() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || chat_group_preferences_ != nullptr);
  return value;
}
inline bool CChatRoom_SetUserChatGroupPreferences_Request::has_chat_group_preferences() const {
  return _internal_has_chat_group_preferences();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::clear_chat_group_preferences() {
  if (chat_group_preferences_ != nullptr) chat_group_preferences_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& CChatRoom_SetUserChatGroupPreferences_Request::_internal_chat_group_preferences() const {
  const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* p = chat_group_preferences_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences&>(
      ::_CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences_default_instance_);
}
inline const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences& CChatRoom_SetUserChatGroupPreferences_Request::chat_group_preferences() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.chat_group_preferences)
  return _internal_chat_group_preferences();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::unsafe_arena_set_allocated_chat_group_preferences(
    ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* chat_group_preferences) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(chat_group_preferences_);
  }
  chat_group_preferences_ = chat_group_preferences;
  if (chat_group_preferences) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_SetUserChatGroupPreferences_Request.chat_group_preferences)
}
inline ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* CChatRoom_SetUserChatGroupPreferences_Request::release_chat_group_preferences() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* temp = chat_group_preferences_;
  chat_group_preferences_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* CChatRoom_SetUserChatGroupPreferences_Request::unsafe_arena_release_chat_group_preferences() {
  // @@protoc_insertion_point(field_release:CChatRoom_SetUserChatGroupPreferences_Request.chat_group_preferences)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* temp = chat_group_preferences_;
  chat_group_preferences_ = nullptr;
  return temp;
}
inline ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* CChatRoom_SetUserChatGroupPreferences_Request::_internal_mutable_chat_group_preferences() {
  _has_bits_[0] |= 0x00000001u;
  if (chat_group_preferences_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences>(GetArenaForAllocation());
    chat_group_preferences_ = p;
  }
  return chat_group_preferences_;
}
inline ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* CChatRoom_SetUserChatGroupPreferences_Request::mutable_chat_group_preferences() {
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* _msg = _internal_mutable_chat_group_preferences();
  // @@protoc_insertion_point(field_mutable:CChatRoom_SetUserChatGroupPreferences_Request.chat_group_preferences)
  return _msg;
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::set_allocated_chat_group_preferences(::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences* chat_group_preferences) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete chat_group_preferences_;
  }
  if (chat_group_preferences) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences>::GetOwningArena(chat_group_preferences);
    if (message_arena != submessage_arena) {
      chat_group_preferences = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chat_group_preferences, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  chat_group_preferences_ = chat_group_preferences;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SetUserChatGroupPreferences_Request.chat_group_preferences)
}

// repeated .CChatRoom_SetUserChatGroupPreferences_Request.ChatRoomPreferences chat_room_preferences = 3;
inline int CChatRoom_SetUserChatGroupPreferences_Request::_internal_chat_room_preferences_size() const {
  return chat_room_preferences_.size();
}
inline int CChatRoom_SetUserChatGroupPreferences_Request::chat_room_preferences_size() const {
  return _internal_chat_room_preferences_size();
}
inline void CChatRoom_SetUserChatGroupPreferences_Request::clear_chat_room_preferences() {
  chat_room_preferences_.Clear();
}
inline ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* CChatRoom_SetUserChatGroupPreferences_Request::mutable_chat_room_preferences(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_SetUserChatGroupPreferences_Request.chat_room_preferences)
  return chat_room_preferences_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences >*
CChatRoom_SetUserChatGroupPreferences_Request::mutable_chat_room_preferences() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_SetUserChatGroupPreferences_Request.chat_room_preferences)
  return &chat_room_preferences_;
}
inline const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& CChatRoom_SetUserChatGroupPreferences_Request::_internal_chat_room_preferences(int index) const {
  return chat_room_preferences_.Get(index);
}
inline const ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences& CChatRoom_SetUserChatGroupPreferences_Request::chat_room_preferences(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_SetUserChatGroupPreferences_Request.chat_room_preferences)
  return _internal_chat_room_preferences(index);
}
inline ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* CChatRoom_SetUserChatGroupPreferences_Request::_internal_add_chat_room_preferences() {
  return chat_room_preferences_.Add();
}
inline ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* CChatRoom_SetUserChatGroupPreferences_Request::add_chat_room_preferences() {
  ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences* _add = _internal_add_chat_room_preferences();
  // @@protoc_insertion_point(field_add:CChatRoom_SetUserChatGroupPreferences_Request.chat_room_preferences)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences >&
CChatRoom_SetUserChatGroupPreferences_Request::chat_room_preferences() const {
  // @@protoc_insertion_point(field_list:CChatRoom_SetUserChatGroupPreferences_Request.chat_room_preferences)
  return chat_room_preferences_;
}

// -------------------------------------------------------------------

// CChatRoom_SetUserChatGroupPreferences_Response

// -------------------------------------------------------------------

// CChatRoom_DeleteChatMessages_Request_Message

// optional uint32 server_timestamp = 1;
inline bool CChatRoom_DeleteChatMessages_Request_Message::_internal_has_server_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_DeleteChatMessages_Request_Message::has_server_timestamp() const {
  return _internal_has_server_timestamp();
}
inline void CChatRoom_DeleteChatMessages_Request_Message::clear_server_timestamp() {
  server_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CChatRoom_DeleteChatMessages_Request_Message::_internal_server_timestamp() const {
  return server_timestamp_;
}
inline uint32_t CChatRoom_DeleteChatMessages_Request_Message::server_timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteChatMessages_Request.Message.server_timestamp)
  return _internal_server_timestamp();
}
inline void CChatRoom_DeleteChatMessages_Request_Message::_internal_set_server_timestamp(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  server_timestamp_ = value;
}
inline void CChatRoom_DeleteChatMessages_Request_Message::set_server_timestamp(uint32_t value) {
  _internal_set_server_timestamp(value);
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteChatMessages_Request.Message.server_timestamp)
}

// optional uint32 ordinal = 2;
inline bool CChatRoom_DeleteChatMessages_Request_Message::_internal_has_ordinal() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_DeleteChatMessages_Request_Message::has_ordinal() const {
  return _internal_has_ordinal();
}
inline void CChatRoom_DeleteChatMessages_Request_Message::clear_ordinal() {
  ordinal_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CChatRoom_DeleteChatMessages_Request_Message::_internal_ordinal() const {
  return ordinal_;
}
inline uint32_t CChatRoom_DeleteChatMessages_Request_Message::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteChatMessages_Request.Message.ordinal)
  return _internal_ordinal();
}
inline void CChatRoom_DeleteChatMessages_Request_Message::_internal_set_ordinal(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  ordinal_ = value;
}
inline void CChatRoom_DeleteChatMessages_Request_Message::set_ordinal(uint32_t value) {
  _internal_set_ordinal(value);
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteChatMessages_Request.Message.ordinal)
}

// -------------------------------------------------------------------

// CChatRoom_DeleteChatMessages_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_DeleteChatMessages_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_DeleteChatMessages_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_DeleteChatMessages_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_DeleteChatMessages_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_DeleteChatMessages_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteChatMessages_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_DeleteChatMessages_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_DeleteChatMessages_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteChatMessages_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_DeleteChatMessages_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_DeleteChatMessages_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_DeleteChatMessages_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_DeleteChatMessages_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_DeleteChatMessages_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteChatMessages_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_DeleteChatMessages_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_id_ = value;
}
inline void CChatRoom_DeleteChatMessages_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_DeleteChatMessages_Request.chat_id)
}

// repeated .CChatRoom_DeleteChatMessages_Request.Message messages = 3;
inline int CChatRoom_DeleteChatMessages_Request::_internal_messages_size() const {
  return messages_.size();
}
inline int CChatRoom_DeleteChatMessages_Request::messages_size() const {
  return _internal_messages_size();
}
inline void CChatRoom_DeleteChatMessages_Request::clear_messages() {
  messages_.Clear();
}
inline ::CChatRoom_DeleteChatMessages_Request_Message* CChatRoom_DeleteChatMessages_Request::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_DeleteChatMessages_Request.messages)
  return messages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_DeleteChatMessages_Request_Message >*
CChatRoom_DeleteChatMessages_Request::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_DeleteChatMessages_Request.messages)
  return &messages_;
}
inline const ::CChatRoom_DeleteChatMessages_Request_Message& CChatRoom_DeleteChatMessages_Request::_internal_messages(int index) const {
  return messages_.Get(index);
}
inline const ::CChatRoom_DeleteChatMessages_Request_Message& CChatRoom_DeleteChatMessages_Request::messages(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_DeleteChatMessages_Request.messages)
  return _internal_messages(index);
}
inline ::CChatRoom_DeleteChatMessages_Request_Message* CChatRoom_DeleteChatMessages_Request::_internal_add_messages() {
  return messages_.Add();
}
inline ::CChatRoom_DeleteChatMessages_Request_Message* CChatRoom_DeleteChatMessages_Request::add_messages() {
  ::CChatRoom_DeleteChatMessages_Request_Message* _add = _internal_add_messages();
  // @@protoc_insertion_point(field_add:CChatRoom_DeleteChatMessages_Request.messages)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_DeleteChatMessages_Request_Message >&
CChatRoom_DeleteChatMessages_Request::messages() const {
  // @@protoc_insertion_point(field_list:CChatRoom_DeleteChatMessages_Request.messages)
  return messages_;
}

// -------------------------------------------------------------------

// CChatRoom_DeleteChatMessages_Response

// -------------------------------------------------------------------

// CChatRoom_UpdateMemberListView_Notification

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_UpdateMemberListView_Notification::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_UpdateMemberListView_Notification::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_UpdateMemberListView_Notification::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_UpdateMemberListView_Notification::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_UpdateMemberListView_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMemberListView_Notification.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_UpdateMemberListView_Notification::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_UpdateMemberListView_Notification::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMemberListView_Notification.chat_group_id)
}

// optional uint64 view_id = 2 [(.description) = "Client-generated ID.  Should send the same value on all requests for the same view"];
inline bool CChatRoom_UpdateMemberListView_Notification::_internal_has_view_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_UpdateMemberListView_Notification::has_view_id() const {
  return _internal_has_view_id();
}
inline void CChatRoom_UpdateMemberListView_Notification::clear_view_id() {
  view_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_UpdateMemberListView_Notification::_internal_view_id() const {
  return view_id_;
}
inline uint64_t CChatRoom_UpdateMemberListView_Notification::view_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMemberListView_Notification.view_id)
  return _internal_view_id();
}
inline void CChatRoom_UpdateMemberListView_Notification::_internal_set_view_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  view_id_ = value;
}
inline void CChatRoom_UpdateMemberListView_Notification::set_view_id(uint64_t value) {
  _internal_set_view_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMemberListView_Notification.view_id)
}

// optional int32 start = 3;
inline bool CChatRoom_UpdateMemberListView_Notification::_internal_has_start() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_UpdateMemberListView_Notification::has_start() const {
  return _internal_has_start();
}
inline void CChatRoom_UpdateMemberListView_Notification::clear_start() {
  start_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline int32_t CChatRoom_UpdateMemberListView_Notification::_internal_start() const {
  return start_;
}
inline int32_t CChatRoom_UpdateMemberListView_Notification::start() const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMemberListView_Notification.start)
  return _internal_start();
}
inline void CChatRoom_UpdateMemberListView_Notification::_internal_set_start(int32_t value) {
  _has_bits_[0] |= 0x00000004u;
  start_ = value;
}
inline void CChatRoom_UpdateMemberListView_Notification::set_start(int32_t value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMemberListView_Notification.start)
}

// optional int32 end = 4;
inline bool CChatRoom_UpdateMemberListView_Notification::_internal_has_end() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_UpdateMemberListView_Notification::has_end() const {
  return _internal_has_end();
}
inline void CChatRoom_UpdateMemberListView_Notification::clear_end() {
  end_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline int32_t CChatRoom_UpdateMemberListView_Notification::_internal_end() const {
  return end_;
}
inline int32_t CChatRoom_UpdateMemberListView_Notification::end() const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMemberListView_Notification.end)
  return _internal_end();
}
inline void CChatRoom_UpdateMemberListView_Notification::_internal_set_end(int32_t value) {
  _has_bits_[0] |= 0x00000008u;
  end_ = value;
}
inline void CChatRoom_UpdateMemberListView_Notification::set_end(int32_t value) {
  _internal_set_end(value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMemberListView_Notification.end)
}

// optional int32 client_changenumber = 5 [(.description) = "Any updates from this call on will have this changenumber present.  Can be used to guarantee in-order updates."];
inline bool CChatRoom_UpdateMemberListView_Notification::_internal_has_client_changenumber() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatRoom_UpdateMemberListView_Notification::has_client_changenumber() const {
  return _internal_has_client_changenumber();
}
inline void CChatRoom_UpdateMemberListView_Notification::clear_client_changenumber() {
  client_changenumber_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline int32_t CChatRoom_UpdateMemberListView_Notification::_internal_client_changenumber() const {
  return client_changenumber_;
}
inline int32_t CChatRoom_UpdateMemberListView_Notification::client_changenumber() const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMemberListView_Notification.client_changenumber)
  return _internal_client_changenumber();
}
inline void CChatRoom_UpdateMemberListView_Notification::_internal_set_client_changenumber(int32_t value) {
  _has_bits_[0] |= 0x00000010u;
  client_changenumber_ = value;
}
inline void CChatRoom_UpdateMemberListView_Notification::set_client_changenumber(int32_t value) {
  _internal_set_client_changenumber(value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMemberListView_Notification.client_changenumber)
}

// optional bool delete_view = 6 [(.description) = "Indicates this view has been deleted."];
inline bool CChatRoom_UpdateMemberListView_Notification::_internal_has_delete_view() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatRoom_UpdateMemberListView_Notification::has_delete_view() const {
  return _internal_has_delete_view();
}
inline void CChatRoom_UpdateMemberListView_Notification::clear_delete_view() {
  delete_view_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CChatRoom_UpdateMemberListView_Notification::_internal_delete_view() const {
  return delete_view_;
}
inline bool CChatRoom_UpdateMemberListView_Notification::delete_view() const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMemberListView_Notification.delete_view)
  return _internal_delete_view();
}
inline void CChatRoom_UpdateMemberListView_Notification::_internal_set_delete_view(bool value) {
  _has_bits_[0] |= 0x00000020u;
  delete_view_ = value;
}
inline void CChatRoom_UpdateMemberListView_Notification::set_delete_view(bool value) {
  _internal_set_delete_view(value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMemberListView_Notification.delete_view)
}

// repeated int32 persona_subscribe_accountids = 7;
inline int CChatRoom_UpdateMemberListView_Notification::_internal_persona_subscribe_accountids_size() const {
  return persona_subscribe_accountids_.size();
}
inline int CChatRoom_UpdateMemberListView_Notification::persona_subscribe_accountids_size() const {
  return _internal_persona_subscribe_accountids_size();
}
inline void CChatRoom_UpdateMemberListView_Notification::clear_persona_subscribe_accountids() {
  persona_subscribe_accountids_.Clear();
}
inline int32_t CChatRoom_UpdateMemberListView_Notification::_internal_persona_subscribe_accountids(int index) const {
  return persona_subscribe_accountids_.Get(index);
}
inline int32_t CChatRoom_UpdateMemberListView_Notification::persona_subscribe_accountids(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMemberListView_Notification.persona_subscribe_accountids)
  return _internal_persona_subscribe_accountids(index);
}
inline void CChatRoom_UpdateMemberListView_Notification::set_persona_subscribe_accountids(int index, int32_t value) {
  persona_subscribe_accountids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMemberListView_Notification.persona_subscribe_accountids)
}
inline void CChatRoom_UpdateMemberListView_Notification::_internal_add_persona_subscribe_accountids(int32_t value) {
  persona_subscribe_accountids_.Add(value);
}
inline void CChatRoom_UpdateMemberListView_Notification::add_persona_subscribe_accountids(int32_t value) {
  _internal_add_persona_subscribe_accountids(value);
  // @@protoc_insertion_point(field_add:CChatRoom_UpdateMemberListView_Notification.persona_subscribe_accountids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CChatRoom_UpdateMemberListView_Notification::_internal_persona_subscribe_accountids() const {
  return persona_subscribe_accountids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CChatRoom_UpdateMemberListView_Notification::persona_subscribe_accountids() const {
  // @@protoc_insertion_point(field_list:CChatRoom_UpdateMemberListView_Notification.persona_subscribe_accountids)
  return _internal_persona_subscribe_accountids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CChatRoom_UpdateMemberListView_Notification::_internal_mutable_persona_subscribe_accountids() {
  return &persona_subscribe_accountids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CChatRoom_UpdateMemberListView_Notification::mutable_persona_subscribe_accountids() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_UpdateMemberListView_Notification.persona_subscribe_accountids)
  return _internal_mutable_persona_subscribe_accountids();
}

// repeated int32 persona_unsubscribe_accountids = 8;
inline int CChatRoom_UpdateMemberListView_Notification::_internal_persona_unsubscribe_accountids_size() const {
  return persona_unsubscribe_accountids_.size();
}
inline int CChatRoom_UpdateMemberListView_Notification::persona_unsubscribe_accountids_size() const {
  return _internal_persona_unsubscribe_accountids_size();
}
inline void CChatRoom_UpdateMemberListView_Notification::clear_persona_unsubscribe_accountids() {
  persona_unsubscribe_accountids_.Clear();
}
inline int32_t CChatRoom_UpdateMemberListView_Notification::_internal_persona_unsubscribe_accountids(int index) const {
  return persona_unsubscribe_accountids_.Get(index);
}
inline int32_t CChatRoom_UpdateMemberListView_Notification::persona_unsubscribe_accountids(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMemberListView_Notification.persona_unsubscribe_accountids)
  return _internal_persona_unsubscribe_accountids(index);
}
inline void CChatRoom_UpdateMemberListView_Notification::set_persona_unsubscribe_accountids(int index, int32_t value) {
  persona_unsubscribe_accountids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMemberListView_Notification.persona_unsubscribe_accountids)
}
inline void CChatRoom_UpdateMemberListView_Notification::_internal_add_persona_unsubscribe_accountids(int32_t value) {
  persona_unsubscribe_accountids_.Add(value);
}
inline void CChatRoom_UpdateMemberListView_Notification::add_persona_unsubscribe_accountids(int32_t value) {
  _internal_add_persona_unsubscribe_accountids(value);
  // @@protoc_insertion_point(field_add:CChatRoom_UpdateMemberListView_Notification.persona_unsubscribe_accountids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CChatRoom_UpdateMemberListView_Notification::_internal_persona_unsubscribe_accountids() const {
  return persona_unsubscribe_accountids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CChatRoom_UpdateMemberListView_Notification::persona_unsubscribe_accountids() const {
  // @@protoc_insertion_point(field_list:CChatRoom_UpdateMemberListView_Notification.persona_unsubscribe_accountids)
  return _internal_persona_unsubscribe_accountids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CChatRoom_UpdateMemberListView_Notification::_internal_mutable_persona_unsubscribe_accountids() {
  return &persona_unsubscribe_accountids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CChatRoom_UpdateMemberListView_Notification::mutable_persona_unsubscribe_accountids() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_UpdateMemberListView_Notification.persona_unsubscribe_accountids)
  return _internal_mutable_persona_unsubscribe_accountids();
}

// -------------------------------------------------------------------

// CChatRoom_SearchMembers_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_SearchMembers_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_SearchMembers_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_SearchMembers_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_SearchMembers_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_SearchMembers_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SearchMembers_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_SearchMembers_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_SearchMembers_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SearchMembers_Request.chat_group_id)
}

// optional uint64 search_id = 2 [(.description) = "Client-supplied id.  For find-as-you-type searches, as search narrows the server will not return persona states previously returned for a given searchid."];
inline bool CChatRoom_SearchMembers_Request::_internal_has_search_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_SearchMembers_Request::has_search_id() const {
  return _internal_has_search_id();
}
inline void CChatRoom_SearchMembers_Request::clear_search_id() {
  search_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_SearchMembers_Request::_internal_search_id() const {
  return search_id_;
}
inline uint64_t CChatRoom_SearchMembers_Request::search_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SearchMembers_Request.search_id)
  return _internal_search_id();
}
inline void CChatRoom_SearchMembers_Request::_internal_set_search_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  search_id_ = value;
}
inline void CChatRoom_SearchMembers_Request::set_search_id(uint64_t value) {
  _internal_set_search_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SearchMembers_Request.search_id)
}

// optional string search_text = 3;
inline bool CChatRoom_SearchMembers_Request::_internal_has_search_text() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SearchMembers_Request::has_search_text() const {
  return _internal_has_search_text();
}
inline void CChatRoom_SearchMembers_Request::clear_search_text() {
  search_text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_SearchMembers_Request::search_text() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SearchMembers_Request.search_text)
  return _internal_search_text();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_SearchMembers_Request::set_search_text(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 search_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_SearchMembers_Request.search_text)
}
inline std::string* CChatRoom_SearchMembers_Request::mutable_search_text() {
  std::string* _s = _internal_mutable_search_text();
  // @@protoc_insertion_point(field_mutable:CChatRoom_SearchMembers_Request.search_text)
  return _s;
}
inline const std::string& CChatRoom_SearchMembers_Request::_internal_search_text() const {
  return search_text_.Get();
}
inline void CChatRoom_SearchMembers_Request::_internal_set_search_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  search_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_SearchMembers_Request::_internal_mutable_search_text() {
  _has_bits_[0] |= 0x00000001u;
  return search_text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_SearchMembers_Request::release_search_text() {
  // @@protoc_insertion_point(field_release:CChatRoom_SearchMembers_Request.search_text)
  if (!_internal_has_search_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = search_text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (search_text_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    search_text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_SearchMembers_Request::set_allocated_search_text(std::string* search_text) {
  if (search_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  search_text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), search_text,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (search_text_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    search_text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SearchMembers_Request.search_text)
}

// optional int32 max_results = 4;
inline bool CChatRoom_SearchMembers_Request::_internal_has_max_results() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_SearchMembers_Request::has_max_results() const {
  return _internal_has_max_results();
}
inline void CChatRoom_SearchMembers_Request::clear_max_results() {
  max_results_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline int32_t CChatRoom_SearchMembers_Request::_internal_max_results() const {
  return max_results_;
}
inline int32_t CChatRoom_SearchMembers_Request::max_results() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SearchMembers_Request.max_results)
  return _internal_max_results();
}
inline void CChatRoom_SearchMembers_Request::_internal_set_max_results(int32_t value) {
  _has_bits_[0] |= 0x00000008u;
  max_results_ = value;
}
inline void CChatRoom_SearchMembers_Request::set_max_results(int32_t value) {
  _internal_set_max_results(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SearchMembers_Request.max_results)
}

// -------------------------------------------------------------------

// CChatRoom_SearchMembers_Response_MemberMatch

// optional int32 accountid = 1;
inline bool CChatRoom_SearchMembers_Response_MemberMatch::_internal_has_accountid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_SearchMembers_Response_MemberMatch::has_accountid() const {
  return _internal_has_accountid();
}
inline void CChatRoom_SearchMembers_Response_MemberMatch::clear_accountid() {
  accountid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline int32_t CChatRoom_SearchMembers_Response_MemberMatch::_internal_accountid() const {
  return accountid_;
}
inline int32_t CChatRoom_SearchMembers_Response_MemberMatch::accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SearchMembers_Response.MemberMatch.accountid)
  return _internal_accountid();
}
inline void CChatRoom_SearchMembers_Response_MemberMatch::_internal_set_accountid(int32_t value) {
  _has_bits_[0] |= 0x00000002u;
  accountid_ = value;
}
inline void CChatRoom_SearchMembers_Response_MemberMatch::set_accountid(int32_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SearchMembers_Response.MemberMatch.accountid)
}

// optional .CMsgClientPersonaState.Friend persona = 2;
inline bool CChatRoom_SearchMembers_Response_MemberMatch::_internal_has_persona() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || persona_ != nullptr);
  return value;
}
inline bool CChatRoom_SearchMembers_Response_MemberMatch::has_persona() const {
  return _internal_has_persona();
}
inline const ::CMsgClientPersonaState_Friend& CChatRoom_SearchMembers_Response_MemberMatch::_internal_persona() const {
  const ::CMsgClientPersonaState_Friend* p = persona_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgClientPersonaState_Friend&>(
      ::_CMsgClientPersonaState_Friend_default_instance_);
}
inline const ::CMsgClientPersonaState_Friend& CChatRoom_SearchMembers_Response_MemberMatch::persona() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SearchMembers_Response.MemberMatch.persona)
  return _internal_persona();
}
inline void CChatRoom_SearchMembers_Response_MemberMatch::unsafe_arena_set_allocated_persona(
    ::CMsgClientPersonaState_Friend* persona) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(persona_);
  }
  persona_ = persona;
  if (persona) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_SearchMembers_Response.MemberMatch.persona)
}
inline ::CMsgClientPersonaState_Friend* CChatRoom_SearchMembers_Response_MemberMatch::release_persona() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgClientPersonaState_Friend* temp = persona_;
  persona_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgClientPersonaState_Friend* CChatRoom_SearchMembers_Response_MemberMatch::unsafe_arena_release_persona() {
  // @@protoc_insertion_point(field_release:CChatRoom_SearchMembers_Response.MemberMatch.persona)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgClientPersonaState_Friend* temp = persona_;
  persona_ = nullptr;
  return temp;
}
inline ::CMsgClientPersonaState_Friend* CChatRoom_SearchMembers_Response_MemberMatch::_internal_mutable_persona() {
  _has_bits_[0] |= 0x00000001u;
  if (persona_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgClientPersonaState_Friend>(GetArenaForAllocation());
    persona_ = p;
  }
  return persona_;
}
inline ::CMsgClientPersonaState_Friend* CChatRoom_SearchMembers_Response_MemberMatch::mutable_persona() {
  ::CMsgClientPersonaState_Friend* _msg = _internal_mutable_persona();
  // @@protoc_insertion_point(field_mutable:CChatRoom_SearchMembers_Response.MemberMatch.persona)
  return _msg;
}
inline void CChatRoom_SearchMembers_Response_MemberMatch::set_allocated_persona(::CMsgClientPersonaState_Friend* persona) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(persona_);
  }
  if (persona) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(persona));
    if (message_arena != submessage_arena) {
      persona = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, persona, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  persona_ = persona;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_SearchMembers_Response.MemberMatch.persona)
}

// -------------------------------------------------------------------

// CChatRoom_SearchMembers_Response

// repeated .CChatRoom_SearchMembers_Response.MemberMatch matching_members = 1;
inline int CChatRoom_SearchMembers_Response::_internal_matching_members_size() const {
  return matching_members_.size();
}
inline int CChatRoom_SearchMembers_Response::matching_members_size() const {
  return _internal_matching_members_size();
}
inline void CChatRoom_SearchMembers_Response::clear_matching_members() {
  matching_members_.Clear();
}
inline ::CChatRoom_SearchMembers_Response_MemberMatch* CChatRoom_SearchMembers_Response::mutable_matching_members(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_SearchMembers_Response.matching_members)
  return matching_members_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_SearchMembers_Response_MemberMatch >*
CChatRoom_SearchMembers_Response::mutable_matching_members() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_SearchMembers_Response.matching_members)
  return &matching_members_;
}
inline const ::CChatRoom_SearchMembers_Response_MemberMatch& CChatRoom_SearchMembers_Response::_internal_matching_members(int index) const {
  return matching_members_.Get(index);
}
inline const ::CChatRoom_SearchMembers_Response_MemberMatch& CChatRoom_SearchMembers_Response::matching_members(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_SearchMembers_Response.matching_members)
  return _internal_matching_members(index);
}
inline ::CChatRoom_SearchMembers_Response_MemberMatch* CChatRoom_SearchMembers_Response::_internal_add_matching_members() {
  return matching_members_.Add();
}
inline ::CChatRoom_SearchMembers_Response_MemberMatch* CChatRoom_SearchMembers_Response::add_matching_members() {
  ::CChatRoom_SearchMembers_Response_MemberMatch* _add = _internal_add_matching_members();
  // @@protoc_insertion_point(field_add:CChatRoom_SearchMembers_Response.matching_members)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_SearchMembers_Response_MemberMatch >&
CChatRoom_SearchMembers_Response::matching_members() const {
  // @@protoc_insertion_point(field_list:CChatRoom_SearchMembers_Response.matching_members)
  return matching_members_;
}

// optional uint32 status_flags = 2;
inline bool CChatRoom_SearchMembers_Response::_internal_has_status_flags() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_SearchMembers_Response::has_status_flags() const {
  return _internal_has_status_flags();
}
inline void CChatRoom_SearchMembers_Response::clear_status_flags() {
  status_flags_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CChatRoom_SearchMembers_Response::_internal_status_flags() const {
  return status_flags_;
}
inline uint32_t CChatRoom_SearchMembers_Response::status_flags() const {
  // @@protoc_insertion_point(field_get:CChatRoom_SearchMembers_Response.status_flags)
  return _internal_status_flags();
}
inline void CChatRoom_SearchMembers_Response::_internal_set_status_flags(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  status_flags_ = value;
}
inline void CChatRoom_SearchMembers_Response::set_status_flags(uint32_t value) {
  _internal_set_status_flags(value);
  // @@protoc_insertion_point(field_set:CChatRoom_SearchMembers_Response.status_flags)
}

// -------------------------------------------------------------------

// CChatRoom_UpdateMessageReaction_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_UpdateMessageReaction_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_UpdateMessageReaction_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_UpdateMessageReaction_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_UpdateMessageReaction_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_UpdateMessageReaction_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMessageReaction_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_UpdateMessageReaction_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_UpdateMessageReaction_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMessageReaction_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_UpdateMessageReaction_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_UpdateMessageReaction_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_UpdateMessageReaction_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_UpdateMessageReaction_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_UpdateMessageReaction_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMessageReaction_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_UpdateMessageReaction_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  chat_id_ = value;
}
inline void CChatRoom_UpdateMessageReaction_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMessageReaction_Request.chat_id)
}

// optional uint32 server_timestamp = 3;
inline bool CChatRoom_UpdateMessageReaction_Request::_internal_has_server_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_UpdateMessageReaction_Request::has_server_timestamp() const {
  return _internal_has_server_timestamp();
}
inline void CChatRoom_UpdateMessageReaction_Request::clear_server_timestamp() {
  server_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CChatRoom_UpdateMessageReaction_Request::_internal_server_timestamp() const {
  return server_timestamp_;
}
inline uint32_t CChatRoom_UpdateMessageReaction_Request::server_timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMessageReaction_Request.server_timestamp)
  return _internal_server_timestamp();
}
inline void CChatRoom_UpdateMessageReaction_Request::_internal_set_server_timestamp(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  server_timestamp_ = value;
}
inline void CChatRoom_UpdateMessageReaction_Request::set_server_timestamp(uint32_t value) {
  _internal_set_server_timestamp(value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMessageReaction_Request.server_timestamp)
}

// optional uint32 ordinal = 4;
inline bool CChatRoom_UpdateMessageReaction_Request::_internal_has_ordinal() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatRoom_UpdateMessageReaction_Request::has_ordinal() const {
  return _internal_has_ordinal();
}
inline void CChatRoom_UpdateMessageReaction_Request::clear_ordinal() {
  ordinal_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CChatRoom_UpdateMessageReaction_Request::_internal_ordinal() const {
  return ordinal_;
}
inline uint32_t CChatRoom_UpdateMessageReaction_Request::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMessageReaction_Request.ordinal)
  return _internal_ordinal();
}
inline void CChatRoom_UpdateMessageReaction_Request::_internal_set_ordinal(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  ordinal_ = value;
}
inline void CChatRoom_UpdateMessageReaction_Request::set_ordinal(uint32_t value) {
  _internal_set_ordinal(value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMessageReaction_Request.ordinal)
}

// optional .EChatRoomMessageReactionType reaction_type = 5 [default = k_EChatRoomMessageReactionType_Invalid];
inline bool CChatRoom_UpdateMessageReaction_Request::_internal_has_reaction_type() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatRoom_UpdateMessageReaction_Request::has_reaction_type() const {
  return _internal_has_reaction_type();
}
inline void CChatRoom_UpdateMessageReaction_Request::clear_reaction_type() {
  reaction_type_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::EChatRoomMessageReactionType CChatRoom_UpdateMessageReaction_Request::_internal_reaction_type() const {
  return static_cast< ::EChatRoomMessageReactionType >(reaction_type_);
}
inline ::EChatRoomMessageReactionType CChatRoom_UpdateMessageReaction_Request::reaction_type() const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMessageReaction_Request.reaction_type)
  return _internal_reaction_type();
}
inline void CChatRoom_UpdateMessageReaction_Request::_internal_set_reaction_type(::EChatRoomMessageReactionType value) {
  assert(::EChatRoomMessageReactionType_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  reaction_type_ = value;
}
inline void CChatRoom_UpdateMessageReaction_Request::set_reaction_type(::EChatRoomMessageReactionType value) {
  _internal_set_reaction_type(value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMessageReaction_Request.reaction_type)
}

// optional string reaction = 6;
inline bool CChatRoom_UpdateMessageReaction_Request::_internal_has_reaction() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_UpdateMessageReaction_Request::has_reaction() const {
  return _internal_has_reaction();
}
inline void CChatRoom_UpdateMessageReaction_Request::clear_reaction() {
  reaction_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_UpdateMessageReaction_Request::reaction() const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMessageReaction_Request.reaction)
  return _internal_reaction();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_UpdateMessageReaction_Request::set_reaction(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 reaction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMessageReaction_Request.reaction)
}
inline std::string* CChatRoom_UpdateMessageReaction_Request::mutable_reaction() {
  std::string* _s = _internal_mutable_reaction();
  // @@protoc_insertion_point(field_mutable:CChatRoom_UpdateMessageReaction_Request.reaction)
  return _s;
}
inline const std::string& CChatRoom_UpdateMessageReaction_Request::_internal_reaction() const {
  return reaction_.Get();
}
inline void CChatRoom_UpdateMessageReaction_Request::_internal_set_reaction(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  reaction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_UpdateMessageReaction_Request::_internal_mutable_reaction() {
  _has_bits_[0] |= 0x00000001u;
  return reaction_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_UpdateMessageReaction_Request::release_reaction() {
  // @@protoc_insertion_point(field_release:CChatRoom_UpdateMessageReaction_Request.reaction)
  if (!_internal_has_reaction()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = reaction_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (reaction_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    reaction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_UpdateMessageReaction_Request::set_allocated_reaction(std::string* reaction) {
  if (reaction != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  reaction_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reaction,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (reaction_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    reaction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_UpdateMessageReaction_Request.reaction)
}

// optional bool is_add = 7;
inline bool CChatRoom_UpdateMessageReaction_Request::_internal_has_is_add() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatRoom_UpdateMessageReaction_Request::has_is_add() const {
  return _internal_has_is_add();
}
inline void CChatRoom_UpdateMessageReaction_Request::clear_is_add() {
  is_add_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CChatRoom_UpdateMessageReaction_Request::_internal_is_add() const {
  return is_add_;
}
inline bool CChatRoom_UpdateMessageReaction_Request::is_add() const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMessageReaction_Request.is_add)
  return _internal_is_add();
}
inline void CChatRoom_UpdateMessageReaction_Request::_internal_set_is_add(bool value) {
  _has_bits_[0] |= 0x00000040u;
  is_add_ = value;
}
inline void CChatRoom_UpdateMessageReaction_Request::set_is_add(bool value) {
  _internal_set_is_add(value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMessageReaction_Request.is_add)
}

// -------------------------------------------------------------------

// CChatRoom_UpdateMessageReaction_Response

// optional uint32 num_reactors = 1;
inline bool CChatRoom_UpdateMessageReaction_Response::_internal_has_num_reactors() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_UpdateMessageReaction_Response::has_num_reactors() const {
  return _internal_has_num_reactors();
}
inline void CChatRoom_UpdateMessageReaction_Response::clear_num_reactors() {
  num_reactors_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CChatRoom_UpdateMessageReaction_Response::_internal_num_reactors() const {
  return num_reactors_;
}
inline uint32_t CChatRoom_UpdateMessageReaction_Response::num_reactors() const {
  // @@protoc_insertion_point(field_get:CChatRoom_UpdateMessageReaction_Response.num_reactors)
  return _internal_num_reactors();
}
inline void CChatRoom_UpdateMessageReaction_Response::_internal_set_num_reactors(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  num_reactors_ = value;
}
inline void CChatRoom_UpdateMessageReaction_Response::set_num_reactors(uint32_t value) {
  _internal_set_num_reactors(value);
  // @@protoc_insertion_point(field_set:CChatRoom_UpdateMessageReaction_Response.num_reactors)
}

// -------------------------------------------------------------------

// CChatRoom_GetMessageReactionReactors_Request

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_GetMessageReactionReactors_Request::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageReactionReactors_Request::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_GetMessageReactionReactors_Request::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_GetMessageReactionReactors_Request::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_GetMessageReactionReactors_Request::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageReactionReactors_Request.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_GetMessageReactionReactors_Request::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_GetMessageReactionReactors_Request::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageReactionReactors_Request.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_GetMessageReactionReactors_Request::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageReactionReactors_Request::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_GetMessageReactionReactors_Request::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_GetMessageReactionReactors_Request::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_GetMessageReactionReactors_Request::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageReactionReactors_Request.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_GetMessageReactionReactors_Request::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  chat_id_ = value;
}
inline void CChatRoom_GetMessageReactionReactors_Request::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageReactionReactors_Request.chat_id)
}

// optional uint32 server_timestamp = 3;
inline bool CChatRoom_GetMessageReactionReactors_Request::_internal_has_server_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageReactionReactors_Request::has_server_timestamp() const {
  return _internal_has_server_timestamp();
}
inline void CChatRoom_GetMessageReactionReactors_Request::clear_server_timestamp() {
  server_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CChatRoom_GetMessageReactionReactors_Request::_internal_server_timestamp() const {
  return server_timestamp_;
}
inline uint32_t CChatRoom_GetMessageReactionReactors_Request::server_timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageReactionReactors_Request.server_timestamp)
  return _internal_server_timestamp();
}
inline void CChatRoom_GetMessageReactionReactors_Request::_internal_set_server_timestamp(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  server_timestamp_ = value;
}
inline void CChatRoom_GetMessageReactionReactors_Request::set_server_timestamp(uint32_t value) {
  _internal_set_server_timestamp(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageReactionReactors_Request.server_timestamp)
}

// optional uint32 ordinal = 4;
inline bool CChatRoom_GetMessageReactionReactors_Request::_internal_has_ordinal() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageReactionReactors_Request::has_ordinal() const {
  return _internal_has_ordinal();
}
inline void CChatRoom_GetMessageReactionReactors_Request::clear_ordinal() {
  ordinal_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CChatRoom_GetMessageReactionReactors_Request::_internal_ordinal() const {
  return ordinal_;
}
inline uint32_t CChatRoom_GetMessageReactionReactors_Request::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageReactionReactors_Request.ordinal)
  return _internal_ordinal();
}
inline void CChatRoom_GetMessageReactionReactors_Request::_internal_set_ordinal(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  ordinal_ = value;
}
inline void CChatRoom_GetMessageReactionReactors_Request::set_ordinal(uint32_t value) {
  _internal_set_ordinal(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageReactionReactors_Request.ordinal)
}

// optional .EChatRoomMessageReactionType reaction_type = 5 [default = k_EChatRoomMessageReactionType_Invalid];
inline bool CChatRoom_GetMessageReactionReactors_Request::_internal_has_reaction_type() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageReactionReactors_Request::has_reaction_type() const {
  return _internal_has_reaction_type();
}
inline void CChatRoom_GetMessageReactionReactors_Request::clear_reaction_type() {
  reaction_type_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::EChatRoomMessageReactionType CChatRoom_GetMessageReactionReactors_Request::_internal_reaction_type() const {
  return static_cast< ::EChatRoomMessageReactionType >(reaction_type_);
}
inline ::EChatRoomMessageReactionType CChatRoom_GetMessageReactionReactors_Request::reaction_type() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageReactionReactors_Request.reaction_type)
  return _internal_reaction_type();
}
inline void CChatRoom_GetMessageReactionReactors_Request::_internal_set_reaction_type(::EChatRoomMessageReactionType value) {
  assert(::EChatRoomMessageReactionType_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  reaction_type_ = value;
}
inline void CChatRoom_GetMessageReactionReactors_Request::set_reaction_type(::EChatRoomMessageReactionType value) {
  _internal_set_reaction_type(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageReactionReactors_Request.reaction_type)
}

// optional string reaction = 6;
inline bool CChatRoom_GetMessageReactionReactors_Request::_internal_has_reaction() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageReactionReactors_Request::has_reaction() const {
  return _internal_has_reaction();
}
inline void CChatRoom_GetMessageReactionReactors_Request::clear_reaction() {
  reaction_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_GetMessageReactionReactors_Request::reaction() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageReactionReactors_Request.reaction)
  return _internal_reaction();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_GetMessageReactionReactors_Request::set_reaction(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 reaction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageReactionReactors_Request.reaction)
}
inline std::string* CChatRoom_GetMessageReactionReactors_Request::mutable_reaction() {
  std::string* _s = _internal_mutable_reaction();
  // @@protoc_insertion_point(field_mutable:CChatRoom_GetMessageReactionReactors_Request.reaction)
  return _s;
}
inline const std::string& CChatRoom_GetMessageReactionReactors_Request::_internal_reaction() const {
  return reaction_.Get();
}
inline void CChatRoom_GetMessageReactionReactors_Request::_internal_set_reaction(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  reaction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetMessageReactionReactors_Request::_internal_mutable_reaction() {
  _has_bits_[0] |= 0x00000001u;
  return reaction_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_GetMessageReactionReactors_Request::release_reaction() {
  // @@protoc_insertion_point(field_release:CChatRoom_GetMessageReactionReactors_Request.reaction)
  if (!_internal_has_reaction()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = reaction_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (reaction_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    reaction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_GetMessageReactionReactors_Request::set_allocated_reaction(std::string* reaction) {
  if (reaction != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  reaction_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reaction,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (reaction_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    reaction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_GetMessageReactionReactors_Request.reaction)
}

// optional uint32 limit = 7;
inline bool CChatRoom_GetMessageReactionReactors_Request::_internal_has_limit() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatRoom_GetMessageReactionReactors_Request::has_limit() const {
  return _internal_has_limit();
}
inline void CChatRoom_GetMessageReactionReactors_Request::clear_limit() {
  limit_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CChatRoom_GetMessageReactionReactors_Request::_internal_limit() const {
  return limit_;
}
inline uint32_t CChatRoom_GetMessageReactionReactors_Request::limit() const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageReactionReactors_Request.limit)
  return _internal_limit();
}
inline void CChatRoom_GetMessageReactionReactors_Request::_internal_set_limit(uint32_t value) {
  _has_bits_[0] |= 0x00000040u;
  limit_ = value;
}
inline void CChatRoom_GetMessageReactionReactors_Request::set_limit(uint32_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageReactionReactors_Request.limit)
}

// -------------------------------------------------------------------

// CChatRoom_GetMessageReactionReactors_Response

// repeated uint32 reactors = 1;
inline int CChatRoom_GetMessageReactionReactors_Response::_internal_reactors_size() const {
  return reactors_.size();
}
inline int CChatRoom_GetMessageReactionReactors_Response::reactors_size() const {
  return _internal_reactors_size();
}
inline void CChatRoom_GetMessageReactionReactors_Response::clear_reactors() {
  reactors_.Clear();
}
inline uint32_t CChatRoom_GetMessageReactionReactors_Response::_internal_reactors(int index) const {
  return reactors_.Get(index);
}
inline uint32_t CChatRoom_GetMessageReactionReactors_Response::reactors(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_GetMessageReactionReactors_Response.reactors)
  return _internal_reactors(index);
}
inline void CChatRoom_GetMessageReactionReactors_Response::set_reactors(int index, uint32_t value) {
  reactors_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatRoom_GetMessageReactionReactors_Response.reactors)
}
inline void CChatRoom_GetMessageReactionReactors_Response::_internal_add_reactors(uint32_t value) {
  reactors_.Add(value);
}
inline void CChatRoom_GetMessageReactionReactors_Response::add_reactors(uint32_t value) {
  _internal_add_reactors(value);
  // @@protoc_insertion_point(field_add:CChatRoom_GetMessageReactionReactors_Response.reactors)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CChatRoom_GetMessageReactionReactors_Response::_internal_reactors() const {
  return reactors_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CChatRoom_GetMessageReactionReactors_Response::reactors() const {
  // @@protoc_insertion_point(field_list:CChatRoom_GetMessageReactionReactors_Response.reactors)
  return _internal_reactors();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CChatRoom_GetMessageReactionReactors_Response::_internal_mutable_reactors() {
  return &reactors_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CChatRoom_GetMessageReactionReactors_Response::mutable_reactors() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_GetMessageReactionReactors_Response.reactors)
  return _internal_mutable_reactors();
}

// -------------------------------------------------------------------

// CClanChatRooms_GetClanChatRoomInfo_Request

// optional fixed64 steamid = 1;
inline bool CClanChatRooms_GetClanChatRoomInfo_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CClanChatRooms_GetClanChatRoomInfo_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CClanChatRooms_GetClanChatRoomInfo_Request::clear_steamid() {
  steamid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CClanChatRooms_GetClanChatRoomInfo_Request::_internal_steamid() const {
  return steamid_;
}
inline uint64_t CClanChatRooms_GetClanChatRoomInfo_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CClanChatRooms_GetClanChatRoomInfo_Request.steamid)
  return _internal_steamid();
}
inline void CClanChatRooms_GetClanChatRoomInfo_Request::_internal_set_steamid(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Request::set_steamid(uint64_t value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CClanChatRooms_GetClanChatRoomInfo_Request.steamid)
}

// optional bool autocreate = 2 [default = true, (.description) = "Create a default chat room if none has been created before."];
inline bool CClanChatRooms_GetClanChatRoomInfo_Request::_internal_has_autocreate() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CClanChatRooms_GetClanChatRoomInfo_Request::has_autocreate() const {
  return _internal_has_autocreate();
}
inline void CClanChatRooms_GetClanChatRoomInfo_Request::clear_autocreate() {
  autocreate_ = true;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CClanChatRooms_GetClanChatRoomInfo_Request::_internal_autocreate() const {
  return autocreate_;
}
inline bool CClanChatRooms_GetClanChatRoomInfo_Request::autocreate() const {
  // @@protoc_insertion_point(field_get:CClanChatRooms_GetClanChatRoomInfo_Request.autocreate)
  return _internal_autocreate();
}
inline void CClanChatRooms_GetClanChatRoomInfo_Request::_internal_set_autocreate(bool value) {
  _has_bits_[0] |= 0x00000002u;
  autocreate_ = value;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Request::set_autocreate(bool value) {
  _internal_set_autocreate(value);
  // @@protoc_insertion_point(field_set:CClanChatRooms_GetClanChatRoomInfo_Request.autocreate)
}

// -------------------------------------------------------------------

// CClanChatRooms_GetClanChatRoomInfo_Response

// optional .CChatRoom_GetChatRoomGroupSummary_Response chat_group_summary = 1;
inline bool CClanChatRooms_GetClanChatRoomInfo_Response::_internal_has_chat_group_summary() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || chat_group_summary_ != nullptr);
  return value;
}
inline bool CClanChatRooms_GetClanChatRoomInfo_Response::has_chat_group_summary() const {
  return _internal_has_chat_group_summary();
}
inline void CClanChatRooms_GetClanChatRoomInfo_Response::clear_chat_group_summary() {
  if (chat_group_summary_ != nullptr) chat_group_summary_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CClanChatRooms_GetClanChatRoomInfo_Response::_internal_chat_group_summary() const {
  const ::CChatRoom_GetChatRoomGroupSummary_Response* p = chat_group_summary_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoom_GetChatRoomGroupSummary_Response&>(
      ::_CChatRoom_GetChatRoomGroupSummary_Response_default_instance_);
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& CClanChatRooms_GetClanChatRoomInfo_Response::chat_group_summary() const {
  // @@protoc_insertion_point(field_get:CClanChatRooms_GetClanChatRoomInfo_Response.chat_group_summary)
  return _internal_chat_group_summary();
}
inline void CClanChatRooms_GetClanChatRoomInfo_Response::unsafe_arena_set_allocated_chat_group_summary(
    ::CChatRoom_GetChatRoomGroupSummary_Response* chat_group_summary) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(chat_group_summary_);
  }
  chat_group_summary_ = chat_group_summary;
  if (chat_group_summary) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CClanChatRooms_GetClanChatRoomInfo_Response.chat_group_summary)
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CClanChatRooms_GetClanChatRoomInfo_Response::release_chat_group_summary() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = chat_group_summary_;
  chat_group_summary_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CClanChatRooms_GetClanChatRoomInfo_Response::unsafe_arena_release_chat_group_summary() {
  // @@protoc_insertion_point(field_release:CClanChatRooms_GetClanChatRoomInfo_Response.chat_group_summary)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = chat_group_summary_;
  chat_group_summary_ = nullptr;
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CClanChatRooms_GetClanChatRoomInfo_Response::_internal_mutable_chat_group_summary() {
  _has_bits_[0] |= 0x00000001u;
  if (chat_group_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoom_GetChatRoomGroupSummary_Response>(GetArenaForAllocation());
    chat_group_summary_ = p;
  }
  return chat_group_summary_;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* CClanChatRooms_GetClanChatRoomInfo_Response::mutable_chat_group_summary() {
  ::CChatRoom_GetChatRoomGroupSummary_Response* _msg = _internal_mutable_chat_group_summary();
  // @@protoc_insertion_point(field_mutable:CClanChatRooms_GetClanChatRoomInfo_Response.chat_group_summary)
  return _msg;
}
inline void CClanChatRooms_GetClanChatRoomInfo_Response::set_allocated_chat_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* chat_group_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete chat_group_summary_;
  }
  if (chat_group_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoom_GetChatRoomGroupSummary_Response>::GetOwningArena(chat_group_summary);
    if (message_arena != submessage_arena) {
      chat_group_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chat_group_summary, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  chat_group_summary_ = chat_group_summary;
  // @@protoc_insertion_point(field_set_allocated:CClanChatRooms_GetClanChatRoomInfo_Response.chat_group_summary)
}

// -------------------------------------------------------------------

// CClanChatRooms_SetClanChatRoomPrivate_Request

// optional fixed64 steamid = 1;
inline bool CClanChatRooms_SetClanChatRoomPrivate_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CClanChatRooms_SetClanChatRoomPrivate_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Request::clear_steamid() {
  steamid_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CClanChatRooms_SetClanChatRoomPrivate_Request::_internal_steamid() const {
  return steamid_;
}
inline uint64_t CClanChatRooms_SetClanChatRoomPrivate_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CClanChatRooms_SetClanChatRoomPrivate_Request.steamid)
  return _internal_steamid();
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Request::_internal_set_steamid(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Request::set_steamid(uint64_t value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CClanChatRooms_SetClanChatRoomPrivate_Request.steamid)
}

// optional bool chat_room_private = 2;
inline bool CClanChatRooms_SetClanChatRoomPrivate_Request::_internal_has_chat_room_private() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CClanChatRooms_SetClanChatRoomPrivate_Request::has_chat_room_private() const {
  return _internal_has_chat_room_private();
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Request::clear_chat_room_private() {
  chat_room_private_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CClanChatRooms_SetClanChatRoomPrivate_Request::_internal_chat_room_private() const {
  return chat_room_private_;
}
inline bool CClanChatRooms_SetClanChatRoomPrivate_Request::chat_room_private() const {
  // @@protoc_insertion_point(field_get:CClanChatRooms_SetClanChatRoomPrivate_Request.chat_room_private)
  return _internal_chat_room_private();
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Request::_internal_set_chat_room_private(bool value) {
  _has_bits_[0] |= 0x00000002u;
  chat_room_private_ = value;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Request::set_chat_room_private(bool value) {
  _internal_set_chat_room_private(value);
  // @@protoc_insertion_point(field_set:CClanChatRooms_SetClanChatRoomPrivate_Request.chat_room_private)
}

// -------------------------------------------------------------------

// CClanChatRooms_SetClanChatRoomPrivate_Response

// optional bool chat_room_private = 1;
inline bool CClanChatRooms_SetClanChatRoomPrivate_Response::_internal_has_chat_room_private() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CClanChatRooms_SetClanChatRoomPrivate_Response::has_chat_room_private() const {
  return _internal_has_chat_room_private();
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Response::clear_chat_room_private() {
  chat_room_private_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CClanChatRooms_SetClanChatRoomPrivate_Response::_internal_chat_room_private() const {
  return chat_room_private_;
}
inline bool CClanChatRooms_SetClanChatRoomPrivate_Response::chat_room_private() const {
  // @@protoc_insertion_point(field_get:CClanChatRooms_SetClanChatRoomPrivate_Response.chat_room_private)
  return _internal_chat_room_private();
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Response::_internal_set_chat_room_private(bool value) {
  _has_bits_[0] |= 0x00000001u;
  chat_room_private_ = value;
}
inline void CClanChatRooms_SetClanChatRoomPrivate_Response::set_chat_room_private(bool value) {
  _internal_set_chat_room_private(value);
  // @@protoc_insertion_point(field_set:CClanChatRooms_SetClanChatRoomPrivate_Response.chat_room_private)
}

// -------------------------------------------------------------------

// CChatMentions

// optional bool mention_all = 1;
inline bool CChatMentions::_internal_has_mention_all() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatMentions::has_mention_all() const {
  return _internal_has_mention_all();
}
inline void CChatMentions::clear_mention_all() {
  mention_all_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CChatMentions::_internal_mention_all() const {
  return mention_all_;
}
inline bool CChatMentions::mention_all() const {
  // @@protoc_insertion_point(field_get:CChatMentions.mention_all)
  return _internal_mention_all();
}
inline void CChatMentions::_internal_set_mention_all(bool value) {
  _has_bits_[0] |= 0x00000001u;
  mention_all_ = value;
}
inline void CChatMentions::set_mention_all(bool value) {
  _internal_set_mention_all(value);
  // @@protoc_insertion_point(field_set:CChatMentions.mention_all)
}

// optional bool mention_here = 2;
inline bool CChatMentions::_internal_has_mention_here() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatMentions::has_mention_here() const {
  return _internal_has_mention_here();
}
inline void CChatMentions::clear_mention_here() {
  mention_here_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CChatMentions::_internal_mention_here() const {
  return mention_here_;
}
inline bool CChatMentions::mention_here() const {
  // @@protoc_insertion_point(field_get:CChatMentions.mention_here)
  return _internal_mention_here();
}
inline void CChatMentions::_internal_set_mention_here(bool value) {
  _has_bits_[0] |= 0x00000002u;
  mention_here_ = value;
}
inline void CChatMentions::set_mention_here(bool value) {
  _internal_set_mention_here(value);
  // @@protoc_insertion_point(field_set:CChatMentions.mention_here)
}

// repeated uint32 mention_accountids = 3;
inline int CChatMentions::_internal_mention_accountids_size() const {
  return mention_accountids_.size();
}
inline int CChatMentions::mention_accountids_size() const {
  return _internal_mention_accountids_size();
}
inline void CChatMentions::clear_mention_accountids() {
  mention_accountids_.Clear();
}
inline uint32_t CChatMentions::_internal_mention_accountids(int index) const {
  return mention_accountids_.Get(index);
}
inline uint32_t CChatMentions::mention_accountids(int index) const {
  // @@protoc_insertion_point(field_get:CChatMentions.mention_accountids)
  return _internal_mention_accountids(index);
}
inline void CChatMentions::set_mention_accountids(int index, uint32_t value) {
  mention_accountids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CChatMentions.mention_accountids)
}
inline void CChatMentions::_internal_add_mention_accountids(uint32_t value) {
  mention_accountids_.Add(value);
}
inline void CChatMentions::add_mention_accountids(uint32_t value) {
  _internal_add_mention_accountids(value);
  // @@protoc_insertion_point(field_add:CChatMentions.mention_accountids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CChatMentions::_internal_mention_accountids() const {
  return mention_accountids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CChatMentions::mention_accountids() const {
  // @@protoc_insertion_point(field_list:CChatMentions.mention_accountids)
  return _internal_mention_accountids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CChatMentions::_internal_mutable_mention_accountids() {
  return &mention_accountids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CChatMentions::mutable_mention_accountids() {
  // @@protoc_insertion_point(field_mutable_list:CChatMentions.mention_accountids)
  return _internal_mutable_mention_accountids();
}

// -------------------------------------------------------------------

// CChatRoom_IncomingChatMessage_Notification

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_IncomingChatMessage_Notification::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatRoom_IncomingChatMessage_Notification::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000020u;
}
inline uint64_t CChatRoom_IncomingChatMessage_Notification::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_IncomingChatMessage_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_IncomingChatMessage_Notification::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000020u;
  chat_group_id_ = value;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_IncomingChatMessage_Notification::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatRoom_IncomingChatMessage_Notification::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000040u;
}
inline uint64_t CChatRoom_IncomingChatMessage_Notification::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_IncomingChatMessage_Notification::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_IncomingChatMessage_Notification::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000040u;
  chat_id_ = value;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.chat_id)
}

// optional fixed64 steamid_sender = 3;
inline bool CChatRoom_IncomingChatMessage_Notification::_internal_has_steamid_sender() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CChatRoom_IncomingChatMessage_Notification::has_steamid_sender() const {
  return _internal_has_steamid_sender();
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_steamid_sender() {
  steamid_sender_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000080u;
}
inline uint64_t CChatRoom_IncomingChatMessage_Notification::_internal_steamid_sender() const {
  return steamid_sender_;
}
inline uint64_t CChatRoom_IncomingChatMessage_Notification::steamid_sender() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.steamid_sender)
  return _internal_steamid_sender();
}
inline void CChatRoom_IncomingChatMessage_Notification::_internal_set_steamid_sender(uint64_t value) {
  _has_bits_[0] |= 0x00000080u;
  steamid_sender_ = value;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_steamid_sender(uint64_t value) {
  _internal_set_steamid_sender(value);
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.steamid_sender)
}

// optional string message = 4;
inline bool CChatRoom_IncomingChatMessage_Notification::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_IncomingChatMessage_Notification::has_message() const {
  return _internal_has_message();
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_message() {
  message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_IncomingChatMessage_Notification::message() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_IncomingChatMessage_Notification::set_message(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.message)
}
inline std::string* CChatRoom_IncomingChatMessage_Notification::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:CChatRoom_IncomingChatMessage_Notification.message)
  return _s;
}
inline const std::string& CChatRoom_IncomingChatMessage_Notification::_internal_message() const {
  return message_.Get();
}
inline void CChatRoom_IncomingChatMessage_Notification::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_IncomingChatMessage_Notification::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_IncomingChatMessage_Notification::release_message() {
  // @@protoc_insertion_point(field_release:CChatRoom_IncomingChatMessage_Notification.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (message_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (message_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_IncomingChatMessage_Notification.message)
}

// optional uint32 timestamp = 5;
inline bool CChatRoom_IncomingChatMessage_Notification::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CChatRoom_IncomingChatMessage_Notification::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline uint32_t CChatRoom_IncomingChatMessage_Notification::_internal_timestamp() const {
  return timestamp_;
}
inline uint32_t CChatRoom_IncomingChatMessage_Notification::timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.timestamp)
  return _internal_timestamp();
}
inline void CChatRoom_IncomingChatMessage_Notification::_internal_set_timestamp(uint32_t value) {
  _has_bits_[0] |= 0x00000100u;
  timestamp_ = value;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_timestamp(uint32_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.timestamp)
}

// optional .CChatMentions mentions = 6;
inline bool CChatRoom_IncomingChatMessage_Notification::_internal_has_mentions() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || mentions_ != nullptr);
  return value;
}
inline bool CChatRoom_IncomingChatMessage_Notification::has_mentions() const {
  return _internal_has_mentions();
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_mentions() {
  if (mentions_ != nullptr) mentions_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::CChatMentions& CChatRoom_IncomingChatMessage_Notification::_internal_mentions() const {
  const ::CChatMentions* p = mentions_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatMentions&>(
      ::_CChatMentions_default_instance_);
}
inline const ::CChatMentions& CChatRoom_IncomingChatMessage_Notification::mentions() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.mentions)
  return _internal_mentions();
}
inline void CChatRoom_IncomingChatMessage_Notification::unsafe_arena_set_allocated_mentions(
    ::CChatMentions* mentions) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mentions_);
  }
  mentions_ = mentions;
  if (mentions) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_IncomingChatMessage_Notification.mentions)
}
inline ::CChatMentions* CChatRoom_IncomingChatMessage_Notification::release_mentions() {
  _has_bits_[0] &= ~0x00000008u;
  ::CChatMentions* temp = mentions_;
  mentions_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatMentions* CChatRoom_IncomingChatMessage_Notification::unsafe_arena_release_mentions() {
  // @@protoc_insertion_point(field_release:CChatRoom_IncomingChatMessage_Notification.mentions)
  _has_bits_[0] &= ~0x00000008u;
  ::CChatMentions* temp = mentions_;
  mentions_ = nullptr;
  return temp;
}
inline ::CChatMentions* CChatRoom_IncomingChatMessage_Notification::_internal_mutable_mentions() {
  _has_bits_[0] |= 0x00000008u;
  if (mentions_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatMentions>(GetArenaForAllocation());
    mentions_ = p;
  }
  return mentions_;
}
inline ::CChatMentions* CChatRoom_IncomingChatMessage_Notification::mutable_mentions() {
  ::CChatMentions* _msg = _internal_mutable_mentions();
  // @@protoc_insertion_point(field_mutable:CChatRoom_IncomingChatMessage_Notification.mentions)
  return _msg;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_allocated_mentions(::CChatMentions* mentions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete mentions_;
  }
  if (mentions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatMentions>::GetOwningArena(mentions);
    if (message_arena != submessage_arena) {
      mentions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mentions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  mentions_ = mentions;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_IncomingChatMessage_Notification.mentions)
}

// optional uint32 ordinal = 7;
inline bool CChatRoom_IncomingChatMessage_Notification::_internal_has_ordinal() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CChatRoom_IncomingChatMessage_Notification::has_ordinal() const {
  return _internal_has_ordinal();
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_ordinal() {
  ordinal_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CChatRoom_IncomingChatMessage_Notification::_internal_ordinal() const {
  return ordinal_;
}
inline uint32_t CChatRoom_IncomingChatMessage_Notification::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.ordinal)
  return _internal_ordinal();
}
inline void CChatRoom_IncomingChatMessage_Notification::_internal_set_ordinal(uint32_t value) {
  _has_bits_[0] |= 0x00000200u;
  ordinal_ = value;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_ordinal(uint32_t value) {
  _internal_set_ordinal(value);
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.ordinal)
}

// optional .ServerMessage server_message = 8;
inline bool CChatRoom_IncomingChatMessage_Notification::_internal_has_server_message() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || server_message_ != nullptr);
  return value;
}
inline bool CChatRoom_IncomingChatMessage_Notification::has_server_message() const {
  return _internal_has_server_message();
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_server_message() {
  if (server_message_ != nullptr) server_message_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::ServerMessage& CChatRoom_IncomingChatMessage_Notification::_internal_server_message() const {
  const ::ServerMessage* p = server_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::ServerMessage&>(
      ::_ServerMessage_default_instance_);
}
inline const ::ServerMessage& CChatRoom_IncomingChatMessage_Notification::server_message() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.server_message)
  return _internal_server_message();
}
inline void CChatRoom_IncomingChatMessage_Notification::unsafe_arena_set_allocated_server_message(
    ::ServerMessage* server_message) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(server_message_);
  }
  server_message_ = server_message;
  if (server_message) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_IncomingChatMessage_Notification.server_message)
}
inline ::ServerMessage* CChatRoom_IncomingChatMessage_Notification::release_server_message() {
  _has_bits_[0] &= ~0x00000010u;
  ::ServerMessage* temp = server_message_;
  server_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ServerMessage* CChatRoom_IncomingChatMessage_Notification::unsafe_arena_release_server_message() {
  // @@protoc_insertion_point(field_release:CChatRoom_IncomingChatMessage_Notification.server_message)
  _has_bits_[0] &= ~0x00000010u;
  ::ServerMessage* temp = server_message_;
  server_message_ = nullptr;
  return temp;
}
inline ::ServerMessage* CChatRoom_IncomingChatMessage_Notification::_internal_mutable_server_message() {
  _has_bits_[0] |= 0x00000010u;
  if (server_message_ == nullptr) {
    auto* p = CreateMaybeMessage<::ServerMessage>(GetArenaForAllocation());
    server_message_ = p;
  }
  return server_message_;
}
inline ::ServerMessage* CChatRoom_IncomingChatMessage_Notification::mutable_server_message() {
  ::ServerMessage* _msg = _internal_mutable_server_message();
  // @@protoc_insertion_point(field_mutable:CChatRoom_IncomingChatMessage_Notification.server_message)
  return _msg;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_allocated_server_message(::ServerMessage* server_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete server_message_;
  }
  if (server_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::ServerMessage>::GetOwningArena(server_message);
    if (message_arena != submessage_arena) {
      server_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, server_message, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  server_message_ = server_message;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_IncomingChatMessage_Notification.server_message)
}

// optional string message_no_bbcode = 9;
inline bool CChatRoom_IncomingChatMessage_Notification::_internal_has_message_no_bbcode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_IncomingChatMessage_Notification::has_message_no_bbcode() const {
  return _internal_has_message_no_bbcode();
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_message_no_bbcode() {
  message_no_bbcode_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CChatRoom_IncomingChatMessage_Notification::message_no_bbcode() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.message_no_bbcode)
  return _internal_message_no_bbcode();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_IncomingChatMessage_Notification::set_message_no_bbcode(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 message_no_bbcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.message_no_bbcode)
}
inline std::string* CChatRoom_IncomingChatMessage_Notification::mutable_message_no_bbcode() {
  std::string* _s = _internal_mutable_message_no_bbcode();
  // @@protoc_insertion_point(field_mutable:CChatRoom_IncomingChatMessage_Notification.message_no_bbcode)
  return _s;
}
inline const std::string& CChatRoom_IncomingChatMessage_Notification::_internal_message_no_bbcode() const {
  return message_no_bbcode_.Get();
}
inline void CChatRoom_IncomingChatMessage_Notification::_internal_set_message_no_bbcode(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  message_no_bbcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_IncomingChatMessage_Notification::_internal_mutable_message_no_bbcode() {
  _has_bits_[0] |= 0x00000002u;
  return message_no_bbcode_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_IncomingChatMessage_Notification::release_message_no_bbcode() {
  // @@protoc_insertion_point(field_release:CChatRoom_IncomingChatMessage_Notification.message_no_bbcode)
  if (!_internal_has_message_no_bbcode()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  auto* p = message_no_bbcode_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (message_no_bbcode_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    message_no_bbcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_allocated_message_no_bbcode(std::string* message_no_bbcode) {
  if (message_no_bbcode != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  message_no_bbcode_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message_no_bbcode,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (message_no_bbcode_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    message_no_bbcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_IncomingChatMessage_Notification.message_no_bbcode)
}

// optional string chat_name = 10 [(.description) = "A name to use for the chat, intended for notifications"];
inline bool CChatRoom_IncomingChatMessage_Notification::_internal_has_chat_name() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_IncomingChatMessage_Notification::has_chat_name() const {
  return _internal_has_chat_name();
}
inline void CChatRoom_IncomingChatMessage_Notification::clear_chat_name() {
  chat_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CChatRoom_IncomingChatMessage_Notification::chat_name() const {
  // @@protoc_insertion_point(field_get:CChatRoom_IncomingChatMessage_Notification.chat_name)
  return _internal_chat_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_IncomingChatMessage_Notification::set_chat_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000004u;
 chat_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_IncomingChatMessage_Notification.chat_name)
}
inline std::string* CChatRoom_IncomingChatMessage_Notification::mutable_chat_name() {
  std::string* _s = _internal_mutable_chat_name();
  // @@protoc_insertion_point(field_mutable:CChatRoom_IncomingChatMessage_Notification.chat_name)
  return _s;
}
inline const std::string& CChatRoom_IncomingChatMessage_Notification::_internal_chat_name() const {
  return chat_name_.Get();
}
inline void CChatRoom_IncomingChatMessage_Notification::_internal_set_chat_name(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  chat_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_IncomingChatMessage_Notification::_internal_mutable_chat_name() {
  _has_bits_[0] |= 0x00000004u;
  return chat_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_IncomingChatMessage_Notification::release_chat_name() {
  // @@protoc_insertion_point(field_release:CChatRoom_IncomingChatMessage_Notification.chat_name)
  if (!_internal_has_chat_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  auto* p = chat_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (chat_name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    chat_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_IncomingChatMessage_Notification::set_allocated_chat_name(std::string* chat_name) {
  if (chat_name != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  chat_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), chat_name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (chat_name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    chat_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_IncomingChatMessage_Notification.chat_name)
}

// -------------------------------------------------------------------

// CChatRoom_ChatMessageModified_Notification_ChatMessage

// optional uint32 server_timestamp = 1;
inline bool CChatRoom_ChatMessageModified_Notification_ChatMessage::_internal_has_server_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_ChatMessageModified_Notification_ChatMessage::has_server_timestamp() const {
  return _internal_has_server_timestamp();
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::clear_server_timestamp() {
  server_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CChatRoom_ChatMessageModified_Notification_ChatMessage::_internal_server_timestamp() const {
  return server_timestamp_;
}
inline uint32_t CChatRoom_ChatMessageModified_Notification_ChatMessage::server_timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatMessageModified_Notification.ChatMessage.server_timestamp)
  return _internal_server_timestamp();
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::_internal_set_server_timestamp(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  server_timestamp_ = value;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::set_server_timestamp(uint32_t value) {
  _internal_set_server_timestamp(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ChatMessageModified_Notification.ChatMessage.server_timestamp)
}

// optional uint32 ordinal = 2;
inline bool CChatRoom_ChatMessageModified_Notification_ChatMessage::_internal_has_ordinal() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_ChatMessageModified_Notification_ChatMessage::has_ordinal() const {
  return _internal_has_ordinal();
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::clear_ordinal() {
  ordinal_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CChatRoom_ChatMessageModified_Notification_ChatMessage::_internal_ordinal() const {
  return ordinal_;
}
inline uint32_t CChatRoom_ChatMessageModified_Notification_ChatMessage::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatMessageModified_Notification.ChatMessage.ordinal)
  return _internal_ordinal();
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::_internal_set_ordinal(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  ordinal_ = value;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::set_ordinal(uint32_t value) {
  _internal_set_ordinal(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ChatMessageModified_Notification.ChatMessage.ordinal)
}

// optional bool deleted = 3;
inline bool CChatRoom_ChatMessageModified_Notification_ChatMessage::_internal_has_deleted() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_ChatMessageModified_Notification_ChatMessage::has_deleted() const {
  return _internal_has_deleted();
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::clear_deleted() {
  deleted_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CChatRoom_ChatMessageModified_Notification_ChatMessage::_internal_deleted() const {
  return deleted_;
}
inline bool CChatRoom_ChatMessageModified_Notification_ChatMessage::deleted() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatMessageModified_Notification.ChatMessage.deleted)
  return _internal_deleted();
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::_internal_set_deleted(bool value) {
  _has_bits_[0] |= 0x00000004u;
  deleted_ = value;
}
inline void CChatRoom_ChatMessageModified_Notification_ChatMessage::set_deleted(bool value) {
  _internal_set_deleted(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ChatMessageModified_Notification.ChatMessage.deleted)
}

// -------------------------------------------------------------------

// CChatRoom_ChatMessageModified_Notification

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_ChatMessageModified_Notification::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_ChatMessageModified_Notification::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_ChatMessageModified_Notification::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_ChatMessageModified_Notification::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_ChatMessageModified_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatMessageModified_Notification.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_ChatMessageModified_Notification::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_ChatMessageModified_Notification::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ChatMessageModified_Notification.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_ChatMessageModified_Notification::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_ChatMessageModified_Notification::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_ChatMessageModified_Notification::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_ChatMessageModified_Notification::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_ChatMessageModified_Notification::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatMessageModified_Notification.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_ChatMessageModified_Notification::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_id_ = value;
}
inline void CChatRoom_ChatMessageModified_Notification::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ChatMessageModified_Notification.chat_id)
}

// repeated .CChatRoom_ChatMessageModified_Notification.ChatMessage messages = 3;
inline int CChatRoom_ChatMessageModified_Notification::_internal_messages_size() const {
  return messages_.size();
}
inline int CChatRoom_ChatMessageModified_Notification::messages_size() const {
  return _internal_messages_size();
}
inline void CChatRoom_ChatMessageModified_Notification::clear_messages() {
  messages_.Clear();
}
inline ::CChatRoom_ChatMessageModified_Notification_ChatMessage* CChatRoom_ChatMessageModified_Notification::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_ChatMessageModified_Notification.messages)
  return messages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_ChatMessageModified_Notification_ChatMessage >*
CChatRoom_ChatMessageModified_Notification::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_ChatMessageModified_Notification.messages)
  return &messages_;
}
inline const ::CChatRoom_ChatMessageModified_Notification_ChatMessage& CChatRoom_ChatMessageModified_Notification::_internal_messages(int index) const {
  return messages_.Get(index);
}
inline const ::CChatRoom_ChatMessageModified_Notification_ChatMessage& CChatRoom_ChatMessageModified_Notification::messages(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatMessageModified_Notification.messages)
  return _internal_messages(index);
}
inline ::CChatRoom_ChatMessageModified_Notification_ChatMessage* CChatRoom_ChatMessageModified_Notification::_internal_add_messages() {
  return messages_.Add();
}
inline ::CChatRoom_ChatMessageModified_Notification_ChatMessage* CChatRoom_ChatMessageModified_Notification::add_messages() {
  ::CChatRoom_ChatMessageModified_Notification_ChatMessage* _add = _internal_add_messages();
  // @@protoc_insertion_point(field_add:CChatRoom_ChatMessageModified_Notification.messages)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoom_ChatMessageModified_Notification_ChatMessage >&
CChatRoom_ChatMessageModified_Notification::messages() const {
  // @@protoc_insertion_point(field_list:CChatRoom_ChatMessageModified_Notification.messages)
  return messages_;
}

// -------------------------------------------------------------------

// CChatRoom_MemberStateChange_Notification

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_MemberStateChange_Notification::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_MemberStateChange_Notification::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_MemberStateChange_Notification::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_MemberStateChange_Notification::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_MemberStateChange_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MemberStateChange_Notification.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_MemberStateChange_Notification::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_MemberStateChange_Notification::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_MemberStateChange_Notification.chat_group_id)
}

// optional .CChatRoomMember member = 2;
inline bool CChatRoom_MemberStateChange_Notification::_internal_has_member() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || member_ != nullptr);
  return value;
}
inline bool CChatRoom_MemberStateChange_Notification::has_member() const {
  return _internal_has_member();
}
inline void CChatRoom_MemberStateChange_Notification::clear_member() {
  if (member_ != nullptr) member_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatRoomMember& CChatRoom_MemberStateChange_Notification::_internal_member() const {
  const ::CChatRoomMember* p = member_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoomMember&>(
      ::_CChatRoomMember_default_instance_);
}
inline const ::CChatRoomMember& CChatRoom_MemberStateChange_Notification::member() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MemberStateChange_Notification.member)
  return _internal_member();
}
inline void CChatRoom_MemberStateChange_Notification::unsafe_arena_set_allocated_member(
    ::CChatRoomMember* member) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(member_);
  }
  member_ = member;
  if (member) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_MemberStateChange_Notification.member)
}
inline ::CChatRoomMember* CChatRoom_MemberStateChange_Notification::release_member() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomMember* temp = member_;
  member_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoomMember* CChatRoom_MemberStateChange_Notification::unsafe_arena_release_member() {
  // @@protoc_insertion_point(field_release:CChatRoom_MemberStateChange_Notification.member)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomMember* temp = member_;
  member_ = nullptr;
  return temp;
}
inline ::CChatRoomMember* CChatRoom_MemberStateChange_Notification::_internal_mutable_member() {
  _has_bits_[0] |= 0x00000001u;
  if (member_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoomMember>(GetArenaForAllocation());
    member_ = p;
  }
  return member_;
}
inline ::CChatRoomMember* CChatRoom_MemberStateChange_Notification::mutable_member() {
  ::CChatRoomMember* _msg = _internal_mutable_member();
  // @@protoc_insertion_point(field_mutable:CChatRoom_MemberStateChange_Notification.member)
  return _msg;
}
inline void CChatRoom_MemberStateChange_Notification::set_allocated_member(::CChatRoomMember* member) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete member_;
  }
  if (member) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoomMember>::GetOwningArena(member);
    if (message_arena != submessage_arena) {
      member = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, member, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  member_ = member;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_MemberStateChange_Notification.member)
}

// optional .EChatRoomMemberStateChange change = 3 [default = k_EChatRoomMemberStateChange_Invalid];
inline bool CChatRoom_MemberStateChange_Notification::_internal_has_change() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_MemberStateChange_Notification::has_change() const {
  return _internal_has_change();
}
inline void CChatRoom_MemberStateChange_Notification::clear_change() {
  change_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::EChatRoomMemberStateChange CChatRoom_MemberStateChange_Notification::_internal_change() const {
  return static_cast< ::EChatRoomMemberStateChange >(change_);
}
inline ::EChatRoomMemberStateChange CChatRoom_MemberStateChange_Notification::change() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MemberStateChange_Notification.change)
  return _internal_change();
}
inline void CChatRoom_MemberStateChange_Notification::_internal_set_change(::EChatRoomMemberStateChange value) {
  assert(::EChatRoomMemberStateChange_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  change_ = value;
}
inline void CChatRoom_MemberStateChange_Notification::set_change(::EChatRoomMemberStateChange value) {
  _internal_set_change(value);
  // @@protoc_insertion_point(field_set:CChatRoom_MemberStateChange_Notification.change)
}

// -------------------------------------------------------------------

// CChatRoom_ChatRoomHeaderState_Notification

// optional .CChatRoomGroupHeaderState header_state = 1;
inline bool CChatRoom_ChatRoomHeaderState_Notification::_internal_has_header_state() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || header_state_ != nullptr);
  return value;
}
inline bool CChatRoom_ChatRoomHeaderState_Notification::has_header_state() const {
  return _internal_has_header_state();
}
inline void CChatRoom_ChatRoomHeaderState_Notification::clear_header_state() {
  if (header_state_ != nullptr) header_state_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatRoomGroupHeaderState& CChatRoom_ChatRoomHeaderState_Notification::_internal_header_state() const {
  const ::CChatRoomGroupHeaderState* p = header_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoomGroupHeaderState&>(
      ::_CChatRoomGroupHeaderState_default_instance_);
}
inline const ::CChatRoomGroupHeaderState& CChatRoom_ChatRoomHeaderState_Notification::header_state() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatRoomHeaderState_Notification.header_state)
  return _internal_header_state();
}
inline void CChatRoom_ChatRoomHeaderState_Notification::unsafe_arena_set_allocated_header_state(
    ::CChatRoomGroupHeaderState* header_state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_state_);
  }
  header_state_ = header_state;
  if (header_state) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoom_ChatRoomHeaderState_Notification.header_state)
}
inline ::CChatRoomGroupHeaderState* CChatRoom_ChatRoomHeaderState_Notification::release_header_state() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomGroupHeaderState* temp = header_state_;
  header_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoomGroupHeaderState* CChatRoom_ChatRoomHeaderState_Notification::unsafe_arena_release_header_state() {
  // @@protoc_insertion_point(field_release:CChatRoom_ChatRoomHeaderState_Notification.header_state)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomGroupHeaderState* temp = header_state_;
  header_state_ = nullptr;
  return temp;
}
inline ::CChatRoomGroupHeaderState* CChatRoom_ChatRoomHeaderState_Notification::_internal_mutable_header_state() {
  _has_bits_[0] |= 0x00000001u;
  if (header_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoomGroupHeaderState>(GetArenaForAllocation());
    header_state_ = p;
  }
  return header_state_;
}
inline ::CChatRoomGroupHeaderState* CChatRoom_ChatRoomHeaderState_Notification::mutable_header_state() {
  ::CChatRoomGroupHeaderState* _msg = _internal_mutable_header_state();
  // @@protoc_insertion_point(field_mutable:CChatRoom_ChatRoomHeaderState_Notification.header_state)
  return _msg;
}
inline void CChatRoom_ChatRoomHeaderState_Notification::set_allocated_header_state(::CChatRoomGroupHeaderState* header_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete header_state_;
  }
  if (header_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoomGroupHeaderState>::GetOwningArena(header_state);
    if (message_arena != submessage_arena) {
      header_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  header_state_ = header_state;
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_ChatRoomHeaderState_Notification.header_state)
}

// -------------------------------------------------------------------

// CChatRoom_ChatRoomGroupRoomsChange_Notification

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_ChatRoomGroupRoomsChange_Notification::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_ChatRoomGroupRoomsChange_Notification::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_ChatRoomGroupRoomsChange_Notification::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_ChatRoomGroupRoomsChange_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_group_id_ = value;
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_group_id)
}

// optional uint64 default_chat_id = 2;
inline bool CChatRoom_ChatRoomGroupRoomsChange_Notification::_internal_has_default_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_ChatRoomGroupRoomsChange_Notification::has_default_chat_id() const {
  return _internal_has_default_chat_id();
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::clear_default_chat_id() {
  default_chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_ChatRoomGroupRoomsChange_Notification::_internal_default_chat_id() const {
  return default_chat_id_;
}
inline uint64_t CChatRoom_ChatRoomGroupRoomsChange_Notification::default_chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatRoomGroupRoomsChange_Notification.default_chat_id)
  return _internal_default_chat_id();
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::_internal_set_default_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  default_chat_id_ = value;
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::set_default_chat_id(uint64_t value) {
  _internal_set_default_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_ChatRoomGroupRoomsChange_Notification.default_chat_id)
}

// repeated .CChatRoomState chat_rooms = 3;
inline int CChatRoom_ChatRoomGroupRoomsChange_Notification::_internal_chat_rooms_size() const {
  return chat_rooms_.size();
}
inline int CChatRoom_ChatRoomGroupRoomsChange_Notification::chat_rooms_size() const {
  return _internal_chat_rooms_size();
}
inline void CChatRoom_ChatRoomGroupRoomsChange_Notification::clear_chat_rooms() {
  chat_rooms_.Clear();
}
inline ::CChatRoomState* CChatRoom_ChatRoomGroupRoomsChange_Notification::mutable_chat_rooms(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_rooms)
  return chat_rooms_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState >*
CChatRoom_ChatRoomGroupRoomsChange_Notification::mutable_chat_rooms() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_rooms)
  return &chat_rooms_;
}
inline const ::CChatRoomState& CChatRoom_ChatRoomGroupRoomsChange_Notification::_internal_chat_rooms(int index) const {
  return chat_rooms_.Get(index);
}
inline const ::CChatRoomState& CChatRoom_ChatRoomGroupRoomsChange_Notification::chat_rooms(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_rooms)
  return _internal_chat_rooms(index);
}
inline ::CChatRoomState* CChatRoom_ChatRoomGroupRoomsChange_Notification::_internal_add_chat_rooms() {
  return chat_rooms_.Add();
}
inline ::CChatRoomState* CChatRoom_ChatRoomGroupRoomsChange_Notification::add_chat_rooms() {
  ::CChatRoomState* _add = _internal_add_chat_rooms();
  // @@protoc_insertion_point(field_add:CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_rooms)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomState >&
CChatRoom_ChatRoomGroupRoomsChange_Notification::chat_rooms() const {
  // @@protoc_insertion_point(field_list:CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_rooms)
  return chat_rooms_;
}

// -------------------------------------------------------------------

// CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification

// optional uint64 chat_id = 1;
inline bool CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  chat_id_ = value;
}
inline void CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.chat_id)
}

// optional uint64 chat_group_id = 2;
inline bool CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.chat_group_id)
}

// -------------------------------------------------------------------

// ChatRoomClient_NotifyChatGroupUserStateChanged_Notification

// optional uint64 chat_group_id = 1;
inline bool ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.chat_group_id)
  return _internal_chat_group_id();
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  chat_group_id_ = value;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.chat_group_id)
}

// optional .CUserChatRoomGroupState user_chat_group_state = 2;
inline bool ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::_internal_has_user_chat_group_state() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || user_chat_group_state_ != nullptr);
  return value;
}
inline bool ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::has_user_chat_group_state() const {
  return _internal_has_user_chat_group_state();
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::clear_user_chat_group_state() {
  if (user_chat_group_state_ != nullptr) user_chat_group_state_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CUserChatRoomGroupState& ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::_internal_user_chat_group_state() const {
  const ::CUserChatRoomGroupState* p = user_chat_group_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::CUserChatRoomGroupState&>(
      ::_CUserChatRoomGroupState_default_instance_);
}
inline const ::CUserChatRoomGroupState& ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::user_chat_group_state() const {
  // @@protoc_insertion_point(field_get:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.user_chat_group_state)
  return _internal_user_chat_group_state();
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::unsafe_arena_set_allocated_user_chat_group_state(
    ::CUserChatRoomGroupState* user_chat_group_state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(user_chat_group_state_);
  }
  user_chat_group_state_ = user_chat_group_state;
  if (user_chat_group_state) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.user_chat_group_state)
}
inline ::CUserChatRoomGroupState* ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::release_user_chat_group_state() {
  _has_bits_[0] &= ~0x00000001u;
  ::CUserChatRoomGroupState* temp = user_chat_group_state_;
  user_chat_group_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CUserChatRoomGroupState* ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::unsafe_arena_release_user_chat_group_state() {
  // @@protoc_insertion_point(field_release:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.user_chat_group_state)
  _has_bits_[0] &= ~0x00000001u;
  ::CUserChatRoomGroupState* temp = user_chat_group_state_;
  user_chat_group_state_ = nullptr;
  return temp;
}
inline ::CUserChatRoomGroupState* ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::_internal_mutable_user_chat_group_state() {
  _has_bits_[0] |= 0x00000001u;
  if (user_chat_group_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserChatRoomGroupState>(GetArenaForAllocation());
    user_chat_group_state_ = p;
  }
  return user_chat_group_state_;
}
inline ::CUserChatRoomGroupState* ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::mutable_user_chat_group_state() {
  ::CUserChatRoomGroupState* _msg = _internal_mutable_user_chat_group_state();
  // @@protoc_insertion_point(field_mutable:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.user_chat_group_state)
  return _msg;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::set_allocated_user_chat_group_state(::CUserChatRoomGroupState* user_chat_group_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete user_chat_group_state_;
  }
  if (user_chat_group_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CUserChatRoomGroupState>::GetOwningArena(user_chat_group_state);
    if (message_arena != submessage_arena) {
      user_chat_group_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_chat_group_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  user_chat_group_state_ = user_chat_group_state;
  // @@protoc_insertion_point(field_set_allocated:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.user_chat_group_state)
}

// optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 3;
inline bool ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::_internal_has_group_summary() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || group_summary_ != nullptr);
  return value;
}
inline bool ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::has_group_summary() const {
  return _internal_has_group_summary();
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::clear_group_summary() {
  if (group_summary_ != nullptr) group_summary_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::_internal_group_summary() const {
  const ::CChatRoom_GetChatRoomGroupSummary_Response* p = group_summary_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoom_GetChatRoomGroupSummary_Response&>(
      ::_CChatRoom_GetChatRoomGroupSummary_Response_default_instance_);
}
inline const ::CChatRoom_GetChatRoomGroupSummary_Response& ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::group_summary() const {
  // @@protoc_insertion_point(field_get:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.group_summary)
  return _internal_group_summary();
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::unsafe_arena_set_allocated_group_summary(
    ::CChatRoom_GetChatRoomGroupSummary_Response* group_summary) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(group_summary_);
  }
  group_summary_ = group_summary;
  if (group_summary) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.group_summary)
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::release_group_summary() {
  _has_bits_[0] &= ~0x00000002u;
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = group_summary_;
  group_summary_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::unsafe_arena_release_group_summary() {
  // @@protoc_insertion_point(field_release:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.group_summary)
  _has_bits_[0] &= ~0x00000002u;
  ::CChatRoom_GetChatRoomGroupSummary_Response* temp = group_summary_;
  group_summary_ = nullptr;
  return temp;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::_internal_mutable_group_summary() {
  _has_bits_[0] |= 0x00000002u;
  if (group_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoom_GetChatRoomGroupSummary_Response>(GetArenaForAllocation());
    group_summary_ = p;
  }
  return group_summary_;
}
inline ::CChatRoom_GetChatRoomGroupSummary_Response* ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::mutable_group_summary() {
  ::CChatRoom_GetChatRoomGroupSummary_Response* _msg = _internal_mutable_group_summary();
  // @@protoc_insertion_point(field_mutable:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.group_summary)
  return _msg;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::set_allocated_group_summary(::CChatRoom_GetChatRoomGroupSummary_Response* group_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete group_summary_;
  }
  if (group_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoom_GetChatRoomGroupSummary_Response>::GetOwningArena(group_summary);
    if (message_arena != submessage_arena) {
      group_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_summary, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  group_summary_ = group_summary;
  // @@protoc_insertion_point(field_set_allocated:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.group_summary)
}

// optional .EChatRoomMemberStateChange user_action = 4 [default = k_EChatRoomMemberStateChange_Invalid];
inline bool ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::_internal_has_user_action() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::has_user_action() const {
  return _internal_has_user_action();
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::clear_user_action() {
  user_action_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::EChatRoomMemberStateChange ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::_internal_user_action() const {
  return static_cast< ::EChatRoomMemberStateChange >(user_action_);
}
inline ::EChatRoomMemberStateChange ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::user_action() const {
  // @@protoc_insertion_point(field_get:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.user_action)
  return _internal_user_action();
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::_internal_set_user_action(::EChatRoomMemberStateChange value) {
  assert(::EChatRoomMemberStateChange_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  user_action_ = value;
}
inline void ChatRoomClient_NotifyChatGroupUserStateChanged_Notification::set_user_action(::EChatRoomMemberStateChange value) {
  _internal_set_user_action(value);
  // @@protoc_insertion_point(field_set:ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.user_action)
}

// -------------------------------------------------------------------

// ChatRoomClient_NotifyChatRoomDisconnect_Notification

// repeated uint64 chat_group_ids = 1;
inline int ChatRoomClient_NotifyChatRoomDisconnect_Notification::_internal_chat_group_ids_size() const {
  return chat_group_ids_.size();
}
inline int ChatRoomClient_NotifyChatRoomDisconnect_Notification::chat_group_ids_size() const {
  return _internal_chat_group_ids_size();
}
inline void ChatRoomClient_NotifyChatRoomDisconnect_Notification::clear_chat_group_ids() {
  chat_group_ids_.Clear();
}
inline uint64_t ChatRoomClient_NotifyChatRoomDisconnect_Notification::_internal_chat_group_ids(int index) const {
  return chat_group_ids_.Get(index);
}
inline uint64_t ChatRoomClient_NotifyChatRoomDisconnect_Notification::chat_group_ids(int index) const {
  // @@protoc_insertion_point(field_get:ChatRoomClient_NotifyChatRoomDisconnect_Notification.chat_group_ids)
  return _internal_chat_group_ids(index);
}
inline void ChatRoomClient_NotifyChatRoomDisconnect_Notification::set_chat_group_ids(int index, uint64_t value) {
  chat_group_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ChatRoomClient_NotifyChatRoomDisconnect_Notification.chat_group_ids)
}
inline void ChatRoomClient_NotifyChatRoomDisconnect_Notification::_internal_add_chat_group_ids(uint64_t value) {
  chat_group_ids_.Add(value);
}
inline void ChatRoomClient_NotifyChatRoomDisconnect_Notification::add_chat_group_ids(uint64_t value) {
  _internal_add_chat_group_ids(value);
  // @@protoc_insertion_point(field_add:ChatRoomClient_NotifyChatRoomDisconnect_Notification.chat_group_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
ChatRoomClient_NotifyChatRoomDisconnect_Notification::_internal_chat_group_ids() const {
  return chat_group_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
ChatRoomClient_NotifyChatRoomDisconnect_Notification::chat_group_ids() const {
  // @@protoc_insertion_point(field_list:ChatRoomClient_NotifyChatRoomDisconnect_Notification.chat_group_ids)
  return _internal_chat_group_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
ChatRoomClient_NotifyChatRoomDisconnect_Notification::_internal_mutable_chat_group_ids() {
  return &chat_group_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
ChatRoomClient_NotifyChatRoomDisconnect_Notification::mutable_chat_group_ids() {
  // @@protoc_insertion_point(field_mutable_list:ChatRoomClient_NotifyChatRoomDisconnect_Notification.chat_group_ids)
  return _internal_mutable_chat_group_ids();
}

// -------------------------------------------------------------------

// CChatRoomMemberListView

// optional int32 start = 3;
inline bool CChatRoomMemberListView::_internal_has_start() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoomMemberListView::has_start() const {
  return _internal_has_start();
}
inline void CChatRoomMemberListView::clear_start() {
  start_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline int32_t CChatRoomMemberListView::_internal_start() const {
  return start_;
}
inline int32_t CChatRoomMemberListView::start() const {
  // @@protoc_insertion_point(field_get:CChatRoomMemberListView.start)
  return _internal_start();
}
inline void CChatRoomMemberListView::_internal_set_start(int32_t value) {
  _has_bits_[0] |= 0x00000001u;
  start_ = value;
}
inline void CChatRoomMemberListView::set_start(int32_t value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:CChatRoomMemberListView.start)
}

// optional int32 end = 4;
inline bool CChatRoomMemberListView::_internal_has_end() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoomMemberListView::has_end() const {
  return _internal_has_end();
}
inline void CChatRoomMemberListView::clear_end() {
  end_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline int32_t CChatRoomMemberListView::_internal_end() const {
  return end_;
}
inline int32_t CChatRoomMemberListView::end() const {
  // @@protoc_insertion_point(field_get:CChatRoomMemberListView.end)
  return _internal_end();
}
inline void CChatRoomMemberListView::_internal_set_end(int32_t value) {
  _has_bits_[0] |= 0x00000002u;
  end_ = value;
}
inline void CChatRoomMemberListView::set_end(int32_t value) {
  _internal_set_end(value);
  // @@protoc_insertion_point(field_set:CChatRoomMemberListView.end)
}

// optional int32 total_count = 5;
inline bool CChatRoomMemberListView::_internal_has_total_count() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoomMemberListView::has_total_count() const {
  return _internal_has_total_count();
}
inline void CChatRoomMemberListView::clear_total_count() {
  total_count_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline int32_t CChatRoomMemberListView::_internal_total_count() const {
  return total_count_;
}
inline int32_t CChatRoomMemberListView::total_count() const {
  // @@protoc_insertion_point(field_get:CChatRoomMemberListView.total_count)
  return _internal_total_count();
}
inline void CChatRoomMemberListView::_internal_set_total_count(int32_t value) {
  _has_bits_[0] |= 0x00000004u;
  total_count_ = value;
}
inline void CChatRoomMemberListView::set_total_count(int32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:CChatRoomMemberListView.total_count)
}

// optional int32 client_changenumber = 6 [(.description) = "Value sent by the client on the last UpdateMemberListView call. "];
inline bool CChatRoomMemberListView::_internal_has_client_changenumber() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoomMemberListView::has_client_changenumber() const {
  return _internal_has_client_changenumber();
}
inline void CChatRoomMemberListView::clear_client_changenumber() {
  client_changenumber_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline int32_t CChatRoomMemberListView::_internal_client_changenumber() const {
  return client_changenumber_;
}
inline int32_t CChatRoomMemberListView::client_changenumber() const {
  // @@protoc_insertion_point(field_get:CChatRoomMemberListView.client_changenumber)
  return _internal_client_changenumber();
}
inline void CChatRoomMemberListView::_internal_set_client_changenumber(int32_t value) {
  _has_bits_[0] |= 0x00000008u;
  client_changenumber_ = value;
}
inline void CChatRoomMemberListView::set_client_changenumber(int32_t value) {
  _internal_set_client_changenumber(value);
  // @@protoc_insertion_point(field_set:CChatRoomMemberListView.client_changenumber)
}

// optional int32 server_changenumber = 7 [(.description) = "Value incremented by the server on each MemberListViewUpdated call. "];
inline bool CChatRoomMemberListView::_internal_has_server_changenumber() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatRoomMemberListView::has_server_changenumber() const {
  return _internal_has_server_changenumber();
}
inline void CChatRoomMemberListView::clear_server_changenumber() {
  server_changenumber_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline int32_t CChatRoomMemberListView::_internal_server_changenumber() const {
  return server_changenumber_;
}
inline int32_t CChatRoomMemberListView::server_changenumber() const {
  // @@protoc_insertion_point(field_get:CChatRoomMemberListView.server_changenumber)
  return _internal_server_changenumber();
}
inline void CChatRoomMemberListView::_internal_set_server_changenumber(int32_t value) {
  _has_bits_[0] |= 0x00000010u;
  server_changenumber_ = value;
}
inline void CChatRoomMemberListView::set_server_changenumber(int32_t value) {
  _internal_set_server_changenumber(value);
  // @@protoc_insertion_point(field_set:CChatRoomMemberListView.server_changenumber)
}

// -------------------------------------------------------------------

// CChatRoomMemberSummaryCounts

// optional int32 ingame = 1;
inline bool CChatRoomMemberSummaryCounts::_internal_has_ingame() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoomMemberSummaryCounts::has_ingame() const {
  return _internal_has_ingame();
}
inline void CChatRoomMemberSummaryCounts::clear_ingame() {
  ingame_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline int32_t CChatRoomMemberSummaryCounts::_internal_ingame() const {
  return ingame_;
}
inline int32_t CChatRoomMemberSummaryCounts::ingame() const {
  // @@protoc_insertion_point(field_get:CChatRoomMemberSummaryCounts.ingame)
  return _internal_ingame();
}
inline void CChatRoomMemberSummaryCounts::_internal_set_ingame(int32_t value) {
  _has_bits_[0] |= 0x00000001u;
  ingame_ = value;
}
inline void CChatRoomMemberSummaryCounts::set_ingame(int32_t value) {
  _internal_set_ingame(value);
  // @@protoc_insertion_point(field_set:CChatRoomMemberSummaryCounts.ingame)
}

// optional int32 online = 2;
inline bool CChatRoomMemberSummaryCounts::_internal_has_online() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoomMemberSummaryCounts::has_online() const {
  return _internal_has_online();
}
inline void CChatRoomMemberSummaryCounts::clear_online() {
  online_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline int32_t CChatRoomMemberSummaryCounts::_internal_online() const {
  return online_;
}
inline int32_t CChatRoomMemberSummaryCounts::online() const {
  // @@protoc_insertion_point(field_get:CChatRoomMemberSummaryCounts.online)
  return _internal_online();
}
inline void CChatRoomMemberSummaryCounts::_internal_set_online(int32_t value) {
  _has_bits_[0] |= 0x00000002u;
  online_ = value;
}
inline void CChatRoomMemberSummaryCounts::set_online(int32_t value) {
  _internal_set_online(value);
  // @@protoc_insertion_point(field_set:CChatRoomMemberSummaryCounts.online)
}

// optional int32 offline = 3;
inline bool CChatRoomMemberSummaryCounts::_internal_has_offline() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoomMemberSummaryCounts::has_offline() const {
  return _internal_has_offline();
}
inline void CChatRoomMemberSummaryCounts::clear_offline() {
  offline_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline int32_t CChatRoomMemberSummaryCounts::_internal_offline() const {
  return offline_;
}
inline int32_t CChatRoomMemberSummaryCounts::offline() const {
  // @@protoc_insertion_point(field_get:CChatRoomMemberSummaryCounts.offline)
  return _internal_offline();
}
inline void CChatRoomMemberSummaryCounts::_internal_set_offline(int32_t value) {
  _has_bits_[0] |= 0x00000004u;
  offline_ = value;
}
inline void CChatRoomMemberSummaryCounts::set_offline(int32_t value) {
  _internal_set_offline(value);
  // @@protoc_insertion_point(field_set:CChatRoomMemberSummaryCounts.offline)
}

// -------------------------------------------------------------------

// CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry

// optional int32 rank = 1;
inline bool CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::_internal_has_rank() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::has_rank() const {
  return _internal_has_rank();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::clear_rank() {
  rank_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline int32_t CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::_internal_rank() const {
  return rank_;
}
inline int32_t CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::rank() const {
  // @@protoc_insertion_point(field_get:CChatRoomClient_MemberListViewUpdated_Notification.MemberListViewEntry.rank)
  return _internal_rank();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::_internal_set_rank(int32_t value) {
  _has_bits_[0] |= 0x00000002u;
  rank_ = value;
}
inline void CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::set_rank(int32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:CChatRoomClient_MemberListViewUpdated_Notification.MemberListViewEntry.rank)
}

// optional uint32 accountid = 2;
inline bool CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::_internal_has_accountid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::has_accountid() const {
  return _internal_has_accountid();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::clear_accountid() {
  accountid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::_internal_accountid() const {
  return accountid_;
}
inline uint32_t CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::accountid() const {
  // @@protoc_insertion_point(field_get:CChatRoomClient_MemberListViewUpdated_Notification.MemberListViewEntry.accountid)
  return _internal_accountid();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::_internal_set_accountid(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  accountid_ = value;
}
inline void CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::set_accountid(uint32_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:CChatRoomClient_MemberListViewUpdated_Notification.MemberListViewEntry.accountid)
}

// optional .CMsgClientPersonaState.Friend persona = 3;
inline bool CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::_internal_has_persona() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || persona_ != nullptr);
  return value;
}
inline bool CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::has_persona() const {
  return _internal_has_persona();
}
inline const ::CMsgClientPersonaState_Friend& CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::_internal_persona() const {
  const ::CMsgClientPersonaState_Friend* p = persona_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgClientPersonaState_Friend&>(
      ::_CMsgClientPersonaState_Friend_default_instance_);
}
inline const ::CMsgClientPersonaState_Friend& CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::persona() const {
  // @@protoc_insertion_point(field_get:CChatRoomClient_MemberListViewUpdated_Notification.MemberListViewEntry.persona)
  return _internal_persona();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::unsafe_arena_set_allocated_persona(
    ::CMsgClientPersonaState_Friend* persona) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(persona_);
  }
  persona_ = persona;
  if (persona) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoomClient_MemberListViewUpdated_Notification.MemberListViewEntry.persona)
}
inline ::CMsgClientPersonaState_Friend* CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::release_persona() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgClientPersonaState_Friend* temp = persona_;
  persona_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgClientPersonaState_Friend* CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::unsafe_arena_release_persona() {
  // @@protoc_insertion_point(field_release:CChatRoomClient_MemberListViewUpdated_Notification.MemberListViewEntry.persona)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgClientPersonaState_Friend* temp = persona_;
  persona_ = nullptr;
  return temp;
}
inline ::CMsgClientPersonaState_Friend* CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::_internal_mutable_persona() {
  _has_bits_[0] |= 0x00000001u;
  if (persona_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgClientPersonaState_Friend>(GetArenaForAllocation());
    persona_ = p;
  }
  return persona_;
}
inline ::CMsgClientPersonaState_Friend* CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::mutable_persona() {
  ::CMsgClientPersonaState_Friend* _msg = _internal_mutable_persona();
  // @@protoc_insertion_point(field_mutable:CChatRoomClient_MemberListViewUpdated_Notification.MemberListViewEntry.persona)
  return _msg;
}
inline void CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry::set_allocated_persona(::CMsgClientPersonaState_Friend* persona) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(persona_);
  }
  if (persona) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(persona));
    if (message_arena != submessage_arena) {
      persona = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, persona, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  persona_ = persona;
  // @@protoc_insertion_point(field_set_allocated:CChatRoomClient_MemberListViewUpdated_Notification.MemberListViewEntry.persona)
}

// -------------------------------------------------------------------

// CChatRoomClient_MemberListViewUpdated_Notification

// optional uint64 chat_group_id = 1;
inline bool CChatRoomClient_MemberListViewUpdated_Notification::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoomClient_MemberListViewUpdated_Notification::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoomClient_MemberListViewUpdated_Notification::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoomClient_MemberListViewUpdated_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoomClient_MemberListViewUpdated_Notification.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  chat_group_id_ = value;
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoomClient_MemberListViewUpdated_Notification.chat_group_id)
}

// optional uint64 view_id = 2 [(.description) = "Thew view_id supplied when the client created the view. "];
inline bool CChatRoomClient_MemberListViewUpdated_Notification::_internal_has_view_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoomClient_MemberListViewUpdated_Notification::has_view_id() const {
  return _internal_has_view_id();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::clear_view_id() {
  view_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CChatRoomClient_MemberListViewUpdated_Notification::_internal_view_id() const {
  return view_id_;
}
inline uint64_t CChatRoomClient_MemberListViewUpdated_Notification::view_id() const {
  // @@protoc_insertion_point(field_get:CChatRoomClient_MemberListViewUpdated_Notification.view_id)
  return _internal_view_id();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::_internal_set_view_id(uint64_t value) {
  _has_bits_[0] |= 0x00000008u;
  view_id_ = value;
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::set_view_id(uint64_t value) {
  _internal_set_view_id(value);
  // @@protoc_insertion_point(field_set:CChatRoomClient_MemberListViewUpdated_Notification.view_id)
}

// optional .CChatRoomMemberListView view = 3;
inline bool CChatRoomClient_MemberListViewUpdated_Notification::_internal_has_view() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || view_ != nullptr);
  return value;
}
inline bool CChatRoomClient_MemberListViewUpdated_Notification::has_view() const {
  return _internal_has_view();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::clear_view() {
  if (view_ != nullptr) view_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatRoomMemberListView& CChatRoomClient_MemberListViewUpdated_Notification::_internal_view() const {
  const ::CChatRoomMemberListView* p = view_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoomMemberListView&>(
      ::_CChatRoomMemberListView_default_instance_);
}
inline const ::CChatRoomMemberListView& CChatRoomClient_MemberListViewUpdated_Notification::view() const {
  // @@protoc_insertion_point(field_get:CChatRoomClient_MemberListViewUpdated_Notification.view)
  return _internal_view();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::unsafe_arena_set_allocated_view(
    ::CChatRoomMemberListView* view) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(view_);
  }
  view_ = view;
  if (view) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoomClient_MemberListViewUpdated_Notification.view)
}
inline ::CChatRoomMemberListView* CChatRoomClient_MemberListViewUpdated_Notification::release_view() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomMemberListView* temp = view_;
  view_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoomMemberListView* CChatRoomClient_MemberListViewUpdated_Notification::unsafe_arena_release_view() {
  // @@protoc_insertion_point(field_release:CChatRoomClient_MemberListViewUpdated_Notification.view)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatRoomMemberListView* temp = view_;
  view_ = nullptr;
  return temp;
}
inline ::CChatRoomMemberListView* CChatRoomClient_MemberListViewUpdated_Notification::_internal_mutable_view() {
  _has_bits_[0] |= 0x00000001u;
  if (view_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoomMemberListView>(GetArenaForAllocation());
    view_ = p;
  }
  return view_;
}
inline ::CChatRoomMemberListView* CChatRoomClient_MemberListViewUpdated_Notification::mutable_view() {
  ::CChatRoomMemberListView* _msg = _internal_mutable_view();
  // @@protoc_insertion_point(field_mutable:CChatRoomClient_MemberListViewUpdated_Notification.view)
  return _msg;
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::set_allocated_view(::CChatRoomMemberListView* view) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete view_;
  }
  if (view) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoomMemberListView>::GetOwningArena(view);
    if (message_arena != submessage_arena) {
      view = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, view, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  view_ = view;
  // @@protoc_insertion_point(field_set_allocated:CChatRoomClient_MemberListViewUpdated_Notification.view)
}

// repeated .CChatRoomClient_MemberListViewUpdated_Notification.MemberListViewEntry members = 4;
inline int CChatRoomClient_MemberListViewUpdated_Notification::_internal_members_size() const {
  return members_.size();
}
inline int CChatRoomClient_MemberListViewUpdated_Notification::members_size() const {
  return _internal_members_size();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::clear_members() {
  members_.Clear();
}
inline ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry* CChatRoomClient_MemberListViewUpdated_Notification::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoomClient_MemberListViewUpdated_Notification.members)
  return members_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry >*
CChatRoomClient_MemberListViewUpdated_Notification::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomClient_MemberListViewUpdated_Notification.members)
  return &members_;
}
inline const ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry& CChatRoomClient_MemberListViewUpdated_Notification::_internal_members(int index) const {
  return members_.Get(index);
}
inline const ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry& CChatRoomClient_MemberListViewUpdated_Notification::members(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomClient_MemberListViewUpdated_Notification.members)
  return _internal_members(index);
}
inline ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry* CChatRoomClient_MemberListViewUpdated_Notification::_internal_add_members() {
  return members_.Add();
}
inline ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry* CChatRoomClient_MemberListViewUpdated_Notification::add_members() {
  ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry* _add = _internal_add_members();
  // @@protoc_insertion_point(field_add:CChatRoomClient_MemberListViewUpdated_Notification.members)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry >&
CChatRoomClient_MemberListViewUpdated_Notification::members() const {
  // @@protoc_insertion_point(field_list:CChatRoomClient_MemberListViewUpdated_Notification.members)
  return members_;
}

// optional uint32 status_flags = 5;
inline bool CChatRoomClient_MemberListViewUpdated_Notification::_internal_has_status_flags() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatRoomClient_MemberListViewUpdated_Notification::has_status_flags() const {
  return _internal_has_status_flags();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::clear_status_flags() {
  status_flags_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CChatRoomClient_MemberListViewUpdated_Notification::_internal_status_flags() const {
  return status_flags_;
}
inline uint32_t CChatRoomClient_MemberListViewUpdated_Notification::status_flags() const {
  // @@protoc_insertion_point(field_get:CChatRoomClient_MemberListViewUpdated_Notification.status_flags)
  return _internal_status_flags();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::_internal_set_status_flags(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  status_flags_ = value;
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::set_status_flags(uint32_t value) {
  _internal_set_status_flags(value);
  // @@protoc_insertion_point(field_set:CChatRoomClient_MemberListViewUpdated_Notification.status_flags)
}

// optional .CChatRoomMemberSummaryCounts member_summary = 6;
inline bool CChatRoomClient_MemberListViewUpdated_Notification::_internal_has_member_summary() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || member_summary_ != nullptr);
  return value;
}
inline bool CChatRoomClient_MemberListViewUpdated_Notification::has_member_summary() const {
  return _internal_has_member_summary();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::clear_member_summary() {
  if (member_summary_ != nullptr) member_summary_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CChatRoomMemberSummaryCounts& CChatRoomClient_MemberListViewUpdated_Notification::_internal_member_summary() const {
  const ::CChatRoomMemberSummaryCounts* p = member_summary_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatRoomMemberSummaryCounts&>(
      ::_CChatRoomMemberSummaryCounts_default_instance_);
}
inline const ::CChatRoomMemberSummaryCounts& CChatRoomClient_MemberListViewUpdated_Notification::member_summary() const {
  // @@protoc_insertion_point(field_get:CChatRoomClient_MemberListViewUpdated_Notification.member_summary)
  return _internal_member_summary();
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::unsafe_arena_set_allocated_member_summary(
    ::CChatRoomMemberSummaryCounts* member_summary) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(member_summary_);
  }
  member_summary_ = member_summary;
  if (member_summary) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatRoomClient_MemberListViewUpdated_Notification.member_summary)
}
inline ::CChatRoomMemberSummaryCounts* CChatRoomClient_MemberListViewUpdated_Notification::release_member_summary() {
  _has_bits_[0] &= ~0x00000002u;
  ::CChatRoomMemberSummaryCounts* temp = member_summary_;
  member_summary_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatRoomMemberSummaryCounts* CChatRoomClient_MemberListViewUpdated_Notification::unsafe_arena_release_member_summary() {
  // @@protoc_insertion_point(field_release:CChatRoomClient_MemberListViewUpdated_Notification.member_summary)
  _has_bits_[0] &= ~0x00000002u;
  ::CChatRoomMemberSummaryCounts* temp = member_summary_;
  member_summary_ = nullptr;
  return temp;
}
inline ::CChatRoomMemberSummaryCounts* CChatRoomClient_MemberListViewUpdated_Notification::_internal_mutable_member_summary() {
  _has_bits_[0] |= 0x00000002u;
  if (member_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatRoomMemberSummaryCounts>(GetArenaForAllocation());
    member_summary_ = p;
  }
  return member_summary_;
}
inline ::CChatRoomMemberSummaryCounts* CChatRoomClient_MemberListViewUpdated_Notification::mutable_member_summary() {
  ::CChatRoomMemberSummaryCounts* _msg = _internal_mutable_member_summary();
  // @@protoc_insertion_point(field_mutable:CChatRoomClient_MemberListViewUpdated_Notification.member_summary)
  return _msg;
}
inline void CChatRoomClient_MemberListViewUpdated_Notification::set_allocated_member_summary(::CChatRoomMemberSummaryCounts* member_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete member_summary_;
  }
  if (member_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatRoomMemberSummaryCounts>::GetOwningArena(member_summary);
    if (message_arena != submessage_arena) {
      member_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, member_summary, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  member_summary_ = member_summary;
  // @@protoc_insertion_point(field_set_allocated:CChatRoomClient_MemberListViewUpdated_Notification.member_summary)
}

// repeated .CMsgClientPersonaState.Friend subscribed_personas = 7;
inline int CChatRoomClient_MemberListViewUpdated_Notification::_internal_subscribed_personas_size() const {
  return subscribed_personas_.size();
}
inline int CChatRoomClient_MemberListViewUpdated_Notification::subscribed_personas_size() const {
  return _internal_subscribed_personas_size();
}
inline ::CMsgClientPersonaState_Friend* CChatRoomClient_MemberListViewUpdated_Notification::mutable_subscribed_personas(int index) {
  // @@protoc_insertion_point(field_mutable:CChatRoomClient_MemberListViewUpdated_Notification.subscribed_personas)
  return subscribed_personas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientPersonaState_Friend >*
CChatRoomClient_MemberListViewUpdated_Notification::mutable_subscribed_personas() {
  // @@protoc_insertion_point(field_mutable_list:CChatRoomClient_MemberListViewUpdated_Notification.subscribed_personas)
  return &subscribed_personas_;
}
inline const ::CMsgClientPersonaState_Friend& CChatRoomClient_MemberListViewUpdated_Notification::_internal_subscribed_personas(int index) const {
  return subscribed_personas_.Get(index);
}
inline const ::CMsgClientPersonaState_Friend& CChatRoomClient_MemberListViewUpdated_Notification::subscribed_personas(int index) const {
  // @@protoc_insertion_point(field_get:CChatRoomClient_MemberListViewUpdated_Notification.subscribed_personas)
  return _internal_subscribed_personas(index);
}
inline ::CMsgClientPersonaState_Friend* CChatRoomClient_MemberListViewUpdated_Notification::_internal_add_subscribed_personas() {
  return subscribed_personas_.Add();
}
inline ::CMsgClientPersonaState_Friend* CChatRoomClient_MemberListViewUpdated_Notification::add_subscribed_personas() {
  ::CMsgClientPersonaState_Friend* _add = _internal_add_subscribed_personas();
  // @@protoc_insertion_point(field_add:CChatRoomClient_MemberListViewUpdated_Notification.subscribed_personas)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientPersonaState_Friend >&
CChatRoomClient_MemberListViewUpdated_Notification::subscribed_personas() const {
  // @@protoc_insertion_point(field_list:CChatRoomClient_MemberListViewUpdated_Notification.subscribed_personas)
  return subscribed_personas_;
}

// -------------------------------------------------------------------

// CChatRoom_MessageReaction_Notification

// optional uint64 chat_group_id = 1;
inline bool CChatRoom_MessageReaction_Notification::_internal_has_chat_group_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatRoom_MessageReaction_Notification::has_chat_group_id() const {
  return _internal_has_chat_group_id();
}
inline void CChatRoom_MessageReaction_Notification::clear_chat_group_id() {
  chat_group_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CChatRoom_MessageReaction_Notification::_internal_chat_group_id() const {
  return chat_group_id_;
}
inline uint64_t CChatRoom_MessageReaction_Notification::chat_group_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MessageReaction_Notification.chat_group_id)
  return _internal_chat_group_id();
}
inline void CChatRoom_MessageReaction_Notification::_internal_set_chat_group_id(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  chat_group_id_ = value;
}
inline void CChatRoom_MessageReaction_Notification::set_chat_group_id(uint64_t value) {
  _internal_set_chat_group_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_MessageReaction_Notification.chat_group_id)
}

// optional uint64 chat_id = 2;
inline bool CChatRoom_MessageReaction_Notification::_internal_has_chat_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatRoom_MessageReaction_Notification::has_chat_id() const {
  return _internal_has_chat_id();
}
inline void CChatRoom_MessageReaction_Notification::clear_chat_id() {
  chat_id_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CChatRoom_MessageReaction_Notification::_internal_chat_id() const {
  return chat_id_;
}
inline uint64_t CChatRoom_MessageReaction_Notification::chat_id() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MessageReaction_Notification.chat_id)
  return _internal_chat_id();
}
inline void CChatRoom_MessageReaction_Notification::_internal_set_chat_id(uint64_t value) {
  _has_bits_[0] |= 0x00000004u;
  chat_id_ = value;
}
inline void CChatRoom_MessageReaction_Notification::set_chat_id(uint64_t value) {
  _internal_set_chat_id(value);
  // @@protoc_insertion_point(field_set:CChatRoom_MessageReaction_Notification.chat_id)
}

// optional uint32 server_timestamp = 3;
inline bool CChatRoom_MessageReaction_Notification::_internal_has_server_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatRoom_MessageReaction_Notification::has_server_timestamp() const {
  return _internal_has_server_timestamp();
}
inline void CChatRoom_MessageReaction_Notification::clear_server_timestamp() {
  server_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CChatRoom_MessageReaction_Notification::_internal_server_timestamp() const {
  return server_timestamp_;
}
inline uint32_t CChatRoom_MessageReaction_Notification::server_timestamp() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MessageReaction_Notification.server_timestamp)
  return _internal_server_timestamp();
}
inline void CChatRoom_MessageReaction_Notification::_internal_set_server_timestamp(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  server_timestamp_ = value;
}
inline void CChatRoom_MessageReaction_Notification::set_server_timestamp(uint32_t value) {
  _internal_set_server_timestamp(value);
  // @@protoc_insertion_point(field_set:CChatRoom_MessageReaction_Notification.server_timestamp)
}

// optional uint32 ordinal = 4;
inline bool CChatRoom_MessageReaction_Notification::_internal_has_ordinal() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatRoom_MessageReaction_Notification::has_ordinal() const {
  return _internal_has_ordinal();
}
inline void CChatRoom_MessageReaction_Notification::clear_ordinal() {
  ordinal_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CChatRoom_MessageReaction_Notification::_internal_ordinal() const {
  return ordinal_;
}
inline uint32_t CChatRoom_MessageReaction_Notification::ordinal() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MessageReaction_Notification.ordinal)
  return _internal_ordinal();
}
inline void CChatRoom_MessageReaction_Notification::_internal_set_ordinal(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  ordinal_ = value;
}
inline void CChatRoom_MessageReaction_Notification::set_ordinal(uint32_t value) {
  _internal_set_ordinal(value);
  // @@protoc_insertion_point(field_set:CChatRoom_MessageReaction_Notification.ordinal)
}

// optional fixed64 reactor = 5;
inline bool CChatRoom_MessageReaction_Notification::_internal_has_reactor() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatRoom_MessageReaction_Notification::has_reactor() const {
  return _internal_has_reactor();
}
inline void CChatRoom_MessageReaction_Notification::clear_reactor() {
  reactor_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000020u;
}
inline uint64_t CChatRoom_MessageReaction_Notification::_internal_reactor() const {
  return reactor_;
}
inline uint64_t CChatRoom_MessageReaction_Notification::reactor() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MessageReaction_Notification.reactor)
  return _internal_reactor();
}
inline void CChatRoom_MessageReaction_Notification::_internal_set_reactor(uint64_t value) {
  _has_bits_[0] |= 0x00000020u;
  reactor_ = value;
}
inline void CChatRoom_MessageReaction_Notification::set_reactor(uint64_t value) {
  _internal_set_reactor(value);
  // @@protoc_insertion_point(field_set:CChatRoom_MessageReaction_Notification.reactor)
}

// optional .EChatRoomMessageReactionType reaction_type = 6 [default = k_EChatRoomMessageReactionType_Invalid];
inline bool CChatRoom_MessageReaction_Notification::_internal_has_reaction_type() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatRoom_MessageReaction_Notification::has_reaction_type() const {
  return _internal_has_reaction_type();
}
inline void CChatRoom_MessageReaction_Notification::clear_reaction_type() {
  reaction_type_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::EChatRoomMessageReactionType CChatRoom_MessageReaction_Notification::_internal_reaction_type() const {
  return static_cast< ::EChatRoomMessageReactionType >(reaction_type_);
}
inline ::EChatRoomMessageReactionType CChatRoom_MessageReaction_Notification::reaction_type() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MessageReaction_Notification.reaction_type)
  return _internal_reaction_type();
}
inline void CChatRoom_MessageReaction_Notification::_internal_set_reaction_type(::EChatRoomMessageReactionType value) {
  assert(::EChatRoomMessageReactionType_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  reaction_type_ = value;
}
inline void CChatRoom_MessageReaction_Notification::set_reaction_type(::EChatRoomMessageReactionType value) {
  _internal_set_reaction_type(value);
  // @@protoc_insertion_point(field_set:CChatRoom_MessageReaction_Notification.reaction_type)
}

// optional string reaction = 7;
inline bool CChatRoom_MessageReaction_Notification::_internal_has_reaction() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatRoom_MessageReaction_Notification::has_reaction() const {
  return _internal_has_reaction();
}
inline void CChatRoom_MessageReaction_Notification::clear_reaction() {
  reaction_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChatRoom_MessageReaction_Notification::reaction() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MessageReaction_Notification.reaction)
  return _internal_reaction();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CChatRoom_MessageReaction_Notification::set_reaction(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 reaction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CChatRoom_MessageReaction_Notification.reaction)
}
inline std::string* CChatRoom_MessageReaction_Notification::mutable_reaction() {
  std::string* _s = _internal_mutable_reaction();
  // @@protoc_insertion_point(field_mutable:CChatRoom_MessageReaction_Notification.reaction)
  return _s;
}
inline const std::string& CChatRoom_MessageReaction_Notification::_internal_reaction() const {
  return reaction_.Get();
}
inline void CChatRoom_MessageReaction_Notification::_internal_set_reaction(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  reaction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CChatRoom_MessageReaction_Notification::_internal_mutable_reaction() {
  _has_bits_[0] |= 0x00000001u;
  return reaction_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CChatRoom_MessageReaction_Notification::release_reaction() {
  // @@protoc_insertion_point(field_release:CChatRoom_MessageReaction_Notification.reaction)
  if (!_internal_has_reaction()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = reaction_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (reaction_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    reaction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CChatRoom_MessageReaction_Notification::set_allocated_reaction(std::string* reaction) {
  if (reaction != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  reaction_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reaction,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (reaction_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    reaction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CChatRoom_MessageReaction_Notification.reaction)
}

// optional bool is_add = 8;
inline bool CChatRoom_MessageReaction_Notification::_internal_has_is_add() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CChatRoom_MessageReaction_Notification::has_is_add() const {
  return _internal_has_is_add();
}
inline void CChatRoom_MessageReaction_Notification::clear_is_add() {
  is_add_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CChatRoom_MessageReaction_Notification::_internal_is_add() const {
  return is_add_;
}
inline bool CChatRoom_MessageReaction_Notification::is_add() const {
  // @@protoc_insertion_point(field_get:CChatRoom_MessageReaction_Notification.is_add)
  return _internal_is_add();
}
inline void CChatRoom_MessageReaction_Notification::_internal_set_is_add(bool value) {
  _has_bits_[0] |= 0x00000080u;
  is_add_ = value;
}
inline void CChatRoom_MessageReaction_Notification::set_is_add(bool value) {
  _internal_set_is_add(value);
  // @@protoc_insertion_point(field_set:CChatRoom_MessageReaction_Notification.is_add)
}

// -------------------------------------------------------------------

// CChatUsability_ClientUsabilityMetrics_Notification_Settings

// optional bool notifications_show_ingame = 1;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_notifications_show_ingame() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_notifications_show_ingame() const {
  return _internal_has_notifications_show_ingame();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_notifications_show_ingame() {
  notifications_show_ingame_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_notifications_show_ingame() const {
  return notifications_show_ingame_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::notifications_show_ingame() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_ingame)
  return _internal_notifications_show_ingame();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_notifications_show_ingame(bool value) {
  _has_bits_[0] |= 0x00000001u;
  notifications_show_ingame_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_notifications_show_ingame(bool value) {
  _internal_set_notifications_show_ingame(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_ingame)
}

// optional bool notifications_show_online = 2;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_notifications_show_online() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_notifications_show_online() const {
  return _internal_has_notifications_show_online();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_notifications_show_online() {
  notifications_show_online_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_notifications_show_online() const {
  return notifications_show_online_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::notifications_show_online() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_online)
  return _internal_notifications_show_online();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_notifications_show_online(bool value) {
  _has_bits_[0] |= 0x00000002u;
  notifications_show_online_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_notifications_show_online(bool value) {
  _internal_set_notifications_show_online(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_online)
}

// optional bool notifications_show_message = 3;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_notifications_show_message() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_notifications_show_message() const {
  return _internal_has_notifications_show_message();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_notifications_show_message() {
  notifications_show_message_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_notifications_show_message() const {
  return notifications_show_message_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::notifications_show_message() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_message)
  return _internal_notifications_show_message();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_notifications_show_message(bool value) {
  _has_bits_[0] |= 0x00000004u;
  notifications_show_message_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_notifications_show_message(bool value) {
  _internal_set_notifications_show_message(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_message)
}

// optional bool notifications_events_and_announcements = 4;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_notifications_events_and_announcements() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_notifications_events_and_announcements() const {
  return _internal_has_notifications_events_and_announcements();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_notifications_events_and_announcements() {
  notifications_events_and_announcements_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_notifications_events_and_announcements() const {
  return notifications_events_and_announcements_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::notifications_events_and_announcements() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_events_and_announcements)
  return _internal_notifications_events_and_announcements();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_notifications_events_and_announcements(bool value) {
  _has_bits_[0] |= 0x00000008u;
  notifications_events_and_announcements_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_notifications_events_and_announcements(bool value) {
  _internal_set_notifications_events_and_announcements(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_events_and_announcements)
}

// optional bool sounds_play_ingame = 5;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_sounds_play_ingame() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_sounds_play_ingame() const {
  return _internal_has_sounds_play_ingame();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_sounds_play_ingame() {
  sounds_play_ingame_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_sounds_play_ingame() const {
  return sounds_play_ingame_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::sounds_play_ingame() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_ingame)
  return _internal_sounds_play_ingame();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_sounds_play_ingame(bool value) {
  _has_bits_[0] |= 0x00000010u;
  sounds_play_ingame_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_sounds_play_ingame(bool value) {
  _internal_set_sounds_play_ingame(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_ingame)
}

// optional bool sounds_play_online = 6;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_sounds_play_online() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_sounds_play_online() const {
  return _internal_has_sounds_play_online();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_sounds_play_online() {
  sounds_play_online_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_sounds_play_online() const {
  return sounds_play_online_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::sounds_play_online() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_online)
  return _internal_sounds_play_online();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_sounds_play_online(bool value) {
  _has_bits_[0] |= 0x00000020u;
  sounds_play_online_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_sounds_play_online(bool value) {
  _internal_set_sounds_play_online(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_online)
}

// optional bool sounds_play_message = 7;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_sounds_play_message() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_sounds_play_message() const {
  return _internal_has_sounds_play_message();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_sounds_play_message() {
  sounds_play_message_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_sounds_play_message() const {
  return sounds_play_message_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::sounds_play_message() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_message)
  return _internal_sounds_play_message();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_sounds_play_message(bool value) {
  _has_bits_[0] |= 0x00000040u;
  sounds_play_message_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_sounds_play_message(bool value) {
  _internal_set_sounds_play_message(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_message)
}

// optional bool sounds_events_and_announcements = 8;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_sounds_events_and_announcements() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_sounds_events_and_announcements() const {
  return _internal_has_sounds_events_and_announcements();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_sounds_events_and_announcements() {
  sounds_events_and_announcements_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_sounds_events_and_announcements() const {
  return sounds_events_and_announcements_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::sounds_events_and_announcements() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_events_and_announcements)
  return _internal_sounds_events_and_announcements();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_sounds_events_and_announcements(bool value) {
  _has_bits_[0] |= 0x00000080u;
  sounds_events_and_announcements_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_sounds_events_and_announcements(bool value) {
  _internal_set_sounds_events_and_announcements(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_events_and_announcements)
}

// optional bool always_new_chat_window = 9;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_always_new_chat_window() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_always_new_chat_window() const {
  return _internal_has_always_new_chat_window();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_always_new_chat_window() {
  always_new_chat_window_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_always_new_chat_window() const {
  return always_new_chat_window_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::always_new_chat_window() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.always_new_chat_window)
  return _internal_always_new_chat_window();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_always_new_chat_window(bool value) {
  _has_bits_[0] |= 0x00000200u;
  always_new_chat_window_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_always_new_chat_window(bool value) {
  _internal_set_always_new_chat_window(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.always_new_chat_window)
}

// optional bool force_alphabetic_friend_sorting = 10;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_force_alphabetic_friend_sorting() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_force_alphabetic_friend_sorting() const {
  return _internal_has_force_alphabetic_friend_sorting();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_force_alphabetic_friend_sorting() {
  force_alphabetic_friend_sorting_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_force_alphabetic_friend_sorting() const {
  return force_alphabetic_friend_sorting_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::force_alphabetic_friend_sorting() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.force_alphabetic_friend_sorting)
  return _internal_force_alphabetic_friend_sorting();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_force_alphabetic_friend_sorting(bool value) {
  _has_bits_[0] |= 0x00000400u;
  force_alphabetic_friend_sorting_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_force_alphabetic_friend_sorting(bool value) {
  _internal_set_force_alphabetic_friend_sorting(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.force_alphabetic_friend_sorting)
}

// optional int32 chat_flash_mode = 11;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_chat_flash_mode() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_chat_flash_mode() const {
  return _internal_has_chat_flash_mode();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_chat_flash_mode() {
  chat_flash_mode_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_chat_flash_mode() const {
  return chat_flash_mode_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Settings::chat_flash_mode() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.chat_flash_mode)
  return _internal_chat_flash_mode();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_chat_flash_mode(int32_t value) {
  _has_bits_[0] |= 0x00000100u;
  chat_flash_mode_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_chat_flash_mode(int32_t value) {
  _internal_set_chat_flash_mode(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.chat_flash_mode)
}

// optional bool remember_open_chats = 12;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_remember_open_chats() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_remember_open_chats() const {
  return _internal_has_remember_open_chats();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_remember_open_chats() {
  remember_open_chats_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_remember_open_chats() const {
  return remember_open_chats_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::remember_open_chats() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.remember_open_chats)
  return _internal_remember_open_chats();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_remember_open_chats(bool value) {
  _has_bits_[0] |= 0x00000800u;
  remember_open_chats_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_remember_open_chats(bool value) {
  _internal_set_remember_open_chats(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.remember_open_chats)
}

// optional bool compact_quick_access = 13;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_compact_quick_access() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_compact_quick_access() const {
  return _internal_has_compact_quick_access();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_compact_quick_access() {
  compact_quick_access_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_compact_quick_access() const {
  return compact_quick_access_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::compact_quick_access() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.compact_quick_access)
  return _internal_compact_quick_access();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_compact_quick_access(bool value) {
  _has_bits_[0] |= 0x00001000u;
  compact_quick_access_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_compact_quick_access(bool value) {
  _internal_set_compact_quick_access(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.compact_quick_access)
}

// optional bool compact_friends_list = 14;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_compact_friends_list() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_compact_friends_list() const {
  return _internal_has_compact_friends_list();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_compact_friends_list() {
  compact_friends_list_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_compact_friends_list() const {
  return compact_friends_list_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::compact_friends_list() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.compact_friends_list)
  return _internal_compact_friends_list();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_compact_friends_list(bool value) {
  _has_bits_[0] |= 0x00002000u;
  compact_friends_list_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_compact_friends_list(bool value) {
  _internal_set_compact_friends_list(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.compact_friends_list)
}

// optional bool notifications_show_chat_room_notification = 15;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_notifications_show_chat_room_notification() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_notifications_show_chat_room_notification() const {
  return _internal_has_notifications_show_chat_room_notification();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_notifications_show_chat_room_notification() {
  notifications_show_chat_room_notification_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_notifications_show_chat_room_notification() const {
  return notifications_show_chat_room_notification_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::notifications_show_chat_room_notification() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_chat_room_notification)
  return _internal_notifications_show_chat_room_notification();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_notifications_show_chat_room_notification(bool value) {
  _has_bits_[0] |= 0x00004000u;
  notifications_show_chat_room_notification_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_notifications_show_chat_room_notification(bool value) {
  _internal_set_notifications_show_chat_room_notification(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.notifications_show_chat_room_notification)
}

// optional bool sounds_play_chat_room_notification = 16;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_sounds_play_chat_room_notification() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_sounds_play_chat_room_notification() const {
  return _internal_has_sounds_play_chat_room_notification();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_sounds_play_chat_room_notification() {
  sounds_play_chat_room_notification_ = false;
  _has_bits_[0] &= ~0x00008000u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_sounds_play_chat_room_notification() const {
  return sounds_play_chat_room_notification_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::sounds_play_chat_room_notification() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_chat_room_notification)
  return _internal_sounds_play_chat_room_notification();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_sounds_play_chat_room_notification(bool value) {
  _has_bits_[0] |= 0x00008000u;
  sounds_play_chat_room_notification_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_sounds_play_chat_room_notification(bool value) {
  _internal_set_sounds_play_chat_room_notification(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sounds_play_chat_room_notification)
}

// optional bool hide_offline_friends_in_tag_groups = 17;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_hide_offline_friends_in_tag_groups() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_hide_offline_friends_in_tag_groups() const {
  return _internal_has_hide_offline_friends_in_tag_groups();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_hide_offline_friends_in_tag_groups() {
  hide_offline_friends_in_tag_groups_ = false;
  _has_bits_[0] &= ~0x00010000u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_hide_offline_friends_in_tag_groups() const {
  return hide_offline_friends_in_tag_groups_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::hide_offline_friends_in_tag_groups() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.hide_offline_friends_in_tag_groups)
  return _internal_hide_offline_friends_in_tag_groups();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_hide_offline_friends_in_tag_groups(bool value) {
  _has_bits_[0] |= 0x00010000u;
  hide_offline_friends_in_tag_groups_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_hide_offline_friends_in_tag_groups(bool value) {
  _internal_set_hide_offline_friends_in_tag_groups(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.hide_offline_friends_in_tag_groups)
}

// optional bool hide_categorized_friends = 18;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_hide_categorized_friends() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_hide_categorized_friends() const {
  return _internal_has_hide_categorized_friends();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_hide_categorized_friends() {
  hide_categorized_friends_ = false;
  _has_bits_[0] &= ~0x00040000u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_hide_categorized_friends() const {
  return hide_categorized_friends_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::hide_categorized_friends() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.hide_categorized_friends)
  return _internal_hide_categorized_friends();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_hide_categorized_friends(bool value) {
  _has_bits_[0] |= 0x00040000u;
  hide_categorized_friends_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_hide_categorized_friends(bool value) {
  _internal_set_hide_categorized_friends(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.hide_categorized_friends)
}

// optional bool categorize_in_game_friends_by_game = 19;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_categorize_in_game_friends_by_game() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_categorize_in_game_friends_by_game() const {
  return _internal_has_categorize_in_game_friends_by_game();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_categorize_in_game_friends_by_game() {
  categorize_in_game_friends_by_game_ = false;
  _has_bits_[0] &= ~0x00080000u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_categorize_in_game_friends_by_game() const {
  return categorize_in_game_friends_by_game_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::categorize_in_game_friends_by_game() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.categorize_in_game_friends_by_game)
  return _internal_categorize_in_game_friends_by_game();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_categorize_in_game_friends_by_game(bool value) {
  _has_bits_[0] |= 0x00080000u;
  categorize_in_game_friends_by_game_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_categorize_in_game_friends_by_game(bool value) {
  _internal_set_categorize_in_game_friends_by_game(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.categorize_in_game_friends_by_game)
}

// optional int32 chat_font_size = 20;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_chat_font_size() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_chat_font_size() const {
  return _internal_has_chat_font_size();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_chat_font_size() {
  chat_font_size_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_chat_font_size() const {
  return chat_font_size_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Settings::chat_font_size() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.chat_font_size)
  return _internal_chat_font_size();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_chat_font_size(int32_t value) {
  _has_bits_[0] |= 0x00020000u;
  chat_font_size_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_chat_font_size(int32_t value) {
  _internal_set_chat_font_size(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.chat_font_size)
}

// optional bool use24hour_clock = 21;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_use24hour_clock() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_use24hour_clock() const {
  return _internal_has_use24hour_clock();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_use24hour_clock() {
  use24hour_clock_ = false;
  _has_bits_[0] &= ~0x00100000u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_use24hour_clock() const {
  return use24hour_clock_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::use24hour_clock() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.use24hour_clock)
  return _internal_use24hour_clock();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_use24hour_clock(bool value) {
  _has_bits_[0] |= 0x00100000u;
  use24hour_clock_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_use24hour_clock(bool value) {
  _internal_set_use24hour_clock(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.use24hour_clock)
}

// optional bool do_not_disturb_mode = 22;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_do_not_disturb_mode() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_do_not_disturb_mode() const {
  return _internal_has_do_not_disturb_mode();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_do_not_disturb_mode() {
  do_not_disturb_mode_ = false;
  _has_bits_[0] &= ~0x00200000u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_do_not_disturb_mode() const {
  return do_not_disturb_mode_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::do_not_disturb_mode() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.do_not_disturb_mode)
  return _internal_do_not_disturb_mode();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_do_not_disturb_mode(bool value) {
  _has_bits_[0] |= 0x00200000u;
  do_not_disturb_mode_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_do_not_disturb_mode(bool value) {
  _internal_set_do_not_disturb_mode(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.do_not_disturb_mode)
}

// optional bool disable_embed_inlining = 23;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_disable_embed_inlining() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_disable_embed_inlining() const {
  return _internal_has_disable_embed_inlining();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_disable_embed_inlining() {
  disable_embed_inlining_ = false;
  _has_bits_[0] &= ~0x00400000u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_disable_embed_inlining() const {
  return disable_embed_inlining_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::disable_embed_inlining() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.disable_embed_inlining)
  return _internal_disable_embed_inlining();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_disable_embed_inlining(bool value) {
  _has_bits_[0] |= 0x00400000u;
  disable_embed_inlining_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_disable_embed_inlining(bool value) {
  _internal_set_disable_embed_inlining(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.disable_embed_inlining)
}

// optional bool sign_into_friends = 24;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_sign_into_friends() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_sign_into_friends() const {
  return _internal_has_sign_into_friends();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_sign_into_friends() {
  sign_into_friends_ = false;
  _has_bits_[0] &= ~0x00800000u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_sign_into_friends() const {
  return sign_into_friends_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::sign_into_friends() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sign_into_friends)
  return _internal_sign_into_friends();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_sign_into_friends(bool value) {
  _has_bits_[0] |= 0x00800000u;
  sign_into_friends_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_sign_into_friends(bool value) {
  _internal_set_sign_into_friends(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.sign_into_friends)
}

// optional bool animated_avatars = 25;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_has_animated_avatars() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::has_animated_avatars() const {
  return _internal_has_animated_avatars();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::clear_animated_avatars() {
  animated_avatars_ = false;
  _has_bits_[0] &= ~0x01000000u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_animated_avatars() const {
  return animated_avatars_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Settings::animated_avatars() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Settings.animated_avatars)
  return _internal_animated_avatars();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::_internal_set_animated_avatars(bool value) {
  _has_bits_[0] |= 0x01000000u;
  animated_avatars_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Settings::set_animated_avatars(bool value) {
  _internal_set_animated_avatars(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Settings.animated_avatars)
}

// -------------------------------------------------------------------

// CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings

// optional float voice_input_gain = 1;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_has_voice_input_gain() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_voice_input_gain() const {
  return _internal_has_voice_input_gain();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_voice_input_gain() {
  voice_input_gain_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_voice_input_gain() const {
  return voice_input_gain_;
}
inline float CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::voice_input_gain() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_input_gain)
  return _internal_voice_input_gain();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_set_voice_input_gain(float value) {
  _has_bits_[0] |= 0x00000001u;
  voice_input_gain_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_voice_input_gain(float value) {
  _internal_set_voice_input_gain(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_input_gain)
}

// optional float voice_output_gain = 2;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_has_voice_output_gain() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_voice_output_gain() const {
  return _internal_has_voice_output_gain();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_voice_output_gain() {
  voice_output_gain_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_voice_output_gain() const {
  return voice_output_gain_;
}
inline float CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::voice_output_gain() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_output_gain)
  return _internal_voice_output_gain();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_set_voice_output_gain(float value) {
  _has_bits_[0] |= 0x00000002u;
  voice_output_gain_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_voice_output_gain(float value) {
  _internal_set_voice_output_gain(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_output_gain)
}

// optional int32 noise_gate_level = 3;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_has_noise_gate_level() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_noise_gate_level() const {
  return _internal_has_noise_gate_level();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_noise_gate_level() {
  noise_gate_level_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_noise_gate_level() const {
  return noise_gate_level_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::noise_gate_level() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.noise_gate_level)
  return _internal_noise_gate_level();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_set_noise_gate_level(int32_t value) {
  _has_bits_[0] |= 0x00000004u;
  noise_gate_level_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_noise_gate_level(int32_t value) {
  _internal_set_noise_gate_level(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.noise_gate_level)
}

// optional bool voice_use_echo_cancellation = 4;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_has_voice_use_echo_cancellation() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_voice_use_echo_cancellation() const {
  return _internal_has_voice_use_echo_cancellation();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_voice_use_echo_cancellation() {
  voice_use_echo_cancellation_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_voice_use_echo_cancellation() const {
  return voice_use_echo_cancellation_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::voice_use_echo_cancellation() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_use_echo_cancellation)
  return _internal_voice_use_echo_cancellation();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_set_voice_use_echo_cancellation(bool value) {
  _has_bits_[0] |= 0x00000008u;
  voice_use_echo_cancellation_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_voice_use_echo_cancellation(bool value) {
  _internal_set_voice_use_echo_cancellation(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_use_echo_cancellation)
}

// optional bool voice_use_noise_cancellation = 5;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_has_voice_use_noise_cancellation() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_voice_use_noise_cancellation() const {
  return _internal_has_voice_use_noise_cancellation();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_voice_use_noise_cancellation() {
  voice_use_noise_cancellation_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_voice_use_noise_cancellation() const {
  return voice_use_noise_cancellation_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::voice_use_noise_cancellation() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_use_noise_cancellation)
  return _internal_voice_use_noise_cancellation();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_set_voice_use_noise_cancellation(bool value) {
  _has_bits_[0] |= 0x00000010u;
  voice_use_noise_cancellation_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_voice_use_noise_cancellation(bool value) {
  _internal_set_voice_use_noise_cancellation(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_use_noise_cancellation)
}

// optional bool voice_use_auto_gain_control = 6;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_has_voice_use_auto_gain_control() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_voice_use_auto_gain_control() const {
  return _internal_has_voice_use_auto_gain_control();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_voice_use_auto_gain_control() {
  voice_use_auto_gain_control_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_voice_use_auto_gain_control() const {
  return voice_use_auto_gain_control_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::voice_use_auto_gain_control() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_use_auto_gain_control)
  return _internal_voice_use_auto_gain_control();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_set_voice_use_auto_gain_control(bool value) {
  _has_bits_[0] |= 0x00000020u;
  voice_use_auto_gain_control_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_voice_use_auto_gain_control(bool value) {
  _internal_set_voice_use_auto_gain_control(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.voice_use_auto_gain_control)
}

// optional bool selected_non_default_mic = 7;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_has_selected_non_default_mic() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_selected_non_default_mic() const {
  return _internal_has_selected_non_default_mic();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_selected_non_default_mic() {
  selected_non_default_mic_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_selected_non_default_mic() const {
  return selected_non_default_mic_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::selected_non_default_mic() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.selected_non_default_mic)
  return _internal_selected_non_default_mic();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_set_selected_non_default_mic(bool value) {
  _has_bits_[0] |= 0x00000040u;
  selected_non_default_mic_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_selected_non_default_mic(bool value) {
  _internal_set_selected_non_default_mic(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.selected_non_default_mic)
}

// optional bool selected_non_default_output = 8;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_has_selected_non_default_output() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_selected_non_default_output() const {
  return _internal_has_selected_non_default_output();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_selected_non_default_output() {
  selected_non_default_output_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_selected_non_default_output() const {
  return selected_non_default_output_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::selected_non_default_output() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.selected_non_default_output)
  return _internal_selected_non_default_output();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_set_selected_non_default_output(bool value) {
  _has_bits_[0] |= 0x00000080u;
  selected_non_default_output_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_selected_non_default_output(bool value) {
  _internal_set_selected_non_default_output(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.selected_non_default_output)
}

// optional bool push_to_talk_enabled = 9;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_has_push_to_talk_enabled() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_push_to_talk_enabled() const {
  return _internal_has_push_to_talk_enabled();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_push_to_talk_enabled() {
  push_to_talk_enabled_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_push_to_talk_enabled() const {
  return push_to_talk_enabled_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::push_to_talk_enabled() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.push_to_talk_enabled)
  return _internal_push_to_talk_enabled();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_set_push_to_talk_enabled(bool value) {
  _has_bits_[0] |= 0x00000100u;
  push_to_talk_enabled_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_push_to_talk_enabled(bool value) {
  _internal_set_push_to_talk_enabled(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.push_to_talk_enabled)
}

// optional bool push_to_mute_enabled = 10;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_has_push_to_mute_enabled() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_push_to_mute_enabled() const {
  return _internal_has_push_to_mute_enabled();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_push_to_mute_enabled() {
  push_to_mute_enabled_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_push_to_mute_enabled() const {
  return push_to_mute_enabled_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::push_to_mute_enabled() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.push_to_mute_enabled)
  return _internal_push_to_mute_enabled();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_set_push_to_mute_enabled(bool value) {
  _has_bits_[0] |= 0x00000200u;
  push_to_mute_enabled_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_push_to_mute_enabled(bool value) {
  _internal_set_push_to_mute_enabled(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.push_to_mute_enabled)
}

// optional bool play_ptt_sounds = 11;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_has_play_ptt_sounds() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::has_play_ptt_sounds() const {
  return _internal_has_play_ptt_sounds();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::clear_play_ptt_sounds() {
  play_ptt_sounds_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_play_ptt_sounds() const {
  return play_ptt_sounds_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::play_ptt_sounds() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.play_ptt_sounds)
  return _internal_play_ptt_sounds();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::_internal_set_play_ptt_sounds(bool value) {
  _has_bits_[0] |= 0x00000400u;
  play_ptt_sounds_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings::set_play_ptt_sounds(bool value) {
  _internal_set_play_ptt_sounds(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings.play_ptt_sounds)
}

// -------------------------------------------------------------------

// CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState

// optional bool in_game_collapsed = 1;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_has_in_game_collapsed() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::has_in_game_collapsed() const {
  return _internal_has_in_game_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_in_game_collapsed() {
  in_game_collapsed_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_in_game_collapsed() const {
  return in_game_collapsed_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::in_game_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.in_game_collapsed)
  return _internal_in_game_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_set_in_game_collapsed(bool value) {
  _has_bits_[0] |= 0x00000001u;
  in_game_collapsed_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_in_game_collapsed(bool value) {
  _internal_set_in_game_collapsed(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.in_game_collapsed)
}

// optional bool online_collapsed = 2;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_has_online_collapsed() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::has_online_collapsed() const {
  return _internal_has_online_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_online_collapsed() {
  online_collapsed_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_online_collapsed() const {
  return online_collapsed_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::online_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.online_collapsed)
  return _internal_online_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_set_online_collapsed(bool value) {
  _has_bits_[0] |= 0x00000002u;
  online_collapsed_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_online_collapsed(bool value) {
  _internal_set_online_collapsed(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.online_collapsed)
}

// optional bool offline_collapsed = 3;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_has_offline_collapsed() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::has_offline_collapsed() const {
  return _internal_has_offline_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_offline_collapsed() {
  offline_collapsed_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_offline_collapsed() const {
  return offline_collapsed_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::offline_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.offline_collapsed)
  return _internal_offline_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_set_offline_collapsed(bool value) {
  _has_bits_[0] |= 0x00000004u;
  offline_collapsed_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_offline_collapsed(bool value) {
  _internal_set_offline_collapsed(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.offline_collapsed)
}

// optional int32 game_groups_collapsed = 4;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_has_game_groups_collapsed() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::has_game_groups_collapsed() const {
  return _internal_has_game_groups_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_game_groups_collapsed() {
  game_groups_collapsed_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_game_groups_collapsed() const {
  return game_groups_collapsed_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::game_groups_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.game_groups_collapsed)
  return _internal_game_groups_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_set_game_groups_collapsed(int32_t value) {
  _has_bits_[0] |= 0x00000008u;
  game_groups_collapsed_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_game_groups_collapsed(int32_t value) {
  _internal_set_game_groups_collapsed(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.game_groups_collapsed)
}

// optional int32 categories_collapsed = 5;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_has_categories_collapsed() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::has_categories_collapsed() const {
  return _internal_has_categories_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::clear_categories_collapsed() {
  categories_collapsed_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_categories_collapsed() const {
  return categories_collapsed_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::categories_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.categories_collapsed)
  return _internal_categories_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::_internal_set_categories_collapsed(int32_t value) {
  _has_bits_[0] |= 0x00000010u;
  categories_collapsed_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState::set_categories_collapsed(int32_t value) {
  _internal_set_categories_collapsed(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState.categories_collapsed)
}

// -------------------------------------------------------------------

// CChatUsability_ClientUsabilityMetrics_Notification_UIState

// optional int32 friends_list_height = 1;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_friends_list_height() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_friends_list_height() const {
  return _internal_has_friends_list_height();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_friends_list_height() {
  friends_list_height_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_friends_list_height() const {
  return friends_list_height_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::friends_list_height() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_height)
  return _internal_friends_list_height();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_friends_list_height(int32_t value) {
  _has_bits_[0] |= 0x00000002u;
  friends_list_height_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_friends_list_height(int32_t value) {
  _internal_set_friends_list_height(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_height)
}

// optional int32 friends_list_width = 2;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_friends_list_width() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_friends_list_width() const {
  return _internal_has_friends_list_width();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_friends_list_width() {
  friends_list_width_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_friends_list_width() const {
  return friends_list_width_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::friends_list_width() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_width)
  return _internal_friends_list_width();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_friends_list_width(int32_t value) {
  _has_bits_[0] |= 0x00000004u;
  friends_list_width_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_friends_list_width(int32_t value) {
  _internal_set_friends_list_width(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_width)
}

// optional bool friends_list_docked = 3;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_friends_list_docked() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_friends_list_docked() const {
  return _internal_has_friends_list_docked();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_friends_list_docked() {
  friends_list_docked_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_friends_list_docked() const {
  return friends_list_docked_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::friends_list_docked() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_docked)
  return _internal_friends_list_docked();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_friends_list_docked(bool value) {
  _has_bits_[0] |= 0x00000020u;
  friends_list_docked_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_friends_list_docked(bool value) {
  _internal_set_friends_list_docked(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_docked)
}

// optional bool friends_list_collapsed = 4;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_friends_list_collapsed() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_friends_list_collapsed() const {
  return _internal_has_friends_list_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_friends_list_collapsed() {
  friends_list_collapsed_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_friends_list_collapsed() const {
  return friends_list_collapsed_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::friends_list_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_collapsed)
  return _internal_friends_list_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_friends_list_collapsed(bool value) {
  _has_bits_[0] |= 0x00000040u;
  friends_list_collapsed_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_friends_list_collapsed(bool value) {
  _internal_set_friends_list_collapsed(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_collapsed)
}

// optional int32 friends_list_group_chats_height = 5;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_friends_list_group_chats_height() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_friends_list_group_chats_height() const {
  return _internal_has_friends_list_group_chats_height();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_friends_list_group_chats_height() {
  friends_list_group_chats_height_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_friends_list_group_chats_height() const {
  return friends_list_group_chats_height_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::friends_list_group_chats_height() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_group_chats_height)
  return _internal_friends_list_group_chats_height();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_friends_list_group_chats_height(int32_t value) {
  _has_bits_[0] |= 0x00000008u;
  friends_list_group_chats_height_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_friends_list_group_chats_height(int32_t value) {
  _internal_set_friends_list_group_chats_height(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_group_chats_height)
}

// optional bool friends_list_visible = 6;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_friends_list_visible() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_friends_list_visible() const {
  return _internal_has_friends_list_visible();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_friends_list_visible() {
  friends_list_visible_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_friends_list_visible() const {
  return friends_list_visible_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::friends_list_visible() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_visible)
  return _internal_friends_list_visible();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_friends_list_visible(bool value) {
  _has_bits_[0] |= 0x00000080u;
  friends_list_visible_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_friends_list_visible(bool value) {
  _internal_set_friends_list_visible(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friends_list_visible)
}

// optional int32 chat_popups_opened = 7;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_chat_popups_opened() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_chat_popups_opened() const {
  return _internal_has_chat_popups_opened();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_chat_popups_opened() {
  chat_popups_opened_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_chat_popups_opened() const {
  return chat_popups_opened_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::chat_popups_opened() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.chat_popups_opened)
  return _internal_chat_popups_opened();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_chat_popups_opened(int32_t value) {
  _has_bits_[0] |= 0x00000010u;
  chat_popups_opened_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_chat_popups_opened(int32_t value) {
  _internal_set_chat_popups_opened(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.chat_popups_opened)
}

// optional int32 group_chat_tabs_opened = 8;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_group_chat_tabs_opened() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_group_chat_tabs_opened() const {
  return _internal_has_group_chat_tabs_opened();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_group_chat_tabs_opened() {
  group_chat_tabs_opened_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_group_chat_tabs_opened() const {
  return group_chat_tabs_opened_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::group_chat_tabs_opened() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.group_chat_tabs_opened)
  return _internal_group_chat_tabs_opened();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_group_chat_tabs_opened(int32_t value) {
  _has_bits_[0] |= 0x00000200u;
  group_chat_tabs_opened_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_group_chat_tabs_opened(int32_t value) {
  _internal_set_group_chat_tabs_opened(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.group_chat_tabs_opened)
}

// optional int32 friend_chat_tabs_opened = 9;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_friend_chat_tabs_opened() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_friend_chat_tabs_opened() const {
  return _internal_has_friend_chat_tabs_opened();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_friend_chat_tabs_opened() {
  friend_chat_tabs_opened_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_friend_chat_tabs_opened() const {
  return friend_chat_tabs_opened_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::friend_chat_tabs_opened() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friend_chat_tabs_opened)
  return _internal_friend_chat_tabs_opened();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_friend_chat_tabs_opened(int32_t value) {
  _has_bits_[0] |= 0x00000400u;
  friend_chat_tabs_opened_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_friend_chat_tabs_opened(int32_t value) {
  _internal_set_friend_chat_tabs_opened(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.friend_chat_tabs_opened)
}

// optional int32 chat_window_width = 10;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_chat_window_width() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_chat_window_width() const {
  return _internal_has_chat_window_width();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_chat_window_width() {
  chat_window_width_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_chat_window_width() const {
  return chat_window_width_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::chat_window_width() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.chat_window_width)
  return _internal_chat_window_width();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_chat_window_width(int32_t value) {
  _has_bits_[0] |= 0x00000800u;
  chat_window_width_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_chat_window_width(int32_t value) {
  _internal_set_chat_window_width(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.chat_window_width)
}

// optional int32 chat_window_height = 11;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_chat_window_height() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_chat_window_height() const {
  return _internal_has_chat_window_height();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_chat_window_height() {
  chat_window_height_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_chat_window_height() const {
  return chat_window_height_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::chat_window_height() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.chat_window_height)
  return _internal_chat_window_height();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_chat_window_height(int32_t value) {
  _has_bits_[0] |= 0x00001000u;
  chat_window_height_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_chat_window_height(int32_t value) {
  _internal_set_chat_window_height(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.chat_window_height)
}

// optional .CChatUsability_ClientUsabilityMetrics_Notification.UIState.CategoryCollapseState category_collapse = 12;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_category_collapse() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || category_collapse_ != nullptr);
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_category_collapse() const {
  return _internal_has_category_collapse();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_category_collapse() {
  if (category_collapse_ != nullptr) category_collapse_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_category_collapse() const {
  const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* p = category_collapse_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState&>(
      ::_CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState_default_instance_);
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState& CChatUsability_ClientUsabilityMetrics_Notification_UIState::category_collapse() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.category_collapse)
  return _internal_category_collapse();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::unsafe_arena_set_allocated_category_collapse(
    ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* category_collapse) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(category_collapse_);
  }
  category_collapse_ = category_collapse;
  if (category_collapse) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.UIState.category_collapse)
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* CChatUsability_ClientUsabilityMetrics_Notification_UIState::release_category_collapse() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* temp = category_collapse_;
  category_collapse_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* CChatUsability_ClientUsabilityMetrics_Notification_UIState::unsafe_arena_release_category_collapse() {
  // @@protoc_insertion_point(field_release:CChatUsability_ClientUsabilityMetrics_Notification.UIState.category_collapse)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* temp = category_collapse_;
  category_collapse_ = nullptr;
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_mutable_category_collapse() {
  _has_bits_[0] |= 0x00000001u;
  if (category_collapse_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState>(GetArenaForAllocation());
    category_collapse_ = p;
  }
  return category_collapse_;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* CChatUsability_ClientUsabilityMetrics_Notification_UIState::mutable_category_collapse() {
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* _msg = _internal_mutable_category_collapse();
  // @@protoc_insertion_point(field_mutable:CChatUsability_ClientUsabilityMetrics_Notification.UIState.category_collapse)
  return _msg;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_allocated_category_collapse(::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState* category_collapse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete category_collapse_;
  }
  if (category_collapse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState>::GetOwningArena(category_collapse);
    if (message_arena != submessage_arena) {
      category_collapse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, category_collapse, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  category_collapse_ = category_collapse;
  // @@protoc_insertion_point(field_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.UIState.category_collapse)
}

// optional int32 group_chat_left_col_collapsed = 13;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_group_chat_left_col_collapsed() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_group_chat_left_col_collapsed() const {
  return _internal_has_group_chat_left_col_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_group_chat_left_col_collapsed() {
  group_chat_left_col_collapsed_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_group_chat_left_col_collapsed() const {
  return group_chat_left_col_collapsed_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::group_chat_left_col_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.group_chat_left_col_collapsed)
  return _internal_group_chat_left_col_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_group_chat_left_col_collapsed(int32_t value) {
  _has_bits_[0] |= 0x00002000u;
  group_chat_left_col_collapsed_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_group_chat_left_col_collapsed(int32_t value) {
  _internal_set_group_chat_left_col_collapsed(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.group_chat_left_col_collapsed)
}

// optional int32 group_chat_right_col_collapsed = 14;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_group_chat_right_col_collapsed() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_group_chat_right_col_collapsed() const {
  return _internal_has_group_chat_right_col_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_group_chat_right_col_collapsed() {
  group_chat_right_col_collapsed_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_group_chat_right_col_collapsed() const {
  return group_chat_right_col_collapsed_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_UIState::group_chat_right_col_collapsed() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.group_chat_right_col_collapsed)
  return _internal_group_chat_right_col_collapsed();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_group_chat_right_col_collapsed(int32_t value) {
  _has_bits_[0] |= 0x00004000u;
  group_chat_right_col_collapsed_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_group_chat_right_col_collapsed(int32_t value) {
  _internal_set_group_chat_right_col_collapsed(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.group_chat_right_col_collapsed)
}

// optional bool in_one_on_one_voice_chat = 15;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_in_one_on_one_voice_chat() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_in_one_on_one_voice_chat() const {
  return _internal_has_in_one_on_one_voice_chat();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_in_one_on_one_voice_chat() {
  in_one_on_one_voice_chat_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_in_one_on_one_voice_chat() const {
  return in_one_on_one_voice_chat_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::in_one_on_one_voice_chat() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.in_one_on_one_voice_chat)
  return _internal_in_one_on_one_voice_chat();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_in_one_on_one_voice_chat(bool value) {
  _has_bits_[0] |= 0x00000100u;
  in_one_on_one_voice_chat_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_in_one_on_one_voice_chat(bool value) {
  _internal_set_in_one_on_one_voice_chat(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.in_one_on_one_voice_chat)
}

// optional bool in_group_voice_chat = 16;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_has_in_group_voice_chat() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::has_in_group_voice_chat() const {
  return _internal_has_in_group_voice_chat();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::clear_in_group_voice_chat() {
  in_group_voice_chat_ = false;
  _has_bits_[0] &= ~0x00008000u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_in_group_voice_chat() const {
  return in_group_voice_chat_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_UIState::in_group_voice_chat() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.UIState.in_group_voice_chat)
  return _internal_in_group_voice_chat();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::_internal_set_in_group_voice_chat(bool value) {
  _has_bits_[0] |= 0x00008000u;
  in_group_voice_chat_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_UIState::set_in_group_voice_chat(bool value) {
  _internal_set_in_group_voice_chat(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.UIState.in_group_voice_chat)
}

// -------------------------------------------------------------------

// CChatUsability_ClientUsabilityMetrics_Notification_Metrics

// optional int32 friends_count = 1;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_has_friends_count() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_friends_count() const {
  return _internal_has_friends_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_friends_count() {
  friends_count_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_friends_count() const {
  return friends_count_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::friends_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_count)
  return _internal_friends_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_set_friends_count(int32_t value) {
  _has_bits_[0] |= 0x00000001u;
  friends_count_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_friends_count(int32_t value) {
  _internal_set_friends_count(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_count)
}

// optional int32 friends_category_count = 2;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_has_friends_category_count() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_friends_category_count() const {
  return _internal_has_friends_category_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_friends_category_count() {
  friends_category_count_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_friends_category_count() const {
  return friends_category_count_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::friends_category_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_category_count)
  return _internal_friends_category_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_set_friends_category_count(int32_t value) {
  _has_bits_[0] |= 0x00000002u;
  friends_category_count_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_friends_category_count(int32_t value) {
  _internal_set_friends_category_count(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_category_count)
}

// optional int32 friends_categorized_count = 3;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_has_friends_categorized_count() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_friends_categorized_count() const {
  return _internal_has_friends_categorized_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_friends_categorized_count() {
  friends_categorized_count_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_friends_categorized_count() const {
  return friends_categorized_count_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::friends_categorized_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_categorized_count)
  return _internal_friends_categorized_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_set_friends_categorized_count(int32_t value) {
  _has_bits_[0] |= 0x00000004u;
  friends_categorized_count_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_friends_categorized_count(int32_t value) {
  _internal_set_friends_categorized_count(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_categorized_count)
}

// optional int32 friends_online_count = 4;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_has_friends_online_count() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_friends_online_count() const {
  return _internal_has_friends_online_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_friends_online_count() {
  friends_online_count_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_friends_online_count() const {
  return friends_online_count_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::friends_online_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_online_count)
  return _internal_friends_online_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_set_friends_online_count(int32_t value) {
  _has_bits_[0] |= 0x00000008u;
  friends_online_count_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_friends_online_count(int32_t value) {
  _internal_set_friends_online_count(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_online_count)
}

// optional int32 friends_in_game_count = 5;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_has_friends_in_game_count() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_friends_in_game_count() const {
  return _internal_has_friends_in_game_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_friends_in_game_count() {
  friends_in_game_count_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_friends_in_game_count() const {
  return friends_in_game_count_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::friends_in_game_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_in_game_count)
  return _internal_friends_in_game_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_set_friends_in_game_count(int32_t value) {
  _has_bits_[0] |= 0x00000010u;
  friends_in_game_count_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_friends_in_game_count(int32_t value) {
  _internal_set_friends_in_game_count(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_in_game_count)
}

// optional int32 friends_in_game_singleton_count = 6;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_has_friends_in_game_singleton_count() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_friends_in_game_singleton_count() const {
  return _internal_has_friends_in_game_singleton_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_friends_in_game_singleton_count() {
  friends_in_game_singleton_count_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_friends_in_game_singleton_count() const {
  return friends_in_game_singleton_count_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::friends_in_game_singleton_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_in_game_singleton_count)
  return _internal_friends_in_game_singleton_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_set_friends_in_game_singleton_count(int32_t value) {
  _has_bits_[0] |= 0x00000020u;
  friends_in_game_singleton_count_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_friends_in_game_singleton_count(int32_t value) {
  _internal_set_friends_in_game_singleton_count(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_in_game_singleton_count)
}

// optional int32 game_group_count = 7;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_has_game_group_count() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_game_group_count() const {
  return _internal_has_game_group_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_game_group_count() {
  game_group_count_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_game_group_count() const {
  return game_group_count_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::game_group_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.game_group_count)
  return _internal_game_group_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_set_game_group_count(int32_t value) {
  _has_bits_[0] |= 0x00000040u;
  game_group_count_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_game_group_count(int32_t value) {
  _internal_set_game_group_count(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.game_group_count)
}

// optional int32 friends_favorite_count = 8;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_has_friends_favorite_count() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_friends_favorite_count() const {
  return _internal_has_friends_favorite_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_friends_favorite_count() {
  friends_favorite_count_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_friends_favorite_count() const {
  return friends_favorite_count_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::friends_favorite_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_favorite_count)
  return _internal_friends_favorite_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_set_friends_favorite_count(int32_t value) {
  _has_bits_[0] |= 0x00000080u;
  friends_favorite_count_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_friends_favorite_count(int32_t value) {
  _internal_set_friends_favorite_count(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.friends_favorite_count)
}

// optional int32 group_chat_count = 9;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_has_group_chat_count() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_group_chat_count() const {
  return _internal_has_group_chat_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_group_chat_count() {
  group_chat_count_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_group_chat_count() const {
  return group_chat_count_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::group_chat_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.group_chat_count)
  return _internal_group_chat_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_set_group_chat_count(int32_t value) {
  _has_bits_[0] |= 0x00000100u;
  group_chat_count_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_group_chat_count(int32_t value) {
  _internal_set_group_chat_count(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.group_chat_count)
}

// optional int32 group_chat_favorite_count = 10;
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_has_group_chat_favorite_count() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification_Metrics::has_group_chat_favorite_count() const {
  return _internal_has_group_chat_favorite_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::clear_group_chat_favorite_count() {
  group_chat_favorite_count_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_group_chat_favorite_count() const {
  return group_chat_favorite_count_;
}
inline int32_t CChatUsability_ClientUsabilityMetrics_Notification_Metrics::group_chat_favorite_count() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.group_chat_favorite_count)
  return _internal_group_chat_favorite_count();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::_internal_set_group_chat_favorite_count(int32_t value) {
  _has_bits_[0] |= 0x00000200u;
  group_chat_favorite_count_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification_Metrics::set_group_chat_favorite_count(int32_t value) {
  _internal_set_group_chat_favorite_count(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.Metrics.group_chat_favorite_count)
}

// -------------------------------------------------------------------

// CChatUsability_ClientUsabilityMetrics_Notification

// optional uint32 metrics_run_id = 1;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::_internal_has_metrics_run_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_metrics_run_id() const {
  return _internal_has_metrics_run_id();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_metrics_run_id() {
  metrics_run_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CChatUsability_ClientUsabilityMetrics_Notification::_internal_metrics_run_id() const {
  return metrics_run_id_;
}
inline uint32_t CChatUsability_ClientUsabilityMetrics_Notification::metrics_run_id() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.metrics_run_id)
  return _internal_metrics_run_id();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::_internal_set_metrics_run_id(uint32_t value) {
  _has_bits_[0] |= 0x00000010u;
  metrics_run_id_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_metrics_run_id(uint32_t value) {
  _internal_set_metrics_run_id(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.metrics_run_id)
}

// optional uint32 client_build = 2;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::_internal_has_client_build() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_client_build() const {
  return _internal_has_client_build();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_client_build() {
  client_build_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CChatUsability_ClientUsabilityMetrics_Notification::_internal_client_build() const {
  return client_build_;
}
inline uint32_t CChatUsability_ClientUsabilityMetrics_Notification::client_build() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.client_build)
  return _internal_client_build();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::_internal_set_client_build(uint32_t value) {
  _has_bits_[0] |= 0x00000020u;
  client_build_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_client_build(uint32_t value) {
  _internal_set_client_build(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.client_build)
}

// optional uint32 metrics_version = 3;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::_internal_has_metrics_version() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_metrics_version() const {
  return _internal_has_metrics_version();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_metrics_version() {
  metrics_version_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CChatUsability_ClientUsabilityMetrics_Notification::_internal_metrics_version() const {
  return metrics_version_;
}
inline uint32_t CChatUsability_ClientUsabilityMetrics_Notification::metrics_version() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.metrics_version)
  return _internal_metrics_version();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::_internal_set_metrics_version(uint32_t value) {
  _has_bits_[0] |= 0x00000040u;
  metrics_version_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_metrics_version(uint32_t value) {
  _internal_set_metrics_version(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.metrics_version)
}

// optional bool in_web = 4;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::_internal_has_in_web() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_in_web() const {
  return _internal_has_in_web();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_in_web() {
  in_web_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification::_internal_in_web() const {
  return in_web_;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification::in_web() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.in_web)
  return _internal_in_web();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::_internal_set_in_web(bool value) {
  _has_bits_[0] |= 0x00000080u;
  in_web_ = value;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_in_web(bool value) {
  _internal_set_in_web(value);
  // @@protoc_insertion_point(field_set:CChatUsability_ClientUsabilityMetrics_Notification.in_web)
}

// optional .CChatUsability_ClientUsabilityMetrics_Notification.Settings settings = 10;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::_internal_has_settings() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || settings_ != nullptr);
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_settings() const {
  return _internal_has_settings();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_settings() {
  if (settings_ != nullptr) settings_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_Settings& CChatUsability_ClientUsabilityMetrics_Notification::_internal_settings() const {
  const ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* p = settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatUsability_ClientUsabilityMetrics_Notification_Settings&>(
      ::_CChatUsability_ClientUsabilityMetrics_Notification_Settings_default_instance_);
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_Settings& CChatUsability_ClientUsabilityMetrics_Notification::settings() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.settings)
  return _internal_settings();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::unsafe_arena_set_allocated_settings(
    ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* settings) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(settings_);
  }
  settings_ = settings;
  if (settings) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.settings)
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* CChatUsability_ClientUsabilityMetrics_Notification::release_settings() {
  _has_bits_[0] &= ~0x00000001u;
  ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* temp = settings_;
  settings_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* CChatUsability_ClientUsabilityMetrics_Notification::unsafe_arena_release_settings() {
  // @@protoc_insertion_point(field_release:CChatUsability_ClientUsabilityMetrics_Notification.settings)
  _has_bits_[0] &= ~0x00000001u;
  ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* temp = settings_;
  settings_ = nullptr;
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* CChatUsability_ClientUsabilityMetrics_Notification::_internal_mutable_settings() {
  _has_bits_[0] |= 0x00000001u;
  if (settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_Settings>(GetArenaForAllocation());
    settings_ = p;
  }
  return settings_;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* CChatUsability_ClientUsabilityMetrics_Notification::mutable_settings() {
  ::CChatUsability_ClientUsabilityMetrics_Notification_Settings* _msg = _internal_mutable_settings();
  // @@protoc_insertion_point(field_mutable:CChatUsability_ClientUsabilityMetrics_Notification.settings)
  return _msg;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_allocated_settings(::CChatUsability_ClientUsabilityMetrics_Notification_Settings* settings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete settings_;
  }
  if (settings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatUsability_ClientUsabilityMetrics_Notification_Settings>::GetOwningArena(settings);
    if (message_arena != submessage_arena) {
      settings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, settings, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  settings_ = settings;
  // @@protoc_insertion_point(field_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.settings)
}

// optional .CChatUsability_ClientUsabilityMetrics_Notification.VoiceSettings voice_settings = 11;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::_internal_has_voice_settings() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || voice_settings_ != nullptr);
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_voice_settings() const {
  return _internal_has_voice_settings();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_voice_settings() {
  if (voice_settings_ != nullptr) voice_settings_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& CChatUsability_ClientUsabilityMetrics_Notification::_internal_voice_settings() const {
  const ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* p = voice_settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings&>(
      ::_CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings_default_instance_);
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings& CChatUsability_ClientUsabilityMetrics_Notification::voice_settings() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.voice_settings)
  return _internal_voice_settings();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::unsafe_arena_set_allocated_voice_settings(
    ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* voice_settings) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(voice_settings_);
  }
  voice_settings_ = voice_settings;
  if (voice_settings) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.voice_settings)
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* CChatUsability_ClientUsabilityMetrics_Notification::release_voice_settings() {
  _has_bits_[0] &= ~0x00000002u;
  ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* temp = voice_settings_;
  voice_settings_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* CChatUsability_ClientUsabilityMetrics_Notification::unsafe_arena_release_voice_settings() {
  // @@protoc_insertion_point(field_release:CChatUsability_ClientUsabilityMetrics_Notification.voice_settings)
  _has_bits_[0] &= ~0x00000002u;
  ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* temp = voice_settings_;
  voice_settings_ = nullptr;
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* CChatUsability_ClientUsabilityMetrics_Notification::_internal_mutable_voice_settings() {
  _has_bits_[0] |= 0x00000002u;
  if (voice_settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings>(GetArenaForAllocation());
    voice_settings_ = p;
  }
  return voice_settings_;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* CChatUsability_ClientUsabilityMetrics_Notification::mutable_voice_settings() {
  ::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* _msg = _internal_mutable_voice_settings();
  // @@protoc_insertion_point(field_mutable:CChatUsability_ClientUsabilityMetrics_Notification.voice_settings)
  return _msg;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_allocated_voice_settings(::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings* voice_settings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete voice_settings_;
  }
  if (voice_settings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings>::GetOwningArena(voice_settings);
    if (message_arena != submessage_arena) {
      voice_settings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, voice_settings, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  voice_settings_ = voice_settings;
  // @@protoc_insertion_point(field_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.voice_settings)
}

// optional .CChatUsability_ClientUsabilityMetrics_Notification.UIState ui_state = 12;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::_internal_has_ui_state() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || ui_state_ != nullptr);
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_ui_state() const {
  return _internal_has_ui_state();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_ui_state() {
  if (ui_state_ != nullptr) ui_state_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState& CChatUsability_ClientUsabilityMetrics_Notification::_internal_ui_state() const {
  const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* p = ui_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState&>(
      ::_CChatUsability_ClientUsabilityMetrics_Notification_UIState_default_instance_);
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_UIState& CChatUsability_ClientUsabilityMetrics_Notification::ui_state() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.ui_state)
  return _internal_ui_state();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::unsafe_arena_set_allocated_ui_state(
    ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* ui_state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ui_state_);
  }
  ui_state_ = ui_state;
  if (ui_state) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.ui_state)
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* CChatUsability_ClientUsabilityMetrics_Notification::release_ui_state() {
  _has_bits_[0] &= ~0x00000004u;
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* temp = ui_state_;
  ui_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* CChatUsability_ClientUsabilityMetrics_Notification::unsafe_arena_release_ui_state() {
  // @@protoc_insertion_point(field_release:CChatUsability_ClientUsabilityMetrics_Notification.ui_state)
  _has_bits_[0] &= ~0x00000004u;
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* temp = ui_state_;
  ui_state_ = nullptr;
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* CChatUsability_ClientUsabilityMetrics_Notification::_internal_mutable_ui_state() {
  _has_bits_[0] |= 0x00000004u;
  if (ui_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_UIState>(GetArenaForAllocation());
    ui_state_ = p;
  }
  return ui_state_;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* CChatUsability_ClientUsabilityMetrics_Notification::mutable_ui_state() {
  ::CChatUsability_ClientUsabilityMetrics_Notification_UIState* _msg = _internal_mutable_ui_state();
  // @@protoc_insertion_point(field_mutable:CChatUsability_ClientUsabilityMetrics_Notification.ui_state)
  return _msg;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_allocated_ui_state(::CChatUsability_ClientUsabilityMetrics_Notification_UIState* ui_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete ui_state_;
  }
  if (ui_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatUsability_ClientUsabilityMetrics_Notification_UIState>::GetOwningArena(ui_state);
    if (message_arena != submessage_arena) {
      ui_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ui_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  ui_state_ = ui_state;
  // @@protoc_insertion_point(field_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.ui_state)
}

// optional .CChatUsability_ClientUsabilityMetrics_Notification.Metrics metrics = 13;
inline bool CChatUsability_ClientUsabilityMetrics_Notification::_internal_has_metrics() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || metrics_ != nullptr);
  return value;
}
inline bool CChatUsability_ClientUsabilityMetrics_Notification::has_metrics() const {
  return _internal_has_metrics();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::clear_metrics() {
  if (metrics_ != nullptr) metrics_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics& CChatUsability_ClientUsabilityMetrics_Notification::_internal_metrics() const {
  const ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* p = metrics_;
  return p != nullptr ? *p : reinterpret_cast<const ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics&>(
      ::_CChatUsability_ClientUsabilityMetrics_Notification_Metrics_default_instance_);
}
inline const ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics& CChatUsability_ClientUsabilityMetrics_Notification::metrics() const {
  // @@protoc_insertion_point(field_get:CChatUsability_ClientUsabilityMetrics_Notification.metrics)
  return _internal_metrics();
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::unsafe_arena_set_allocated_metrics(
    ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* metrics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metrics_);
  }
  metrics_ = metrics;
  if (metrics) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.metrics)
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* CChatUsability_ClientUsabilityMetrics_Notification::release_metrics() {
  _has_bits_[0] &= ~0x00000008u;
  ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* temp = metrics_;
  metrics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* CChatUsability_ClientUsabilityMetrics_Notification::unsafe_arena_release_metrics() {
  // @@protoc_insertion_point(field_release:CChatUsability_ClientUsabilityMetrics_Notification.metrics)
  _has_bits_[0] &= ~0x00000008u;
  ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* temp = metrics_;
  metrics_ = nullptr;
  return temp;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* CChatUsability_ClientUsabilityMetrics_Notification::_internal_mutable_metrics() {
  _has_bits_[0] |= 0x00000008u;
  if (metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::CChatUsability_ClientUsabilityMetrics_Notification_Metrics>(GetArenaForAllocation());
    metrics_ = p;
  }
  return metrics_;
}
inline ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* CChatUsability_ClientUsabilityMetrics_Notification::mutable_metrics() {
  ::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* _msg = _internal_mutable_metrics();
  // @@protoc_insertion_point(field_mutable:CChatUsability_ClientUsabilityMetrics_Notification.metrics)
  return _msg;
}
inline void CChatUsability_ClientUsabilityMetrics_Notification::set_allocated_metrics(::CChatUsability_ClientUsabilityMetrics_Notification_Metrics* metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete metrics_;
  }
  if (metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CChatUsability_ClientUsabilityMetrics_Notification_Metrics>::GetOwningArena(metrics);
    if (message_arena != submessage_arena) {
      metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metrics, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  metrics_ = metrics;
  // @@protoc_insertion_point(field_set_allocated:CChatUsability_ClientUsabilityMetrics_Notification.metrics)
}

// -------------------------------------------------------------------

// CChatUsability_RequestClientUsabilityMetrics_Notification

// optional uint32 metrics_run_id = 1;
inline bool CChatUsability_RequestClientUsabilityMetrics_Notification::_internal_has_metrics_run_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CChatUsability_RequestClientUsabilityMetrics_Notification::has_metrics_run_id() const {
  return _internal_has_metrics_run_id();
}
inline void CChatUsability_RequestClientUsabilityMetrics_Notification::clear_metrics_run_id() {
  metrics_run_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CChatUsability_RequestClientUsabilityMetrics_Notification::_internal_metrics_run_id() const {
  return metrics_run_id_;
}
inline uint32_t CChatUsability_RequestClientUsabilityMetrics_Notification::metrics_run_id() const {
  // @@protoc_insertion_point(field_get:CChatUsability_RequestClientUsabilityMetrics_Notification.metrics_run_id)
  return _internal_metrics_run_id();
}
inline void CChatUsability_RequestClientUsabilityMetrics_Notification::_internal_set_metrics_run_id(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  metrics_run_id_ = value;
}
inline void CChatUsability_RequestClientUsabilityMetrics_Notification::set_metrics_run_id(uint32_t value) {
  _internal_set_metrics_run_id(value);
  // @@protoc_insertion_point(field_set:CChatUsability_RequestClientUsabilityMetrics_Notification.metrics_run_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::EChatRoomJoinState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EChatRoomJoinState>() {
  return ::EChatRoomJoinState_descriptor();
}
template <> struct is_proto_enum< ::EChatRoomGroupRank> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EChatRoomGroupRank>() {
  return ::EChatRoomGroupRank_descriptor();
}
template <> struct is_proto_enum< ::EChatRoomNotificationLevel> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EChatRoomNotificationLevel>() {
  return ::EChatRoomNotificationLevel_descriptor();
}
template <> struct is_proto_enum< ::EChatRoomServerMessage> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EChatRoomServerMessage>() {
  return ::EChatRoomServerMessage_descriptor();
}
template <> struct is_proto_enum< ::EChatRoomMessageReactionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EChatRoomMessageReactionType>() {
  return ::EChatRoomMessageReactionType_descriptor();
}
template <> struct is_proto_enum< ::EChatRoomMemberStateChange> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EChatRoomMemberStateChange>() {
  return ::EChatRoomMemberStateChange_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_steammessages_5fchat_2esteamclient_2eproto
